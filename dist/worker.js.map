{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/thread/thread.js","webpack:///./src/worker/baseWorker.js","webpack:///./src/worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","defaultWorker","Thread","[object Object]","workerJsPath","this","worker","Worker","dataMap","Promise","resolve","reject","transObject","tranceArray","buildPostObj","postMessage","onmessage","event","resolev","data","onerror","Array","isArray","count","dataList","buffer","push","byteLength","keys","length","terminate","BaseWorker","msg","Date","now","console","log","worker_DefaultWorker","workers","Map","set","srcData","workerResult","has","execute"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,SAIAlC,IAAAmC,EAAA,yCClFA,MAAAC,EAAA,yBACAC,EACAC,YAAAC,EAAAH,GACAI,KAAAC,OAAA,IAAAC,OAAAH,GAEAD,YAAAX,EAAAgB,GACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,YAAaA,EAAAC,eAAyBX,EAAAY,aAAAtB,EAAAgB,GACtCH,KAAAC,OAAAS,YAAAH,EAAAC,GACAR,KAAAC,OAAAU,UAAA,CAAAC,IACAC,QAAAD,EAAAE,QAEAd,KAAAC,OAAAc,QAAA,CAAAH,IACAN,EAAAM,OAIAd,oBAAAX,EAAAgB,GACA,MAAAK,KACAD,GACApB,OAEA,GAAAgB,GAEK,GAAAa,MAAAC,QAAAd,GAAA,CACL,IAAAe,EAAA,EACA,QAAArC,KAAAsC,SACAtC,EAAAuC,OACAZ,EAAAa,KAAAxC,EAAAuC,QACSvC,EAAAyC,YACTd,EAAAa,KAAAxC,GAEA0B,EAAAW,GAAArC,EACAqC,SAEK,oBAAAf,GAAA7B,OAAAiD,KAAApB,GAAAqB,OAAA,EACL,QAAArC,KAAAb,OAAAiD,KAAApB,GAAA,CACA,MAAAtB,EAAAsB,KACAI,EAAApB,GAAAN,EACAA,EAAAuC,OACAZ,EAAAa,KAAAxC,EAAAuC,QACSvC,EAAAyC,YACTd,EAAAa,KAAAxC,UAMAiB,QACAE,KAAAC,OAAAwB,mBChDAC,EACA5B,eAEAA,UACA,MAAA6B,EAAA,oBAAAC,KAAAC,MAEA,OADAC,QAAAC,IAAAJ,GACAA,+CCJAK,UAAAN,EACA5B,gBAGA,MACAmC,EAAA,IAAAC,IACAD,EAAAE,IAFA,iBAEA,IAAAH,GAEArB,UAAA,CAAAC,IACA,MAAAwB,EAAAxB,EAAAE,KACA3B,EAAAiD,EAAAjD,IAEAkD,GADAJ,EAAAK,IAAAnD,GAAA8C,EAAAxD,IAAAU,GAAA8C,EAAAxD,IAPA,mBAQA8D,QAAAH,IACA7B,YAASA,EAAAC,eAAyBX,EAAAY,aAAAtB,EAAAkD,GAClC3B,YAAAH,EAAAC","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dest/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const defaultWorker = \"./dest/worker.js\";\nexport class Thread {\n  constructor(workerJsPath = defaultWorker) {\n    this.worker = new Worker(workerJsPath);\n  }\n  postMessage(key, dataMap) {\n    return new Promise((resolve, reject) => {\n      const {transObject, tranceArray} = Thread.buildPostObj(key, dataMap);\n      this.worker.postMessage(transObject, tranceArray);\n      this.worker.onmessage = (event)=> {\n        resolev(event.data);\n      }\n      this.worker.onerror = (event)=> {\n        reject(event);\n      }\n    });\n  }\n  static buildPostObj(key, dataMap){\n    const tranceArray = [];\n    const transObject = {\n      key: key\n    };\n    if (!dataMap) {\n      // nothig todo\n    } else if (Array.isArray(dataMap)) {\n      let count = 0;\n      for (let value of dataList) {\n        if (value.buffer) {\n          tranceArray.push(value.buffer);\n        } else if (value.byteLength) {\n          tranceArray.push(value);\n        }\n        transObject[count] = value;\n        count++;\n      }\n    } else if (typeof dataMap === 'object' && Object.keys(dataMap).length > 0) {\n      for (let key in Object.keys(dataMap)) {\n        const value = dataMap[dataMap];\n        transObject[key] = value;\n        if (value.buffer) {\n          tranceArray.push(value.buffer);\n        } else if (value.byteLength) {\n          tranceArray.push(value);\n        }\n      }\n    }\n\n  }\n  close(){\n    this.worker.terminate();\n  }\n}\n","\nexport class BaseWorker {\n  constructor() {\n  }\n  execute(){\n    const msg = \"hello world! now:\"+ Date.now();\n    console.log(msg);\n    return msg;\n  }\n}\n","import {Thread} from \"./util/thread/thread\";\nimport {BaseWorker} from \"./worker/baseWorker\";\n////////////////////////////////////////////////////////\nexport default class DefaultWorker extends BaseWorker {\n  constructor() {\n  }\n}\nconst DEFAULT_WORKER = \"DEFAULT_WORKER\";\nconst workers = new Map();\nworkers.set(DEFAULT_WORKER, new DefaultWorker());\n////////////////////////////////////////////////////////\nonmessage = (event) => {\n  const srcData = event.data;\n  const key = srcData.key;\n  const worker = workers.has(key)? workers.get(key):workers.get(DEFAULT_WORKER);\n  const workerResult =worker.execute(srcData);\n  const {transObject, tranceArray} = Thread.buildPostObj(key, workerResult);\n  postMessage(transObject, tranceArray);\n}\n"],"sourceRoot":""}