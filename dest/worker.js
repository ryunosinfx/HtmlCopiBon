!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/dest/",r(r.s=20)}({0:function(e,t,r){"use strict";r.d(t,"a",function(){return o});const n="./dest/worker.js";class o{constructor(e=n){this.worker=new Worker(e)}postMessage(e,t){return new Promise((r,n)=>{const{transObject:s,tranceArray:c}=o.buildPostObj(e,t);this.worker.postMessage(s,c),this.worker.onmessage=(e=>{r(e.data)}),this.worker.onerror=(e=>{n(e)})})}static buildPostObj(e,t){const r=[],n={key:e};if(t){if(Array.isArray(t)){let e=0;for(let t of dataList)t.buffer?r.push(t.buffer):t.byteLength&&r.push(t),n[e]=t,e++}else if("object"==typeof t&&Object.keys(t).length>0)for(let e in Object.keys(t)){const o=t[t];n[e]=o,o.buffer?r.push(o.buffer):o.byteLength&&r.push(o)}}else;return{transObject:n,tranceArray:r}}close(){this.worker.terminate()}}},20:function(e,t,r){"use strict";r.r(t);var n=r(0);const o=new Map,s="DEFAULT_WORKER";class c{static getWorkerInstance(e){return o.has(e)?o.get(e):o.get(s)}constructor(e=s){this.key=e,o.set(this.key,this)}execute(){const e="hello world! now:"+Date.now();return console.log(e),e}}new class extends c{constructor(){super("WASMcaller")}execute(){const e="hello WASMcaller! now:"+Date.now();return console.log(e),this.call().catch(e=>{console.log(e)}),e}async call(){const e=await fetch("./wasm/sum.wasm"),t=await e.arrayBuffer(),r=(await WebAssembly.instantiate(t,{})).instance;console.log(r.exports.sum(21,31));const n="hello WASMcaller! now:"+Date.now();console.log(n)}};r.d(t,"default",function(){return a});class a extends c{constructor(){super()}}new a;onmessage=(e=>{const t=e.data,r=t.key;console.log("hello Worker key:"+r);const o=c.getWorkerInstance(r).execute(t),{transObject:s,tranceArray:a}=n.a.buildPostObj(r,o);postMessage(s,a)})}});
//# sourceMappingURL=worker.js.map