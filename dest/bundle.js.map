{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/binaryConverter.js","webpack:///./src/util/image/byteUtil.js","webpack:///./src/util/thread/thread.js","webpack:///./src/util/image/imageMerger.js","webpack:///./src/util/image/imageCalcBase.js","webpack:///./src/util/image/imageResizer.js","webpack:///./node_modules/zlibjs/bin/zip.min.js","webpack:///./node_modules/snabbdom/vnode.js","webpack:///./node_modules/snabbdom/modules/class.js","webpack:///./node_modules/snabbdom/modules/style.js","webpack:///./node_modules/snabbdom/modules/props.js","webpack:///./node_modules/snabbdom/modules/attributes.js","webpack:///./node_modules/snabbdom/modules/dataset.js","webpack:///./node_modules/snabbdom/modules/eventlisteners.js","webpack:///./node_modules/snabbdom/h.js","webpack:///./node_modules/snabbdom/tovnode.js","webpack:///./index.css?bcd2","webpack:///./index.css","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/snabbdom/is.js","webpack:///./node_modules/snabbdom/htmldomapi.js","webpack:///./src/util/viewUtil.js","webpack:///./src/util/reactive/base/preLoader.js","webpack:///./src/util/objectUtil.js","webpack:///./src/util/reactive/elementSelector.js","webpack:///./src/util/reactive/actionCreator.js","webpack:///./src/util/reactive/viewAttachQueue.js","webpack:///./src/util/reactive/store.js","webpack:///./src/util/reactive/actionDispatcherImple.js","webpack:///./src/util/reactive/actionDispatcher.js","webpack:///./src/util/reactive/base/vtags.js","webpack:///./src/util/reactive/viewBaseActions.js","webpack:///./src/util/reactive/baseReducer.js","webpack:///./src/util/reactive/viewBaseReducer.js","webpack:///./src/util/reactive/baseView.js","webpack:///./src/view/header.js","webpack:///./src/reduxy/action/menuSelectActionCreator.js","webpack:///./src/util/idb/constant.js","webpack:///./src/util/idb/idbUtil.js","webpack:///./src/util/idb/indexeddbCore.js","webpack:///./src/util/idb/indexeddbHelper.js","webpack:///./src/util/idb/idbRapper.js","webpack:///./src/service/entity/storageService.js","webpack:///./src/service/entity/baseEntity.js","webpack:///./src/service/entity/binary.js","webpack:///./src/service/entity/primaryKey.js","webpack:///./src/service/entity/primaryKeyAutoIncrementService.js","webpack:///./src/service/entity/entityManagerImpl.js","webpack:///./src/service/entity/entityManager.js","webpack:///./src/entity/title.js","webpack:///./src/entity/images.js","webpack:///./src/entity/thumbnales.js","webpack:///./src/entity/series.js","webpack:///./src/util/sorter.js","webpack:///./src/reduxy/action/progressActionCreator.js","webpack:///./src/service/fileUploadExecuter.js","webpack:///./src/service/manager/titleManager.js","webpack:///./src/service/manager/binaryManager.js","webpack:///./src/entity/pages.js","webpack:///./src/service/manager/pagesManager.js","webpack:///./src/entity/settings.js","webpack:///./src/service/manager/settingsManager.js","webpack:///./src/entity/outputProfiles.js","webpack:///./src/service/manager/outputProfilesManager.js","webpack:///./src/entity/imageOutputs.js","webpack:///./src/service/manager/imageOutputsManager.js","webpack:///./src/service/manager/imageManager.js","webpack:///./src/service/manager/thumbnailManager.js","webpack:///./src/settings/exportSettings.js","webpack:///./src/util/image/paper.js","webpack:///./src/util/imageProcessor.js","webpack:///./src/service/imageProcessService.js","webpack:///./src/service/mainService.js","webpack:///./src/service/mainServiceImpl.js","webpack:///./src/reduxy/reducer/menuSelectViewReducer.js","webpack:///./src/view/menu.js","webpack:///./src/eventHandler/baseEventHandler.js","webpack:///./src/reduxy/action/imageActionCreator.js","webpack:///./src/reduxy/action/pageActionCreator.js","webpack:///./src/reduxy/processor/pageProcessor.js","webpack:///./src/reduxy/reducer/imageViewReducer.js","webpack:///./src/eventHandler/fileUploader.js","webpack:///./src/view/content/fileUploadArea.js","webpack:///./src/util/timeUtil.js","webpack:///./src/reduxy/action/settingActionCreator.js","webpack:///./src/reduxy/reducer/settingViewReducer.js","webpack:///./src/view/content/titleSettings.js","webpack:///./src/reduxy/action/exportActionCreator.js","webpack:///./src/util/image/imageCropper.js","webpack:///./src/util/image/imageFilter.js","webpack:///./src/util/unicodeEncoder.js","webpack:///./src/reduxy/processor/progressBarProcessor.js","webpack:///./src/reduxy/processor/previewProcessor.js","webpack:///./src/util/pdf/util/binaryUtil.js","webpack:///./src/util/pdf/util/unicodeEncoder.js","webpack:///./src/util/pdf/constants/pdfConstants.js","webpack:///./src/util/pdf/base/refObject.js","webpack:///./src/util/pdf/base/header.js","webpack:///./src/util/pdf/objects/catalogObject.js","webpack:///./src/util/pdf/objects/imageContentsObject.js","webpack:///./src/util/pdf/objects/imageResourcesObject.js","webpack:///./src/util/pdf/objects/imageXObject.js","webpack:///./src/util/pdf/util/pdfTimeUtil.js","webpack:///./src/util/pdf/objects/infoObject.js","webpack:///./src/util/pdf/objects/pageObject.js","webpack:///./src/util/pdf/objects/pagesObject.js","webpack:///./src/util/pdf/objects/trailerObject.js","webpack:///./src/util/pdf/pdfDocument.js","webpack:///./src/util/pdf/pdfBuilder.js","webpack:///./src/reduxy/processor/exportPdfProcessor.js","webpack:///./src/reduxy/processor/exportImageProcessor.js","webpack:///./src/reduxy/processor/exportUtilProcessor.js","webpack:///./src/reduxy/reducer/exportReducer.js","webpack:///./src/view/parts/export/exportAllButton.js","webpack:///./src/reduxy/action/dialogActionCreator.js","webpack:///./src/reduxy/reducer/dialogViewReducer.js","webpack:///./src/view/parts/dialog/dialog.js","webpack:///./src/view/parts/export/exportImgZipButton.js","webpack:///./src/view/parts/export/exportPdfButton.js","webpack:///./src/util/fileDownloader.js","webpack:///./src/view/parts/export/downloadLastExportZipButton.js","webpack:///./src/view/parts/export/downloadLastExportPdfButton.js","webpack:///./src/view/parts/export/downloadUploadedImgZipButton.js","webpack:///./src/view/parts/export/downloadFullBackupZipButton.js","webpack:///./src/view/parts/export/deleteExportOneButton.js","webpack:///./src/view/parts/export/exportButton.js","webpack:///./src/view/parts/export/exportOrderRow.js","webpack:///./src/view/parts/export/exportOrderList.js","webpack:///./src/view/content/exportArea.js","webpack:///./src/view/parts/imageDetail.js","webpack:///./src/view/parts/pageImage.js","webpack:///./src/reduxy/action/previewActionCreator.js","webpack:///./src/view/parts/pageImages.js","webpack:///./src/reduxy/reducer/previewReducer.js","webpack:///./src/view/parts/preview/preview.js","webpack:///./src/view/parts/thumbnail.js","webpack:///./src/view/parts/thumbnails.js","webpack:///./src/reduxy/reducer/pagesViewReducer.js","webpack:///./src/view/content/filesArea.js","webpack:///./src/reduxy/reducer/progressViewReducer.js","webpack:///./src/view/parts/progress/progressBar.js","webpack:///./src/reduxy/action/titleActionCreator.js","webpack:///./src/reduxy/action/splashActionCreator.js","webpack:///./src/view/parts/titleMng/storageMeter.js","webpack:///./src/view/parts/titleMng/titleRow.js","webpack:///./src/view/parts/titleMng/titleList.js","webpack:///./src/view/parts/titleMng/titleNewone.js","webpack:///./src/reduxy/processor/titleProcessor.js","webpack:///./src/reduxy/reducer/titleViewReducer.js","webpack:///./src/view/parts/titleMng/storageInitializer.js","webpack:///./src/view/content/titleMng.js","webpack:///./src/view/container.js","webpack:///./src/view/footer.js","webpack:///./src/reduxy/reducer/splashViewReducer.js","webpack:///./src/view/parts/splash/splash.js","webpack:///./src/view/mainFrame.js","webpack:///./src/main.js","webpack:///./node_modules/snabbdom/es/vnode.js","webpack:///./node_modules/snabbdom/es/is.js","webpack:///./node_modules/snabbdom/es/htmldomapi.js","webpack:///./node_modules/snabbdom/es/h.js","webpack:///./node_modules/snabbdom/es/thunk.js","webpack:///./node_modules/snabbdom/es/snabbdom.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","BinaryConverter","[object Object]","binaryString","binaryString2Uint8Array","buffer","uint8Array2BinaryString","Uint8Array","btoa","type","arrayBuffer2BinaryString","split","rawLength","length","array","ArrayBuffer","charCodeAt","u8a","retList","e","push","String","fromCharCode","join","base64","atob","binaryString2ArrayBuffer","dataURI","uintArray","arrayBuffer","Uint16Array","Uint32Array","val","Blob","blob","reader","FileReader","promise","Promise","resolve","reject","onload","eve","result","onerror","error","asArrayBuffer","readAsArrayBuffer","asBinaryString","readAsBinaryString","asDataURL","readAsDataURL","asText","readAsText","ByteUtil","byteX","x","Math","floor","maxByte","Thread","defaultWorker","workerJsPath","this","worker","Worker","dataMap","transObject","tranceArray","buildPostObj","postMessage","onmessage","event","returendData","data","console","log","currentTarget","returnValue","srcElement","target","eventPhase","timeStamp","message","lineno","stack","buildPostObjExec","Array","isArray","count","buildPostObjExecParValue","keys","objKey","undefined","currentKey","isNotObject","byteLength","ImageData","terminate","ImageMerger","_imageCalcBase__WEBPACK_IMPORTED_MODULE_0__","super","margeReplace","margeLinninr","margeMultiplication","imageDataBase","images","isBaseWhite","isOtherThread","margeExc","replace","linier","multiplication","func","isImageEmpty","threadImages","image","convertImageDataToObj","threadInit","execute","catch","beWhiteImage","mergeImages","width","height","imageData","addData","addWidth","addHeight","plainOffsetY","offsetY","plainOffsetX","offsetX","addOffsetY","endY","addOffsetX","endX","maxY","maxX","iy","addPixcelIndexY","ix","addPixcelIndexX","base","basePixcelIndex","addOne","addPixcelIndex","index","indexAdd","addOaddOffsetXne","trimByte","ImageCalcBase","_thread_thread__WEBPACK_IMPORTED_MODULE_0__","instances","wokerKey","workerKey","methodName","isCallFromWorker","arrayImageData","thread","resultData","className","ImageResizer","_byteUtil__WEBPACK_IMPORTED_MODULE_0__","_imageCalcBase__WEBPACK_IMPORTED_MODULE_1__","threadCount","resizeAsLanczos","resizeAsByCubic","alpha","sin","PI","abs","sincLanczos","iamegData","distImage","resizeExc","rowCount","resizeExcWithThread","resizeAsByCubicExe","resizeAsLanczosExe","distBitmap","newWidth","newHeight","currentBitmap","currentWidth","currentHeight","promises","total","parLength","limitHeight","newDistData","Uint8ClampedArray","currentImageLen","newIData","j","newImageData","all","then","values","startIndex","set","resizeLanczos","resizeByCubic","originBitmap","sourceWidth","sourceHeight","resizeExecute","lanczosWeight","culcWeightByCubic","newWidthF","newHeightF","weightFunc","size","sw","sw4","swLimit","sh","shLimit","wf","hf","src","dist","sizeHalf","sizeHalfm1","threadOffsetY","threadEnd","wfy","y","startY","y32bitOffsetDist","wfx","g","b","startX","jy","weightY","y32bitOffset","jx","w","offset32bit","offset32bitDist","aa","G","a","execScript","shift","H","DataView","ba","f","Error","ca","L","finish","subarray","ha","da","ja","U","ka","la","V","ma","na","pa","k","qa","input","lazy","compressionType","outputBuffer","outputIndex","getParent","pop","Y","sa","q","slice","u","h","Q","z","ta","apply","F","I","N","B","C","J","ea","O","W","X","ya","Z","ia","D","za","A","oa","va","ua","v","R","fa","K","E","Aa","Ba","P","M","S","T","Ea","ga","ra","Fa","Ga","Ha","Ia","Ca","Da","xa","Ja","Ka","La","$","files","comment","Ma","Na","Oa","Qa","Pa","Ra","compressionMethod","compress","deflateOption","filename","password","unshift","random","os","date","Date","getMinutes","getSeconds","getHours","getMonth","getDate","getFullYear","extraField","STORE","DEFLATE","MSDOS","UNIX","MACINTOSH","vnode","sel","children","text","elm","default","updateClass","oldVnode","cur","oldClass","class","klass","classList","remove","classModule","update","raf","window","requestAnimationFrame","setTimeout","nextFrame","fn","reflowForced","setNextFrame","obj","prop","updateStyle","oldStyle","style","oldHasDel","removeProperty","delayed","name2","setProperty","styleModule","pre","destroy","rm","getComputedStyle","document","body","transform","amount","applied","props","indexOf","addEventListener","ev","updateProps","oldProps","propsModule","xlinkNS","xmlNS","colonChar","xChar","updateAttrs","oldAttrs","attrs","setAttribute","removeAttribute","setAttributeNS","attributesModule","CAPS_REGEX","updateDataset","oldDataset","dataset","toLowerCase","datasetModule","handleEvent","on","invokeHandler","handler","args","updateEventListeners","oldOn","oldListener","listener","oldElm","removeEventListener","eventListenersModule","vnode_1","is","primitive","addNS","childData","htmldomapi_1","toVNode","node","domApi","api","isElement","name_1","id","cn","getAttribute","tagName","elmAttrs","attributes","elmChildren","childNodes","nodeName","nodeValue","isText","getTextContent","isComment","content","options","hmr","insertInto","locals","useSourceMap","list","toString","map","item","cssMapping","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","stylesInDom","isOldIE","memo","arguments","memoize","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","parts","addStyle","listToStyles","newStyles","part","css","media","insertStyleElement","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","splice","createStyleElement","createElement","addAttrs","el","forEach","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","replacement","filter","Boolean","cssNode","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","htmlDomApi","createElementNS","namespaceURI","qualifiedName","createComment","newNode","referenceNode","child","setTextContent","textContent","nodeType","ViewUtil","touches","ex","pageX","ey","pageY","wox","pageXOffset","woy","pageYOffset","elementFromPoint","opacity","clasｓName","ce","forId","eventType","eventHandler","parent","hasChildNodes","getElementsByTagName","documet","getElementById","styleObj","isBubbling","isCancelable","createEvent","initEvent","dispatchEvent","snabbdom","preLoader_h","h_default","patch","tovnode_default","init","class_default","style_default","props_default","attributes_default","dataset_default","eventlisteners_default","baseClasses","ObjectUtil","baseClassesList","baseClass","channel","MessageChannel","inPort","port1","outPort","port2","parse","newCount","output","baseType","simpleDeepClone","retObj","childTarget","deepVnodeClone","em","indexSize","delimiterSize","counter","continu","tempDerimiterSie","arrayValue","recalcSize","calcSize","binaryData","elementSelector_ElementSelector","selectorMap","Map","getElements","selector","isValidNode","cloneNode","prePatch","warn","indexA","msg","isShowLog","parentMap","nodes","isShouldPatch","newOne","isEnd","parentVnode","selectors","nextSelector","firstOne","isMatch","substring","isNextEnd","tokens","selectorId","classes","tag","token","mapA","getSelectorMap","mapB","classesA","classesB","classB","isMatched","classA","actionCreator_baseActions","ActionCreator","storeKey","targetView","parentView","newView","createGoOtherViewAction","view","avtiveViews","activeViewList","ViewAttachQueue","queue","lastTree","parentId","currentId","resultParent","findActivViews","primaryView","currentTree","loadAllActiveViews","currentView","nextView","nextViewTree","resultCurrent","nextId","activeViewsTree","callback","retView","next","viewId","current","resultList","currentLength","mainHolder","subHolder","mainKey","store_Store","service","store","action","newKey","has","actionClass","clonedStore","storeAtCurrent","inputValue","currentValue","viewAttachQueue","actionMap","actionDispatcherImple_ActionDispatcherImple","updateMap","updateQueue","reducer","reducers","includes","indexof","dispatchExecute","constructor","getStore","initializeStoreKeys","getInitializeKeys","initializeStoreKey","preReduce","reduce","postReduce","storeAsClones","cloneStore","isOrverride","views","onViewHide","callUpdate","onViewHidden","setStore","actionData","activViews","getActiveViewList","activeView","getTemp","updateReactiveTheTargetView","alert","updateReactive","actionDispatcher_ActionDispatcher","setProps","inputs","newData","vtags","classNames","id2","childrenArray","currentText","currentData","childNode","div","span","vtags_img","alt","vtags_file","vtags_checkbox","vtags_label","vtags_option","createSelectVnode","optionsData","selectedValue","suffix","optionSelected","selected","optionNode","vtags_select","viewBaseActions_ViewBaseActions","createShowViewAction","baseReducer_BaseReducer","isBaseUse","baseActions","getBaseActions","atatch","targetKey","add","delete","getGotoAnotherViewAction","getShowViewAction","isEquals","baseView_viewAttachQueue","nodeFrame","rootVnode","ms","baseView_BaseView","isNotRenderWrap","dispatcher","es","onViewLoad","currentVnode","onViewLoaded","updateReactiveCallCount","updateReactiveCallTimer","updateReactivePromise","updateCount","newVnode","patchFromOtherVnode","innerHTML","render","currentRootNode","now","onPreViewBuild","renderWrap","onViewShow","onAfterAttachWrap","onViewShown","clearTimer","clearTimeout","taregetSelecotor","isAttached","activeViewTree","addActiveView","creatAttachAction","dispatch","elements","onAfterAttach","display","header_Header","titleText","getAppTitle","Version","getAppVersion","title","version","color","menuSelectActionCreator_MenuSelectActionCreator","createBaseAction","constant","dbName","navigator","userAgent","domain","IdbUtil","table","tabels","condetions","condition","isMutch","start","end","isNotEqualStart","isNotEqualEnd","IDBKeyRange","bound","upperBound","KeyRange","lowerBound","only","key1","key2","key3","key4","key5","MODE_R","MODE_RW","indexeddbCore_IndexeddbCore","indexedDB","keyPathMap","db","lastVersion","isUpdateOpen","timer","isDBClosed","tableCache","newVersion","close","request","open","onsuccess","onupgradeneeded","onabort","tableName","tables","cacheClear","transaction","oncomplete","closeDB","objectStore","callerName","keyPathName","getOpenDB","throwNewError","getObjectStore","keyPathNameCurrent","keyPath","payload","range","_selectAll","direction","_selectAllExecute","isGetFirstOne","req","openCursor","cursor","continue","_selectByKey","_selectByKeyOnTran","cachekey","cache","getCache","setCache","_selectByKeys","_selectByKeysOnTran","retMap","_getByKeyFromeObjectStore","_selectFirstOne","getKeyPathByMap","_insertUpdate","currentTables","_insertExecute","_updateExecute","objectStoreRequest","put","_deleteWithRange","_deleteWithRangeExecute","or","_delete","keyPathValue","_deleteOnTran","_truncate","_truncateExecute","clear","names","objectStoreNames","isExist","isAutoIncrement","_createStore","isExistsObjectStore","getCurrentVersion","createObjectStore","_dropStore","deleteObjectStore","indexeddbHelper_IndexeddbHelper","core","task","truncate","getObjectStoreNames","idbRapper_IdbRapper","objectStoreName","keypathName","idbh","reslve","firstPromise","record","pk","saveData","dataObj","storeData","recordAsDefaultLoad","loadData","USER_ID","idbAccessors","storageService_StorageService","entityClass","targetObj","idbAccessor","entityName","getEntityName","userId","storeNameKey","getStoreNameKey","createStoreByName","createStore","toObj","saveDataDefault","loadAllData","row","cloned","getEntity","pkList","recordMap","loadDataMap","load","deleteData","refcols","baseEntity_BaseEntity","entitiyName","pkValue","deepClone","singleDeepCloneWithoutFuncs","exclude","EnitiyName","binary_Binary","_ab","createDate","updateDate","ab","DELIMITER","PrimaryKey","entity","number","isPrimaryKey","getPk","oid","getPrimaryKey","primaryKeyAutoIncrementService_USER_ID","primaryKeyAutoIncrementService_PK_INCREMENT_STORE","PK_ROW","primaryKeyAutoIncrementService_PrimaryKeyAutoIncrementService","userid","ss","rowKey","nextCountAB","countUpUint32","save","binaryConverter","arrayBuffer2base64","currentCount","dataview","getUint32","setInt32","entityManagerImpl_USER_ID","BINALY_PK_ROW","binarySizeMap","entityManagerImpl_binaryEntity","entityManagerImpl_EntityManagerImpl","entityManager","isBinary","pkais","saveExecute","currentPK","isWithBinary","assemblePK","acquirePKNo","saveArrayBufferCols","setPk","column","saveArrayBufferData","newPK","getBinaryPK","Binary","saveWithBinary","newNumber","loadAll","getAsMap","isSizeOnly","time","timeEnd","entityManager_USER_ID","entityManager_EntityManager","entities","initParEntity","addBaseCLassese","truePk","title_refcols","title_Title","titleId","titlePrefix","prefix","no","pageNo","setting","series","pageNum","pages","outputsPars","listing","images_refcols","images_Images","binary","thumbnail","modifyDate","thumbnales_refcols","thumbnales_Thumbnales","series_refcols","series_Series","Sorter","colName","isDESC","sort","orders","objA","objB","order","thinninged","element","progressActionCreator_ProgressActionCreator","fileUploadExecuter_FileUploadExecuter","actionDispatcher","createStandAlone","mainService_MainService","getInstance","file","read","errorHandler","onprogress","updateProgress","onloadstart","onLoadStart","abort","creatRemoveAction","code","NOT_FOUND_ERR","NOT_READABLE_ERR","ABORT_ERR","percentLoaded","round","loaded","creatUpdateAction","progress","creatCompleatAction","creatAddAction","titleManager_defaultTitle","defaultName","defaultTitlePrefix","titleManager_TitleManager","ip","im","tbm","sm","currentTitle","Title","createTitle","createDefault","newTitleId","loadTitle","thinningNullData","titelId","titelPrefix","loadCurrent","iamageEntitis","imagePk","imageEntity","saveImageFile","saveTitle","imageEntityPk","settingEntityLoad","loadByPk","loadThumbnails","updateImagesListing","binaryManager_BinaryManager","binaryPk","addDataMap","binEntity","binaryEntitySaved","pages_refcols","pages_Pages","previewThumbnail","outputImage","outputExpandImage","outputDualImage","baseImage","isForceColor","isNoCropping","pagesManager_PagesManager","tm","pagePk","pageEntity","thumbnailPk","thumbnailEntity","parentPk","Pages","pageEntitis","fromPk","toPk","targetFrom","targetTo","previewThumbnailFrom","previewThumbnailTo","outputImageFrom","outputImageTo","thumbnailFrom","thumbnailTo","baseImageFrom","baseImageTo","page","settings_refcols","settings_Settings","startPage","pageDelection","outputProfile","settingsManager_SettingsManager","opm","titilePk","Settings","settings","getDefaultPk","pageDirection","outputProfiles_refcols","outputProfiles_OutputProfiles","pageSize","defaultPk","outputProfilesManager_OutputProfilesManager","outputProfiles","OutputProfiles","outputProfilePK","savedOne","Setting","Thumbnales","imageOutputs_refcols","imageOutputs_ImageOutputs","orderName","imageOutputsManager_ImageOutputsManager","ImageOutputs","imageOutputs","imageEntitySaved","loadedImageMap","imageManager_ImageManager","Images","createRetList","getEntitisAsList","imageEntitis","thumbnailBinaryPk","fue","imgElm","createImageNodeByData","createThumbnail","arrayBufferThumbnail","dataURI2ArrayBuffer","imgElmThumb","savedData","imageList","orderBy","loadFromImagePk","processParImage","binaryEntity","imageText","escape","isOnPage","entries","thumbnailManager_ThumbnaleManager","SettingData","pageStart","l2r","r2l","pageNums","dpis","dpi72","dpi150","dpi300","dpi350","dpi600","dpi1200","same","printMargin","none","conbini","basePaper","B6","frame","multiple","A5","B5","A4","B4","A3","mangaPaperB5","mangaPaperA4","mangaPaperA4ExpandTatikiri","mangaPaperB4","mangaPaperA3","pure_fit","paperSizeSet","A6","ExportOrders","paper_Paper","paparSize","basePaperSet","dpi","cropSizeMm","calcClopOffsetMm","calcPixcel","targetPaper","offset","targetSize","getPaperSizeMm","frameSize","targetX","targetY","dpiName","getTargetPaperSizeMm","getDpi","mm","pixcel","paperSize","marginSetting","margin","getPrintMargin","mpi","getPixcelSizeWithMargin","mmWidth","mmHeight","mmMargin","mmMarginDual","getPixcelSize","imgRe","imageProcessor_ImageProcessor","canvas","createCanvas","ctx","getContext","paper","imageMerger","imageResizer","maxWidth","maxHeight","origin","getImageDataFromArrayBuffer","resizeInMaxSize","sizeOfPaper","getPixcelSizeBySelected","newPaperData","createImageData","sizeOfImage","marginMM","getOffset","len","putImageData","dataUri","toDataURL","abResized","isWidthGreater","retio","resize","arrayBuffer2DataURI","img","Image","drawImage","getImageData","iamgeBitmapData","quority","option","getArrayBufferFromImageBitmapData","widthScale","heightScale","scale","clearRect","exportPng","createImage","match","imageProcessService_ImageProcessService","resizeAsPaper","imageBitmapData","getArrayBufferFromImageBitmapDataAsJpg","getArrayBufferFromImageBitmapDataAsPng","mainServiceImpl","appTitle","appVersion","initAsNewUser","bm","pb","pm","iom","setTitleManager","thread_thread","menuSelectViewReducer","menuSelectViewReducer_MenuSelectViewReducer","menuSelectAction","creatSelectAction","getStoreKey","addInitializeKey","menu_Menu","menuButtonClass","steps","ancker","label","targets","isSelectByManual","createButtons","register","hilightMenu","step","menuTabs","click","onClick","BaseEventHandler","imageActionCreator_ImageActionCreator","pageActionCreator_PageActionCreator","pageProcessor_PageProcessor","loadSettings","resetPages","delPages","addPageAsNew","pageEntitysMap","delTarget","keyIndex","move","addPage","removeImage","imageViewReducer","imageViewReducer_ImageViewReducer","imagAddAction","imageRemoveAction","imagesLoadAction","creatLoadImagesAction","imagesSortAction","creatSortImagesAction","imagesChangeTitleAction","creatChangeTitleImagesAction","imagesDetailAction","creatDetailAction","pp","storeImagesKey","getStoreImagesKey","storePagesKey","getStorePagesKey","saveFiles","loadPages","imagePKforDelete","loadImages","imagePKmove","imagePKdrop","loadAImage","imagePK","addImageFiles","movePk","dropPk","converterMap","convertedPk","imageEntityConverted","getFromLoaded","resetPagesFull","removeLoaded","getRetObjsAsList","fileUploader_FileUploader","fileProcessor","stopPropagation","preventDefault","handleFiles","dataTransfer","actin","areadParFile","fileUploadArea_text","fileUploadArea_FileUploadArea","fu","FileUploadFile","change","handleFileSelect","fileUploadArea","dragover","handleDrop","drop","re_yyyy","re_MM","re_dd","re_hh","re_mm","re_ss","unixTimeToDateFormat","unixtime","format","year","month","day","hour","min","sec","getNowUnixtime","getTime","settingActionCreator_SettingActionCreator","settingViewReducer","settingViewReducer_SettingViewReducer","creatAction","creatLoadAction","storeKeyOpm","getStoreKeyOpm","reset","saved","titleSettings_TitleSettings","bodyId","showSettings","updateExec","nameInput","pageNumInput","startPageInput","pageDirectionInput","outputProfileInput","labelClass","inputClass","nameLabel","nameRow","pageNumLabel","idpageNumInput","pageNumRow","startPageLabel","idStartPageInput","startPageRow","pageDirectionLabel","idPageDirectionInput","pageDirectionRow","outputProfileLabel","idOutputProfileInput","outputProfileRow","frameL","frameR","childlen","exportActionCreator_ExportActionCreator","imageCropper_ImageCropper","newHieght","imagaDataBase","distData","imageFilter_ImageFilter","gray","byteUtil","UnicodeEncoder","charCode1","charCode2","str","codePoints","charCode","surrogatePairToCodePoint","stringParts","codePointCharCodes","codePoint","codes","stringToCodePointArray","endian","progressBarProcessor_ProgressBarProcessor","percentProgress","percent","previewProcessor_PreviewProcessor","previewMaxWidth","previewMaxHeight","pbp","retPreviews","pegaNum","progressUnit","pageCount","pageStep","pageEnitity","resizeAsPaperB5_72","previews","isSingle","cratePageData","getCratePageDataFunc","retSetLis","dummyClass","comple","buildPageFrames","isRight","binaries","currentBinary","isDummy","retFrames","isPageDirectionR2L","isPageStartR","frameNum","ceil","isOdd","isMatchPageStartSide","totalPageFrame","isStartFull","leftStartDummyClass","rightStartDummyClass","leftEndDummyClass","rightEndDummyClass","lastIndex","pagNo","pageOffset","leftPageNo","rightPageNo","pagePair","leftPageNoFirst","rightPageNoFirst","BinaryUtil","u8as","u8aEdge","retU8a","edge","hexStr","retArrray","hexList","hex","Number","isNaN","parseInt","binStr","binLen","charList","encodedString","decodeURIComponent","retArray","binstr","p1","ch","escstr","toUpperCase","unicodeEncoder_UnicodeEncoder","KeyKeywords","Type","Subtype","BaseFont","PDF","ColorSpace","Filter","ProcSet","pdfConstants_paperSizeSet","pageSazeMap","refMap","refObject_NEWLINE","refList","refObject_RefObject","exportText","isBePlaneMap","afterRegsterRefMap","isRoot","isInfo","indexPrefix","registerRefMap","encodeUTF8","u8aStream","createStream","u8aStart","getRefNo","u8aMain","createMap","u8aEnd","joinU8as","keyword","retText","newArray","isRegisterd","NEW_LINE","getNewLine","base_header_Header","getText","binStrU8a","hexString2U8a","u8aNewLine","catalogObject_CatalogObject","pagesObj","setElm","registerAfterRefMap","imageContentsObject_ImageContentsObject","imageId","pageObj","pageWidth","pageHeight","NEWLINE","getAsU8a","imageResourcesObject_ImageResourcesObject","imageXObject","xObjectMap","setBePlaneMap","getImageId","imageXObject_ImageXObject","jpegU8a","pdfTimeUtil_re_yyyy","pdfTimeUtil_re_MM","pdfTimeUtil_re_dd","pdfTimeUtil_re_hh","pdfTimeUtil_re_mm","pdfTimeUtil_re_ss","getNow","pdfTimeUtil_unixTimeToDateFormat","infoObject_InfoObject","pageObject_PageObject","sizeName","paperSizePoint","resources","contents","setParentPage","fontName","pagesObject_PagesObject","setParent","CRLF","trailerObject_TrailerObject","rootObj","infoObj","startOffset","getRefList","results","currentBytes","refObje","createObject","trailerU8a","pdfDocument_PdfDocument","pageSizse","info","root","trailer","setRoot","setInfo","imageCount","u8aImage","ic","ir","binaryU8a","convertDataUri2U8a","imageXobj","setContents","setResources","setImageXObject","headerU8a","getU8a","createXref","pdfBuilder_PdfBuilder","pdfDoc","addDummyPage","addImagePage","createFile","exportPdfProcessor_ExportPdfProcessor","delList","isSaddleStitchingOrder","letList","pdfImage","loadBinaryWidCleanUp","pdfImageAb","reSortAsSaddleStitchingOrder","pdfBuilder","createImagesDoc","delOnList","tmpList","mod","outputLength","isFromFirst","setCount","switchFlag","offsetPageNum","one","two","three","four","exportImageProcessor_order","exportImageProcessor_ExportImageProcessor","imageCropper","imageFilter","epp","exportOrders","exportExecute","isZip","executeParOrder","targetDpi","getTargetPaperSize","clopOffset","calcClopOffsetPixcel","frameSizeMm","getPaperFrameSizeMm","isGrayscale","isMaxSize10M","isLanczose","expandAndCropSize","executeAsZip","executeAsPdf","isRightStart","isSideSynced","exportDualImage4Print","compressed","exoprtAsZip","commonEnd","getTragetPaper","pdf","createPdf","getExports","exportImagePk","outputOld","exportPk","imageOutput","outputNew","yyyyMMddThhmmss","defaultTitle","getCurrentTitleName","exportPrefix","exportImageNewPk","saveCurrent","expandedPaper","cropedPaper","targetRetio","currentDataAb","baseImageEntity","baseBinaryEntity","isWider","longPixcel","longMm","sizeWhitePaperWidth","calcDpi","sizeWhitePaperHeight","whitePaper","beGrascale","corpImageToData","zip","zip_min","Zip","lastOne","outputBinaryEntity","nextPageNo","currentPageNo","addFile","stringToByteArray","cropedPaperDual","pairPages","right","left","rightBin","leftBin","printPages","printPairs","newPair","printPagePair","buildDualImage","shapedPagePair","cropedPaperDualAb","ropedPaperDualAb","exportUtilProcessor_ExportUtilProcessor","exportPks","getZipPdfPair","exportｓIndex","imageOutpus","exoprtAsUploadedZip","exportReducer","exportReducer_ExportReducer","exportExecuteAction","createExecuteAction","exportExecuteAllAction","creatExecuteAllAction","exportRemoveAction","exportsLoadAction","exportDownloadAction","createDownloadAction","exportExecutePdfAction","createExecutePdfAction","exportDownloadPdfAction","createDownloadPdfAction","createDownloadImgAction","createDownloadFullBKAction","selectOrderAction","createSelectOrderAction","eip","eup","storePdfDLKey","getStorePdfDLKey","storeZipDLKey","getStoreZipDLKey","storeRemoveResultKey","getStoreRemoveResultKey","storeExportResultKey","getStoreExportResultKey","storeUploadedImgZipDLKey","getStoreUploadedImgZipDLKey","storeFullBackupZipDLKey","getStoreFullBackupZipDLKey","storeSelectedOrderKey","getStoreSelectedOrderKey","loadPks","exportPdfExecute","loadZip","loadPdf","loadUploadedImageZip","loadFullBackupZip","selectOrder","selectOptions","exportZipExecute","loadUploadedImagesZip","exportAllButton_ExportAllButton","dialogActionCreator_DialogActionCreator","dialogViewReducer","dialogViewReducer_DialogViewReducer","dialogOpenAction","creatOpenAction","dialogAlertAction","creatAlertAction","dialogConfirmAction","creatConfirmAction","dialogCloseAction","creatCloseAction","createDialog","nextActions","isVisible","dialogInstance","dialog_Dialog","ModalWindowClass","resolv","showAlertDialog","showConfirmDialog","initPoint","onOK","onCancel","showDialog","show","buttons","exportImgZipButton_ExportImgZipButton","stateId","isExported","exportOrderData","startTime","buttonName","exportedState","isSuccess","buildButton","duration","opneAlert","orderData","exportString","async","opneConfirm","exportPdfButton_ExportPdfButton","FileDownloader","fileName","mimeType","download","downloadurl","downloadLastExportZipButton_DownloadLastExportZipButton","downloadLastExportPdfButton_DownloadLastExportPdfButton","downloadUploadedImgZipButton_DownloadUploadedImgZipButton","downloadFullBackupZipButton_DownloadFullBackupZipButton","deleteExportOneButton_DeleteExportOneButton","exportButton_ExportButton","exportAllButton","exportImgZipButton","exportPdfButton","downloadLastExportZipButton","downloadLastExportPdfButton","downloadUploadedImgZipButton","downloadFullBackupZipButton","deleteExportOneButton","attach","exportOrderRow_ExportOrderRow","ordersMap","orderOptions","activeClassName","imageAreaID","getCurrentOptions","ordersList","activeClass","getSelectOrder","exportOrderList_ExportOrderList","exportOrderRow","listFrameId","listId","checkboxIsGrascale","Id","selectBoxDpiName","checkboxIsMaxSize10M","checkboxIsLanczose","checkboxIsSaddleStitchingOrder","firstKey","exportOptions","buildRows","inputFrameClass","selectOrderData","checked","exportArea_ExportArea","exportButton","exportOrderList","PLANE","WINDOW","DOUBLE","HELF","QUAD","FULL","imageDetail_ImageDetail","isOnScroll","previewMode","toNativeSizeButton","toNativeSize","toWindowSizeButton","toWindowSize","toDoubleWindowSizeButton","toDoubleWindowSize","toQuadWindowSizeButton","toQuadWindowSize","toHelfWindowSizeButton","toHelfWindowSize","toFullWindowSizeButton","titleBar","imagesDetailData","showImage","setSelectStyle","imgVnode","textVnode","mousedown","onMouseOn","mousemove","onMouseMove","top","button","clientX","offsetX１","clientY","offsetY１","currentX","currentY","targetNode","pageImage_PageImage","draggableArea","thumbnail_block","toDropPage","doDrop","pageData","confirm","dragImageSrc","dropElm","contains","nowSelectedElm","effectAllowed","setData","dragIcon","setDragImage","dropEffect","selectedPk","targetPk","is_image","creatAddPageAction","is_page","creatSortPagesAction","formPk","clearSideElmClass","cancelPageArea","creatRemovePageAction","blockMenuHeaderScroll","pointedElm","getCurrentPointedElm","imageBg","background-image","pageBlock","checkNoCropping","checkForceColor","optionsBlock","rowVnode","dragstart","handleDragStart","handleDragOver","dragenter","handleDragEnter","dragleave","handleDragLeave","dragend","handleDragEnd","selectImage","touchstart","handleTouchStart","touchmove","handleTouchMove","touchend","handleTouchEnd","draggable","previewActionCreator_PreviewActionCreator","pageImages_PageImages","childId","thumbnails","lastSettingOne","lastPagesData","lastImagesData","pagesData","imagesData","pagesDataJson","imagesDataJson","settingsJson","pageFrames","showPages","imagesPk","imageMap","setPageData","renderVnode","frameParts","sideClass","pageIndex","previewSingle","showPreviewSingle","previewDouble","showPreviewDual","frames","buildPreviewButtons","creatPageFrame","previewReducer","previewReducer_PreviewReducer","pvp","previewOpenAction","previewCloseAction","previewNextAction","creatNextAction","previewBackAction","creatBackAction","previewUpdateAction","getStorePreviewKey","storeUpdateKey","getStoreUpdatePreviewKey","storeSettingKey","loadPreviews","nowSetNum","updatePage","shapeListBySets","preview_Preview","currentSetNum","classNameRight","classNameLeft","dummyClassName","closeActionType","viewFrame","beClose","dataUpdate","showPreview","isR2L","pageSetCount","pageSet","mainView","leftText","rightText","goNextOrBack","buildImageArea","doNothing","lNo","rNo","imgVnodeL","imgVnodeR","pageEnitiy","parentPkRight","parentPkLeft","binalyEnitiy","isForceColorClass","isNoCroppingClass","pageNoText","onCheckUpdate","pageSide","noimageMsg","pageNoString","actionReload","thumbnail_Thumbnail","displayNone","toDropTumnails","pagesMap","delButton","classObj","thumbnails_Thumbnails","pageMap","thumbnails_block","updatePageMap","showImages","imageDatas","crateDataLine","pagesViewReducer","pagesViewReducer_PagesViewReducer","pageAddAction","pageRemoveAction","pagesResetAction","creatResetPagesAction","pagesSortAction","dropImageToPageAction","filesArea_FilesArea","imageDetail","pageImages","preview","progressViewReducer","progressViewReducer_ProgressViewReducer","progressBarAddAction","progressBarRemoveAction","progressBarUpdateAction","progressBarCompleatSortAction","createProgress","isComple","progressBar_ProgressBar","showProgress","titleActionCreator_TitleActionCreator","splashActionCreator_SplashActionCreator","storageMeter_StorageMeter","storeCurrentKey","getStoreCurrentKey","unit","onReculc","dataFrame","totalSize","titleRow_TitleRow","titles","creatRow","updateButton","onUpdate","deleteButton","onDelete","titleList_TitleList","titleRow","listView","listRows","titleNewone_TitleNewone","idOfName","createInputRow","prefixRow","titleIdRow","ids","pattern","defaultValue","attr","titleProcessor_TitleProcessor","loadTitleList","titleSizeCache","getSizes","refCols","getRefCols","colValue","currentSize","isInteger","removeDescendant","removeExecute","changeTitle","titleViewReducer","titleViewReducer_TitleViewReducer","tp","titleCreatAction","titleRemoveAction","titleLoadAction","titleChangection","creatChangeAction","titleUpdateAction","titleClearAllAction","creatClearAllAction","changeTtitle","clearAll","storageInitializer_StorageInitializer","onClearAll","titleMng_TitleMng","storageMeter","titleList","titleNewone","storageInitializer","container_Container","titleSettings","filesArea","exportArea","progressBar","titleMng","dialog","contentsScrollTops","contentsScrollRanges","contentsIdMap","addScrollMap","buildFinish","onScroll","currentCheck","scrolltop","getBoundingClientRect","scrollTop","footer_Footer","copyright","splashViewReducer","splashViewReducer_SplashViewReducer","splashAddAction","splashRemoveAction","createSplash","splash_Splash","appVerion","loadingspans","chars","char","splashTitle","mainFrame_MainFrame","setMainService","initialize","header","footer","container","menu","baseFrame","splash","initialPatch","main_CopiBonService","main_appTitle","main_appVersion","mainService","mf","main","vnode_vnode","es_vnode","htmldomapi","copyToThunk","thunk","prepatch","old","oldArgs","thunk_thunk","hook","isUndef","isDef","snabbdom_init","emptyNode","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","hooks","cbs","createRmCb","childElm","listeners","parent_1","createElm","insertedVnodeQueue","hashIdx","dotIdx","hash","dot","insert","addVnodes","parentElm","vnodes","startIdx","invokeDestroyHook","removeVnodes","i_1","patchVnode","oldCh","newCh","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","updateChildren","postpatch","isVnode","emptyNodeAt","post"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dest/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","export default class BinaryConverter {\n  static binaryString2ArrayBuffer(binaryString) {\n    return BinaryConverter.binaryString2Uint8Array(binaryString).buffer;\n  }\n  static arrayBuffer2BinaryString(buffer) {\n    return BinaryConverter.uint8Array2BinaryString(new Uint8Array(buffer));\n  }\n  static arrayBuffer2base64(buffer) {\n    return btoa(BinaryConverter.uint8Array2BinaryString(new Uint8Array(buffer)));\n  }\n  static arrayBuffer2DataURI(buffer, type = \"application/octet-stream\") {\n    const base64 = btoa(BinaryConverter.arrayBuffer2BinaryString(buffer));\n    return \"data:\" + type + \";base64,\" + base64;\n  }\n\n  static binaryString2Uint8Array(binaryString) {\n    const list = binaryString.split(\"\");\n    const rawLength = binaryString.length;\n    const array = new Uint8Array(new ArrayBuffer(rawLength));\n    for (let i = 0; i < rawLength; i++) {\n      array[i] = binaryString.charCodeAt(i);\n    }\n    return array;\n  }\n\n  static uint8Array2BinaryString(u8a) {\n    let retList = [];\n    for (let e of u8a) {\n      retList.push(String.fromCharCode(e));\n    }\n    return retList.join(\"\");\n  }\n\n  static binaryString2DataURI(binaryString, type = \"application/octet-stream\") {\n    return \"data:\" + type + \";base64,\" + btoa(binaryString);\n  }\n  static base642DataURI(base64, type = \"application/octet-stream\") {\n    return \"data:\" + type + \";base64,\" + base64;\n  }\n  static base642binaryString(base64) {\n    return atob(base64);\n  }\n  static base642ArrayBuffer(base64) {\n    return BinaryConverter.binaryString2ArrayBuffer(atob(base64));\n  }\n\n  static dataURI2BinaryString(dataURI) {\n    return atob(dataURI.split(\",\")[1]);\n  }\n  static dataURI2ArrayBuffer(dataURI) {\n    return BinaryConverter.binaryString2Uint8Array(atob(dataURI.split(\",\")[1])).buffer;\n  }\n\n  static uintArray2ArrayBuffer(uintArray) {\n    return uintArray.buffer;\n  }\n\n  static arrayBuffer2Uint8Array(arrayBuffer) {\n    return new Uint8Array(arrayBuffer);\n  }\n\n  static arrayBuffer2Uint16Array(arrayBuffer) {\n    return new Uint16Array(arrayBuffer);\n  }\n  static arrayBuffer2Uint32Array(arrayBuffer) {\n    return new Uint32Array(arrayBuffer)\n  }\n\n  static ArrayBuffer2Blob(val, type = \"application/octet-stream\") {\n    return new Blob([val], {type: type});\n  }\n  static readBlob(blob) {\n    const reader = new FileReader();\n    const promise = new Promise((resolve, reject) => {\n      reader.onload = eve => {\n        resolve(reader.result);\n      }\n      reader.onerror = eve => {\n        reject(reader.error);\n      }\n    })\n\n    return {\n      asArrayBuffer() {\n        reader.readAsArrayBuffer(blob);\n        return promise;\n      },\n      asBinaryString() {\n        reader.readAsBinaryString(blob);\n        return promise;\n      },\n      asDataURL() {\n        reader.readAsDataURL(blob);\n        return promise;\n      },\n      asText() {\n        reader.readAsText(blob);\n        return promise;\n      }\n    }\n  }\n}\n","export class ByteUtil {\n\n  static trimByte(byteX) {\n    const x = Math.floor(byteX);\n    const maxByte = x > 255 ?\n      255 :\n      x;\n    const minByte = maxByte < 0 ?\n      0 :\n      maxByte;\n    return minByte;\n  }\n}\n","const defaultWorker = \"worker.js\";\nconst defaultWorkerFromWorker = \"./worker.js\";\nexport class Thread {\n\tconstructor(workerJsPath = defaultWorker) {\n\t\tthis.worker = new Worker(workerJsPath);\n\t}\n\n\tpostMessage(key, dataMap) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// console.warn(\"trance key:\" + key + \"/\" + dataMap);\n\t\t\t// console.warn(dataMap);\n\t\t\tconst { transObject, tranceArray } = Thread.buildPostObj(key, dataMap);\n\t\t\t// console.warn(\"trance！ー！＝！＝！＝！:\" + tranceArray.length);\n\t\t\t// for (let trance of tranceArray) {\n\t\t\t// \tconsole.warn(\"trance:\" + trance.length + \"/\" + trance.byteLength);\n\t\t\t// }\n\t\t\t// console.warn(\"trance！ー！＝！＝！＝！:-----\");\n\n\t\t\ttry {\n\t\t\t\tthis.worker.postMessage(transObject, tranceArray);\n\t\t\t\tthis.worker.onmessage = (event) => {\n\t\t\t\t\tconst returendData = event.data;\n\t\t\t\t\t// console.warn(returendData);\n\t\t\t\t\tresolve(returendData);\n\t\t\t\t}\n\t\t\t\tthis.worker.onerror = (event) => {\n\t\t\t\t\tconsole.log(event);\n\t\t\t\t\tconst e = event;\n\t\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\t\tconsole.error(e.target);\n\t\t\t\t\tconsole.error(e.type);\n\t\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\t\tconsole.error(e.message);\n\t\t\t\t\tconsole.error(e.lineno);\n\t\t\t\t\tconsole.error(e.error);\n\t\t\t\t\treject(event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.stack);\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic buildPostObj(key, dataMap) {\n\t\tconst tranceArray = [];\n\t\tif (dataMap && typeof dataMap === \"object\") {\n\t\t\tdataMap.key = key;\n\t\t} else {\n\t\t\tdataMap = {\n\t\t\t\tkey: key\n\t\t\t};\n\t\t}\n\n\t\t// console.log(\"trance--buildPostObj A dataMap:\" + dataMap);\n\t\tThread.buildPostObjExec(dataMap, tranceArray);\n\t\t// console.log(\"trance--buildPostObj B tranceArray:\" + tranceArray.length);\n\t\treturn { transObject: dataMap, tranceArray };\n\t}\n\n\tstatic buildPostObjExec(dataMap, tranceArray) {\n\t\t// console.log(\"trance buildPostObjExec A1 dataMap:\" + dataMap);\n\t\tif (!dataMap) {\n\t\t\t// console.log(\"trance--buildPostObjExec dataMap:\" + dataMap);\n\t\t\t// nothig todo\n\t\t\treturn\n\t\t}\n\t\t// console.log(\"trance buildPostObjExec A2 dataMap:\" + dataMap);\n\t\tif (Array.isArray(dataMap)) {\n\t\t\t// console.log(\"trance buildPostObjExec array:\" + dataMap);\n\t\t\tlet count = 0;\n\t\t\tfor (let value of dataMap) {\n\t\t\t\tThread.buildPostObjExecParValue(count, value, tranceArray);\n\t\t\t\tcount++;\n\t\t\t}\n\t\t} else if (typeof dataMap === 'object' && Object.keys(dataMap)\n\t\t\t.length > 0) {\n\t\t\t// console.log(\"trance buildPostObjExec object:\" + dataMap);\n\t\t\tfor (let objKey in dataMap) {\n\t\t\t\tconst value = dataMap[objKey];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tThread.buildPostObjExecParValue(objKey, value, tranceArray);\n\t\t\t}\n\t\t} else {\n\t\t\t// console.log(\"trance buildPostObjExec other:\" + dataMap);\n\t\t\tThread.buildPostObjExecParValue(null, dataMap, tranceArray);\n\t\t}\n\t}\n\tstatic buildPostObjExecParValue(currentKey, value, tranceArray) {\n\t\t//「このデバッグ出力を消すと落ちる」\n\t\tconsole.log(\"trance buildPostObjExecParValue currentKey:\" + currentKey + \"/\" + tranceArray.length);\n\t\t// console.log(tranceArray);\n\t\tconst type = typeof value;\n\t\tlet isNotObject = false;\n\t\tif (!value) {\n\t\t\tisNotObject = true;\n\t\t} else if (value.buffer) {\n\t\t\ttranceArray.push(value.buffer);\n\t\t\tisNotObject = true;\n\t\t\t// console.log(\"trance buildPostObjExecParValue0 buffer:\" + value);\n\t\t} else if (value.byteLength) {\n\t\t\ttranceArray.push(value);\n\t\t\tisNotObject = true;\n\t\t\t// console.log(\"trance buildPostObjExecParValueA byteLength:\" + value);\n\t\t} else if (value instanceof ImageData) {\n\t\t\ttranceArray.push(value.data.buffer);\n\t\t\tisNotObject = true;\n\t\t\t// console.log(\"trance buildPostObjExecParValueB ImageData:\" + value);\n\t\t} else if (type === \"boolean\" || type === \"number\" || type === \"string\") {\n\t\t\tisNotObject = true;\n\t\t\t// console.log(\"trance buildPostObjExecParValueC primitive:\" + value);\n\t\t\t// } else {\n\t\t\t// \tconsole.log(\"trance buildPostObjExecParValueD other:\" + value);\n\t\t}\n\t\tif (!isNotObject && currentKey) {\n\t\t\t// console.log(\"trance buildPostObjExecParValueE add:\" + currentKey);\n\t\t\tThread.buildPostObjExec(value, tranceArray)\n\t\t}\n\n\t}\n\tclose() {\n\t\tthis.worker.terminate();\n\t}\n}","import { ImageCalcBase } from \"./imageCalcBase\";\nexport class ImageMerger extends ImageCalcBase {\n\tconstructor() {\n\t\tsuper(\"ImageMerger\");\n\t\tthis[\"margeReplace\"] = this.margeReplace;\n\t\tthis[\"margeLinninr\"] = this.margeLinninr;\n\t\tthis[\"margeMultiplication\"] = this.margeMultiplication;\n\t}\n\ttrimByte(byteX) {\n\t\tconst x = Math.floor(byteX);\n\t\tconst maxByte = x > 255 ?\n\t\t\t255 :\n\t\t\tx;\n\t\tconst minByte = maxByte < 0 ?\n\t\t\t0 :\n\t\t\tmaxByte;\n\t\treturn minByte;\n\t}\n\tasync margeReplace(imageDataBase, images, isBaseWhite, isOtherThread) {\n\t\tawait this.margeExc(imageDataBase, images, isBaseWhite, isOtherThread, \"margeReplace\", this.replace());\n\t\t// console.warn(\"margeReplace-imageDataBase\")\n\t\t// console.warn(imageDataBase)\n\t}\n\tasync margeLinninr(imageDataBase, images, isBaseWhite, isOtherThread) {\n\t\tawait this.margeExc(imageDataBase, images, isBaseWhite, isOtherThread, \"margeLinninr\", this.linier());\n\t}\n\tasync margeMultiplication(imageDataBase, images, isBaseWhite, isOtherThread) {\n\t\tawait this.margeExc(imageDataBase, images, isBaseWhite, isOtherThread, \"margeMultiplication\", this.multiplication());\n\t}\n\tasync margeExc(imageDataBase, images, isBaseWhite, isOtherThread, name, func) {\n\t\tlet isImageEmpty = true;\n\t\tif (!images && !isOtherThread) {\n\t\t\timages = imageDataBase.images\n\t\t\tisBaseWhite = imageDataBase.isBaseWhite\n\t\t\timageDataBase = imageDataBase.imageDataBase\n\t\t}\n\t\tconst threadImages = [];\n\t\tif (images) {\n\t\t\tfor (let image of images) {\n\t\t\t\tif (image && image.data && image.data.length > 0) {\n\t\t\t\t\tisImageEmpty = false;\n\t\t\t\t\tthreadImages.push(this.convertImageDataToObj(image));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (isImageEmpty) {\n\t\t\treturn;\n\t\t}\n\t\tif (isOtherThread) {\n\t\t\t// this.thread.\n\t\t\tthis.threadInit();\n\t\t\tconst dataMap = { imageDataBase, images: threadImages, isBaseWhite };\n\t\t\tconst result = await this.execute(name, dataMap)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.log(e)\n\t\t\t\t\tconsole.error(e.stack);\n\t\t\t\t});\n\t\t\t// console.warn(\"margeExc-imageDataBase\")\n\t\t\t// console.warn(dataMap)\n\t\t\t// console.warn(imageDataBase)\n\t\t\treturn result;\n\t\t}\n\t\tthis.beWhiteImage(imageDataBase, isBaseWhite);\n\t\tthis.mergeImages(imageDataBase, images, func);\n\t}\n\tbeWhiteImage(imageDataBase, isBaseWhite) {\n\t\tif (isBaseWhite) {\n\t\t\tconst length = imageDataBase.data.length;\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\timageDataBase.data[i] = 255;\n\t\t\t}\n\t\t}\n\t}\n\tmergeImages(imageDataBase, images, func) {\n\t\tconst {\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight\n\t\t} = imageDataBase;\n\t\tfor (let imageData of images) {\n\t\t\tconst addData = imageData.data;\n\t\t\tconst addWidth = imageData.width;\n\t\t\tconst addHeight = imageData.height;\n\t\t\t//console.log(width+\"*\"+height+\"*4=\"+data.length+\"/\"+width+\"*\"+height+\"*4=\"+data.length)\n\t\t\tconst plainOffsetY = imageData.offsetY;\n\t\t\tconst plainOffsetX = imageData.offsetX;\n\t\t\tconst offsetY = imageData.offsetY && imageData.offsetY > 0 && imageData.offsetY < height ?\n\t\t\t\timageData.offsetY :\n\t\t\t\t!imageData.offsetY || imageData.offsetY < height ? 0 : height;\n\t\t\tconst offsetX = imageData.offsetX && imageData.offsetX > 0 && imageData.offsetX < width ?\n\t\t\t\timageData.offsetX :\n\t\t\t\t!imageData.offsetX || imageData.offsetX < width ? 0 : width;\n\t\t\tconst addOffsetY = offsetY + addHeight;\n\t\t\tconst endY = addOffsetY > height ?\n\t\t\t\theight :\n\t\t\t\taddOffsetY;\n\t\t\tconst addOffsetX = offsetX + addWidth;\n\t\t\tconst endX = addOffsetX > width ?\n\t\t\t\twidth :\n\t\t\t\taddOffsetX;\n\t\t\tlet maxY = 0;\n\t\t\tlet maxX = 0;\n\t\t\tlet count = 0;\n\t\t\t// console.error(\"offsetY:\"+offsetY+\"/offsetX:\"+offsetX);\n\t\t\tfor (let iy = offsetY; iy < endY; iy++) {\n\t\t\t\tconst addPixcelIndexY = iy - plainOffsetY;\n\t\t\t\tmaxY = addPixcelIndexY;\n\t\t\t\tfor (let ix = offsetX; ix < endX; ix++) {\n\t\t\t\t\tconst addPixcelIndexX = ix - plainOffsetX;\n\t\t\t\t\tconst basePixcelIndex = iy * width + ix;\n\t\t\t\t\tconst addPixcelIndex = addPixcelIndexY * addWidth + addPixcelIndexX;\n\t\t\t\t\tcount++;\n\t\t\t\t\tfunc(data, basePixcelIndex, addData, addPixcelIndex);\n\t\t\t\t\tmaxX = addPixcelIndexX;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//console.log(\"count:\"+count+\"/maxX:\"+maxX+\"/maxY:\"+maxY+\"/w:\"+addWidth+\"/h:\"+addHeight+\"/offsetX:\"+offsetX+\"/offsetY:\"+offsetY+\"/endX:\"+endX+\"/endY:\"+endY+\"/width:\"+width+\"/height:\"+height)\n\t\t}\n\t}\n\n\treplace() {\n\t\treturn (base, basePixcelIndex, addOne, addPixcelIndex) => {\n\t\t\tconst index = basePixcelIndex * 4;\n\t\t\tconst indexAdd = addPixcelIndex * 4;\n\t\t\tbase[index] = addOne[indexAdd]\n\t\t\tbase[index + 1] = addOne[indexAdd + 1]\n\t\t\tbase[index + 2] = addOne[indexAdd + 2]\n\t\t\tbase[index + 3] = 255 //addOne[addPixcelIndex + 2]\n\t\t}\n\t}\n\tlinier() {\n\t\treturn (base, basePixcelIndex, addOne, addPixcelIndex) => {\n\t\t\tconst index = basePixcelIndex * 4;\n\t\t\tconst indexAdd = addPixcelIndex * 4;\n\t\t\tbase[index] = base[index] + addOaddOffsetXne[indexAdd]\n\t\t\tbase[index + 1] = base[index + 1] + addOne[indexAdd + 1]\n\t\t\tbase[index + 2] = base[index + 2] + addOne[indexAdd + 2]\n\t\t}\n\t}\n\tmultiplication() {\n\t\treturn (base, basePixcelIndex, addOne, addPixcelIndex) => {\n\t\t\tconst index = basePixcelIndex * 4;\n\t\t\tconst indexAdd = addPixcelIndex * 4;\n\t\t\tbase[index] = this.trimByte(base[index] * addOne[indexAdd] / 255);\n\t\t\tbase[index + 1] = this.trimByte(base[index + 1] * addOne[indexAdd + 1] / 255);\n\t\t\tbase[index + 2] = this.trimByte(base[index + 2] * addOne[indexAdd + 2] / 255);\n\t\t}\n\t}\n}","import { Thread } from \"../thread/thread\";\n// import { ImageWorker } from \"../../worker/imageWorker\";\nconst instances = {};\nconst wokerKey = \"ImageWorker\";\nexport class ImageCalcBase {\n\tconstructor(key) {\n\t\tthis.key = key;\n\t\tinstances[key] = this;\n\t\tthis.workerKey\n\t\t// this.thread = null;\n\t}\n\tthreadInit() {\n\t\t// if (!this.thread) {\n\t\t// \tthis.thread = new Thread();\n\t\t// }\n\t}\n\tasync execute(methodName, dataMap, isCallFromWorker) {\n\t\t// console.log(\"resizeExcWithThread. execute A ImageCalcBase methodName:\" + methodName + \"/dataMap:\" + dataMap);\n\t\tdataMap[\"methodName\"] = methodName;\n\t\tdataMap[\"className\"] = this.key;\n\t\tconst arrayImageData = {};\n\t\tfor (let key in dataMap) {\n\t\t\tconst data = dataMap[key];\n\t\t\tif (data instanceof ImageData) {\n\t\t\t\tarrayImageData[key] = data;\n\t\t\t}\n\t\t\tdataMap[key] = this.convertImageDataToObj(data);\n\t\t}\n\t\t// console.log(\"resizeExcWithThread. execute B ImageCalcBase methodName:\" + methodName + \"/dataMap:\" + dataMap);\n\t\tconst thread = new Thread();\n\t\tconst result = await thread.postMessage(wokerKey, dataMap)\n\t\t\t.catch((e) => { console.error(e) });\n\t\tif (result) {\n\t\t\tfor (let key in dataMap) {\n\t\t\t\t// console.log(\"execute key:\" + key);\n\t\t\t\tconst resultData = result[key];\n\t\t\t\t// console.log(resultData)\n\t\t\t\tif (!resultData || !resultData.data || resultData.data.byteLength === undefined) {\n\t\t\t\t\t// console.log(\"execute continue1 key:\" + key);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst data = dataMap[key];\n\t\t\t\t// console.log(data)\n\t\t\t\tif (!data || !data.data || data.data.byteLength === undefined) {\n\t\t\t\t\t// console.log(\"execute continue2 key:\" + key);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (resultData.data.byteLength > 0 && data.data.byteLength < 1) {\n\t\t\t\t\t// console.log(\"execute ok!! key:\" + key);\n\t\t\t\t\tdata.data = resultData.data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// console.warn(\"resizeExcWithThread. execute C execute-dataMap\")\n\t\t// console.warn(dataMap)\n\t\t// console.warn(result)\n\t\t// console.warn(\"resizeExcWithThread. execute D execute-dataMap\")\n\t\treturn result;\n\t}\n\tgetClassName() {\n\t\treturn this.key;\n\t}\n\tstatic loadInstance(className) {\n\t\treturn instances(className);\n\t}\n\tconvertImageDataToObj(target) {\n\t\tif (target && target.data && target.data.length > 0 && target instanceof ImageData) {\n\t\t\treturn { width: target.width, height: target.height, data: target.data, offsetX: target.offsetX, offsetY: target.offsetY };\n\t\t}\n\t\treturn target;\n\t}\n}","import { ByteUtil } from \"./byteUtil\";\nimport { ImageCalcBase } from \"./imageCalcBase\";\nimport bc from \"../binaryConverter\";\nconst threadCount = 4;\nexport class ImageResizer extends ImageCalcBase {\n\tconstructor() {\n\t\tsuper(\"ImageResizer\");\n\t\tthis[\"resizeAsLanczos\"] = this.resizeAsLanczos;\n\t\tthis[\"resizeAsByCubic\"] = this.resizeAsByCubic;\n\t}\n\tculcWeightByCubic(alpha) {\n\t\treturn (x) => {\n\t\t\tlet result = 0;\n\t\t\tif (x <= 1) {\n\t\t\t\tresult = ((alpha + 2.0) * x * x * x) - ((alpha + 3.0) * x * x) + 1;\n\t\t\t} else if (x <= 2) {\n\t\t\t\tresult = (alpha * x * x * x) - (5.0 * alpha * x * x) + (8.0 * alpha * x) - (4.0 * alpha);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\tsincLanczos(x) {\n\t\treturn Math.sin(x * Math.PI) / (x * Math.PI);\n\t}\n\n\tlanczosWeight(n = 3) {\n\t\treturn (d) => {\n\t\t\treturn d === 0 ?\n\t\t\t\t1 :\n\t\t\t\t(\n\t\t\t\t\tMath.abs(d) < n ?\n\t\t\t\t\tthis.sincLanczos(d) * this.sincLanczos(d / n) :\n\t\t\t\t\t0);\n\t\t}\n\t}\n\n\tasync resizeAsLanczos(iamegData, distImage, isOtherThread) {\n\t\t// console.log(\"resizeAsLanczos.resizeExcWithThread；iamegData:\" + iamegData);\n\t\treturn await this.resizeExc(iamegData, distImage, isOtherThread, \"resizeAsLanczos\")\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e)\n\t\t\t\tconsole.error(e.stack);\n\t\t\t});\n\t}\n\n\tasync resizeAsByCubic(iamegData, distImage, isOtherThread) {\n\t\t// console.log(\"resizeAsByCubic.resizeExcWithThread；iamegData:\" + iamegData);\n\t\tconst result = await this.resizeExc(iamegData, distImage, isOtherThread, \"resizeAsByCubic\")\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"resizeAsByCubic resizeExcWithThread；iamegData\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\t// console.log(\"resizeAsByCubic.resizeExcWithThread； result:\" + result);\n\t\treturn result;\n\t}\n\n\tasync resizeExc(iamegData, distImage, isOtherThread, name) {\n\t\tif (isOtherThread) {\n\t\t\tif (!distImage) {\n\t\t\t\tdistImage = iamegData.distImage\n\t\t\t\tiamegData = iamegData.iamegData\n\t\t\t}\n\t\t\tthis.threadInit();\n\t\t\t// console.log(\"resizeExc execute.iamegData:\" + iamegData);\n\t\t\tconst result = await this.execute(name, { iamegData, distImage })\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.log(e)\n\t\t\t\t\tconsole.error(e.stack);\n\t\t\t\t});\n\t\t\treturn result;\n\t\t} else {\n\t\t\t// console.log(\"resizeExc.iamegData:\" + iamegData);\n\t\t\tlet rowCount = null;\n\t\t\tlet offsetY = null;\n\t\t\tif (!distImage) {\n\t\t\t\tif (iamegData.rowCount) {\n\t\t\t\t\trowCount = iamegData.rowCount\n\t\t\t\t\toffsetY = iamegData.offsetY\n\t\t\t\t\tdistImage = iamegData.distImage\n\t\t\t\t\tiamegData = iamegData.iamegData\n\t\t\t\t\t// console.log(\"resizeExc resizeExcWithThread.offsetY:\" + offsetY + \"/rowCount:\" + rowCount);\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(\"resizeExc resizeExcWithThread S1.iamegData:\" + iamegData + \"/name:\" + name);\n\t\t\t\t\tconst result = await this.resizeExcWithThread(iamegData, distImage, name)\n\t\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t\tconsole.log(e)\n\t\t\t\t\t\t\tconsole.error(e.stack);\n\t\t\t\t\t\t});\n\t\t\t\t\t// console.log(\"resizeExc resizeExcWithThread S2.result:\" + result + \"/name:\" + name);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(distImage);\n\t\t\tif (name === \"resizeAsByCubic\") {\n\t\t\t\t// console.log(\"resizeExc resizeExcWithThread T1.iamegData:\" + iamegData + \"/name:\" + name);\n\t\t\t\treturn this.resizeAsByCubicExe(iamegData, distImage, offsetY, rowCount);\n\t\t\t}\n\t\t\tif (name === \"resizeAsLanczos\") {\n\t\t\t\t// console.log(\"resizeExc resizeExcWithThread U1.iamegData:\" + iamegData + \"/name:\" + name);\n\t\t\t\treturn this.resizeAsLanczosExe(iamegData, distImage, offsetY, rowCount);\n\t\t\t}\n\t\t}\n\t}\n\tresizeExcWithThread(iamegData, distImage, name) {\n\t\t// console.log(\"resizeExcWithThread A .iamegData:\" + iamegData);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// console.log(\"resizeExcWithThread. B iamegData:\" + iamegData);\n\t\t\tdistImage = iamegData.distImage\n\t\t\tiamegData = iamegData.iamegData\n\n\t\t\tthis.threadInit();\n\t\t\tconst distBitmap = distImage.data;\n\t\t\tconst newWidth = distImage.width;\n\t\t\tconst newHeight = distImage.height;\n\t\t\tconst currentBitmap = iamegData.data;\n\t\t\tconst currentWidth = iamegData.width;\n\t\t\tconst currentHeight = iamegData.height;\n\t\t\tconst promises = [];\n\t\t\tlet total = 0;\n\t\t\tconst parLength = Math.floor(newHeight / threadCount);;\n\t\t\t// console.log(\"resizeExcWithThread. C threadCount:\" + threadCount + \"/name:\" + name);\n\t\t\tfor (let i = 0; i < threadCount; i++) {\n\t\t\t\tconst limitHeight = (threadCount - 1 === i) ? newHeight - total : parLength;\n\t\t\t\t// todo Plus\n\t\t\t\tconst newData = new Uint8ClampedArray(newWidth * 4 * limitHeight);\n\t\t\t\tconst newDistData = { data: newData, width: newWidth, height: newHeight };\n\t\t\t\tconst currentImageLen = currentBitmap.length;\n\t\t\t\tconst newIData = new Uint8ClampedArray(currentImageLen);\n\t\t\t\t// console.log(\"resizeExcWithThread. D limitHeight:\" + limitHeight + \"/i:\" + i);\n\t\t\t\tfor (let j = 0; j < currentImageLen; j++) {\n\t\t\t\t\tnewIData[j] = currentBitmap[j];\n\t\t\t\t}\n\t\t\t\tconst newImageData = { data: newIData, width: currentWidth, height: currentHeight };\n\n\t\t\t\t// console.log(\"resizeExcWithThread. E limitHeight:\" + limitHeight + \"/i:\" + i);\n\t\t\t\tconst promise = this.execute(name, { iamegData: newImageData, distImage: newDistData, offsetY: total, rowCount: limitHeight });\n\t\t\t\ttotal += limitHeight;\n\t\t\t\tpromises.push(promise);\n\t\t\t}\n\t\t\tPromise.all(promises)\n\t\t\t\t.then((values) => {\n\t\t\t\t\t// console.log(\"resizeExcWithThread -----A--- values.length:\" + values.length);\n\t\t\t\t\t// console.log(values)\n\t\t\t\t\t// console.log(bc.arrayBuffer2base64(distBitmap.buffer));\n\t\t\t\t\tfor (let val of values) {\n\t\t\t\t\t\t// console.log(val)\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\toffsetY,\n\t\t\t\t\t\t\trowCount\n\t\t\t\t\t\t} = val.distImage;\n\t\t\t\t\t\tconst startIndex = offsetY * 4 * newWidth;\n\t\t\t\t\t\t// const endIndex = (offsetY + rowCount) * 4 * newWidth;\n\t\t\t\t\t\t// let index = 0;\n\t\t\t\t\t\tdistBitmap.set(data, startIndex);\n\t\t\t\t\t\t// for (let j = startIndex; j < endIndex; j++) {\n\t\t\t\t\t\t// \tdistBitmap[j] = data[index];\n\t\t\t\t\t\t// \tindex++;\n\t\t\t\t\t\t// }\n\t\t\t\t\t\t// console.log(bc.arrayBuffer2base64(data.buffer));\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(\"resizeExcWithThread -----B--- values.length:\" + values.length);\n\t\t\t\t\tresolve(distBitmap.buffer);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e.stack);\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\t\tconsole.error(e.target);\n\t\t\t\t\tconsole.error(e.type);\n\t\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\t\tconsole.error(e.message);\n\t\t\t\t\tconsole.error(e.lineno);\n\t\t\t\t\tconsole.error(e.error);\n\t\t\t\t\treject(e)\n\t\t\t\t});\n\n\t\t});\n\t}\n\tresizeAsLanczosExe(iamegData, distImage, offsetY, rowCount) {\n\t\tconst {\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight\n\t\t} = iamegData;\n\t\tconst distBitmap = distImage.data;\n\t\tconst newWidth = distImage.width;\n\t\tconst newHeight = distImage.height;\n\t\tdistImage.offsetY = offsetY;\n\t\tdistImage.rowCount = rowCount;\n\t\t// console.log(\"resizeAsByCubicExe offsetY:\" + offsetY + \"/newWidth:\" + newWidth + \"/rowCount:\" + rowCount + \"/newHeight:\" + newHeight);\n\t\tconst newData = new Uint8ClampedArray(this.resizeLanczos(data, width, height, newWidth, newHeight, distBitmap, offsetY, rowCount));\n\t\t// console.log(bc.arrayBuffer2base64(distBitmap.buffer));\n\t\treturn distImage\n\t}\n\tresizeAsByCubicExe(iamegData, distImage, offsetY, rowCount) {\n\t\tconst {\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight\n\t\t} = iamegData;\n\t\tconst distBitmap = distImage.data;\n\t\tconst newWidth = distImage.width;\n\t\tconst newHeight = distImage.height;\n\t\tdistImage.offsetY = offsetY;\n\t\tdistImage.rowCount = rowCount;\n\t\t// console.log(\"A offsetY:[\" + offsetY + \"]\" + \"--resizeAsByCubicExe A1 offsetY:\" + offsetY + \"/newWidth:\" + newWidth + \"/rowCount:\" + rowCount + \"/newHeight:\" + newHeight);\n\t\t// console.log(\"A1 offsetY:[\" + offsetY + \"]\" + bc.arrayBuffer2base64(data.buffer));\n\t\t// console.log(\"A2 offsetY:[\" + offsetY + \"]\" + bc.arrayBuffer2base64(distBitmap.buffer));\n\t\tconst newData = new Uint8ClampedArray(this.resizeByCubic(data, width, height, newWidth, newHeight, distBitmap, offsetY, rowCount));\n\t\t// console.log(\"B offsetY:[\" + offsetY + \"]\" + \"--resizeAsByCubicExe A2 offsetY:\" + offsetY + \"/newWidth:\" + newWidth + \"/rowCount:\" + rowCount + \"/newHeight:\" + newHeight);\n\t\t// console.log(\"B offsetY:[\" + offsetY + \"]\" + bc.arrayBuffer2base64(distBitmap.buffer));\n\t\treturn distImage\n\t}\n\t/////////////\n\tresize(iamegData, newWidth, newHeight, distImage) {\n\t\tconst {\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight\n\t\t} = iamegData;\n\t\tconst distBitmap = distImage.data;\n\t\tconst newData = new Uint8ClampedArray(this.resizeByCubic(data, width, height, newWidth, newHeight, distBitmap));\n\t\treturn distImage\n\t}\n\tresizeLanczos(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, distBitmap, offsetY, rowCount) {\n\t\treturn this.resizeExecute(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, this.lanczosWeight(3), 6, distBitmap, offsetY, rowCount);\n\t}\n\tresizeByCubic(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, distBitmap, offsetY, rowCount) {\n\t\treturn this.resizeExecute(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, this.culcWeightByCubic(-1.0), 4, distBitmap, offsetY, rowCount);\n\t}\n\t// TODO run with maltiThead\n\tresizeExecute(originBitmap, sourceWidth, sourceHeight, newWidthF, newHeightF, weightFunc, size, distBitmap, offsetY, rowCount) {\n\t\tconst newWidth = Math.floor(newWidthF);\n\t\tconst newHeight = Math.floor(newHeightF);\n\t\tconst sw = Math.floor(sourceWidth);\n\t\tconst sw4 = sw * 4;\n\t\tconst swLimit = sw - 1;\n\t\tconst sh = Math.floor(sourceHeight);\n\t\tconst sh4 = sh * 4;\n\t\tconst shLimit = sh - 1;\n\t\tconst wf = sw / newWidth;\n\t\tconst hf = sh / newHeight;\n\t\tconst src = originBitmap;\n\t\tconst dist = distBitmap ?\n\t\t\tdistBitmap :\n\t\t\tnew Uint8Array(newWidth * newHeight * 4);\n\t\tconst sizeHalf = size / 2;\n\t\tconst sizeHalfm1 = sizeHalf - 1;\n\t\tconst xMap = {};\n\t\tconst threadRowCount = rowCount ? rowCount : newHeight;\n\t\tconst threadOffsetY = offsetY ? offsetY : 0;\n\t\tconst threadEnd = threadOffsetY + threadRowCount;\n\t\tfor (let iy = threadOffsetY; iy < threadEnd; iy++) {\n\t\t\tconst wfy = hf * iy;\n\t\t\tconst y = Math.floor(wfy);\n\t\t\tconst startY = y - sizeHalfm1;\n\t\t\tconst endY = y + sizeHalf;\n\t\t\tconst y32bitOffsetDist = (iy - threadOffsetY) * 4 * newWidth;\n\t\t\tfor (let ix = 0; ix < newWidth; ix++) {\n\t\t\t\tconst wfx = wf * ix;\n\t\t\t\tconst x = Math.floor(wfx);\n\t\t\t\tlet r = 0;\n\t\t\t\tlet g = 0;\n\t\t\t\tlet b = 0;\n\t\t\t\tconst startX = x - sizeHalfm1;\n\t\t\t\tconst endX = x + sizeHalf;\n\t\t\t\tfor (let jy = startY; jy <= endY; jy++) {\n\t\t\t\t\tconst weightY = weightFunc(Math.abs(wfy - jy));\n\t\t\t\t\tconst sy = (jy < 0 || jy > shLimit) ?\n\t\t\t\t\t\ty :\n\t\t\t\t\t\tjy;\n\t\t\t\t\tconst y32bitOffset = sw4 * sy;\n\t\t\t\t\tfor (let jx = startX; jx <= endX; jx++) {\n\t\t\t\t\t\tconst w = weightFunc(Math.abs(wfx - jx)) * weightY;\n\t\t\t\t\t\tif (w === 0) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst sx = (jx < 0 || jx > swLimit) ?\n\t\t\t\t\t\t\tx :\n\t\t\t\t\t\t\tjx;\n\t\t\t\t\t\tconst offset32bit = y32bitOffset + sx * 4;\n\t\t\t\t\t\tr += src[offset32bit] * w;\n\t\t\t\t\t\tg += src[offset32bit + 1] * w;\n\t\t\t\t\t\tb += src[offset32bit + 2] * w;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// console.log(\"newHeight y32bitOffsetDist:\" + y32bitOffsetDist);\n\t\t\t\tconst offset32bitDist = y32bitOffsetDist + ix * 4;\n\t\t\t\tdist[offset32bitDist] = ByteUtil.trimByte(r);\n\t\t\t\tdist[offset32bitDist + 1] = ByteUtil.trimByte(g);\n\t\t\t\tdist[offset32bitDist + 2] = ByteUtil.trimByte(b);\n\t\t\t\tdist[offset32bitDist + 3] = 255;\n\t\t\t}\n\t\t}\n\t\t// console.log(\"newHeight:\" + dist.buffer);\n\t\t// console.log(dist.buffer);\n\t\treturn dist.buffer;\n\t}\n}","/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {'use strict';var n=void 0,y=!0,aa=this;function G(e,b){var a=e.split(\".\"),d=aa;!(a[0]in d)&&d.execScript&&d.execScript(\"var \"+a[0]);for(var c;a.length&&(c=a.shift());)!a.length&&b!==n?d[c]=b:d=d[c]?d[c]:d[c]={}};var H=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function ba(e,b){this.index=\"number\"===typeof b?b:0;this.f=0;this.buffer=e instanceof(H?Uint8Array:Array)?e:new (H?Uint8Array:Array)(32768);if(2*this.buffer.length<=this.index)throw Error(\"invalid index\");this.buffer.length<=this.index&&ca(this)}function ca(e){var b=e.buffer,a,d=b.length,c=new (H?Uint8Array:Array)(d<<1);if(H)c.set(b);else for(a=0;a<d;++a)c[a]=b[a];return e.buffer=c}\nba.prototype.b=function(e,b,a){var d=this.buffer,c=this.index,f=this.f,l=d[c],p;a&&1<b&&(e=8<b?(L[e&255]<<24|L[e>>>8&255]<<16|L[e>>>16&255]<<8|L[e>>>24&255])>>32-b:L[e]>>8-b);if(8>b+f)l=l<<b|e,f+=b;else for(p=0;p<b;++p)l=l<<1|e>>b-p-1&1,8===++f&&(f=0,d[c++]=L[l],l=0,c===d.length&&(d=ca(this)));d[c]=l;this.buffer=d;this.f=f;this.index=c};ba.prototype.finish=function(){var e=this.buffer,b=this.index,a;0<this.f&&(e[b]<<=8-this.f,e[b]=L[e[b]],b++);H?a=e.subarray(0,b):(e.length=b,a=e);return a};\nvar da=new (H?Uint8Array:Array)(256),ha;for(ha=0;256>ha;++ha){for(var U=ha,ja=U,ka=7,U=U>>>1;U;U>>>=1)ja<<=1,ja|=U&1,--ka;da[ha]=(ja<<ka&255)>>>0}var L=da;function la(e){var b=n,a,d=\"number\"===typeof b?b:b=0,c=e.length;a=-1;for(d=c&7;d--;++b)a=a>>>8^V[(a^e[b])&255];for(d=c>>3;d--;b+=8)a=a>>>8^V[(a^e[b])&255],a=a>>>8^V[(a^e[b+1])&255],a=a>>>8^V[(a^e[b+2])&255],a=a>>>8^V[(a^e[b+3])&255],a=a>>>8^V[(a^e[b+4])&255],a=a>>>8^V[(a^e[b+5])&255],a=a>>>8^V[(a^e[b+6])&255],a=a>>>8^V[(a^e[b+7])&255];return(a^4294967295)>>>0}\nvar ma=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,\n2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,\n2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,\n2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,\n3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,\n936918E3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],V=H?new Uint32Array(ma):ma;function na(e){this.buffer=new (H?Uint16Array:Array)(2*e);this.length=0}na.prototype.getParent=function(e){return 2*((e-2)/4|0)};na.prototype.push=function(e,b){var a,d,c=this.buffer,f;a=this.length;c[this.length++]=b;for(c[this.length++]=e;0<a;)if(d=this.getParent(a),c[a]>c[d])f=c[a],c[a]=c[d],c[d]=f,f=c[a+1],c[a+1]=c[d+1],c[d+1]=f,a=d;else break;return this.length};\nna.prototype.pop=function(){var e,b,a=this.buffer,d,c,f;b=a[0];e=a[1];this.length-=2;a[0]=a[this.length];a[1]=a[this.length+1];for(f=0;;){c=2*f+2;if(c>=this.length)break;c+2<this.length&&a[c+2]>a[c]&&(c+=2);if(a[c]>a[f])d=a[f],a[f]=a[c],a[c]=d,d=a[f+1],a[f+1]=a[c+1],a[c+1]=d;else break;f=c}return{index:e,value:b,length:this.length}};function pa(e,b){this.k=qa;this.l=0;this.input=H&&e instanceof Array?new Uint8Array(e):e;this.e=0;b&&(b.lazy&&(this.l=b.lazy),\"number\"===typeof b.compressionType&&(this.k=b.compressionType),b.outputBuffer&&(this.c=H&&b.outputBuffer instanceof Array?new Uint8Array(b.outputBuffer):b.outputBuffer),\"number\"===typeof b.outputIndex&&(this.e=b.outputIndex));this.c||(this.c=new (H?Uint8Array:Array)(32768))}var qa=2,sa=[],Y;\nfor(Y=0;288>Y;Y++)switch(y){case 143>=Y:sa.push([Y+48,8]);break;case 255>=Y:sa.push([Y-144+400,9]);break;case 279>=Y:sa.push([Y-256+0,7]);break;case 287>=Y:sa.push([Y-280+192,8]);break;default:throw\"invalid literal: \"+Y;}\npa.prototype.g=function(){var e,b,a,d,c=this.input;switch(this.k){case 0:a=0;for(d=c.length;a<d;){b=H?c.subarray(a,a+65535):c.slice(a,a+65535);a+=b.length;var f=b,l=a===d,p=n,k=n,q=n,w=n,u=n,m=this.c,h=this.e;if(H){for(m=new Uint8Array(this.c.buffer);m.length<=h+f.length+5;)m=new Uint8Array(m.length<<1);m.set(this.c)}p=l?1:0;m[h++]=p|0;k=f.length;q=~k+65536&65535;m[h++]=k&255;m[h++]=k>>>8&255;m[h++]=q&255;m[h++]=q>>>8&255;if(H)m.set(f,h),h+=f.length,m=m.subarray(0,h);else{w=0;for(u=f.length;w<u;++w)m[h++]=\nf[w];m.length=h}this.e=h;this.c=m}break;case 1:var s=new ba(H?new Uint8Array(this.c.buffer):this.c,this.e);s.b(1,1,y);s.b(1,2,y);var t=ta(this,c),r,Q,z;r=0;for(Q=t.length;r<Q;r++)if(z=t[r],ba.prototype.b.apply(s,sa[z]),256<z)s.b(t[++r],t[++r],y),s.b(t[++r],5),s.b(t[++r],t[++r],y);else if(256===z)break;this.c=s.finish();this.e=this.c.length;break;case qa:var A=new ba(H?new Uint8Array(this.c.buffer):this.c,this.e),F,I,N,B,C,g=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],J,ea,O,W,X,oa=Array(19),\nya,Z,ia,D,za;F=qa;A.b(1,1,y);A.b(F,2,y);I=ta(this,c);J=ua(this.p,15);ea=va(J);O=ua(this.o,7);W=va(O);for(N=286;257<N&&0===J[N-1];N--);for(B=30;1<B&&0===O[B-1];B--);var Aa=N,Ba=B,P=new (H?Uint32Array:Array)(Aa+Ba),v,R,x,fa,M=new (H?Uint32Array:Array)(316),K,E,S=new (H?Uint8Array:Array)(19);for(v=R=0;v<Aa;v++)P[R++]=J[v];for(v=0;v<Ba;v++)P[R++]=O[v];if(!H){v=0;for(fa=S.length;v<fa;++v)S[v]=0}v=K=0;for(fa=P.length;v<fa;v+=R){for(R=1;v+R<fa&&P[v+R]===P[v];++R);x=R;if(0===P[v])if(3>x)for(;0<x--;)M[K++]=\n0,S[0]++;else for(;0<x;)E=138>x?x:138,E>x-3&&E<x&&(E=x-3),10>=E?(M[K++]=17,M[K++]=E-3,S[17]++):(M[K++]=18,M[K++]=E-11,S[18]++),x-=E;else if(M[K++]=P[v],S[P[v]]++,x--,3>x)for(;0<x--;)M[K++]=P[v],S[P[v]]++;else for(;0<x;)E=6>x?x:6,E>x-3&&E<x&&(E=x-3),M[K++]=16,M[K++]=E-3,S[16]++,x-=E}e=H?M.subarray(0,K):M.slice(0,K);X=ua(S,7);for(D=0;19>D;D++)oa[D]=X[g[D]];for(C=19;4<C&&0===oa[C-1];C--);ya=va(X);A.b(N-257,5,y);A.b(B-1,5,y);A.b(C-4,4,y);for(D=0;D<C;D++)A.b(oa[D],3,y);D=0;for(za=e.length;D<za;D++)if(Z=\ne[D],A.b(ya[Z],X[Z],y),16<=Z){D++;switch(Z){case 16:ia=2;break;case 17:ia=3;break;case 18:ia=7;break;default:throw\"invalid code: \"+Z;}A.b(e[D],ia,y)}var Ca=[ea,J],Da=[W,O],T,Ea,ga,ra,Fa,Ga,Ha,Ia;Fa=Ca[0];Ga=Ca[1];Ha=Da[0];Ia=Da[1];T=0;for(Ea=I.length;T<Ea;++T)if(ga=I[T],A.b(Fa[ga],Ga[ga],y),256<ga)A.b(I[++T],I[++T],y),ra=I[++T],A.b(Ha[ra],Ia[ra],y),A.b(I[++T],I[++T],y);else if(256===ga)break;this.c=A.finish();this.e=this.c.length;break;default:throw\"invalid compression type\";}return this.c};\nfunction wa(e,b){this.length=e;this.n=b}\nvar xa=function(){function e(a){switch(y){case 3===a:return[257,a-3,0];case 4===a:return[258,a-4,0];case 5===a:return[259,a-5,0];case 6===a:return[260,a-6,0];case 7===a:return[261,a-7,0];case 8===a:return[262,a-8,0];case 9===a:return[263,a-9,0];case 10===a:return[264,a-10,0];case 12>=a:return[265,a-11,1];case 14>=a:return[266,a-13,1];case 16>=a:return[267,a-15,1];case 18>=a:return[268,a-17,1];case 22>=a:return[269,a-19,2];case 26>=a:return[270,a-23,2];case 30>=a:return[271,a-27,2];case 34>=a:return[272,\na-31,2];case 42>=a:return[273,a-35,3];case 50>=a:return[274,a-43,3];case 58>=a:return[275,a-51,3];case 66>=a:return[276,a-59,3];case 82>=a:return[277,a-67,4];case 98>=a:return[278,a-83,4];case 114>=a:return[279,a-99,4];case 130>=a:return[280,a-115,4];case 162>=a:return[281,a-131,5];case 194>=a:return[282,a-163,5];case 226>=a:return[283,a-195,5];case 257>=a:return[284,a-227,5];case 258===a:return[285,a-258,0];default:throw\"invalid length: \"+a;}}var b=[],a,d;for(a=3;258>=a;a++)d=e(a),b[a]=d[2]<<24|\nd[1]<<16|d[0];return b}(),Ja=H?new Uint32Array(xa):xa;\nfunction ta(e,b){function a(a,c){var b=a.n,d=[],e=0,f;f=Ja[a.length];d[e++]=f&65535;d[e++]=f>>16&255;d[e++]=f>>24;var g;switch(y){case 1===b:g=[0,b-1,0];break;case 2===b:g=[1,b-2,0];break;case 3===b:g=[2,b-3,0];break;case 4===b:g=[3,b-4,0];break;case 6>=b:g=[4,b-5,1];break;case 8>=b:g=[5,b-7,1];break;case 12>=b:g=[6,b-9,2];break;case 16>=b:g=[7,b-13,2];break;case 24>=b:g=[8,b-17,3];break;case 32>=b:g=[9,b-25,3];break;case 48>=b:g=[10,b-33,4];break;case 64>=b:g=[11,b-49,4];break;case 96>=b:g=[12,b-\n65,5];break;case 128>=b:g=[13,b-97,5];break;case 192>=b:g=[14,b-129,6];break;case 256>=b:g=[15,b-193,6];break;case 384>=b:g=[16,b-257,7];break;case 512>=b:g=[17,b-385,7];break;case 768>=b:g=[18,b-513,8];break;case 1024>=b:g=[19,b-769,8];break;case 1536>=b:g=[20,b-1025,9];break;case 2048>=b:g=[21,b-1537,9];break;case 3072>=b:g=[22,b-2049,10];break;case 4096>=b:g=[23,b-3073,10];break;case 6144>=b:g=[24,b-4097,11];break;case 8192>=b:g=[25,b-6145,11];break;case 12288>=b:g=[26,b-8193,12];break;case 16384>=\nb:g=[27,b-12289,12];break;case 24576>=b:g=[28,b-16385,13];break;case 32768>=b:g=[29,b-24577,13];break;default:throw\"invalid distance\";}f=g;d[e++]=f[0];d[e++]=f[1];d[e++]=f[2];var k,l;k=0;for(l=d.length;k<l;++k)m[h++]=d[k];t[d[0]]++;r[d[3]]++;s=a.length+c-1;u=null}var d,c,f,l,p,k={},q,w,u,m=H?new Uint16Array(2*b.length):[],h=0,s=0,t=new (H?Uint32Array:Array)(286),r=new (H?Uint32Array:Array)(30),Q=e.l,z;if(!H){for(f=0;285>=f;)t[f++]=0;for(f=0;29>=f;)r[f++]=0}t[256]=1;d=0;for(c=b.length;d<c;++d){f=p=\n0;for(l=3;f<l&&d+f!==c;++f)p=p<<8|b[d+f];k[p]===n&&(k[p]=[]);q=k[p];if(!(0<s--)){for(;0<q.length&&32768<d-q[0];)q.shift();if(d+3>=c){u&&a(u,-1);f=0;for(l=c-d;f<l;++f)z=b[d+f],m[h++]=z,++t[z];break}0<q.length?(w=Ka(b,d,q),u?u.length<w.length?(z=b[d-1],m[h++]=z,++t[z],a(w,0)):a(u,-1):w.length<Q?u=w:a(w,0)):u?a(u,-1):(z=b[d],m[h++]=z,++t[z])}q.push(d)}m[h++]=256;t[256]++;e.p=t;e.o=r;return H?m.subarray(0,h):m}\nfunction Ka(e,b,a){var d,c,f=0,l,p,k,q,w=e.length;p=0;q=a.length;a:for(;p<q;p++){d=a[q-p-1];l=3;if(3<f){for(k=f;3<k;k--)if(e[d+k-1]!==e[b+k-1])continue a;l=f}for(;258>l&&b+l<w&&e[d+l]===e[b+l];)++l;l>f&&(c=d,f=l);if(258===l)break}return new wa(f,b-c)}\nfunction ua(e,b){var a=e.length,d=new na(572),c=new (H?Uint8Array:Array)(a),f,l,p,k,q;if(!H)for(k=0;k<a;k++)c[k]=0;for(k=0;k<a;++k)0<e[k]&&d.push(k,e[k]);f=Array(d.length/2);l=new (H?Uint32Array:Array)(d.length/2);if(1===f.length)return c[d.pop().index]=1,c;k=0;for(q=d.length/2;k<q;++k)f[k]=d.pop(),l[k]=f[k].value;p=La(l,l.length,b);k=0;for(q=f.length;k<q;++k)c[f[k].index]=p[k];return c}\nfunction La(e,b,a){function d(a){var c=k[a][q[a]];c===b?(d(a+1),d(a+1)):--l[c];++q[a]}var c=new (H?Uint16Array:Array)(a),f=new (H?Uint8Array:Array)(a),l=new (H?Uint8Array:Array)(b),p=Array(a),k=Array(a),q=Array(a),w=(1<<a)-b,u=1<<a-1,m,h,s,t,r;c[a-1]=b;for(h=0;h<a;++h)w<u?f[h]=0:(f[h]=1,w-=u),w<<=1,c[a-2-h]=(c[a-1-h]/2|0)+b;c[0]=f[0];p[0]=Array(c[0]);k[0]=Array(c[0]);for(h=1;h<a;++h)c[h]>2*c[h-1]+f[h]&&(c[h]=2*c[h-1]+f[h]),p[h]=Array(c[h]),k[h]=Array(c[h]);for(m=0;m<b;++m)l[m]=a;for(s=0;s<c[a-1];++s)p[a-\n1][s]=e[s],k[a-1][s]=s;for(m=0;m<a;++m)q[m]=0;1===f[a-1]&&(--l[0],++q[a-1]);for(h=a-2;0<=h;--h){t=m=0;r=q[h+1];for(s=0;s<c[h];s++)t=p[h+1][r]+p[h+1][r+1],t>e[m]?(p[h][s]=t,k[h][s]=b,r+=2):(p[h][s]=e[m],k[h][s]=m,++m);q[h]=0;1===f[h]&&d(h)}return l}\nfunction va(e){var b=new (H?Uint16Array:Array)(e.length),a=[],d=[],c=0,f,l,p,k;f=0;for(l=e.length;f<l;f++)a[e[f]]=(a[e[f]]|0)+1;f=1;for(l=16;f<=l;f++)d[f]=c,c+=a[f]|0,c<<=1;f=0;for(l=e.length;f<l;f++){c=d[e[f]];d[e[f]]+=1;p=b[f]=0;for(k=e[f];p<k;p++)b[f]=b[f]<<1|c&1,c>>>=1}return b};function $(e){e=e||{};this.files=[];this.d=e.comment}var Ma=[80,75,1,2],Na=[80,75,3,4],Oa=[80,75,5,6];$.prototype.m=function(e,b){b=b||{};var a,d=e.length,c=0;H&&e instanceof Array&&(e=new Uint8Array(e));\"number\"!==typeof b.compressionMethod&&(b.compressionMethod=8);if(b.compress)switch(b.compressionMethod){case 0:break;case 8:c=la(e);e=(new pa(e,b.deflateOption)).g();a=y;break;default:throw Error(\"unknown compression method:\"+b.compressionMethod);}this.files.push({buffer:e,a:b,j:a,r:!1,size:d,h:c})};\n$.prototype.q=function(e){this.i=e};\n$.prototype.g=function(){var e=this.files,b,a,d,c,f,l=0,p=0,k,q,w,u,m,h,s,t,r,Q,z,A,F,I,N,B,C,g,J;B=0;for(C=e.length;B<C;++B){b=e[B];t=b.a.filename?b.a.filename.length:0;r=b.a.comment?b.a.comment.length:0;if(!b.j)switch(b.h=la(b.buffer),b.a.compressionMethod){case 0:break;case 8:b.buffer=(new pa(b.buffer,b.a.deflateOption)).g();b.j=y;break;default:throw Error(\"unknown compression method:\"+b.a.compressionMethod);}if(b.a.password!==n||this.i!==n){var ea=b.a.password||this.i,O=[305419896,591751049,878082192],\nW=n,X=n;H&&(O=new Uint32Array(O));W=0;for(X=ea.length;W<X;++W)Pa(O,ea[W]&255);N=O;F=b.buffer;H?(I=new Uint8Array(F.length+12),I.set(F,12),F=I):F.unshift(0,0,0,0,0,0,0,0,0,0,0,0);for(g=0;12>g;++g)F[g]=Qa(N,11===B?b.h&255:256*Math.random()|0);for(J=F.length;g<J;++g)F[g]=Qa(N,F[g]);b.buffer=F}l+=30+t+b.buffer.length;p+=46+t+r}a=new (H?Uint8Array:Array)(l+p+(22+(this.d?this.d.length:0)));d=0;c=l;f=c+p;B=0;for(C=e.length;B<C;++B){b=e[B];t=b.a.filename?b.a.filename.length:0;r=b.a.comment?b.a.comment.length:\n0;k=d;a[d++]=Na[0];a[d++]=Na[1];a[d++]=Na[2];a[d++]=Na[3];a[c++]=Ma[0];a[c++]=Ma[1];a[c++]=Ma[2];a[c++]=Ma[3];a[c++]=20;a[c++]=b.a.os||0;a[d++]=a[c++]=20;q=a[d++]=a[c++]=0;if(b.a.password||this.i)q|=1;a[d++]=a[c++]=q&255;a[d++]=a[c++]=q>>8&255;w=b.a.compressionMethod;a[d++]=a[c++]=w&255;a[d++]=a[c++]=w>>8&255;u=b.a.date||new Date;a[d++]=a[c++]=(u.getMinutes()&7)<<5|u.getSeconds()/2|0;a[d++]=a[c++]=u.getHours()<<3|u.getMinutes()>>3;a[d++]=a[c++]=(u.getMonth()+1&7)<<5|u.getDate();a[d++]=a[c++]=(u.getFullYear()-\n1980&127)<<1|u.getMonth()+1>>3;m=b.h;a[d++]=a[c++]=m&255;a[d++]=a[c++]=m>>8&255;a[d++]=a[c++]=m>>16&255;a[d++]=a[c++]=m>>24&255;h=b.buffer.length;a[d++]=a[c++]=h&255;a[d++]=a[c++]=h>>8&255;a[d++]=a[c++]=h>>16&255;a[d++]=a[c++]=h>>24&255;s=b.size;a[d++]=a[c++]=s&255;a[d++]=a[c++]=s>>8&255;a[d++]=a[c++]=s>>16&255;a[d++]=a[c++]=s>>24&255;a[d++]=a[c++]=t&255;a[d++]=a[c++]=t>>8&255;a[d++]=a[c++]=0;a[d++]=a[c++]=0;a[c++]=r&255;a[c++]=r>>8&255;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=\n0;a[c++]=0;a[c++]=k&255;a[c++]=k>>8&255;a[c++]=k>>16&255;a[c++]=k>>24&255;if(Q=b.a.filename)if(H)a.set(Q,d),a.set(Q,c),d+=t,c+=t;else for(g=0;g<t;++g)a[d++]=a[c++]=Q[g];if(z=b.a.extraField)if(H)a.set(z,d),a.set(z,c),d+=0,c+=0;else for(g=0;g<r;++g)a[d++]=a[c++]=z[g];if(A=b.a.comment)if(H)a.set(A,c),c+=r;else for(g=0;g<r;++g)a[c++]=A[g];if(H)a.set(b.buffer,d),d+=b.buffer.length;else{g=0;for(J=b.buffer.length;g<J;++g)a[d++]=b.buffer[g]}}a[f++]=Oa[0];a[f++]=Oa[1];a[f++]=Oa[2];a[f++]=Oa[3];a[f++]=0;a[f++]=\n0;a[f++]=0;a[f++]=0;a[f++]=C&255;a[f++]=C>>8&255;a[f++]=C&255;a[f++]=C>>8&255;a[f++]=p&255;a[f++]=p>>8&255;a[f++]=p>>16&255;a[f++]=p>>24&255;a[f++]=l&255;a[f++]=l>>8&255;a[f++]=l>>16&255;a[f++]=l>>24&255;r=this.d?this.d.length:0;a[f++]=r&255;a[f++]=r>>8&255;if(this.d)if(H)a.set(this.d,f);else{g=0;for(J=r;g<J;++g)a[f++]=this.d[g]}return a};function Qa(e,b){var a,d=e[2]&65535|2;a=d*(d^1)>>8&255;Pa(e,b);return a^b}\nfunction Pa(e,b){e[0]=(V[(e[0]^b)&255]^e[0]>>>8)>>>0;e[1]=(6681*(20173*(e[1]+(e[0]&255))>>>0)>>>0)+1>>>0;e[2]=(V[(e[2]^e[1]>>>24)&255]^e[2]>>>8)>>>0};function Ra(e,b){var a,d,c,f;if(Object.keys)a=Object.keys(b);else for(d in a=[],c=0,b)a[c++]=d;c=0;for(f=a.length;c<f;++c)d=a[c],G(e+\".\"+d,b[d])};G(\"Zlib.Zip\",$);G(\"Zlib.Zip.prototype.addFile\",$.prototype.m);G(\"Zlib.Zip.prototype.compress\",$.prototype.g);G(\"Zlib.Zip.prototype.setPassword\",$.prototype.q);Ra(\"Zlib.Zip.CompressionMethod\",{STORE:0,DEFLATE:8});Ra(\"Zlib.Zip.OperatingSystem\",{MSDOS:0,UNIX:3,MACINTOSH:7});}).call(this);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction vnode(sel, data, children, text, elm) {\n    var key = data === undefined ? undefined : data.key;\n    return { sel: sel, data: data, children: children,\n        text: text, elm: elm, key: key };\n}\nexports.vnode = vnode;\nexports.default = vnode;\n//# sourceMappingURL=vnode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction updateClass(oldVnode, vnode) {\n    var cur, name, elm = vnode.elm, oldClass = oldVnode.data.class, klass = vnode.data.class;\n    if (!oldClass && !klass)\n        return;\n    if (oldClass === klass)\n        return;\n    oldClass = oldClass || {};\n    klass = klass || {};\n    for (name in oldClass) {\n        if (!klass[name]) {\n            elm.classList.remove(name);\n        }\n    }\n    for (name in klass) {\n        cur = klass[name];\n        if (cur !== oldClass[name]) {\n            elm.classList[cur ? 'add' : 'remove'](name);\n        }\n    }\n}\nexports.classModule = { create: updateClass, update: updateClass };\nexports.default = exports.classModule;\n//# sourceMappingURL=class.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar raf = (typeof window !== 'undefined' && window.requestAnimationFrame) || setTimeout;\nvar nextFrame = function (fn) { raf(function () { raf(fn); }); };\nvar reflowForced = false;\nfunction setNextFrame(obj, prop, val) {\n    nextFrame(function () { obj[prop] = val; });\n}\nfunction updateStyle(oldVnode, vnode) {\n    var cur, name, elm = vnode.elm, oldStyle = oldVnode.data.style, style = vnode.data.style;\n    if (!oldStyle && !style)\n        return;\n    if (oldStyle === style)\n        return;\n    oldStyle = oldStyle || {};\n    style = style || {};\n    var oldHasDel = 'delayed' in oldStyle;\n    for (name in oldStyle) {\n        if (!style[name]) {\n            if (name[0] === '-' && name[1] === '-') {\n                elm.style.removeProperty(name);\n            }\n            else {\n                elm.style[name] = '';\n            }\n        }\n    }\n    for (name in style) {\n        cur = style[name];\n        if (name === 'delayed' && style.delayed) {\n            for (var name2 in style.delayed) {\n                cur = style.delayed[name2];\n                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {\n                    setNextFrame(elm.style, name2, cur);\n                }\n            }\n        }\n        else if (name !== 'remove' && cur !== oldStyle[name]) {\n            if (name[0] === '-' && name[1] === '-') {\n                elm.style.setProperty(name, cur);\n            }\n            else {\n                elm.style[name] = cur;\n            }\n        }\n    }\n}\nfunction applyDestroyStyle(vnode) {\n    var style, name, elm = vnode.elm, s = vnode.data.style;\n    if (!s || !(style = s.destroy))\n        return;\n    for (name in style) {\n        elm.style[name] = style[name];\n    }\n}\nfunction applyRemoveStyle(vnode, rm) {\n    var s = vnode.data.style;\n    if (!s || !s.remove) {\n        rm();\n        return;\n    }\n    if (!reflowForced) {\n        getComputedStyle(document.body).transform;\n        reflowForced = true;\n    }\n    var name, elm = vnode.elm, i = 0, compStyle, style = s.remove, amount = 0, applied = [];\n    for (name in style) {\n        applied.push(name);\n        elm.style[name] = style[name];\n    }\n    compStyle = getComputedStyle(elm);\n    var props = compStyle['transition-property'].split(', ');\n    for (; i < props.length; ++i) {\n        if (applied.indexOf(props[i]) !== -1)\n            amount++;\n    }\n    elm.addEventListener('transitionend', function (ev) {\n        if (ev.target === elm)\n            --amount;\n        if (amount === 0)\n            rm();\n    });\n}\nfunction forceReflow() {\n    reflowForced = false;\n}\nexports.styleModule = {\n    pre: forceReflow,\n    create: updateStyle,\n    update: updateStyle,\n    destroy: applyDestroyStyle,\n    remove: applyRemoveStyle\n};\nexports.default = exports.styleModule;\n//# sourceMappingURL=style.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction updateProps(oldVnode, vnode) {\n    var key, cur, old, elm = vnode.elm, oldProps = oldVnode.data.props, props = vnode.data.props;\n    if (!oldProps && !props)\n        return;\n    if (oldProps === props)\n        return;\n    oldProps = oldProps || {};\n    props = props || {};\n    for (key in oldProps) {\n        if (!props[key]) {\n            delete elm[key];\n        }\n    }\n    for (key in props) {\n        cur = props[key];\n        old = oldProps[key];\n        if (old !== cur && (key !== 'value' || elm[key] !== cur)) {\n            elm[key] = cur;\n        }\n    }\n}\nexports.propsModule = { create: updateProps, update: updateProps };\nexports.default = exports.propsModule;\n//# sourceMappingURL=props.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xmlNS = 'http://www.w3.org/XML/1998/namespace';\nvar colonChar = 58;\nvar xChar = 120;\nfunction updateAttrs(oldVnode, vnode) {\n    var key, elm = vnode.elm, oldAttrs = oldVnode.data.attrs, attrs = vnode.data.attrs;\n    if (!oldAttrs && !attrs)\n        return;\n    if (oldAttrs === attrs)\n        return;\n    oldAttrs = oldAttrs || {};\n    attrs = attrs || {};\n    // update modified attributes, add new attributes\n    for (key in attrs) {\n        var cur = attrs[key];\n        var old = oldAttrs[key];\n        if (old !== cur) {\n            if (cur === true) {\n                elm.setAttribute(key, \"\");\n            }\n            else if (cur === false) {\n                elm.removeAttribute(key);\n            }\n            else {\n                if (key.charCodeAt(0) !== xChar) {\n                    elm.setAttribute(key, cur);\n                }\n                else if (key.charCodeAt(3) === colonChar) {\n                    // Assume xml namespace\n                    elm.setAttributeNS(xmlNS, key, cur);\n                }\n                else if (key.charCodeAt(5) === colonChar) {\n                    // Assume xlink namespace\n                    elm.setAttributeNS(xlinkNS, key, cur);\n                }\n                else {\n                    elm.setAttribute(key, cur);\n                }\n            }\n        }\n    }\n    // remove removed attributes\n    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)\n    // the other option is to remove all attributes with value == undefined\n    for (key in oldAttrs) {\n        if (!(key in attrs)) {\n            elm.removeAttribute(key);\n        }\n    }\n}\nexports.attributesModule = { create: updateAttrs, update: updateAttrs };\nexports.default = exports.attributesModule;\n//# sourceMappingURL=attributes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CAPS_REGEX = /[A-Z]/g;\nfunction updateDataset(oldVnode, vnode) {\n    var elm = vnode.elm, oldDataset = oldVnode.data.dataset, dataset = vnode.data.dataset, key;\n    if (!oldDataset && !dataset)\n        return;\n    if (oldDataset === dataset)\n        return;\n    oldDataset = oldDataset || {};\n    dataset = dataset || {};\n    var d = elm.dataset;\n    for (key in oldDataset) {\n        if (!dataset[key]) {\n            if (d) {\n                if (key in d) {\n                    delete d[key];\n                }\n            }\n            else {\n                elm.removeAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase());\n            }\n        }\n    }\n    for (key in dataset) {\n        if (oldDataset[key] !== dataset[key]) {\n            if (d) {\n                d[key] = dataset[key];\n            }\n            else {\n                elm.setAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase(), dataset[key]);\n            }\n        }\n    }\n}\nexports.datasetModule = { create: updateDataset, update: updateDataset };\nexports.default = exports.datasetModule;\n//# sourceMappingURL=dataset.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction invokeHandler(handler, vnode, event) {\n    if (typeof handler === \"function\") {\n        // call function handler\n        handler.call(vnode, event, vnode);\n    }\n    else if (typeof handler === \"object\") {\n        // call handler with arguments\n        if (typeof handler[0] === \"function\") {\n            // special case for single argument for performance\n            if (handler.length === 2) {\n                handler[0].call(vnode, handler[1], event, vnode);\n            }\n            else {\n                var args = handler.slice(1);\n                args.push(event);\n                args.push(vnode);\n                handler[0].apply(vnode, args);\n            }\n        }\n        else {\n            // call multiple handlers\n            for (var i = 0; i < handler.length; i++) {\n                invokeHandler(handler[i]);\n            }\n        }\n    }\n}\nfunction handleEvent(event, vnode) {\n    var name = event.type, on = vnode.data.on;\n    // call event handler(s) if exists\n    if (on && on[name]) {\n        invokeHandler(on[name], vnode, event);\n    }\n}\nfunction createListener() {\n    return function handler(event) {\n        handleEvent(event, handler.vnode);\n    };\n}\nfunction updateEventListeners(oldVnode, vnode) {\n    var oldOn = oldVnode.data.on, oldListener = oldVnode.listener, oldElm = oldVnode.elm, on = vnode && vnode.data.on, elm = (vnode && vnode.elm), name;\n    // optimization for reused immutable handlers\n    if (oldOn === on) {\n        return;\n    }\n    // remove existing listeners which no longer used\n    if (oldOn && oldListener) {\n        // if element changed or deleted we remove all existing listeners unconditionally\n        if (!on) {\n            for (name in oldOn) {\n                // remove listener if element was changed or existing listeners removed\n                oldElm.removeEventListener(name, oldListener, false);\n            }\n        }\n        else {\n            for (name in oldOn) {\n                // remove listener if existing listener removed\n                if (!on[name]) {\n                    oldElm.removeEventListener(name, oldListener, false);\n                }\n            }\n        }\n    }\n    // add new listeners which has not already attached\n    if (on) {\n        // reuse existing listener or create new\n        var listener = vnode.listener = oldVnode.listener || createListener();\n        // update vnode for listener\n        listener.vnode = vnode;\n        // if element changed or added we add all needed listeners unconditionally\n        if (!oldOn) {\n            for (name in on) {\n                // add listener if element was changed or new listeners added\n                elm.addEventListener(name, listener, false);\n            }\n        }\n        else {\n            for (name in on) {\n                // add listener if new listener added\n                if (!oldOn[name]) {\n                    elm.addEventListener(name, listener, false);\n                }\n            }\n        }\n    }\n}\nexports.eventListenersModule = {\n    create: updateEventListeners,\n    update: updateEventListeners,\n    destroy: updateEventListeners\n};\nexports.default = exports.eventListenersModule;\n//# sourceMappingURL=eventlisteners.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vnode_1 = require(\"./vnode\");\nvar is = require(\"./is\");\nfunction addNS(data, children, sel) {\n    data.ns = 'http://www.w3.org/2000/svg';\n    if (sel !== 'foreignObject' && children !== undefined) {\n        for (var i = 0; i < children.length; ++i) {\n            var childData = children[i].data;\n            if (childData !== undefined) {\n                addNS(childData, children[i].children, children[i].sel);\n            }\n        }\n    }\n}\nfunction h(sel, b, c) {\n    var data = {}, children, text, i;\n    if (c !== undefined) {\n        data = b;\n        if (is.array(c)) {\n            children = c;\n        }\n        else if (is.primitive(c)) {\n            text = c;\n        }\n        else if (c && c.sel) {\n            children = [c];\n        }\n    }\n    else if (b !== undefined) {\n        if (is.array(b)) {\n            children = b;\n        }\n        else if (is.primitive(b)) {\n            text = b;\n        }\n        else if (b && b.sel) {\n            children = [b];\n        }\n        else {\n            data = b;\n        }\n    }\n    if (children !== undefined) {\n        for (i = 0; i < children.length; ++i) {\n            if (is.primitive(children[i]))\n                children[i] = vnode_1.vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&\n        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {\n        addNS(data, children, sel);\n    }\n    return vnode_1.vnode(sel, data, children, text, undefined);\n}\nexports.h = h;\n;\nexports.default = h;\n//# sourceMappingURL=h.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vnode_1 = require(\"./vnode\");\nvar htmldomapi_1 = require(\"./htmldomapi\");\nfunction toVNode(node, domApi) {\n    var api = domApi !== undefined ? domApi : htmldomapi_1.default;\n    var text;\n    if (api.isElement(node)) {\n        var id = node.id ? '#' + node.id : '';\n        var cn = node.getAttribute('class');\n        var c = cn ? '.' + cn.split(' ').join('.') : '';\n        var sel = api.tagName(node).toLowerCase() + id + c;\n        var attrs = {};\n        var children = [];\n        var name_1;\n        var i = void 0, n = void 0;\n        var elmAttrs = node.attributes;\n        var elmChildren = node.childNodes;\n        for (i = 0, n = elmAttrs.length; i < n; i++) {\n            name_1 = elmAttrs[i].nodeName;\n            if (name_1 !== 'id' && name_1 !== 'class') {\n                attrs[name_1] = elmAttrs[i].nodeValue;\n            }\n        }\n        for (i = 0, n = elmChildren.length; i < n; i++) {\n            children.push(toVNode(elmChildren[i], domApi));\n        }\n        return vnode_1.default(sel, { attrs: attrs }, children, undefined, node);\n    }\n    else if (api.isText(node)) {\n        text = api.getTextContent(node);\n        return vnode_1.default(undefined, undefined, undefined, text, node);\n    }\n    else if (api.isComment(node)) {\n        text = api.getTextContent(node);\n        return vnode_1.default('!', {}, [], text, node);\n    }\n    else {\n        return vnode_1.default('', {}, [], undefined, node);\n    }\n}\nexports.toVNode = toVNode;\nexports.default = toVNode;\n//# sourceMappingURL=tovnode.js.map","\nvar content = require(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\", function() {\n\t\tvar newContent = require(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body {\\n  min-height: 100%;\\n  max-height: 100%;\\n  height: 100%;\\n  width: 100%;\\n  padding: 0;\\n  margin: 0;\\n}\\ndiv {\\n  box-sizing: border-box;\\n}\\n\\ndiv.frame {\\n  display:flex;\\n  justify-content: center;\\n  min-height: 100%;\\n  max-height: 100%;\\n  width: 100%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin: 0;\\n  background-color: #c9d5de;\\n}\\ndiv.frame>div{\\n    max-width:940px;\\n}\\ndiv.frame>div.ModalWindow{\\n    max-width:100%;\\n}\\n\\ndiv.footer {\\n  position: fixed;\\n  bottom: 0;\\n  height: 3em;\\n  width: 100%;\\n  border: solid 0px red;\\n  padding: 0.5em;\\n  z-index: 500;\\n  color: white;\\n  background-color: #2c3440\\n}\\n\\ndiv.copyright {\\ncolor: #266abd;\\n  width: 100%;\\n  padding: 0.5em;\\n  text-align: center;\\n  letter-spacing: 10px;\\n  font-size: 0.8em;\\n}\\n\\ndiv.header {\\n  position: fixed;\\n  top: 0;\\n  height: 4.5em;\\n  width: 100%;\\n  border: solid 1px #052240;\\n  border-bottom-width: 3.2em;\\n  z-index: 500;\\n  background-color: #e8eeef;\\n}\\n\\ndiv.title {\\n  font-size: 2em;\\n  font-weight: bold;\\n  padding: 0.5em 0.9em ;\\n  line-height: 0.5em;\\n  color: #1664a2;\\n}\\n\\ndiv.title span.Version {\\n  font-size: 40%;\\n  font-weight: bold;\\n  padding: 0em;\\n  color: rgb(0, 232, 249);\\n}\\n\\ndiv.title:after {\\n  font-size: 0.4em;\\n  padding: 0.5em;\\n  font-weight: normal;\\n  content: \\\":The Images Converter For Book Made By Copy Machine!\\\";\\n  color: #2196f3\\n}\\n\\ndiv.FileUploadArea input {\\n  position: absolute;\\n  left: -100;\\n}\\n\\ndiv.FileUploadArea {\\n  display: block;\\n  min-height: 10em;\\n  height: 20em;\\n  width: 100%;\\n  border: dotted 1px black;\\n  background-color: #a8bae0;\\n  padding: 0.1em;\\n}\\n\\ndiv.FileUploadArea>div.FileUploadAreaA {\\n  display: block;\\n  min-height: 9.8em;\\n  ;\\n  height: 9.8em;\\n  width: 100%;\\n  border: dotted 3px rgb(100, 94, 153);\\n  background-color: #a8bae0;\\n  padding-top: 4em;\\n  padding-bottom: 4em;\\n  text-align: center;\\n  color: rgb(100, 94, 153);\\n  font-size: 2em;\\n}\\n\\ninput.FileUploadFile {\\n  position: absolute;\\n  top: -10em;\\n  left: 10em;\\n  visibility: hidden;\\n}\\n\\ndiv.FilesArea {\\n  min-height: 100%;\\n  width: 100%;\\n  border: dotted 1px black;\\n  background-color: rgb(52, 158, 226);\\n  padding-top: 0.2em;\\n  padding-bottom: 0.2em;\\n  text-align: center;\\n  font-size: 2em;\\n}\\n\\ndiv.FilesArea>div {\\n  min-width: 470px;\\n}\\n\\nspan.imageDataLine {\\n  display: inline-block;\\n  font-size: 50%;\\n  padding: 0.2em;\\n}\\n\\ndiv.delButton {\\n  display: inline-block;\\n  font-size: 50%;\\n  width: 3em;\\n  padding: 0.2em;\\n  line-height: 1em;\\n  text-align: center;\\n  cursor: pointer;\\n  background-color: #675275;\\n}\\n\\ndiv.delButton:active {\\n  color: red;\\n}\\n\\ndiv.delButton:hover {\\n  color: #d48a60;\\n  background-color: #7b4f99;\\n}\\n\\ncanvas.hidden {\\n  position: absolute;\\n  top: -10000px;\\n}\\n\\n[draggable] {\\n  user-select: none;\\n}\\n\\n.column {\\n  height: 150px;\\n  width: 150px;\\n  float: left;\\n  border: 2px solid #666666;\\n  background-color: #ccc;\\n  margin-right: 5px;\\n  border-radius: 10px;\\n  box-shadow: inset 0 0 3px #000;\\n  text-align: center;\\n  cursor: move;\\n}\\n\\n.column.over {\\n  border: 2px dashed #000;\\n}\\n\\n.column header {\\n  color: #fff;\\n  text-shadow: #000 0 1px;\\n  box-shadow: 5px;\\n  border-bottom: 1px solid #ddd;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n}\\n\\n.FilesArea>div {\\n  width: 100%;\\n  min-width: 630px;\\n  display: flex;\\n  flex-wrap: nowrap;\\n  flex-direction: row;\\n}\\n\\n.FilesArea>div>div {\\n  display: flex;\\n  min-width: 115px;\\n  overflow: hidden;\\n}\\n\\n.FilesArea>div>div.PageImages {\\n  min-width: 225px;\\n  width: 225px;\\n  max-width: 50%;\\n}\\n\\n.FilesArea>div>div.ImageDetail {\\n  width:100%;\\n  /* max-width: calc(100% - 320px); */\\n}\\n\\n.ImageDetail>div {\\n  width: 100%;\\n}\\n\\n.ImageDetail .ImageDetailA {\\n  width: 100%;\\n}\\n\\n.ImageDetail .ImageDetailTitle {\\n  position: relative;\\n  font-size: 12px;\\n  background-color: #44cec7;\\n  text-align: left;\\n  padding: 10px;\\n  width: 100%;\\n  z-index: 900;\\n  display:flex;;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n}\\n.ImageDetail .ImageDetailTitle>div {\\n  width:40px;\\n  padding:0.5em;\\n  border-radius: 5px;\\n  background-color: gray;\\n  color:white;\\n  margin: 0.2em;\\n  margin-left: 0.5em;\\n  text-align: center;\\n  cursor:pointer;\\n}\\n.ImageDetail .ImageDetailTitle>div.active {\\n  background-color: black;\\n  color:white;\\n  font-weight: bold;\\n}\\n.image_detail_block.WINDOW>div>img{\\n  max-width:100%;\\n}\\n.image_detail_block.DOUBLE>div>img{\\n  max-width:200%;\\n}\\n.image_detail_block.QUAD>div>img{\\n  max-width:400%;\\n}\\n.image_detail_block.HELF>div>img{\\n  max-width:50%;\\n}\\n.image_detail_block.FULL>div:first-child{\\n  position:fixed;\\n  z-index: 9999;\\n  min-width:100%;\\n  min-height:100%;\\n  top:0;\\n  left:0;\\n  background-color: rgba(17, 19, 21, 0.44);\\n}\\n.image_detail_block.FULL>div>img{\\n  position:fixed;\\n  z-index: 10000;\\n  top:5px;\\n  left:5px;\\n  width:calc(100% - 10px);\\n  cursor: pointer;\\n}\\n.Thumnails {\\n  flex-direction: column;\\n  padding-right: 0.2em;\\n  background-color: rgba(200, 200, 200, 0);\\n}\\n\\n.Thumnails .thumbnails_block {\\n  padding: 1px;\\n  background-color: rgba(220, 220, 220, 1);\\n  border: 0px dotted #cad2b1;\\n  height: 100%;\\n}\\n\\n.Thumnails .thumbnails_block.over {\\n  background-color: rgba(190, 190, 190, 0.8);\\n  border: 2px dotted #cad2b1;\\n}\\n\\n.thumbnail_block {\\n  display: flex;\\n  flex-direction: column;\\n  background-color: rgb(182, 175, 209);\\n  border: 1px solid #fdd;\\n  width: 110px;\\n  height: 110px;\\n  cursor: pointer;\\n  background-repeat: no-repeat;\\n  background-size: 110, 110, contain;\\n  background-position: center;\\n  margin-bottom: 1.8em;\\n}\\n\\n.thumnailsImageArea .thumbnail_block {}\\n\\n.thumbnail_block.over {\\n  background-color: #0bd5d8;\\n  width: 110px;\\n  border: 2px dotted #cad2b1;\\n}\\n\\n.thumbnail_block span.delButton {\\n  width: 30px;\\n  height:30px;\\n  margin-bottom: 77px;\\n}\\n\\n.thumbnail_block div {\\n  display: flex;\\n  height: auto;\\n  margin: auto;\\n}\\n\\n.thumbnail_block div.page_block {\\n  height: 110px;\\n}\\n\\n.thumbnail_block div.options_block {\\n  height: 5px;\\n  font-size: 0.2em;\\n  padding: 0.2em;\\n}\\n\\n.thumbnail_block div.options_block .checkForceColor.enable {\\n  background-color: rgb(236, 145, 145);\\n}\\n\\n.thumbnail_block div.options_block .checkForceColor.disable {\\n  background-color: rgb(241, 241, 241);\\n}\\n\\n.thumbnail_block div.options_block .checkNoCropping.enable {\\n  background-color: rgb(233, 220, 134);\\n}\\n\\n.thumbnail_block div.options_block .checkNoCropping.disable {\\n  background-color: rgb(241, 241, 241);\\n}\\n\\n.thumbnail_block div.options_block .checkForceColor.enable::after, .thumbnail_block div.options_block .checkNoCropping.enable::after {\\n  content: \\\"On\\\";\\n  color: black;\\n}\\n\\n.thumbnail_block div.options_block .checkForceColor.disable::after, .thumbnail_block div.options_block .checkNoCropping.disable::after {\\n  content: \\\"Off\\\";\\n  color: gray;\\n}\\n\\n.thumbnail_text {\\n  display: block;\\n  background-color: rgb(0, 103, 135);\\n  border: 0 solid #fdd;\\n  color: rgb(189, 193, 201);\\n  font-size: 0.3em;\\n  padding: 0.3em;\\n  min-height: 50px;\\n}\\n\\n.image_detail_block {\\n  position: relative;\\n  top: -10px;\\n  left: -30px;\\n}\\n\\n.ProgressBar, .Preview {\\n  top: 0;\\n  left: 0;\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(118, 118, 118, 0.80);\\n  z-index: 1001;\\n  display: none;\\n}\\n\\n.ProgressBar>div {\\n  position: fixed;\\n  top: 50%;\\n  left: 5%;\\n  margin: 0 auto;\\n  width: 90%;\\n  height: 7em;\\n  background-color: rgba(238, 118, 238, 1);\\n  z-index: 1000;\\n  padding: 10px\\n}\\n\\n.ProgressBar>div .progeressTitle {\\n  padding-bottom: 5px;\\n}\\n\\n.ProgressBar>div .progeressFrame {\\n  margin: 0 auto;\\n  width: 95%;\\n  height: 3em;\\n  background-color: rgb(193, 165, 200);\\n  z-index: 1000;\\n  padding: 0px\\n}\\n\\n.ProgressBar>div .progeressInfo {\\n  padding-top: 5px;\\n}\\n\\n.ProgressBar>div .progeressInfo>div {\\n  width: 70%;\\n  float: left;\\n}\\n\\n.ProgressBar>div .progeressInfo>div.progeressPoints {\\n  width: 5em;\\n}\\n\\n.progeress {\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  height: 3em;\\n  background-color: rgb(120, 231, 194);\\n}\\n\\n.Preview>div {\\n  position: fixed;\\n  top: 2%;\\n  left: 2%;\\n  margin: 0 auto;\\n  width: 96%;\\n  height: 96%;\\n  background-color: rgb(197, 206, 213);\\n  z-index: 1000;\\n  padding: 0px\\n}\\n\\n.Preview>div div.img {\\n  max-width: 100%;\\n  max-height: calc(100% - 72px);\\n}\\n.Preview>div div.img.right {\\n  text-align: left;\\n}\\n.Preview>div div.img.left {\\n  text-align: right;\\n}\\n.Preview>div div.img>img {\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n\\n.Preview>div .previewLeft, .Preview>div .previewRight {\\n  cursor: pointer;\\n  padding: 10px;\\n  background-color: rgba(95, 161, 212, 0.58);\\n}\\n.Preview>div .previewLeft>.Dummy, .Preview>div .previewRight>.close {\\n  display: inline-block;\\n  width:1em;\\n  height:1em;\\n}\\n\\n.Preview>div .previewInfo {\\n  font-size: 60%;\\n  padding: 10px 10px 0 10px;\\n  color: rgb(43, 176, 218)\\n}\\n\\n.Preview>div .preview_dual {\\n  display: flex;\\n}\\n\\n.Preview>div .preview_dual .previewImageFrame {\\n  width: 50%;\\n}\\n.Preview>div .previewImageFrame {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.previewInfo .options {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-top: 0.2em;\\n}\\n\\n.previewInfo .options>div {\\n  width: 10em;\\n  padding: 0.2em 0.2em 0.2em 0.2em;\\n  cursor: pointer;\\n  font-size: 0.7em;\\n  color: rgb(29, 154, 114);\\n}\\n\\n.previewInfo .options .checkForceColor.enable {\\n  background-color: rgb(236, 145, 145);\\n}\\n\\n.previewInfo .options .checkForceColor.disable {\\n  background-color: rgb(241, 241, 241);\\n}\\n\\n.previewInfo .options .checkNoCropping.enable {\\n  background-color: rgb(233, 220, 134);\\n}\\n\\n.previewInfo .options .checkNoCropping.disable {\\n  background-color: rgb(241, 241, 241);\\n}\\n\\n.previewInfo .options .checkForceColor.enable::after, .previewInfo .options .checkNoCropping.enable::after {\\n  content: \\\"On\\\";\\n  color: black;\\n}\\n\\n.previewInfo .options .checkForceColor.disable::after, .previewInfo .options .checkNoCropping.disable::after {\\n  content: \\\"Off\\\";\\n  color: gray;\\n}\\n\\n.Preview>div .preview_dual .previewImageFrame.dummy {\\n  background-color: rgb(174, 181, 184);\\n}\\n\\n.TitleSettings {\\n  background-color: rgb(159, 117, 242);\\n  padding: 0.5em;\\n  margin: 0.1em 0;\\n  margin-top: 1em;\\n}\\n\\n.TitleSettingsTitle {\\n  padding: 0.3em;\\n  margin-bottom: 0.3em;\\n  font-weight: bold;\\n  font-size: 110%;\\n  width: 100%;\\n  text-align: center;\\n  background-color: rgb(139, 87, 242);\\n}\\n\\n.TitleSettingsFrame {\\n  display: flex;\\n}\\n\\n.TitleSettingsFrame>div {\\n  width: 50%;\\n}\\n\\n.TitleSettingsRow>span, .TitleSettingsRow>input {\\n  display: inline-flex;\\n  width: 40%;\\n}\\n\\n.TitleSettingsUpdate {\\n  width: 70%;\\n  background-color: rgb(3, 21, 186);\\n  color: white;\\n  font-weight: bold;\\n  text-align: center;\\n  margin: 0.5em auto;\\n  padding: 0.5em;\\n  border-radius: 1em;\\n  cursor: pointer;\\n}\\n\\n.previewFrame {\\n  display: flex;\\n}\\n.previewFrame.right {\\n  justify-content: right;\\n}\\n.previewFrame.left {\\n  justify-content: left;\\n}\\n\\n.previewFrame>div.button {\\n  width: 2em;\\n}\\n\\n.previewFrame>div.button span.button {\\n  display: block;\\n  width: 20px;\\n  text-align: center;\\n}\\n\\n.previewFrame>div.button span.button.symbol {\\n  font-size: 150%;\\n}\\n\\n.previewFrame>div.button span.button.text {\\n  font-size: 50%;\\n}\\n.previewFrame>div.button span.button.dummy {\\n  font-size: 100%;\\n  height:25px;\\n}\\n\\n.previewFrame>div.button span.button.close {\\n  font-size: 85%;\\n  font-weight: bold;\\n  text-align: center;\\n  background-color: #2d3031;\\n  color: #babdce;\\n  height:35px;\\n  width:35px;\\n  border-radius: 22px;\\n  border: 5px solid #babdce;\\n  margin-top:-18px;\\n  margin-right:-18px;\\n  margin-bottom:3px;\\n  margin-left:18px;\\n}\\n.previewFrame>div.button span.button.close:hover {\\n  color: white;\\n  border: 5px solid white;\\n}\\n\\n\\n.previewCallButton {\\n  width: 110px;\\n  background-color: #0b47b5;\\n  font-size: 50%;\\n  padding: 10px;\\n  margin: 1px;\\n  cursor: pointer;\\n  border-radius: 5px;\\n}\\n\\n.previewCallButton:hover {\\n  background-color: #072763;\\n  color: #9a98de;\\n  font-weight: bold;\\n}\\n\\n.pageFrameHeader {\\n  font-size: 60%;\\n  background-color: rgb(4, 29, 56);\\n  color: white;\\n  padding: 5px;\\n}\\n\\n.pageFrameHeaderLeft {\\n  text-align: left;\\n}\\n\\n.pageFrameHeaderRight {\\n  text-align: right;\\n}\\n\\n.PageFrame {\\n  display: inline-block;\\n  display: flex;\\n  background-color: rgb(90, 123, 144);\\n  width: 220px;\\n  height: 150px;\\n  font-size: 1em;\\n  margin: 0.1em auto;\\n  padding: 0.1em 0em;\\n}\\n\\n.PageFrame .Page {\\n  width: 110px;\\n  border: 2px solid rgb(126, 100, 113);\\n  background-color: rgb(172, 148, 185);\\n  height: 140px;\\n  margin: 0.0em auto;\\n}\\n\\n.PageFrame .Dummy {\\n  background-color: rgb(108, 110, 115);\\n  color: rgb(108, 110, 115);\\n}\\n\\n.PageFrame .Page .thumbnail_block {\\n  height: 110px;\\n  width: 106px;\\n  margin: 0.0em auto;\\n  background-color: rgb(227, 209, 238);\\n}\\n\\n.thumbnail_block .image_block {\\n  height: 110px;\\n  width: 106px;\\n  margin: 0.0em auto;\\n  background-color: rgb(227, 209, 238);\\n  cursor: pointer;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n  background-position: center;\\n}\\n\\n.ExportArea .ExportArea {\\n  background-color: rgb(195, 240, 204);\\n  border: 1px solid rgb(87, 158, 17);\\n  padding: 1em;\\n  margin-bottom: 0.2em;\\n}\\n\\n.ExportOrdrList .ExportOrdersListTitle {\\n  background-color: rgb(162, 233, 176);\\n  padding: 10px;\\n  margin-bottom: 0.3em;\\n}\\n\\n.ExportOrdrList .ExportOrdrListFrame {\\n  background-color: rgb(222, 232, 219);\\n  padding: 15px;\\n  border: 1px solid rgb(87, 158, 17);\\n  margin-bottom: 0.5em;\\n}\\n\\n.ExportOrdrList .ExportOrdrs {\\n  margin-bottom: 0.5em;\\n}\\n\\n.ExportButtons {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n}\\n\\ndiv.button>div.exportedState {\\n  background-color: rgb(148, 222, 164);\\n  padding: 0.2em;\\n  font-size: 60%;\\n  max-width:100%;\\n  word-wrap: break-word;\\n}\\n\\n.ExportButtons>div {\\n  display: flex;\\n  width: 144px;\\n  padding: 15px;\\n  margin: 2px;\\n  border: 1px solid rgb(87, 158, 17);\\n  cursor: pointer;\\n  border-radius: 3px;\\n  background-color: rgb(141, 233, 159);\\n}\\n\\n.ExportButtons>div>div{\\n  max-width:100%;\\n}\\n\\ndiv.DownloadLastExportZipButtonFrame, div.DownloadLastExportPdfButtonFrame, div.DownloadUploadedImgZipButtonFrame, div.DownloadFullBackupZipButtonFrame {\\n  padding: 0em;\\n}\\n\\ndiv.button.disable, div.button.enable {\\n  background-color: rgb(104, 131, 116);\\n  padding: 1em;\\n  margin: 0em;\\n  width: 100%;\\n}\\n\\ndiv.button.enable {\\n  background-color: rgb(148, 219, 86);\\n}\\n\\n.ExportArea .ExportAreaTitle {\\n  margin-bottom: 0.2em;\\n  text-align: center;\\n  padding: 0.3em;\\n  font-weight: bold;\\n  background-color: rgb(151, 238, 143);\\n}\\n\\n.ExportArea .ExportOrdrs>div {\\n  margin: 0.1em;\\n  padding: 0.4em;\\n  padding-left: 2em;\\n  border: 1px solid #aaa;\\n  cursor: pointer;\\n  background-color: rgb(232, 242, 229);\\n}\\n\\n.ExportArea .ExportOrdrs>div:active {\\n  border: 1px solid #666;\\n  background-color: rgb(242, 252, 239);\\n}\\n\\n.ExportArea .ExportOrdrs>div:hover {\\n  border: 1px solid #999;\\n  background-color: rgb(237, 247, 234);\\n}\\n\\n.ExportArea .ExportOrdrs>div.active {\\n  font-weight: bold;\\n  color: rgb(223, 238, 218);\\n  background-color: rgb(70, 187, 35);\\n}\\n\\n.ExportArea .ExportOrdrs>label {\\n  display: inline-block;\\n  line-height: 2em;\\n  margin: 0.1em;\\n  padding: 0.4em 0.6em;\\n  border: 0px solid #aaa;\\n  cursor: pointer;\\n  background-color: rgb(232, 242, 229);\\n}\\n\\n.ExportArea .ExportOrdrs>label:active {\\n  background-color: rgb(174, 223, 160);\\n}\\n\\n.ExportArea .ExportOrdrs>label:hover {\\n  background-color: rgb(237, 247, 234);\\n}\\n\\n.TitleMng {\\n  padding: 10px;\\n  background-color: rgb(255, 165, 162);\\n}\\n\\n.TitleMng .name {\\n  padding-top: 0.5em;\\n  padding-bottom: 0.5em;\\n  font-weight: bold;\\n  background-color: rgb(255, 113, 82);\\n}\\n\\n.TitleMng>.StorageMeter {\\n  margin: 0.5em;\\n  padding: 0.5em;\\n  background-color: rgb(255, 155, 124);\\n}\\n\\n.TitleListFrame, .StorageInitializerFrame, .TitleMng>.TitleNewone {\\n  margin: 0.5em;\\n  padding: 0.5em;\\n  background-color: rgb(255, 155, 124);\\n}\\n\\n.TitleMng .StorageMeterFrame, .StorageInitializerFrame {\\n  display: flex;\\n  padding: 0.1em;\\n  height: 2em;\\n}\\n\\n.TitleMng .StorageMeterFrame div.StorageMeter {\\n  line-height: 1.8em;\\n  height: 2em;\\n  margin-right: 0.5em;\\n}\\n\\n.TitleMng .StorageMeterFrame span.button, .TitleRowRow .button, .TitleNewone .button, .StorageInitializerFrame div.button {\\n  display: inline-block;\\n  margin-left: 1em;\\n  background-color: gray;\\n  cursor: pointer;\\n  padding: 0.5em 2em;\\n  border-radius: 3px;\\n}\\n\\n.TitleMng .StorageMeterFrame span.button {\\n  padding: 0.2em 2em;\\n}\\n\\n.TitleRowRow>div, .StorageInitializerFrame>div {\\n  padding: 0.2em;\\n}\\n\\n.TitleNewoneRow {\\n  margin-left: 1em;\\n}\\n\\n.TitleRowRow {\\n  display: flex;\\n}\\ndiv#menu{\\n  position: fixed;\\n  top: 4.6em;\\n  z-index: 500;\\n  width: 100%;\\n}\\n.MenuFrame {\\n  display: flex;\\n  width: 100%;\\n  max-width: 940px;\\n  align-items: stretch;\\n}\\n\\n.MenuFrame a {\\n  flex-grow:0;\\n  display: inline-block;\\n  width: 20%;\\n  cursor: pointer;\\n  text-decoration: none;\\n  min-height: 2.5em;\\n  padding: 5px 10px;\\n  margin: 2px 1px 0 1px;\\n  border: 0px solid rgb(83, 122, 134);\\n  border-radius: 5px;\\n  background-color: rgb(170, 185, 210);\\n  color: rgb(222, 240, 222);\\n}\\n\\na.dummy {\\n  display: inline-block;\\n  width: 50px;\\n  text-decoration: none;\\n}\\n\\n.MenuFrame>a.MenuButton.active:nth-child(1) {\\n  background-color: rgb(249, 111, 52);\\n}\\n\\n.MenuFrame>a.MenuButton.active:nth-child(2) {\\n  background-color: rgb(104, 65, 199);\\n}\\n\\n.MenuFrame>a.MenuButton.active:nth-child(3) {\\n  background-color: rgb(72, 159, 222);\\n}\\n\\n.MenuFrame>a.MenuButton.active:nth-child(4) {\\n  background-color: rgb(123, 193, 68);\\n}\\n\\n.MenuFrame>a.MenuButton.active:nth-child(5) {\\n  background-color: rgb(80, 50, 60);\\n}\\n\\n.MenuFrame>a.MenuButton.active {\\n  font-weight: bold;\\n  border-width: 0;\\n}\\n\\nnav, div.scroll-container {\\n  display: block;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\ndiv.main-container {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\ndiv.main-container {\\n  position: absolute;\\n  top: 0;\\n  padding-top: 8em;\\n  height: 100%;\\n  padding-bottom: 3em;\\n}\\n\\ndiv.scroll-container {\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  scroll-behavior: smooth;\\n}\\n\\ndiv.Splash {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%;\\n  background-color: rgb(241, 253, 255);\\n  z-index: 1200;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n}\\n\\ndiv.Splash>div.splashTitle {\\n  width:360px;\\n  height:300px;\\n  background-color: #e8eeef;\\n  border: solid 1px #052240;\\n  padding:1em;\\n  border-bottom:203px solid #052240;\\n}\\n\\ndiv.Splash div.appTitle {\\n  color: #1664a2;\\n  font-size: 500%;\\n  padding-top: 30px;\\n  letter-spacing: -0.05em;\\n  padding-left: 1%;\\n  font-weight: bold;\\n}\\n\\ndiv.Splash div.appVerion {\\n  font-size: 100%;\\n  padding-top: 0%;\\n  padding-left: 50%;\\n  color: rgb(0, 232, 249);\\n}\\n\\ndiv.Splash div.message {\\n  font-size: 200%;\\n  padding-top: 10%;\\n}\\n\\ndiv.Splash div.message>div {\\n  text-align: center;\\n}\\n\\ndiv.loader {\\n  text-align: center;\\n  font-family: 'Nunito', sans-serif;\\n  font-size: 1em;\\n  color: transparent;\\n  letter-spacing: 0.01em;\\n}\\n\\n.loader span {\\n  text-shadow:\\n    0 0 2px rgba(204, 208, 212, 0.9),\\n    0 15px 25px rgba(0, 0, 0, 0.3),\\n    0 -2px 3px rgba(0, 0, 0, 0.1),\\n    0 -5px 10px rgba(255, 255, 255, 0.5),\\n    0 5px 10px rgba(0, 0, 0, 0.3),\\n    0 3px 4px rgba(255, 255, 255, 0.2),\\n    0 0 20px rgba(255, 255, 255, 0.45);\\n  animation: loading 0.95s ease-in-out infinite alternate;\\n}\\n\\n@keyframes loading {\\n  to {\\n    text-shadow:\\n      0 0 2px rgba(204, 208, 212, 0.2),\\n      0 0 3px rgba(0, 0, 0, 0.02),\\n      0 0 0 rgba(0, 0, 0, 0),\\n      0 0 0 rgba(255, 255, 255, 0),\\n      0 0 0 rgba(0, 0, 0, 0),\\n      0 0 0 rgba(255, 255, 255, 0),\\n      0 0 0 rgba(255, 255, 255, 0);\\n  }\\n}\\n\\n.loader span:nth-child(2) {\\n  animation-delay: 0.15s;\\n}\\n\\n.loader span:nth-child(3) {\\n  animation-delay: 0.30s;\\n}\\n\\n.loader span:nth-child(4) {\\n  animation-delay: 0.45s;\\n}\\n\\n.loader span:nth-child(5) {\\n  animation-delay: 0.60s;\\n}\\n\\n.loader span:nth-child(6) {\\n  animation-delay: 0.75s;\\n}\\n\\n.loader span:nth-child(7) {\\n  animation-delay: 0.90s;\\n}\\n\\n\\n#Dialog{\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: fixed;\\n  top:0;\\n  left: 0;\\n  z-index: 1200;\\n  width: 100%;\\n  height: 100%;\\n  background-color:rgba(10, 10, 10, 0.5);\\n}\\n#Dialog>div{\\n  width: 320px;\\n  height: 300px;\\n\\n  background-color:#dce4e8;\\n}\\n#Dialog>div div.dialogTitle{\\n  height:3em;\\n  padding:0.5em;\\n}\\n#Dialog>div div.dialogInfo{\\n  height:13em;\\n  padding:0.5em;\\n}\\n#Dialog>div div.dialogDeside{\\n  height:3em;\\n  padding:0.2em;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: row;\\n}\\n#Dialog>div div.dialogDeside>div{\\n  cursor: pointer;\\n  padding: 0.2em;\\n  width:130px;\\n  background-color: #96e8d8;\\n  margin: 0 0.2em;\\n  border-radius: 3px;\\n}\\n.display_none {\\n  display: none;\\n}\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.array = Array.isArray;\nfunction primitive(s) {\n    return typeof s === 'string' || typeof s === 'number';\n}\nexports.primitive = primitive;\n//# sourceMappingURL=is.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createElement(tagName) {\n    return document.createElement(tagName);\n}\nfunction createElementNS(namespaceURI, qualifiedName) {\n    return document.createElementNS(namespaceURI, qualifiedName);\n}\nfunction createTextNode(text) {\n    return document.createTextNode(text);\n}\nfunction createComment(text) {\n    return document.createComment(text);\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n    parentNode.insertBefore(newNode, referenceNode);\n}\nfunction removeChild(node, child) {\n    node.removeChild(child);\n}\nfunction appendChild(node, child) {\n    node.appendChild(child);\n}\nfunction parentNode(node) {\n    return node.parentNode;\n}\nfunction nextSibling(node) {\n    return node.nextSibling;\n}\nfunction tagName(elm) {\n    return elm.tagName;\n}\nfunction setTextContent(node, text) {\n    node.textContent = text;\n}\nfunction getTextContent(node) {\n    return node.textContent;\n}\nfunction isElement(node) {\n    return node.nodeType === 1;\n}\nfunction isText(node) {\n    return node.nodeType === 3;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nexports.htmlDomApi = {\n    createElement: createElement,\n    createElementNS: createElementNS,\n    createTextNode: createTextNode,\n    createComment: createComment,\n    insertBefore: insertBefore,\n    removeChild: removeChild,\n    appendChild: appendChild,\n    parentNode: parentNode,\n    nextSibling: nextSibling,\n    tagName: tagName,\n    setTextContent: setTextContent,\n    getTextContent: getTextContent,\n    isElement: isElement,\n    isText: isText,\n    isComment: isComment,\n};\nexports.default = exports.htmlDomApi;\n//# sourceMappingURL=htmldomapi.js.map","export default class ViewUtil {\n\tconstructor() {}\n\n\tstatic getCurrentPointedElm(event) {\n\t\tconst touches = event.touches;\n\t\tconst ex = touches ? touches[0] ? touches[0].pageX : 0 : event.pageX;\n\t\tconst ey = touches ? touches[0] ? touches[0].pageY : 0 : event.pageY;\n\t\tconst wox = window.pageXOffset;\n\t\tconst woy = window.pageYOffset;\n\t\t// console.log(\"event.name+:\" + event.name + \"/ex:\" + ex + \"/ey:\" + ey + \"/wox:\" + wox + \"/woy:\" + woy);\n\t\tconst elm = document.elementFromPoint(ex - wox, ey - woy);\n\t\t// console.log(elm);\n\t\treturn elm;\n\t}\n\tstatic clearSideElmClass(elm, className) {\n\t\tif (!elm || !elm.style) {\n\t\t\treturn\n\t\t}\n\t\telm.style.opacity = '1';\n\t\tconst childNodes = elm.parentNode.childNodes;\n\t\tfor (let i = 0; i < childNodes.length; i++) {\n\t\t\tconst col = childNodes[i];\n\t\t\tcol.classList.remove(className);\n\t\t}\n\t}\n\tstatic create(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"div\", id, clasｓName, text);\n\t}\n\tstatic createInput(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"input\", id, clasｓName, text);\n\t}\n\tstatic createText(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"text\", id, clasｓName, text);\n\t}\n\tstatic createFile(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"input\", id, clasｓName, text, \"file\");\n\t}\n\tstatic createCanvas(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"canvas\", id, clasｓName, text);\n\t}\n\tstatic createImage(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"img\", id, clasｓName, text);\n\t}\n\tstatic createUl(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"ul\", id, clasｓName, text);\n\t}\n\tstatic createLabel(id, clasｓName, text, forId) {\n\t\tconst elm = ViewUtil.ce(\"label\", id, clasｓName, text);\n\t\telm.setAttribute(\"for\", forId);\n\t\treturn elm;\n\t}\n\tstatic createLi(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"li\", id, clasｓName, text);\n\t}\n\tstatic createSpan(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"span\", id, clasｓName, text);\n\t}\n\tstatic createStrong(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"strong\", id, clasｓName, text);\n\t}\n\tstatic createA(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"a\", id, clasｓName, text);\n\t}\n\tstatic ce(tagName, id, clasｓName, text, type) {\n\t\tconst elm = document.createElement(tagName);\n\t\telm.className = clasｓName;\n\t\tif (id) {\n\t\t\telm.id = id;\n\t\t}\n\t\tif (tagName === \"input\" && text) {\n\t\t\telm.setAttribute(\"value\", text);\n\t\t\tif (type) {\n\t\t\t\telm.setAttribute(\"type\", type);\n\t\t\t}\n\t\t} else if (text) {\n\t\t\telm.textContent = text;\n\t\t}\n\t\treturn elm;\n\t}\n\tstatic on(elm, eventType, eventHandler) {\n\t\telm.addEventListener(eventType, eventHandler, false);\n\t}\n\tstatic off(elm, eventType, eventHandler) {\n\t\telm.removeEventListener(eventType, eventHandler, false);\n\t}\n\n\tstatic append(parent, child) {\n\t\tparent.appendChild(child);\n\t}\n\n\tstatic insertFirst(parent, child) {\n\t\tif (parent.hasChildNodes()) {\n\t\t\tparent.insertBefore(child, parent.childNodes[0]);\n\t\t} else {\n\t\t\tparent.appendChild(child);\n\t\t}\n\t}\n\tstatic getBodyElm() {\n\t\treturn document.getElementsByTagName(\"body\")[0];\n\t}\n\tstatic attachBody(elm) {\n\t\tdocument.getElementsByTagName(\"body\")[0].appendChild(elm);\n\t}\n\tstatic detacthBodyById(id) {\n\t\tconst child = documet.getElementById(id);\n\t\tdocument.getElementsByTagName(\"body\")[0].removeChild(child);\n\t}\n\tstatic removeChild(child) {\n\t\tchild.parentNode.removeChild(child);\n\t}\n\tstatic remove(id) {\n\t\tconst child = documet.getElementById(id);\n\t\tif (child.parentNode) {\n\t\t\tchild.parentNode.removeChild(child);\n\t\t}\n\t}\n\tstatic removeChildren(id) {\n\t\tconst elm = documet.getElementById(id);\n\t\twhile (elm.firstChild) {\n\t\t\telm.removeChild(elm.firstChild);\n\t\t}\n\t}\n\tstatic setStyles(elm, styleObj) {\n\t\tfor (let name in styleObj) {\n\t\t\telm.style[name] = styleObj[name];\n\t\t}\n\t}\n\tstatic text(elm, text) {\n\t\telm.textContent = text;\n\t}\n\tstatic emit(elm, eventType, isBubbling = true, isCancelable = true) {\n\t\tconst event = document.createEvent(\"HTMLEvents\");\n\t\tevent.initEvent(eventType, isBubbling, isCancelable);\n\t\treturn elm.dispatchEvent(event);\n\t}\n}","import snabbdomClass from 'snabbdom/modules/class'\nimport snabbdomStyle from 'snabbdom/modules/style'\nimport snabbdomProps from 'snabbdom/modules/props'\nimport snabbdomAttrs from 'snabbdom/modules/attributes'\nimport snabbdomDataset from 'snabbdom/modules/dataset'\nimport snabbdomEventlisteners from 'snabbdom/modules/eventlisteners'\nimport hz from 'snabbdom/h'\nimport toVNodez from 'snabbdom/tovnode'\nlet snabbdom = require('snabbdom');\nconsole.log(snabbdom);\nexport const h = hz;\nexport const toVNode = toVNodez;\nexport const patch = snabbdom.init([snabbdomClass, snabbdomStyle, snabbdomProps,snabbdomAttrs, snabbdomDataset,snabbdomEventlisteners])\n","const baseClasses = [];\nexport class ObjectUtil {\n  static addBaseCLassese(baseClassesList) {\n    if (baseClassesList) {\n      if (Array.isArray(baseClassesList)) {\n        for (let baseClass of baseClassesList) {\n          baseClasses.push(baseClass);\n        }\n      } else {\n        baseClasses.push(baseClassesList);\n      }\n    }\n  }\n  static deepClone(obj) {\n    const channel = new MessageChannel();\n    const inPort = channel.port1;\n    const outPort = channel.port2;\n\n    return new Promise(resolve => {\n      inPort.onmessage = data => {\n        resolve(data.data);\n      }\n      outPort.postMessage(obj);\n    });\n  }\n  static simpleDeepCloneSerialized(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n  static simpleDeepClone(obj, newObj, count = 0) {\n    const newCount = count + 1;\n    const output = newObj\n      ? newObj\n      : Array.isArray(obj)\n        ? []\n        : {};\n    if (newCount > 10) {\n      console.log(obj);\n      console.log(newCount);\n      return output;\n    }\n    for (let key in obj) {\n      const value = obj[key];\n      if (value && typeof value === \"object\" && !value.byteLength) {\n        let baseType = null;\n        for (let baseClass of baseClasses) {\n          if (value instanceof baseClass) {\n            baseType = new baseClass();\n            break;\n          }\n        }\n        output[key] = ObjectUtil.simpleDeepClone(value, baseType, newCount);\n      } else {\n        try {\n          output[key] = value;\n        } catch (e) {\n          console.error(e);\n          console.log(output);\n          throw e;\n        }\n      }\n    }\n    return output;\n  }\n  static singleDeepClone(obj) {\n    const retObj = {};\n    for (let key in obj) {\n      let value = obj[key];\n      retObj[key] = value;\n    }\n    return retObj;\n  }\n  static singleDeepCloneWithoutFuncs(obj) {\n    const retObj = {};\n    for (let key in obj) {\n      let value = obj[key];\n      if (typeof value === 'function') {\n        continue;\n      }\n      retObj[key] = value;\n    }\n    return retObj;\n  }\n  static deepVnodeClone(target) {\n    if (!target) {\n      return target;\n    }\n    const obj = {\n      sel: target.sel,\n      data: ObjectUtil.simpleDeepClone(target.data),\n      children: undefined,\n      text: target.text,\n      elm: target.elm,\n      key: target.key\n    };\n    for (let key in target.data) {\n      if (target.data[key]) {\n        obj.data[key] = target.data[key];\n      }\n    }\n    if (target.children && target.children.length > 0) {\n      obj.children = [];\n      for (let childTarget of target.children) {\n        obj.children.push(ObjectUtil.deepVnodeClone(childTarget));\n      }\n    }\n    return obj;\n  }\n\n  static async recalcSize(em, value, indexSize = 0, delimiterSize = 0, counter) {\n    let size = 0;\n    // console.warn(indexSize)\n    if (!value) {\n      return 1;\n    } else if (value.byteLength && value.byteLength > 0) {\n      const valuseSize = value.byteLength;\n      // console.log(\"====ABvaluseSize:\" + valuseSize);\n      size += (indexSize + valuseSize + 1 + delimiterSize)\n    } else if (typeof value === \"function\") {\n      continu;\n    } else if (typeof value === \"number\") {\n      size += (indexSize + 4 + 1 + delimiterSize)\n    } else if (typeof value === \"string\") {\n      const valuseSize = value.length*1;\n      size += (indexSize*1 + valuseSize + 1 + delimiterSize*1);\n      // console.log(\"====string:valuseSize:\" + valuseSize + \"/indexSize:\"+indexSize+ \"/delimiterSize:\"+delimiterSize+\"/size:\" + size+\"/value:\"+value+\"/\"+(typeof valuseSize) );\n    } else if (typeof value === \"object\" && Array.isArray(value)) {\n      let tempDerimiterSie = 0\n      size += 2 + delimiterSize;\n      for (let i in value) {\n        const arrayValue = value[i];\n        const itemSize = await ObjectUtil.recalcSize(em, arrayValue, 0,0,counter);\n        // console.log(\"====arrayValue:\" + arrayValue + \"/size:\" + size + \"/itemSize:\" + itemSize);\n        size += itemSize + tempDerimiterSie;\n        tempDerimiterSie = 1;\n      }\n      size += (indexSize + 1 + delimiterSize)\n    } else if (typeof value === \"object\") {\n      const itemSize = await ObjectUtil.calcSize(em, value, counter);\n      // console.log(\"====itemSize:\" + itemSize + \"/size:\" + size);\n      size += (indexSize + itemSize + 1 + delimiterSize)\n    }\n    // console.log(\"====value:\" + value + \"/size:\" + size);\n    return size * 1;\n\n  }\n  static async calcSize(em, target, counter = {\n    size: 0\n  }) {\n    if (!target) {\n      return 1;\n    }\n    let delimiterSize = 0;\n    for (let index in target) {\n      const value = target[index];\n      if (index === \"pk\" && value.indexOf(\"Binary-\") === 0) {\n        // console.log(\"====Binary:\" + index);\n        const indexSize = (index + \"\").length*1;\n        const binaryData = await em.get(value)\n        counter.size += await ObjectUtil.recalcSize(em, binaryData, indexSize, delimiterSize, counter);\n        continue;\n      }\n      const indexSize = (index + \"\").length*1;\n      counter.size += await ObjectUtil.recalcSize(em, value, indexSize, delimiterSize, counter)\n      delimiterSize = 1;\n      // console.log(\"====index:\" + index + \"/size:\" + counter.size);\n    }\n    // console.log(\"====counter.size:\" + counter.size);\n    return counter.size * 1;\n  }\n}\n","import { patch, h } from './base/preLoader'\nimport { ObjectUtil } from '../objectUtil'\nexport class ElementSelector {\n\tconstructor() {\n\t\tthis.selectorMap = new Map()\n\t}\n\tgetElementById(vnode, id) {\n\t\tlet result = this.getElements(vnode, \"#\" + id);\n\t\treturn result.length < 1 ?\n\t\t\tnull :\n\t\t\tresult[0];\n\t}\n\tgetElementsByClass(vnode, className) {\n\t\treturn this.getElements(vnode, \".\" + className);\n\t}\n\tpatch(vnode, selector, newNode) {\n\t\t// console.log('patch00 START of Patch newNode:' + newNode);\n\n\t\tif (!newNode && typeof selector === \"string\") {\n\t\t\tconsole.log('patch00a ★ERROR★ of Patch newNode:' + newNode + \"/selector:\" + selector);\n\t\t\treturn vnode;\n\t\t}\n\t\tif (!newNode) {\n\t\t\t// console.log('patch01a of Patch newNode:' + newNode);\n\t\t\tthis.isValidNode(vnode, \"vnode\");\n\t\t\tconst re = patch(vnode, selector);\n\t\t\treturn selector;\n\t\t}\n\t\tif (!selector) {\n\t\t\t// console.log('patch01b of Patch newNode:' + newNode);\n\t\t\tthis.isValidNode(vnode, \"vnode\");\n\t\t\tconst re = patch(vnode, newNode);\n\t\t\treturn newNode;\n\t\t}\n\t\tconst cloneNode = this.prePatch(vnode, selector, newNode);\n\t\tconst re = patch(vnode, cloneNode);\n\t\tconst nodes = this.getElements(cloneNode, selector, false, new Map(), null);\n\t\t// console.log('patch02 END of Patch ====' + \"/node:\" + newNode.elm + \"/parent:\" + (\n\t\t// newNode.elm\n\t\t// ? newNode.elm.parentNode\n\t\t// : null) + \"/count:\" + nodes.length + \"/\" + (\n\t\t// nodes.length > 0\n\t\t// ? nodes[0].elm.parentNode\n\t\t// : null));\n\t\tthis.isValidNode(cloneNode, \"cloneNode\");\n\t\treturn cloneNode;\n\t}\n\n\tisValidNode(vnode, name, parentNode, index) {\n\t\tif (!vnode) {\n\t\t\tconsole.log(\"★★null node!\" + name + \"/parentNode:\" + parentNode);\n\t\t\treturn;\n\t\t}\n\t\tif (vnode.elm && !vnode.elm.parentNode) {\n\t\t\t// console.log(vnode.elm);\n\t\t\tif (parentNode) {\n\t\t\t\tconst length = parentNode.childNodes.length;\n\t\t\t\tif (length > index) {\n\t\t\t\t\tvnode.elm = parentNode.childNodes[index];\n\t\t\t\t} else {\n\t\t\t\t\tparentNode.appendChild(vnode.elm);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(\"★★★invalid node!\" + name);\n\t\t} else if (!vnode.elm) {\n\t\t\tif (parentNode) {\n\t\t\t\tconst length = parentNode.childNodes.length;\n\t\t\t\tif (length > index) {\n\t\t\t\t\tvnode.elm = parentNode.childNodes[index];\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(\"★★★invalid parent index!\" + index + \"/length:\" + length + \"/vnode.sel:\" + vnode.sel);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (vnode.children) {\n\t\t\tfor (let indexA in vnode.children) {\n\t\t\t\tlet child = vnode.children[indexA];\n\t\t\t\tif (!child) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.isValidNode(child, name + \"_c_\", (\n\t\t\t\t\tvnode.elm ?\n\t\t\t\t\tvnode.elm.parentNode :\n\t\t\t\t\tnull), indexA)\n\t\t\t}\n\t\t}\n\t}\n\tlog(msg) {\n\t\tif (this.isShowLog) {\n\t\t\tconsole.log(msg);\n\t\t}\n\t}\n\t// Not cloneNode\n\tprePatch(vnode, selector, newNode) {\n\t\tconst cloneNode = ObjectUtil.deepVnodeClone(vnode);\n\t\tconst parentMap = new Map();\n\t\tthis.log('prepatch01aa:' + JSON.stringify(vnode));\n\t\tconst nodes = this.getElements(cloneNode, selector, false, parentMap, null);\n\t\tlet isShouldPatch = false;\n\t\tthis.log('prepatch01a　nodes：' + nodes);\n\t\tthis.log(nodes);\n\t\tthis.log(parentMap.size + \"/\" + cloneNode.children);\n\t\tfor (let node of nodes) {\n\t\t\tthis.log('prepatch01a');\n\t\t\tlet newOne = ObjectUtil.deepVnodeClone(newNode);\n\t\t\tthis.log('prepatch01b');\n\n\t\t\tfor (let [key, parentNode] of parentMap) {\n\t\t\t\tthis.log(key + \"/\" + node);\n\t\t\t\tif (key === node) {\n\t\t\t\t\tlet children = parentNode.children;\n\t\t\t\t\tfor (let index in children) {\n\t\t\t\t\t\tlet target = children[index];\n\t\t\t\t\t\tif (target === node) {\n\t\t\t\t\t\t\tchildren[index] = newOne;\n\t\t\t\t\t\t\t//newOne.text = newOne.text+\"/\"+Date.now();\n\t\t\t\t\t\t\tisShouldPatch = true;\n\t\t\t\t\t\t\tthis.log('★patch01c AS REPLACE! children.length:' + children.length + \"/index:\" + index + \"/target.sel:\" + target.sel + \"/newOne.sel:\" + newOne.sel + \"/text:\" + newOne.text);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.log('-patch01d ! children.length:' + children.length + \"/index:\" + index + \"/target.sel:\" + target.sel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.log('patch02 END of prePatch');\n\t\treturn isShouldPatch ?\n\t\t\tcloneNode :\n\t\t\tvnode;\n\t}\n\tgetElements(vnode, selector, isEnd = false, parentMap = new Map(), parentVnode) {\n\t\tlet result = [];\n\t\tif (!selector || typeof selector !== 'string') {\n\t\t\tthis.log('getElements selector:' + selector);\n\t\t\treturn result;\n\t\t}\n\t\tlet selectors = selector.split(/ |>/);\n\t\tlet nextSelector = selector;\n\t\tif (selectors.length >= 1) {\n\t\t\tlet firstOne = selectors.shift();\n\t\t\tthis.log(firstOne);\n\t\t\tif (!firstOne) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tif (this.isMatch(vnode.sel, firstOne)) {\n\t\t\t\tthis.log(\"selectors.length:\" + selectors.length);\n\t\t\t\tif (selectors.length < 1) {\n\t\t\t\t\tresult.push(vnode);\n\t\t\t\t\tthis.log(parentVnode);\n\t\t\t\t\tif (parentVnode) {\n\t\t\t\t\t\tparentMap.set(vnode, parentVnode);\n\t\t\t\t\t}\n\t\t\t\t\tthis.log(result);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tnextSelector = selector.substring(firstOne.length + 1, selector.length);\n\t\t\t\tthis.log(\"nextSelector:\" + nextSelector);\n\t\t\t} else if (isEnd) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tnextSelector = selector;\n\t\t\t}\n\n\t\t\tif (!vnode.children) {\n\t\t\t\tthis.log('getElements 01a');\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tlet delimiter = selector.substring(firstOne.length, firstOne.length + 1);\n\t\t\tlet isNextEnd = delimiter === '>';\n\n\t\t\tfor (let child of vnode.children) {\n\t\t\t\tresult = result.concat(this.getElements(child, nextSelector, isNextEnd, parentMap, vnode));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetSelectorMap(selector) {\n\t\tlet map = this.selectorMap.get(selector);\n\t\tif (map) {\n\t\t\treturn map;\n\t\t}\n\t\tmap = new Map();\n\t\tif (!selector) {\n\t\t\treturn map;\n\t\t}\n\t\tconst tokens = selector.split(/\\.|#/g);\n\t\tconst selectorId = selector.indexOf(\"#\") >= 0 ? selector.split(/#/g)[1].split(/\\./g)[0] : \"\";\n\t\tconst classes = [];\n\t\tlet id = \"\";\n\t\tlet tag = \"\";\n\t\tfor (let token of tokens) {\n\t\t\tif (selectorId === token) {\n\t\t\t\tid = token;\n\t\t\t} else if (selector.indexOf(\".\" + token) >= 0) {\n\t\t\t\tclasses.push(token);\n\t\t\t} else {\n\t\t\t\ttag = token;\n\t\t\t}\n\t\t}\n\t\tmap.set(\"id\", id);\n\t\tmap.set(\"class\", classes);\n\t\tmap.set(\"tag\", tag);\n\t\tthis.selectorMap.set(selector, map);\n\t\treturn map;\n\t}\n\tisMatch(sel, selector) {\n\t\tif (this.isShowLog) {\n\t\t\tconsole.log(\"isMatch sel:\" + sel + \"/selector:\" + selector);\n\t\t}\n\t\tconst mapA = this.getSelectorMap(sel);\n\t\tconst mapB = this.getSelectorMap(selector);\n\t\tconst tagName = mapB.get(\"tag\");\n\t\tconst id = mapB.get(\"id\");\n\t\tif (this.isShowLog) {\n\t\t\tconsole.log(\"isMatch tagName:\" + tagName + \"/id:\" + id);\n\t\t}\n\t\tif (tagName !== \"\" && mapA.get(\"tag\") !== tagName) {\n\t\t\tif (this.isShowLog) {\n\t\t\t\tconsole.log(\"false:01 sel:\" + sel + \"/selector:\" + selector);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tif (id !== \"\" && mapA.get(\"id\") !== id) {\n\t\t\tif (this.isShowLog) {\n\t\t\t\tconsole.log(\"false:02 sel:\" + mapA.get(\"id\") + \"/selector:\" + id);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tconst classesA = mapA.get(\"class\");\n\t\tconst classesB = mapB.get(\"class\");\n\t\tfor (let classB of classesB) {\n\t\t\tlet isMatched = false;\n\t\t\tfor (let classA of classesA) {\n\t\t\t\tif (classB === classA) {\n\t\t\t\t\tisMatched = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isMatched === false) {\n\t\t\t\tif (this.isShowLog) {\n\t\t\t\t\tconsole.log(\"false:03 sel:\" + sel + \"/selector:\" + selector);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (selector === \"\") {\n\t\t\tif (this.isShowLog) {\n\t\t\t\tconsole.log(\"false:04 sel:\" + sel + \"/selector:\" + selector);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tif (this.isShowLog) {\n\t\t\tconsole.log(\"isMatch!!!! sel:\" + sel + \"/selector:\" + selector);\n\t\t}\n\t\treturn true;\n\t}\n}","const baseActions = [\"Attach\"];\nexport class ActionCreator {\n  constructor() {}\n  static getBaseActions() {\n    return baseActions;\n  }\n  static createAction(key, data, storeKey = null) {\n    return {type: key, data: data, storeKey: storeKey};\n  }\n  static createBaseAction(type, targetView,data, storeKey = null){\n    const addData = data && typeof data === \"object\"\n      ? data\n      : {};\n    addData.targetView = targetView;\n    addData.selector = targetView?targetView.id:null;\n    addData.storeKey = storeKey;\n    return {type:type , data: addData};\n  }\n  static creatAttachAction(parentView, newView, data, storeKey = null) {\n    // console.log(\"creatAttachAction\");\n    // console.log(newView);\n    const addData = data && typeof data === \"object\"\n      ? data\n      : {};\n    //alert(newView);\n    addData.parentView = parentView;\n    addData.selector = newView.id;\n    addData.storeKey = storeKey;\n    return {type: \"Attach\", data: addData};\n  }\n  static createShowViewAction(key, oldVnode, selector, data, storeKey = null) {\n    return ActionCreator.createGoOtherViewAction(key, null, oldVnode, selector, data, storeKey);\n  }\n  static createGoOtherViewAction(key, view, oldVnode, selector, data, storeKey = null) {\n    let addData = data;\n    if (!view && !oldVnode) {\n      console.warn('createGoOtherViewAction is null!');\n      return {type: key, data: addData, storeKey: storeKey};\n    }\n    if (!data) {\n      addData = {};\n    }\n    addData.view = view;\n    addData.oldVnode = oldVnode;\n    addData.selector = selector;\n    return {type: key, data: addData, storeKey: storeKey};\n  }\n  static isEquals(a, b) {\n    if (a && b && a.type === b.type) {\n      return true;\n    }\n    return false;\n  }\n}\n","const avtiveViews = {};\nconst activeViewList = [];\nexport class ViewAttachQueue {\n  constructor() {\n    this.queue = [];\n  }\n  addActiveView(parentView, view, lastTree) {\n    const parentId = parentView.id;\n    const currentId = view.id;\n    // console.log(\"addActiveView currentId:\" + currentId);\n    const resultParent = this.findActivViews(avtiveViews, parentId);\n\n    // console.log(\"addActiveView resultParent:\" + resultParent);\n    if (resultParent && resultParent.primaryView) {\n      const currentTree = resultParent[currentId];\n      if (currentTree && currentTree.primaryView) {\n        currentTree.primaryView = view;\n        currentTree.parent = resultParent;\n      } else {\n        if (lastTree) {\n          lastTree.parent = resultParent;\n          resultParent[currentId] = lastTree;\n        } else {\n          resultParent[currentId] = {\n            primaryView: view,\n            parent: resultParent\n          };\n        }\n      }\n    } else {\n      avtiveViews[currentId] = lastTree\n        ? lastTree\n        : {\n          primaryView: view,\n          parent: avtiveViews\n        };\n    }\n    this.loadAllActiveViews();\n  }\n  changeActiveView(currentView, nextView, nextViewTree) {\n    const currentId = currentView.id;\n    // console.log(\"changeActiveView currentId:\" + currentId);\n    const resultCurrent = this.findActivViews(avtiveViews, currentId);\n    if (!resultCurrent) {\n      return;\n    }\n    const parent = resultCurrent.parent;\n    delete parent[currentId];\n    const nextId = nextView.id;\n    if (nextViewTree && nextViewTree.primaryView) {\n      parent[nextId] = nextViewTree;\n      nextViewTree.primaryView = nextView;\n      nextViewTree.parent = parent;\n    } else {\n      parent[nextId] = {\n        primaryView: nextView,\n        parent: parent\n      };\n    }\n    this.loadAllActiveViews();\n    return resultCurrent;\n  }\n  removeActiveView(view) {\n    const currentId = view.id;\n    // console.log(\"removeActiveView currentId:\" + currentId);\n    const resultCurrent = this.findActivViews(avtiveViews, currentId);\n    if (!resultCurrent) {\n      return;\n    }\n    const parent = resultCurrent.parent;\n    delete parent[currentId];\n\n    this.loadAllActiveViews();\n    return resultCurrent;\n  }\n\n  findActivViews(activeViewsTree, id, callback, count) {\n    let retView = null;\n    const next = count\n      ? count + 1\n      : 1;\n    if (next > 5) {\n      return null;\n    }\n    if (activeViewsTree) {\n      for (let viewId in activeViewsTree) {\n        if (viewId === undefined || viewId === 'undefined' || viewId === 'parent' || viewId === 'primaryView') {\n          continue;\n        }\n        const current = activeViewsTree[viewId];\n        if (!current.primaryView || !current.parent) {\n          continue;\n        }\n        if (callback) {\n          callback(current);\n        }\n        if (viewId === id) {\n          retView = current;\n        } else if (current && viewId !== 'view' && viewId !== '0') {\n          retView = this.findActivViews(current, id, callback, next);\n        }\n      }\n    }\n    return retView;\n  }\n  loadAllActiveViews() {\n    const resultList = [];\n    this.findActivViews(avtiveViews, 'all', (current) => {\n      resultList.push(current)\n    });\n    const currentLength = activeViewList.length;\n    for (let i = 0; i < currentLength; i++) {\n      activeViewList.pop();\n    }\n    for (let result of resultList) {\n      if (!result.primaryView || !result.parent) {\n        continue;\n      }\n      activeViewList.push(result.primaryView);\n    }\n    return activeViewList;\n  }\n  getActiveViewList() {\n    return activeViewList;\n  }\n}\n","import {ObjectUtil} from '../objectUtil';\n\nconst mainHolder = new Map();\nconst subHolder = new Map();\nconst mainKey = 'aaa';\nconst tempStore = null;\nexport class Store {\n  constructor(service) {}\n  static cloneStore(store,action){\n    subHolder.set(action,store)\n    return ObjectUtil.simpleDeepClone(store);\n  }\n  static getTemp(newKey = mainKey, action){\n    const store = subHolder.has(action)\n      ? subHolder.get(action)\n      : null;\n    return store;\n  }\n  static getStore(newKey = mainKey, actionClass) {\n    const store = mainHolder.has(newKey)\n      ? mainHolder.get(newKey)\n      : null;\n    // copy\n    const clonedStore = store\n      ? ObjectUtil.simpleDeepClone(store)\n      : {};\n    clonedStore['oldVnode'] = store\n      ? store['oldVnode']\n      : null;\n    return clonedStore;\n  }\n  static setStore(store, newKey = mainKey, actionClass) {\n    const clonedStore = store\n      ? ObjectUtil.simpleDeepClone(store)\n      : {};\n    const storeAtCurrent = mainHolder.has(newKey)\n      ? mainHolder.get(newKey)\n      : null;\n    for (let index in storeAtCurrent) {\n      const inputValue = clonedStore[index];\n      const currentValue = storeAtCurrent[index];\n      if (inputValue || (inputValue !== null && inputValue !== undefined)) {\n        storeAtCurrent[index] = inputValue;\n      }\n    }\n    for (let index in storeAtCurrent) {\n      const inputValue = clonedStore[index];\n      const currentValue = storeAtCurrent[index];\n      if (!inputValue && inputValue !== null && currentValue) {\n        clonedStore[index] = currentValue;\n      }\n    }\n    clonedStore['oldVnode'] = store\n      ? store['oldVnode']\n      : null;\n    mainHolder.set(newKey, clonedStore);\n  }\n}\n","import {Store} from './store';\nimport {ViewAttachQueue} from './viewAttachQueue';\nimport {ActionDispatcher} from './actionDispatcher'\nconst viewAttachQueue = new ViewAttachQueue();\nconst actionMap = new Map();\nexport class ActionDispatcherImple {\n  constructor(view) {\n    this.view = view;\n    this.updateMap = new Map();\n    this.updateQueue = [];\n  }\n  static add(action, reducer) {\n    // console.log('ActionDispatcherImple add00:' + action);\n    if (!action) {\n      return false;\n    }\n    // console.log('ActionDispatcherImple add01:' + action.type);\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      if (!reducers.includes(reducer)) {\n        reducers.push(reducer);\n      } else {\n        return false;\n      }\n    } else {\n      actionMap.set(type, [reducer]);\n    }\n    return true;\n  }\n  static remove(action) {\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      if (!reducers.includes(reducer)) {\n        const index = reducers.indexof(reducer);\n        reducers.splice(index, 1)\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n  dispatch(action) {\n    // console.error(\"dispatch:action.type:\"+action.type);\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        this.dispatchExecute(action).then((data) => {\n          resolve(data)\n        }, (e) => {\n          reject(e)\n        })\n      })\n    })\n  }\n  async dispatchExecute(action) {\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    // console.error(\"dispatchExecute:action.type:\"+action.type);\n    const data = action.data;\n    const storeKey = action.storeKey;\n    const actionClass = action.constructor;\n    let store = Store.getStore(storeKey, actionClass);\n    let targetView = this.view;\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      for (let reducer of reducers) {\n        const initializeStoreKeys = reducer.getInitializeKeys();\n        for (let initializeStoreKey of initializeStoreKeys) {\n          store[initializeStoreKey] = null;\n        }\n        break;\n      }\n      for (let reducer of reducers) {\n        //console.log(\"A01 dispatch type:\"+type+\"/reducer.reduce:\"+reducer.reduce)\n        await reducer.preReduce(store, action).catch((e) => {\n          console.error(e)\n        });\n        await reducer.reduce(store, action).catch((e) => {\n          console.error(e)\n        });\n        await reducer.postReduce(store, action).catch((e) => {\n          console.error(e)\n        });\n      }\n      //console.log(\"A01 dispatch type:\"+type+\"/\"+reducers[0])\n      //console.log(reducers[0])\n    }\n    const storeAsClones = Store.cloneStore(store, action);\n    // let storeB = Store.getStore(storeKey,actionClass);\n    //console.log(\"A01 dispatch \")\n    //console.log(storeB)\n    // console.log('dispatch02');\n    let result = null;\n    if (store.isOrverride && action.data.view) {\n      targetView = action.data.views;\n      if (this.view.onViewHide(targetView, data) === false) {\n        return;\n      }\n      result = await this.callUpdate(targetView, data, storeKey, action).catch((e) => {\n        console.error(e)\n      });\n      await this.view.onViewHidden(targetView, data);\n    } else {\n      result = await this.callUpdate(targetView, data, storeKey, action).catch((e) => {\n        console.error(e)\n      });\n    }\n    //store = Store.getStore(storeKey);\n    Store.setStore(storeAsClones, storeKey, actionClass);\n    // console.error(storeAsClones);\n    // console.error(action.type);\n    // console.error(result);\n\n    return true;\n  }\n  callUpdate(targetView, actionData, storeKey, action) {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      const activViews = viewAttachQueue.getActiveViewList();\n      for (let activeView of activViews) {\n        const store = Store.getTemp(storeKey, action);\n        if (targetView === activeView) {\n          //console.log('A0 callUpdate update id:' + activeView.id);\n          // console.log(\"activeView.updateReactiveTheTargetView:\"+action.type+\"/\"+targetView.id);\n          const promise = targetView.updateReactiveTheTargetView(store, actionData, action);\n          if (promise) {\n            if (!promise.then) {\n              alert(\"your view has override method name 'updateReactiveTheTargetView'! activeView.id):\" + activeView.id);\n              reject(promise);\n              return;\n            }\n            promises.push(promise.then(() => {}, (e) => {\n              console.error(e)\n            }));\n          } else {\n            // console.log(activeView);\n          }\n        } else {\n          //console.log('A0 callUpdate updateReactive id:' + activeView.id);\n          // console.log(\"activeView.updateReactive:\" + action.type + \"/\" + targetView.id);\n          const promise = activeView.updateReactive(store, actionData);\n          if (promise) {\n            if (!promise.then) {\n              alert(\"your view has override method name 'updateReactive'! activeView.id):\" + activeView.id);\n              reject(promise);\n              return;\n            }\n            promises.push(promise.then(() => {}, (e) => {\n              console.error(e)\n            }));\n          } else {\n            //console.log(activeView);\n          }\n        }\n      }\n      if (promises.length > 0) {\n        Promise.all(promises).then(resolve, reject);\n      } else {\n        resolve(targetView);\n      }\n    })\n\n    // console.log('callUpdate END----------------');\n  }\n}\n","import {ActionDispatcherImple} from './actionDispatcherImple'\nexport class ActionDispatcher {\n  constructor() {\n  }\n  static create(view){\n    return new ActionDispatcherImple(view);\n  }\n  static createStandAlone(){\n    return new ActionDispatcherImple(false);\n  }\n}\n","import {\n  patch,\n  h\n} from './preLoader'\nexport class V {\n  static div() {}\n}\nconst setProps = (data, inputs) => {\n  let newData = {};\n  if (data && typeof data === \"object\") {\n    if (!data.props) {\n      data.props = {};\n    }\n    newData = data;\n  } else {\n    newData = {\n      props: {}\n    };\n  }\n  for (let key in inputs) {\n    newData.props[key] = inputs[key];\n  }\n  return newData;\n}\nconst vtags = (tagName, id, classNames, data = {}, children, text) => {\n  const id1 = tagName + (\n    id && typeof id === \"string\" ?\n    \"#\" + id :\n    \"\");\n  const id2 = id1 + (\n    classNames ?\n    (Array.isArray(classNames) && classNames.length > 0 && typeof classNames[0] === \"string\") ?\n    \".\" + classNames.join(\".\") :\n    (\n      (Array.isArray(id) && id.length > 0 && typeof id[0] === \"string\") ?\n      \".\" + id.join(\".\") :\n      '') :\n    \"\");\n  const childrenArray = children && Array.isArray(children) ?\n    children :\n    (\n      data && Array.isArray(data) ?\n      data :\n      (\n        Array.isArray(classNames) && classNames.length > 0 && typeof classNames[0] === \"object\" ?\n        classNames :\n        []));\n  const currentText = text ?\n    text :\n    (\n      children && typeof children === \"string\" ?\n      children :\n      data && typeof data === \"string\" ?\n      data\n\n      :\n      classNames && typeof classNames === \"string\" ?\n      classNames :\n      \"\");\n  let currentData = typeof data === \"string\" || Array.isArray(data) ?\n    {} :\n    data;\n  if (children !== undefined && text === undefined && classNames && !Array.isArray(classNames) && typeof classNames === \"object\") {\n    currentData = classNames;\n  } else if (children === undefined && text === undefined && id && !Array.isArray(id) && typeof id === \"object\") {\n    currentData = id;\n  }\n  const toString = Object.prototype.toString\n  //console.log(\"●id2:\" + id2 + \"/\" + typeof currentData + \"/currentData:\" + currentData + \"/toString:\" + toString.call(currentData)+\"/children:\"+childrenArray+\"/\"+Array.isArray(childrenArray)+\"/text:\"+currentText);\n  const childNode = childrenArray.length > 0 ?\n    childrenArray :\n    currentText;\n  const newVnode = h(id2, currentData, childNode);\n  //console.log(newVnode);\n  return newVnode;\n}\n//a div span img ul li input label\nexport const a = (id, classNames, href, data, children) => {\n  return vtags(\"a\", id, classNames, setProps(data, {\n    href: href\n  }), children, null);\n}\nexport const div = (id, classNames, data, children, text) => {\n  return vtags(\"div\", id, classNames, data, children, text);\n}\n\nexport const span = (id, classNames, data, children, text) => {\n  return vtags(\"span\", id, classNames, data, children, text);\n}\n\nexport const img = (id, classNames, alt, src, data) => {\n  return vtags(\"img\", id, classNames, setProps(data, {\n    alt: alt,\n    src: src\n  }), null, null);\n}\n\nexport const ul = (id, classNames, data, children, text) => {\n  return vtags(\"ul\", id, classNames, data, children, text);\n}\n\nexport const li = (id, classNames, data, children, text) => {\n  return vtags(\"li\", id, classNames, data, children, text);\n}\n\nexport const file = (id, classNames, data, value, text) => {\n  return vtags(\"input\", id, classNames, setProps(data, {\n    type: \"file\"\n  }), null, text);\n}\nexport const input = (id, classNames, data, type, text) => {\n  return vtags(\"input\", id, classNames, setProps(data, {\n    type: type,\n    value: text\n  }), null, text);\n}\nexport const checkbox = (id, classNames, data, text) => {\n  return vtags(\"input\", id, classNames, setProps(data, {\n    type: \"checkbox\",\n    value: text\n  }), null, text);\n}\nexport const label = (id, classNames, data, children, text) => {\n  return vtags(\"label\", id, classNames, data, children, text);\n}\nexport const select = (id, classNames, data, children, text) => {\n  return vtags(\"select\", id, classNames, data, children, text);\n}\nexport const option = (id, classNames, data, children, text) => {\n  return vtags(\"option\", id, classNames, data, children, text);\n}\n\nexport const createSelectVnode = (id, classes, name, optionsData, selectedValue, on, suffix = \"\") => {\n  const options = [];\n  const isArray = Array.isArray(optionsData);\n  for (let key in optionsData) {\n    const text = optionsData[key];\n    // alert(\"selectedValue:\" + selectedValue + \"/key:\" + key + \"/\" + (        selectedValue === key))\n    if ((!isArray && key === selectedValue) || (isArray && text + \"\" === selectedValue + \"\")) {\n      //console.log(\"★　matched　selectedValue:\"+selectedValue+\"/text:\"+text)\n      const optionSelected = option(\"\", [\"\"], {\n        attrs: {\n          value: isArray ?\n            text :\n            key,\n          selected: \"true\"\n        }\n      }, text + suffix);\n      options.push(optionSelected);\n    } else {\n      const optionNode = option(\"\", [\"\"], {\n        attrs: {\n          value: isArray ?\n            text :\n            key\n        }\n      }, text + suffix);\n      options.push(optionNode);\n    }\n  }\n  const data = {\n    props: {\n      name: name\n    }\n  }\n  if(on){\n    data.on = on\n  }\n  return select(id, classes, data, options);\n}\n","import {ActionCreator} from './actionCreator'\nexport class ViewBaseActions {\n  constructor() {\n  }\n  static getGotoAnotherViewAction(view, selector, data){\n    if(!view){\n      console.log('getGotoAnotherViewAction view:'+view);\n    }\n    return ActionCreator.createGoOtherViewAction('GotoAnotherView',view,null, selector, data);\n  }\n  static getShowViewAction(oldVnode, selector, data){\n    if(!oldVnode){\n      console.log('getShowViewAction oldVnode:'+oldVnode);\n    }\n    return ActionCreator.createShowViewAction('ShowView',oldVnode, selector, data);\n  }\n}\n","import {ActionCreator} from './actionCreator'\nimport {ActionDispatcherImple} from './actionDispatcherImple'\nconst initializeStoreKeys=[];\nexport class BaseReducer {\n  constructor(isBaseUse) {\n    this.isBaseUse = isBaseUse;\n    // console.log('BaseReducer constructor:' + isBaseUse);\n    if (isBaseUse) {\n      const baseActions = ActionCreator.getBaseActions();\n      for (let index in baseActions) {\n        const type = baseActions[index];\n        this.atatch({type: type});\n      }\n    }\n  }\n  addInitializeKey(targetKey){\n    initializeStoreKeys.push(targetKey);\n  }\n  getInitializeKeys(){\n    const retList = [];\n    for(let value of initializeStoreKeys){\n      retList.push(value);\n    }\n    return retList\n  }\n  atatch(action) {\n    // console.log('A0 BaseReducer atatch action:' + action);\n    // console.log(this);\n    ActionDispatcherImple.add(action, this);\n  }\n  detach(action) {\n    ActionDispatcherImple.delete(action, this);\n  }\n  async preReduce(store, action) {\n    // console.log('A0 BaseReducer preReduce:' + action);\n    store.isOrverride = false;\n    return store;\n  }\n  async reduce(store, action) {\n    // console.log('A0 BaseReducer reduce:' + action);\n    store.isOrverride = true;\n\n    store.oldVnode = action.data.oldVnode;\n    store.selector = \"#\" + action.data.selector;\n    //alert(store);\n    return store;\n  }\n  async postReduce(store, action) {\n    // console.log('A0 BaseReducer postReduce:' + action);\n    return store;\n  }\n}\nnew BaseReducer(true);\n","import {ViewBaseActions} from './viewBaseActions'\nimport {ActionCreator} from './actionCreator'\nimport {BaseReducer} from './baseReducer'\nexport class ViewBaseReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.atatch(ViewBaseActions.getGotoAnotherViewAction());\n    this.atatch(ViewBaseActions.getShowViewAction());\n  }\n  async reduce(store, action) {\n    //console.log('reduce! action:'+action);\n    //console.log('reduce! oldVnode:'+action.data.oldVnode);\n    if (ActionCreator.isEquals(ViewBaseActions.getGotoAnotherViewAction(), action)) {\n      // todo update menue\n      //console.log('getGotoAnotherViewAction!');\n    } else if (ActionCreator.isEquals(ViewBaseActions.getShowViewAction(), action)) {\n      store.isOrverride = true;\n\n      store.oldVnode = action.data.oldVnode;\n      store.selector = \"#\" + action.data.selector;\n    }\n    //console.log('reduced...');\n    return store;\n  }\n}\nconst viewBaseReducer = new ViewBaseReducer();\n","import vu from \"../viewUtil\";\nimport { patch } from './base/preLoader'\nimport { ElementSelector } from './elementSelector'\nimport { ActionCreator } from './actionCreator'\nimport { ViewAttachQueue } from './viewAttachQueue'\nimport { ActionDispatcher } from './actionDispatcher'\nimport { Store } from './store'\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"./base/vtags\";\nimport { ViewBaseReducer } from './viewBaseReducer'\nconst viewAttachQueue = new ViewAttachQueue();\nconst nodeFrame = {\n\trootVnode: null,\n\tms: null\n};\nexport class BaseView {\n\tconstructor(id, className, isNotRenderWrap = false) {\n\t\tthis.dispatcher = ActionDispatcher.create(this);\n\t\tthis.id = id;\n\t\tthis.className = className;\n\t\tthis.isNotRenderWrap = isNotRenderWrap;\n\t\tthis.ms = nodeFrame.ms;\n\t\tthis.es = new ElementSelector();\n\t\tconst store = Store.getStore();\n\t\tthis.onViewLoad(store)\n\t\t//this.preRender(id, className);\n\t\tthis.currentVnode = null;\n\t\tthis.onViewLoaded(store)\n\t\tthis.updateReactiveCallCount = 0;\n\t\tthis.updateReactiveCallTimer = null;\n\t\tthis.updateReactivePromise = new Map();\n\t\tthis.updateCount = 0;\n\t}\n\tstatic ModalWindowClass() {\n\t\treturn \"ModalWindow\";\n\t}\n\tstatic setRootVnode(rootVnode) {\n\t\tnodeFrame.rootVnode = rootVnode;\n\t}\n\tstatic setMainService(ms) {\n\t\tif (ms) {\n\t\t\tnodeFrame.ms = ms;\n\t\t}\n\t}\n\tpatch(selector, newVnode) {\n\t\treturn this.patchFromOtherVnode(nodeFrame.rootVnode, selector, newVnode);\n\t}\n\tinitialPatch() {\n\t\tlet elements = document.getElementsByTagName(\"body\");\n\t\telements[0].innerHTML = '<div id=\"rootNodeA\"><p>ｘ</p></div>';\n\t\tlet currentVnode = document.getElementById('rootNodeA');\n\t\tif (this.updateCount < 1) {\n\t\t\tthis.patchFromOtherVnode(currentVnode, null, this.render());\n\t\t\tthis.updateReactiveTheTargetView({ oldVnode: this.currentVnode, selector: null, isOrverride: true })\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t}\n\t}\n\tpatchFromOtherVnode(currentVnode, selector, newVnode) {\n\t\tlet currentRootNode = selector !== null ? //for firstTime\n\t\t\tnodeFrame.rootVnode :\n\t\t\tcurrentVnode;\n\t\tconst result = this.es.patch(currentRootNode, selector, newVnode);\n\t\tresult.data['name'] = this.name + Date.now();\n\t\tnodeFrame.rootVnode = result;\n\t\t// console.error(this.currentVnode);\n\t\tthis.currentVnode = this.es.getElements(result, '#' + this.id)[0];\n\t\t// console.error(newVnode);\n\t\t// console.warn(\"-----------patchFromOtherVnode:\"+selector+'/#' + this.id+\"/this.currentVnode:\"+this.currentVnode);\n\t\t//  console.log(nodeFrame.rootVnode);\n\t\t// console.log('C01 this.id:' + this.id);\n\t\t// console.log('C01 --baseView.patchFromOtherVnode currentVnode;' + currentVnode + '/selector:' + selector + '/currentSelector:' + currentSelector + '/this:' + this.currentVnode + '/' + this.es.getElements(result, selector));\n\t\treturn result;\n\t}\n\tprePatch(selector, newVnode, isShowLog) {\n\t\tif (!this.currentVnode) {\n\t\t\tthis.currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n\t\t}\n\t\tif (!this.currentVnode) {\n\t\t\tconsole.error('!!!!prePatch nodeFrame.rootVnode: ' + JSON.stringify(nodeFrame.rootVnode));\n\t\t}\n\t\t// console.log('!!A!!prePatch ' + JSON.stringify(this.currentVnode) + '/this.id:' + this.id + \"/selector:\" + selector + \"/\" + this.es.getElements(this.currentVnode, selector)[0]);\n\t\tthis.currentVnode.data['name'] = this.name + Date.now();\n\t\t// console.log('!!B!!prePatch newVnode,' + JSON.stringify(this.currentVnode) + '/this.id:' + this.id);\n\t\tthis.es.isShowLog = isShowLog;\n\t\tthis.currentVnode = this.es.prePatch(this.currentVnode, selector, newVnode);\n\t\tthis.es.isShowLog = null;\n\t\t// console.log('!!C!!prePatch ' + JSON.stringify(this.currentVnode) + '/this.id:' + this.id);\n\t\treturn this.currentVnode;\n\t}\n\tasync updateReactiveTheTargetView(store, actionData, action) {\n\t\tconst oldVnode = store.oldVnode;\n\t\tconst selector = store.selector;\n\t\tconst isOrverride = store.isOrverride;\n\t\t// console.log('A00 update --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/this.currentVnode:' + this.currentVnode + \"/\" + typeof this.currentVnode);\n\t\tif (isOrverride) {\n\t\t\t// console.warn(\"isOrverride:\"+isOrverride+\"/this.currentVnode:\"+this.currentVnode+\"/selector:\"+selector);\n\t\t\tthis.onPreViewBuild(oldVnode, store);\n\t\t\tthis.currentVnode = !this.currentVnode ?\n\t\t\t\tthis.renderWrap(store) :\n\t\t\t\tthis.currentVnode;\n\t\t\t// console.warn(this.currentVnode);\n\t\t} else {\n\t\t\tthis.currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n\t\t}\n\t\t// console.log(\"XXXXXXXXXXXX01 selector:\"+selector+\"/this.updateCount:\"+this.updateCount);\n\t\tawait this.onViewShow(store, actionData)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e)\n\t\t\t});\n\t\t// console.log(\"XXXXXXXXXXXX02 selector:\"+selector+\"/isOrverride:\"+isOrverride+\"/oldVnode:\"+oldVnode);\n\t\tif (isOrverride) {\n\t\t\tif (oldVnode) {\n\t\t\t\t// console.warn(\"patchFromOtherVnode\");\n\t\t\t\tthis.patchFromOtherVnode(oldVnode, selector, this.currentVnode);\n\t\t\t} else {\n\t\t\t\t// console.warn(\"patchFromOtherVnode selector:\"+selector+\"/\"+ this.id+\"/isOrverride:\"+isOrverride+\"/oldVnode:\"+oldVnode);\n\t\t\t\tthis.patchFromOtherVnode(null, '#' + this.id, this.currentVnode);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.patch('#' + this.id, this.currentVnode);\n\t\t}\n\t\tthis.updateCount++;\n\t\t// console.log(\"XXXXXXXXXXXX04 this.id:\" + this.id+\"/this.updateCount:\"+this.updateCount);\n\t\t// console.log(action);\n\t\tif (this.updateCount <= 2 && (!action || action.type === \"Attach\")) {\n\t\t\tthis.updateCount++;\n\t\t\tawait this.onAfterAttachWrap(store, actionData);\n\t\t} else {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.updateCount = 0\n\t\t\t}, 2000);\n\t\t}\n\t\tawait this.onViewShown(store, actionData)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e)\n\t\t\t});\n\t}\n\tupdateReactive(store, actionData) {\n\t\treturn new Promise(\n\t\t\t(resolve, reject) => {\n\t\t\t\t// this.updateReactiveCallCount++;\n\t\t\t\t// const storePagesKey =\"pagesData\"\n\t\t\t\t//       console.error(\"updateReactive:\"+(store[storePagesKey]?store[storePagesKey].length:null));\n\t\t\t\tif (this.updateReactiveCallTimer) {\n\t\t\t\t\tconst clearTimer = this.updateReactiveCallTimer;\n\t\t\t\t\tconst pre = this.updateReactivePromise.get(clearTimer);\n\t\t\t\t\tclearTimeout(this.updateReactiveCallTimer);\n\t\t\t\t\tpre.resolve();\n\t\t\t\t\tsetTimeout(() => { this.updateReactivePromise.delete(clearTimer) })\n\t\t\t\t}\n\t\t\t\tthis.updateReactiveCallTimer = setTimeout(() => {\n\t\t\t\t\tconst oldVnode = store.oldVnode;\n\t\t\t\t\tconst selector = store.selector;\n\t\t\t\t\tconst isOrverride = store.isOrverride;\n\t\t\t\t\tthis.currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n\t\t\t\t\t// console.log(nodeFrame.rootVnode);\n\t\t\t\t\t// console.error(this.currentVnode);\n\t\t\t\t\t// console.log('A0101 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/id:' + this.id);\n\t\t\t\t\tconst promiseOnViewShow = this.onViewShow(store, actionData);\n\t\t\t\t\t// console.log('A102 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n\t\t\t\t\tpromiseOnViewShow.then(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.patch(\"#\" + this.id, this.currentVnode);\n\t\t\t\t\t\t\t// console.log('A103 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n\t\t\t\t\t\t\t//this.onAfterAttach(store);\n\t\t\t\t\t\t\t// console.log('A104 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n\t\t\t\t\t\t\tconst promiseOnViewShown = this.onViewShown(store, actionData);\n\t\t\t\t\t\t\tpromiseOnViewShown.then(\n\t\t\t\t\t\t\t\t() => { resolve() },\n\t\t\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t\t\t\t\treject(e)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}, (e) => {\n\t\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t\t\treject(e)\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\t// console.log('A105 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n\t\t\t\t});\n\t\t\t\tthis.updateReactivePromise.set(this.updateReactiveCallTimer, { resolve, reject })\n\t\t\t}\n\t\t)\n\t}\n\tinit() {}\n\t// attache to\n\tasync attach(parentView = this.parentView, selector, data) {\n\t\tthis.parentView = parentView;\n\t\tlet taregetSelecotor = selector;\n\t\tif (!selector) {\n\t\t\t// console.warn(\"★attach selector is null :\" + selector + \"/this.id:\" + this.id);\n\t\t\ttaregetSelecotor = this.id;\n\t\t}\n\t\tif (this.isAttached()) {\n\t\t\talert('attached!!!');\n\t\t\treturn;\n\t\t}\n\t\t//\n\t\tconst store = Store.getStore();\n\t\tthis.onPreViewBuild(store)\n\t\tthis.activeViewTree = viewAttachQueue.addActiveView(parentView, this, this.activeViewTree);\n\t\t// console.log('A08---attach ==selector:' + taregetSelecotor + '/parentView:' + parentView.id + \"/this.id:\" + this.id);\n\t\tconst action = ActionCreator.creatAttachAction(parentView, this, data);\n\t\tawait this.dispatch(action);\n\t}\n\tisAttached() {\n\t\tconst currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n\t\tif (currentVnode === this.currentVnode) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tasync dispatch(action) {\n\t\tawait this.dispatcher.dispatch(action);\n\t\t// console.log(\"dispatchered /this.id:\" + this.id);\n\t}\n\tgetElementById(id) {\n\t\tconst elements = this.es.getElements(this.currentVnode, '#' + id);\n\t\treturn elements && elements.length > 0 ?\n\t\t\telements[0] :\n\t\t\tnull;\n\t}\n\tasync onAfterAttachWrap(store, actionData) {\n\t\tif (this.updateCount > 2) {\n\t\t\treturn;\n\t\t}\n\t\t// console.log(\"XXXXXXXXXXXX03 id:\"+this.id+\"/this.updateCount:\"+this.updateCount);\n\t\t// console.log(nodeFrame.rootVnode);\n\t\t// console.error(this.currentVnode);\n\t\tawait this.onAfterAttach(store, actionData);\n\t}\n\tasync onAfterAttach(store, actionData) {\n\t\tconst currentVnode = this.currentVnode;\n\t\t// while (viewAttachQueue.hasItem()) {\n\t\t//   let item = viewAttachQueue.poll();\n\t\t//   item.view.currentVnode = this.es.getElements(currentVnode, item.selector);\n\t\t// }\n\t}\n\tchangeAnotherView(parentView, selector, nextView) {\n\t\tthis.onViewHide(nextView, store, actionData);\n\t\tconst action = ActionCreator.creatAttachAction(parentView, this, data);\n\t\tthis.dispatch(action);\n\t\tthis.onViewHidden(nextView, store, actionData);\n\t}\n\t// Event listener\n\tonViewLoad(store, actionData) {\n\t\t// console.log('m001 baseView.onViewLoad name:' + name + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n\t}\n\tonViewLoaded(store, actionData) {\n\t\t// console.log('m002 baseView.onViewLoaded name:' + name + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n\t}\n\tonPreViewBuild(store, actionData) {\n\t\t// console.log('m003a baseView.onPreViewBuild store:' + store + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\t// console.log('m003-- baseView.onViewShow newNode:' + '/store:' + store+\"/this.id:\"+ this.id);\n\t}\n\tasync onViewShown(store, actionData) {\n\t\t// console.log('m004-- baseView.onViewShown newNode:' + '/store:' + store+\"/this.id:\"+ this.id);\n\t\t//console.log(JSON.stringify(this.currentVnode));\n\t}\n\tasync onViewHide(nextView, store, actionData) {\n\t\t// console.log('m005 baseView.onViewHide nextView:' + nextView + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n\t\t//console.log(JSON.stringify(this.currentVnode));\n\t\treturn true;\n\t}\n\tasync onViewHidden(nextView, store, actionData) {\n\t\t// console.log('m006 baseView.onViewHidden nextView:' + nextView + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n\t}\n\trender() {\n\t\tconst elm = vu.create(\"BaseView\", \"BaseView\");\n\t\treturn elm;\n\t}\n\trenderWrap(store, data) {\n\t\t// console.log('renderWrap'+\" id:\"+this.id+\"/this.isNotRenderWrap:\"+this.isNotRenderWrap);\n\t\tconst classNames = this.className ? Array.isArray(this.className) ? this.className : [this.className] : [];\n\t\tconst newVnode = this.isNotRenderWrap ?\n\t\t\tthis.render(store, data) :\n\t\t\tdiv(this.id, classNames, {}, [this.render(store, data)]);\n\t\t// console.log(newVnode)\n\t\treturn newVnode;\n\t}\n\tgetAnker() {\n\t\treturn this.elm;\n\t}\n\n\tshow() {\n\t\tthis.currentVnode.elm.style.display = '';\n\t}\n\n\tclose() {\n\t\tthis.currentVnode.elm.style.display = 'none';\n\t}\n}\n","import vu from \"../util/viewUtil\";\nimport {\n\tBaseView\n} from \"../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../util/reactive/base/vtags\";\nexport class Header extends BaseView {\n\tconstructor(titleText) {\n\t\tsuper(\"header\", \"header\");\n\t\tthis.titleText = this.ms.getAppTitle();\n\t\tthis.Version = this.ms.getAppVersion();\n\t}\n\trender() {\n\t\tconst title = span(\"\", [\"MainTitle\"], this.titleText);\n\t\tconst version = span(\"\", [\"Version\"], this.Version);\n\t\tconst newVnode = div(\"aaa\", {\n\t\t\tstyle: {\n\t\t\t\tcolor: '#000'\n\t\t\t}\n\t\t}, [div(\"title\", [\"title\"], [title, version])]);\n\t\treturn newVnode;\n\t}\n}","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class MenuSelectActionCreator {\n  constructor() {}\n  static creatSelectAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"selectMenu\", targetView, data, storeKey);\n  }\n  static getStoreKey(){\n    return \"menuSelect\";\n  }\n}\n","const ua = navigator.userAgent.replace(/[\\.0-9]+/g,\"x\");\nconst domain = window.location;\nexport default {\n  dbName:\"CopiBon\",\n  ua:ua,\n  domain:domain\n}\n","export class IdbUtil {\n\tstatic currentTables(table, tabels) {\n\t\treturn tabels ? tabels : [table];\n\t}\n\t// static async getTransaction(db,tables,mode,reject,reject){\n\t//   let transaction = db.transaction(tables, mode);\n\t//   transaction.oncomplete = (event) => {\n\t//     db.close();\n\t//     resolve();\n\t//   };\n\t//   transaction.onerror = (event) => {\n\t//     db.close();\n\t//     reject();\n\t//   };\n\t// }\n\n\t//private\n\tstatic isMutch(value, condetions) {\n\t\tif (condetions === undefined || condetions === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (Array.isArray(condetions)) {\n\t\t\tfor (let condition of condetions) {\n\t\t\t\tif (IdbUtil.isMutch(value, condition)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor (let key in condetions) {\n\t\t\t\tlet condition = condetions[key];\n\t\t\t\tif (typeof condition === 'object') {\n\t\t\t\t\tif (IdbUtil.isMutch(value, condition)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet target = value[key];\n\t\t\t\t\tif (target !== condition) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t};\n\tstatic makeKeyRange(start, end, isNotEqualStart, isNotEqualEnd) {\n\t\treturn (isNotEqualStart === undefined && isNotEqualEnd === undefined) ?\n\t\t\tIDBKeyRange.bound(start, end, false, false) :\n\t\t\tIDBKeyRange.bound(start, end, isNotEqualStart, isNotEqualEnd);\n\t}\n\tstatic makeKeyRangeUpper(start, isNotEqualStart) {\n\t\treturn (isNotEqualStart !== true) ?\n\t\t\tIDBKeyRange.upperBound(start) :\n\t\t\tIDBKeyRange.upperBound(start, isNotEqualStart);\n\t}\n\tstatic makeKeyRangeLower(end, isNotEqualEnd) {\n\t\treturn (isNotEqualStart !== true) ?\n\t\t\tKeyRange.lowerBound(end) :\n\t\t\tIDBKeyRange.lowerBound(end, isNotEqualEnd);\n\t}\n\tstatic makeKeyRangeOnly(only) {\n\t\treturn (isNotEqualStart !== true) ?\n\t\t\tIDBKeyRange.only(only) :\n\t\t\tIDBKeyRange.lowerBound(end, isNotEqualEnd);\n\t}\n\t//IDを生成\n\tstatic buildKeyPath(key1, key2, key3, key4, key5) {\n\t\tlet array = [];\n\t\tif (key1 !== undefined) {\n\t\t\tarray.push((key1 + \"\")\n\t\t\t\t.split(\"&\")\n\t\t\t\t.join(\"&amp;\")\n\t\t\t\t.split(\".\")\n\t\t\t\t.join(\"&#046;\"));\n\t\t}\n\t\tif (key2 !== undefined) {\n\t\t\tarray.push((key2 + \"\")\n\t\t\t\t.split(\"&\")\n\t\t\t\t.join(\"&amp;\")\n\t\t\t\t.split(\".\")\n\t\t\t\t.join(\"&#046;\"));\n\t\t}\n\t\tif (key3 !== undefined) {\n\t\t\tarray.push((key3 + \"\")\n\t\t\t\t.split(\"&\")\n\t\t\t\t.join(\"&amp;\")\n\t\t\t\t.split(\".\")\n\t\t\t\t.join(\"&#046;\"));\n\t\t}\n\t\tif (key4 !== undefined) {\n\t\t\tarray.push((key4 + \"\")\n\t\t\t\t.split(\"&\")\n\t\t\t\t.join(\"&amp;\")\n\t\t\t\t.split(\".\")\n\t\t\t\t.join(\"&#046;\"));\n\t\t}\n\t\tif (key5 !== undefined) {\n\t\t\tarray.push((key5 + \"\")\n\t\t\t\t.split(\"&\")\n\t\t\t\t.join(\"&amp;\")\n\t\t\t\t.split(\".\")\n\t\t\t\t.join(\"&#046;\"));\n\t\t}\n\t\treturn array.join(\"\");\n\t};\n}","import { IdbUtil } from './idbUtil'\nconst MODE_R = \"readonly\";\nconst MODE_RW = \"readwrite\";\nexport class IndexeddbCore {\n\tconstructor(dbName) {\n\t\tthis.IDBKeyRange = window.IDBKeyRange;\n\t\tthis.indexedDB = window.indexedDB;\n\t\tthis.dbName = dbName;\n\t\tthis.keyPathMap = {};\n\t\tthis.db = null;\n\t\tthis.lastVersion = null;\n\t\tthis.isUpdateOpen = false;\n\t\tthis.timer = null;\n\t\tthis.isDBClosed = true;\n\t\tthis.tableCache = {};\n\t}\n\n\tgetOpenDB(newVersion) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.lastVersion = newVersion;\n\t\t\tif ((this.lastVersion) && this.db) {\n\t\t\t\tthis.db.close();\n\t\t\t\tthis.isUpdateOpen = true;\n\t\t\t\t// this.cacheClear();\n\t\t\t} else if (this.db && this.isDBClosed === false) {\n\t\t\t\tresolve(this.db);\n\t\t\t\treturn;\n\t\t\t} else if (this.lastVersion) {\n\t\t\t\tthis.isUpdateOpen = true;\n\t\t\t} else {\n\t\t\t\tthis.isUpdateOpen = false;\n\t\t\t}\n\t\t\t// TODO instance\n\t\t\tlet request = this.indexedDB.open(this.dbName, newVersion);\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tthis.db = event.target.result;\n\t\t\t\tthis.isDBClosed = false;\n\t\t\t\tresolve(this.db);\n\t\t\t};\n\t\t\trequest.onupgradeneeded = (event) => {\n\t\t\t\tthis.db = event.target.result;\n\t\t\t\tthis.isDBClosed = false;\n\t\t\t\tresolve(this.db);\n\t\t\t};\n\t\t\trequest.onabort = (e) => {\n\t\t\t\tresolve(e);\n\t\t\t};\n\t\t\trequest.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t}\n\tcloseDB() {\n\t\tif (this.isUpdateOpen) {\n\t\t\tthis.db.close();\n\t\t\tthis.isDBClosed = true;\n\t\t} else {\n\t\t\tif (this.timer) {\n\t\t\t\tclearTimeout(this.timer);\n\t\t\t}\n\t\t\tthis.timer = setTimeout(() => {\n\t\t\t\tthis.db.close();\n\t\t\t\tthis.isDBClosed = true;\n\t\t\t}, 1000);\n\t\t}\n\t}\n\tcacheClear() {\n\t\tconst keys = [];\n\t\tfor (let tableName in this.tableCache) {\n\t\t\tkeys.push(tableName);\n\t\t}\n\t\tfor (let tableName of keys) {\n\t\t\tconst tableCache = this.tableCache[tableName];\n\t\t\tfor (let index in tableCache) {\n\t\t\t\tdelete tableCache[index];\n\t\t\t}\n\t\t}\n\t}\n\tsetCache(tableName, key, value) {\n\t\tif (!value || !value.data) {\n\t\t\treturn;\n\t\t}\n\t\tconst data = value.data;\n\t\tfor (let key in data) {\n\t\t\tconst elm = data[key];\n\t\t\tif (elm && elm.byteLength) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!this.tableCache[tableName]) {\n\t\t\tthis.tableCache[tableName] = {};\n\t\t}\n\t\tthis.tableCache[tableName][key] = value;\n\t}\n\tgetCache(tableName, key) {\n\t\tconst tableCache = this.tableCache[tableName];\n\t\treturn tableCache ? tableCache[key] : null;\n\t}\n\tgetObjectStore(db, tableName, tables, mode) {\n\t\tif (mode === MODE_R) {\n\t\t\tthis.cacheClear();\n\t\t}\n\t\tlet transaction = db.transaction(tables, mode);\n\t\ttransaction.oncomplete = (event) => {\n\t\t\tthis.closeDB();\n\t\t};\n\t\ttransaction.onerror = (event) => {\n\t\t\tthis.closeDB();\n\t\t};\n\t\tconst table = transaction.objectStore(tableName);\n\t\treturn table;\n\t}\n\tthrowNewError(callerName) {\n\t\treturn (e) => {\n\t\t\tconsole.error(e);\n\t\t\tif (e.stack) {\n\t\t\t\tconsole.log(e.stack);\n\t\t\t} else {\n\t\t\t\tconsole.log(e.message, e);\n\t\t\t}\n\t\t\tconsole.error(\n\t\t\t\tcallerName ?\n\t\t\t\tcallerName :\n\t\t\t\t\"\" + \"/\" + e);\n\t\t\tthrow new Error(e);\n\t\t}\n\t}\n\tgetKeyPathByMap(tableName) {\n\t\treturn this.keyPathMap[tableName];\n\t}\n\tasync getKeyPath(tableName) {\n\t\tlet keyPathName = this.keyPathMap[tableName];\n\t\tif (keyPathName !== undefined && keyPathName !== null) {\n\t\t\treturn keyPathName;\n\t\t}\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"getKeyPath->getOpenDB\"));\n\t\tlet objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n\t\tthis.closeDB();\n\t\tlet keyPathNameCurrent = objectStore.keyPath;\n\t\tthis.keyPathMap[tableName] = keyPathNameCurrent;\n\t\treturn keyPathNameCurrent;\n\t}\n\t//private\n\tasync getCurrentVersion() {\n\t\tlet db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"getCurrentVersion->getOpenDB\"));\n\t\tconst version = db.version;\n\t\tthis.closeDB();\n\t\treturn version;\n\t};\n\t//public\n\tasync selectAll(payload) {\n\t\tlet { tableName, range, condetions } = payload;\n\t\treturn await this._selectAll(tableName, range, condetions);\n\t}\n\t//Select In-line-Keyで返す。\n\tasync _selectAll(tableName, range, direction) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_selectAll->getOpenDB tableName:\" + tableName));\n\t\tlet objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n\t\treturn await this._selectAllExecute(objectStore, range);\n\t};\n\t_selectAllExecute(objectStore, range, isGetFirstOne) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst list = [];\n\t\t\tlet req = range === undefined ?\n\t\t\t\tobjectStore.openCursor() :\n\t\t\t\tobjectStore.openCursor(range);\n\t\t\treq.onsuccess = (event) => {\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tif (cursor) {\n\t\t\t\t\tconsole.log(cursor.value)\n\t\t\t\t\tlist.push(cursor.value);\n\t\t\t\t\tif (isGetFirstOne) {\n\t\t\t\t\t\tresolve(list[0]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcursor.continue();\n\t\t\t\t} else {\n\t\t\t\t\tresolve(list);\n\t\t\t\t}\n\t\t\t};\n\t\t\treq.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\n\t}\n\t//public\n\tasync selectByKey(payload) {\n\t\tlet { tableName, key } = payload;\n\t\treturn await this._selectByKey(tableName, key);\n\t}\n\t//Select In-line-return promise;Keyで返す。\n\tasync _selectByKey(tableName, key) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_selectByKey->getOpenDB tableName:\" + tableName));\n\t\t// console.log(\"_selectByKey tableName:\" + tableName + \"/pk:\" + key);\n\t\t// console.log(key);\n\t\treturn await this._selectByKeyOnTran(db, tableName, key)\n\t\t\t.catch(this.throwNewError(\"_selectByKey->_selectByKeyOnTran tableName:\" + tableName + \"/mode:\" + MODE_R));\n\t}\n\t_selectByKeyOnTran(db, tableName, key, tables, mode = MODE_R) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst cachekey = tableName + \"_\" + mode;\n\t\t\tconst cache = this.getCache(cachekey, key);\n\t\t\tif (cache) {\n\t\t\t\tresolve(cache);\n\t\t\t} else {\n\t\t\t\tlet objectStore = this.getObjectStore(db, tableName, [tableName], mode);\n\t\t\t\tlet request = objectStore.get(key); //keyはsonomama\n\t\t\t\trequest.onsuccess = (event) => {\n\t\t\t\t\tconst result = request.result;\n\t\t\t\t\tresolve(result);\n\t\t\t\t\tthis.setCache(cachekey, key, result);\n\t\t\t\t};\n\t\t\t\trequest.onerror = (e) => {\n\t\t\t\t\treject(e);\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\t//public\n\tasync selectByKeys(payload) {\n\t\tlet { tableName, keys } = payload;\n\t\treturn await this._selectByKeys(tableName, keys);\n\t}\n\t//Select In-line-return promise;Keyで返す。\n\tasync _selectByKeys(tableName, keys) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_selectByKeys->getOpenDB tableName:\" + tableName));\n\t\treturn await this._selectByKeysOnTran(db, tableName, keys)\n\t\t\t.catch(this.throwNewError(\"_selectByKeys->_selectByKeyOnTran tableName:\" + tableName));\n\t}\n\tasync _selectByKeysOnTran(db, tableName, keys, tables) {\n\t\tlet objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n\t\tconst retMap = {};\n\t\tfor (let key of keys) {\n\t\t\tconst cache = this.getCache(tableName, key);\n\t\t\tconst result = cache ? cache : await this._getByKeyFromeObjectStore(objectStore, key);\n\t\t\tif (!cache) {\n\t\t\t\tthis.setCache(tableName, key, result);\n\t\t\t}\n\t\t\tretMap[key] = result;\n\t\t}\n\t\treturn retMap;\n\t}\n\t_getByKeyFromeObjectStore(objectStore, key) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!key) {\n\t\t\t\tresolve(null);\n\t\t\t}\n\t\t\tlet request = objectStore.get(key); //keyはsonomama\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tresolve(request.result);\n\t\t\t};\n\t\t\trequest.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t}\n\t//public\n\tasync selectFirstOne(payload) {\n\t\tlet { tableName, range, direction } = payload;\n\t\treturn await this._selectFirstOne(tableName, range, direction);\n\t}\n\t//Select FirstOnek\n\tasync _selectFirstOne(tableName, range, direction) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_selectFirstOne->getOpenDB tableName:\" + tableName));\n\t\tlet objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n\t\treturn await this._selectAllExecute(objectStore, range, true);\n\t};\n\n\t//InsertUpdate\n\tasync insertUpdate(payload) {\n\t\tlet { tableName, data, callback } = payload;\n\t\tconst keyPathName = this.getKeyPathByMap();\n\t\treturn await this._insertUpdate(tableName, keyPathName, data, callback)\n\t\t\t.catch(this.throwNewError(\"insertUpdate->_insertUpdate tableName:\" + tableName));\n\t}\n\t//private\n\tasync _insertUpdate(tableName, keyPathName, data, callback) {\n\t\tconst key = data[keyPathName];\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_insertUpdate->getOpenDB tableName:\" + tableName));\n\t\tconst tables = IdbUtil.currentTables(tableName);\n\t\tconst value = await this._selectByKeyOnTran(db, tableName, key, tables, MODE_RW)\n\t\t\t.catch(this.throwNewError(\"_insertUpdate->_selectByKeyOnTran tableName:\" + tableName + \"/MODE_RW\"));\n\t\tif (callback) {\n\t\t\tcallback(value, data);\n\t\t}\n\t\tif (value === undefined) {\n\t\t\treturn await this._insertExecute(db, tableName, key, data, tables)\n\t\t\t\t.catch(this.throwNewError(\"_insertUpdate->_insertExecute tableName:\" + tableName));\n\t\t} else {\n\t\t\treturn await this._updateExecute(db, tableName, key, data, tables)\n\t\t\t\t.catch(this.throwNewError(\"_insertUpdate->_updateExecute tableName:\" + tableName));\n\t\t}\n\t}\n\t_insertExecute(db, tableName, key, data, tables) {\n\t\tlet objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet objectStoreRequest = objectStore.add(data); //,keyPath\n\t\t\tobjectStoreRequest.onsuccess = (event) => {\n\t\t\t\tresolve({ data, key });\n\t\t\t};\n\t\t\tobjectStoreRequest.onerror = (e) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t}\n\t_updateExecute(db, tableName, key, data, tables) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n\t\t\tlet request = objectStore.put(data); //,keyPathValue\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tresolve({ data, key });\n\t\t\t};\n\t\t\trequest.onerror = (e) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\tresolve(e);\n\t\t\t};\n\t\t});\n\t};\n\t//public\n\tasync deleteWithRange(payload) {\n\t\tlet { tableName, range, condetions } = payload;\n\t\treturn await this._deleteWithRange(tableName, range, condetions);\n\t}\n\t//Delete\n\tasync _deleteWithRange(tableName, range, condetions) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_deleteWithRange->getOpenDB tableName:\" + tableName));\n\t\tconst tables = IdbUtil.currentTables(tableName);\n\t\treturn await this._deleteWithRangeExecute(db, tableName, range, condetions, tables);\n\t};\n\t_deleteWithRangeExecute(db, tableName, range, condetions, tables) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n\t\t\tlet request = objectStore.openCursor(range);\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tlet list = [];\n\t\t\t\tif (cursor) {\n\t\t\t\t\tlet value = cursor.value;\n\t\t\t\t\tif (IdbUtil.isMutch(value, condetions)) {\n\t\t\t\t\t\tlet or = objectStore.delete(cursor.key);\n\t\t\t\t\t\tor.onsuccess = (event) => {\n\t\t\t\t\t\t\tlist.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tor.onerror = (e) => {\n\t\t\t\t\t\t\t//momiee\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tcursor.continue();\n\t\t\t\t} else {\n\t\t\t\t\tresolve(list);\n\t\t\t\t}\n\t\t\t};\n\t\t\trequest.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t}\n\t//public\n\tasync delete(payload) {\n\t\tlet { tableName, key } = payload;\n\t\treturn await this._delete(tableName, key);\n\t}\n\t//Delete\n\tasync _delete(tableName, keyPathValue) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_delete->getOpenDB tableName:\" + tableName));\n\t\tconst tables = IdbUtil.currentTables(tableName);\n\t\treturn await this._deleteOnTran(db, tableName, keyPathValue, tables);\n\t};\n\t_deleteOnTran(db, tableName, key, tables) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n\t\t\tlet request = objectStore.delete(key + \"\");\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tresolve({ tableName, key });\n\t\t\t}\n\t\t\trequest.onerror = (e) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t}\n\t//public\n\tasync truncate(payload) {\n\t\tlet { tableName } = payload;\n\t\treturn await this._truncate(tableName);\n\t}\n\t//truncate\n\tasync _truncate(tableName) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_truncate->getOpenDB tableName:\" + tableName));\n\t\tconst tables = IdbUtil.currentTables(tableName);\n\t\treturn await this._truncateExecute(db, tableName, tables);\n\t};\n\t//truncate\n\t_truncateExecute(db, tableName, tables) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n\t\t\tlet request = objectStore.clear();\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\trequest.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t};\n\tasync getObjectStoreNames() {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"getObjectStoreNames->getOpenDB\"));\n\t\tconst names = db.objectStoreNames;\n\t\tthis.closeDB();\n\t\treturn names;\n\t}\n\tasync isExistsObjectStore(tableName) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"isExistsObjectStore->getOpenDB tableName:\" + tableName));\n\t\tlet isExist = false;\n\t\tfor (let name of db.objectStoreNames) {\n\t\t\tif (name === tableName) {\n\t\t\t\tisExist = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.closeDB();\n\t\treturn isExist;\n\t}\n\t//public\n\tasync createStore(payload) {\n\t\tlet { tableName, keyPathName, isAutoIncrement } = payload;\n\t\treturn await this._createStore(tableName, keyPathName, isAutoIncrement);\n\t}\n\t//createStore\n\tasync _createStore(tableName, keyPathName, isAutoIncrement) {\n\t\tconst isExistsObjectStore = await this.isExistsObjectStore();\n\t\tif (isExistsObjectStore === false) {\n\t\t\tconst newVersion = (await this.getCurrentVersion()) + 1;\n\t\t\tconst db = await this.getOpenDB(newVersion)\n\t\t\t\t.catch(this.throwNewError(\"_createStore->getOpenDB tableName:\" + tableName));\n\t\t\tlet isExist = false;\n\t\t\tfor (let name of db.objectStoreNames) {\n\t\t\t\tif (name === tableName) {\n\t\t\t\t\tisExist = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isExist === false) {\n\t\t\t\tdb.createObjectStore(tableName, { keyPath: keyPathName });\n\t\t\t}\n\t\t\tthis.closeDB();\n\t\t};\n\t};\n\t//public\n\tasync dropStore(payload) {\n\t\tlet { tableName } = payload;\n\t\treturn await this._dropStore(tableName);\n\t}\n\t//DropStore\n\tasync _dropStore(tableName) {\n\t\tconst newVersion = (await this.getCurrentVersion()) + 1;\n\t\tconst db = await this.getOpenDB(newVersion)\n\t\t\t.catch(this.throwNewError(\"_dropStore->getOpenDB tableName:\" + tableName));\n\t\tdb.deleteObjectStore(tableName);\n\t\tthis.closeDB();\n\t\treturn;\n\t};\n}","import { IdbUtil } from './idbUtil'\nimport { IndexeddbCore } from './indexeddbCore'\nconst MODE_R = \"readonly\";\nconst MODE_RW = \"readwrite\";\nexport default class IndexeddbHelper {\n\tconstructor(dbName) {\n\t\tthis.core = new IndexeddbCore();\n\t\tthis.queue = [];\n\t}\n\tasync deQueue() {\n\n\t}\n\tasync inQueue(task) {\n\t\tthis.queue.push(task);\n\t}\n\tcreateTask(tableName, keys, mode) {\n\n\t}\n\t//Select In-line-Keyで返す。\n\tasync _selectAll(tableName, range, direction) {\n\t\treturn await this.core._selectAll(tableName, range, direction);\n\t};\n\t//Select In-line-return promise;Keyで返す。\n\tasync _selectByKey(tableName, key) {\n\t\treturn await this.core._selectByKey(tableName, key);\n\t}\n\t//Select In-line-return promise;Keyで返す。\n\tasync _selectByKeys(tableName, keys) {\n\t\treturn await this.core._selectByKeys(tableName, keys);\n\t}\n\t//Select FirstOnek\n\tasync _selectFirstOne(tableName, range, direction) {\n\t\treturn await this.core._selectFirstOne(tableName, range, direction);\n\t};\n\n\t//private\n\tasync _insertUpdate(tableName, keyPathName, data, callback) {\n\t\treturn await this.core._insertUpdate(tableName, keyPathName, data, callback);\n\t}\n\t//Delete\n\tasync _deleteWithRange(tableName, range, condetions) {\n\t\treturn await this.core._deleteWithRange(tableName, range, condetions);\n\t};\n\t//public\n\tasync delete(payload) {\n\t\treturn await this.core.delete(payload);\n\t}\n\t//Delete\n\tasync _delete(tableName, keyPathValue) {\n\t\treturn await this.core._delete(tableName, keyPathValue);\n\t};\n\tasync truncate(payload) {\n\t\treturn await this.core.truncate(payload);\n\t}\n\t//truncate\n\tasync _truncate(tableName) {\n\t\treturn await this.core._truncate(tableName);\n\t};\n\t//truncate\n\tasync _createStore(tableName, keyPathName, isAutoIncrement) {\n\t\treturn await this.core._createStore(tableName, keyPathName, isAutoIncrement);\n\t};\n\tasync getObjectStoreNames() {\n\t\treturn await this.core.getObjectStoreNames();\n\t}\n}","import constant from './constant'\nimport idbh from './indexeddbHelper'\nconst initQueue = [];\nexport default class IdbRapper {\n\n\tconstructor(objectStoreName, keypathName = \"pk\") {\n\t\tif (constant.idbh === undefined) {\n\t\t\tconstant.idbh = new idbh(constant.dbName);\n\t\t}\n\t\tthis.idbh = constant.idbh;\n\t\tthis.keyPathName = keypathName;\n\t\tthis.objectStoreName = objectStoreName;\n\t\t//tableName, keyPathName\n\t}\n\tinit() {\n\t\treturn new Promise((reslve, reject) => {\n\t\t\tthis.idbh._createStore(this.objectStoreName, this.keyPathName)\n\t\t\t\t.then(() => {\n\t\t\t\t\treslve(true)\n\t\t\t\t}, (e) => {\n\t\t\t\t\treject(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t});\n\t\t});\n\t}\n\tisFished() {\n\t\treturn new Promise((reslve, reject) => {\n\t\t\tthis.firstPromise.then(() => {\n\t\t\t\treslve(true);\n\t\t\t}, (e) => {\n\t\t\t\tthrow e;\n\t\t\t})\n\t\t});\n\t}\n\tasync saveDataDefault(key, data, callback) {\n\t\tlet record = {\n\t\t\tpk: key,\n\t\t\tdata: data\n\t\t};\n\t\t//console.log(\"saveDataDefault 001:\" + key + \"/\" + data);\n\t\tawait this.saveData(record, undefined, callback);\n\t\t//console.log(\"saveDataDefault 002:\" + key + \"/\" + data);\n\t}\n\tasync saveData(dataObj, key, callback) {\n\t\t//console.log(\"saveData 001:\" + key + \"/\" + JSON.stringify(dataObj)+\"/dataObj.data:\"+dataObj.data);\n\t\tlet storeData = dataObj;\n\t\t//console.log(\"saveData 002:\" + key + \"/\" + dataObj[this.keyPathName]);\n\t\tif (dataObj[this.keyPathName] === undefined) {\n\t\t\tstoreData = {\n\t\t\t\tdata: dataObj\n\t\t\t};\n\t\t\tstoreData[this.keyPathName] = key;\n\t\t} else if (key !== undefined) {}\n\t\t//console.log(\"saveData 003:\" + key + \"/\" + dataObj +\"/this.objectStoreName:\"+this.objectStoreName);\n\t\tlet value = await this.idbh._insertUpdate(this.objectStoreName, this.keyPathName, storeData, callback);\n\t\t//console.log(\"saveData 004:\" + key + \"/\" + dataObj+\"/\"+JSON.stringify(value)+\"/\"+value.data.data);\n\t}\n\tasync loadDataMap(keys) {\n\t\tif (keys !== undefined) {\n\t\t\tlet recordAsLoadedData = await this.idbh._selectByKeys(this.objectStoreName, keys);\n\t\t\treturn recordAsLoadedData;\n\t\t}\n\t\treturn null;\n\t}\n\tasync loadData(key) {\n\t\tif (key !== undefined) {\n\t\t\tlet recordAsLoadedData = await this.idbh._selectByKey(this.objectStoreName, key);\n\t\t\treturn recordAsLoadedData;\n\t\t}\n\t\treturn null;\n\t}\n\tasync loadDataDefault(key) {\n\t\tlet recordAsDefaultLoad = await this.loadData(key);\n\t\treturn recordAsDefaultLoad === undefined || recordAsDefaultLoad === null ?\n\t\t\tnull :\n\t\t\trecordAsDefaultLoad.data;\n\t}\n\tasync loadAllData() {\n\t\treturn await this.idbh._selectAll(this.objectStoreName);\n\t}\n\tasync deleteData(key) {\n\t\tif (key !== undefined) {\n\t\t\treturn await this.idbh._delete(this.objectStoreName, key);\n\t\t}\n\t\treturn null;\n\t}\n\tasync getOsNames() {\n\t\treturn await this.idbh.getObjectStoreNames();\n\t}\n}","import idb from \"../../util/idb/idbRapper\";\nconst USER_ID = \"default\";\nconst PK_INCREMENT_STORE = \"pk_increment\";\nconst idbAccessors = new Map();\nexport class StorageService {\n\tconstructor(entityClass) {\n\t\tthis.entityClass = entityClass;\n\t\tthis.targetObj = typeof entityClass === \"string\" ? entityClass : new entityClass();\n\t\tthis.idbAccessor = null;\n\t\tthis.entityName = this.targetObj.getEntityName ?\n\t\t\tthis.targetObj.getEntityName() :\n\t\t\tentityClass;\n\t}\n\tgetStoreNameKey(userId = USER_ID) {\n\t\treturn userId + \"_\" + this.targetObj.getEntityName();\n\t}\n\tasync createStore(userId = USER_ID) {\n\t\tconst storeNameKey = this.getStoreNameKey(userId);\n\t\treturn await this.createStoreByName(storeNameKey, userId);\n\t}\n\tasync createStoreByName(storeNameKey, userId = USER_ID) {\n\t\tconst idbAccessor = idbAccessors.has(storeNameKey) ?\n\t\t\tidbAccessors.get(storeNameKey) :\n\t\t\tnew idb(storeNameKey);\n\t\tawait idbAccessor.init()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e)\n\t\t\t});\n\t\tidbAccessors.set(storeNameKey, idbAccessor);\n\t\tthis.idbAccessor = idbAccessor;\n\t\treturn idbAccessor;\n\t}\n\tasync setStore(userId = USER_ID) {\n\t\tthis.idbAccessor = await this.createStore(userId);\n\t\treturn;\n\t}\n\tasync save(pk, data) {\n\t\tlet saveData = data;\n\t\tif (data.toObj) {\n\t\t\tsaveData = data.toObj();\n\t\t}\n\t\t// console.log(saveData);\n\t\tawait this.idbAccessor.saveDataDefault(pk, saveData);\n\t\treturn data; //\n\t}\n\tasync loadAll() {\n\t\tconst list = await this.idbAccessor.loadAllData();\n\t\tconst retList = [];\n\t\tfor (let row of list) {\n\t\t\tconst cloned = this.getEntity(row);\n\t\t\tretList.push(cloned);\n\t\t}\n\t\treturn retList;\n\t}\n\tasync getAsMap(keys) {\n\t\tconst pkList = [];\n\t\tfor (let key of keys) {\n\t\t\tconst pk = key && key.pk ?\n\t\t\t\tkey.pk :\n\t\t\t\tkey;\n\t\t\tpkList.push(pk);\n\t\t}\n\t\tconst recordMap = await this.idbAccessor.loadDataMap(pkList);\n\t\tconst retMap = {};\n\t\tfor (let key in recordMap) {\n\t\t\tconst record = recordMap[key];\n\t\t\tretMap[key] = this.getEntity(record);\n\t\t}\n\t\treturn retMap;\n\t}\n\tasync get(key) {\n\t\tconst pk = key && key.pk ?\n\t\t\tkey.pk :\n\t\t\tkey;\n\t\tconst record = await this.idbAccessor.loadData(pk);\n\t\treturn this.getEntity(record);\n\t}\n\tgetEntity(record) {\n\t\tif (!record || !record.data) {\n\t\t\treturn record;\n\t\t}\n\t\tif (record.data && !this.targetObj.getEntityName) {\n\t\t\treturn record.data;\n\t\t}\n\t\tconst targetObj = new this.entityClass();\n\t\ttargetObj.load(record.data);\n\t\treturn targetObj;\n\t}\n\tasync delete(key) {\n\t\treturn await this.idbAccessor.deleteData(key);\n\t}\n}","import { ObjectUtil } from \"../../util/objectUtil\";\nconst refcols = [];\nexport class BaseEntity {\n\tconstructor(entitiyName = \"BaseEntity\", pk = \"oid\") {\n\t\tthis.pk = pk;\n\t\tthis.entitiyName = entitiyName;\n\t\tthis.refs = [];\n\t}\n\tisEntitiy() {\n\t\treturn true;\n\t}\n\tgetEntityName() {\n\t\treturn this.entitiyName; // this.constructor.name;\n\t}\n\tcreate() {}\n\tupdate() {}\n\tsetPk(pkValue) {\n\t\treturn this[this.pk] = pkValue;\n\t}\n\tgetPk() {\n\t\treturn this[this.pk];\n\t}\n\tinclude(obj) {\n\t\t// console.log(\"!=======BaseEntity.include====================!!\");\n\t\t// console.log(obj);\n\t}\n\texclude(obj) {\n\t\t// console.log(\"!=======BaseEntity.exclude====================!!\");\n\t\t// console.log(obj);\n\t}\n\tasync deepClone() {\n\t\treturn await ObjectUtil.deepClone(this);\n\t}\n\tload(obj) {\n\t\tfor (let key in obj) {\n\t\t\tthis[key] = obj[key];\n\t\t}\n\t}\n\ttoObj() {\n\t\tlet cloned = ObjectUtil.singleDeepCloneWithoutFuncs(this);\n\t\tdelete cloned.pk;\n\t\tdelete cloned.refs;\n\t\tthis.exclude(cloned);\n\t\treturn cloned;\n\t}\n\tcalcSize() {\n\t\tlet size = 0;\n\t\treturn size;\n\t}\n\tgetRefCols() {\n\t\treturn refcols;\n\t}\n}","import { BaseEntity } from \"./baseEntity\";\nconst EnitiyName = \"Binary\";\nexport class Binary extends BaseEntity {\n\tconstructor(arrayBuffer) {\n\t\tsuper(EnitiyName);\n\t\tthis._ab = arrayBuffer;\n\t\tthis.createDate = Date.now();\n\t\tthis.updateDate = Date.now();\n\t}\n\tstatic getEnitiyName() {\n\t\treturn EnitiyName;\n\t}\n\tset ab(_ab) {\n\t\tif (buffer && !buffer.byteLength) {\n\t\t\talert(\"not arrayBuffer!\");\n\t\t}\n\t\tthis._ab = _ab;\n\t}\n\tget ab() {\n\t\treturn this._ab;\n\t}\n\n\tload(obj) {\n\t\tsuper.load(obj)\n\t\tthis._ab = new Uint8Array(this._ab)\n\t\t\t.buffer\n\t}\n\tcreate() {\n\t\treturn new Binary();\n\t}\n}","import {BaseEntity} from \"./baseEntity\";\nconst DELIMITER = \"-\";\nexport class PrimaryKey {\n  constructor(pk) {\n    this.pk = pk;\n  }\n\n  static getDelimiter() {\n    return \"-\";\n  }\n\n  static assemblePK(entity, number) {\n    return entity.getEntityName() + DELIMITER + number;\n  }\n  static isPrimaryKey(value){\n    return value && typeof value ===\"string\" && value.split(DELIMITER).length === 2;\n  }\n\n  static getPrimaryKey(value){\n    if(value){\n      if(PrimaryKey.isPrimaryKey(value)){\n        return value;\n      }else if(value.getEntityName && value.getPk){\n        return value.getPk();\n      }else if(value.oid){\n        return value.oid;\n      }else if(value.pk){\n        return value.pk;\n      }\n      return null;\n    }else{\n      return value;\n    }\n  }\n  static getEntityName(pk){\n    return PrimaryKey.getPrimaryKey(pk).split(DELIMITER)[0];\n  }\n}\n","import bc from \"../../util/binaryConverter\"\nimport {StorageService} from \"./storageService\"\nconst USER_ID = \"default\";\nconst PK_INCREMENT_STORE = \"pk_increment\";\nconst PK_ROW = \"pk_row\";\nexport class PrimaryKeyAutoIncrementService {\n  constructor(userid) {\n    this.ss = new StorageService(userid + \"_\" + PK_INCREMENT_STORE);\n  }\n  async acquirePKNo(userid = USER_ID, targetObj, rowKey = PK_ROW) {\n    const entityName = targetObj.getEntityName();\n    let currentObjectStore = await this.ss.createStoreByName(userid + \"_\" + PK_INCREMENT_STORE, userid);\n    let record = await this.ss.get(rowKey);\n    let nextCountAB = this.countUpUint32(\n      record\n      ? record.data\n      : 0);\n    if (!record) {\n      record = {\n        data: nextCountAB\n      };\n    }\n    let {data, keyPath} = await this.ss.save(rowKey, record, (result, record) => {\n      let nextCountAB = this.countUpUint32(record.data);\n      result.data = nextCountAB;\n    });\n    return bc.arrayBuffer2base64(data);\n  }\n  countUpUint32(arrayBuffer) {\n    let currentCount = arrayBuffer;\n    if (!currentCount) {\n      currentCount = new ArrayBuffer(4);\n    }\n    if (currentCount.data) {\n      currentCount = currentCount.data;\n    } else {}\n    //alert(JSON.stringify(currentCount));\n    let dataview = new DataView(currentCount);\n    let count = dataview.getUint32(0) | 0; // 0\n    count++;\n    dataview.setInt32(0, count >>> 0);\n    return dataview.buffer;\n  }\n}\n","import { StorageService } from \"./storageService\"\nimport { Binary } from \"./binary\";\nimport { ObjectUtil } from \"../../util/objectUtil\";\nimport { PrimaryKey } from \"./primaryKey\";\nimport { PrimaryKeyAutoIncrementService } from \"./primaryKeyAutoIncrementService\";\nconst title = \"CopiBon\";\nconst USER_ID = \"default\";\nconst titlePrefix = \"title_\";\nconst BINALY_PK_ROW = \"BINALY_PK_ROW\";\nconst entityManagerImpls = {};\nconst binarySizeMap = {};\nconst binaryEntity = new Binary();\nexport class EntityManagerImpl {\n\tconstructor(entityManager, entityClass, userId = USER_ID) {\n\t\tthis.userId = userId;\n\t\tthis.entityClass = entityClass;\n\t\tthis.entity = new entityClass();\n\t\tthis.entityName = this.entity.getEntityName();\n\t\tthis.isBinary = binaryEntity.getEntityName() === this.entityName;\n\t\tthis.ss = new StorageService(entityClass);\n\t\tthis.pkais = new PrimaryKeyAutoIncrementService(userId);\n\t\tthis.em = entityManager;\n\t}\n\n\tasync init() {\n\t\t//console.log(\"init! \"+this.entityName);\n\t\treturn await this.ss.setStore(this.userId);\n\t}\n\tasync save(data) {\n\t\tconst result = await this.saveExecute(data, false);\n\t\tif (this.isBinary) {\n\t\t\tconst currentPK = result.getPk();\n\t\t\tlet size = await ObjectUtil.recalcSize(this, result);\n\t\t\tbinarySizeMap[currentPK] = size;\n\t\t}\n\t\treturn result;\n\t}\n\tasync saveWithBinary(data) {\n\t\treturn await this.saveExecute(data, true);\n\t}\n\tasync saveExecute(data, isWithBinary) {\n\t\t//console.log(\"EntityManagerImpl save!!A!! data:\" + data+\"/isWithBinary:\"+isWithBinary);\n\t\tif (!data || !data.getEntityName || !data.getPk || data.getEntityName() !== this.entityName) {\n\t\t\tconsole.log(\"EntityManagerImpl save!!Z!! data:\" + data.getEntityName() + \"/this.entityName:\" + this.entityName + \"/data.getPk:\" + data.getPk);\n\t\t\treturn;\n\t\t}\n\t\tlet currentPK = data.getPk();\n\t\tif (!currentPK) {\n\t\t\tcurrentPK = PrimaryKey.assemblePK(this.entity, await this.pkais.acquirePKNo(this.userId, this.entity));\n\t\t}\n\t\tif (!isWithBinary) {\n\t\t\tawait this.saveArrayBufferCols(data);\n\t\t} else {\n\t\t\t// console.log(\"EntityManagerImpl saveBinary!!A!! data:\" + data + \"/isWithBinary:\" + isWithBinary);\n\t\t\t// console.log(data);\n\t\t\t// console.log(\"EntityManagerImpl saveBinary!!B!! data:\" + data + \"/isWithBinary:\" + isWithBinary);\n\t\t}\n\t\tdata.setPk(currentPK);\n\t\t// console.log(data);\n\t\tconst savedData = await this.ss.save(currentPK, data);\n\t\t// console.log(\"EntityManagerImpl save!!B!! savedData:\" + savedData);\n\t\treturn savedData;\n\t}\n\tasync saveArrayBufferCols(data) {\n\t\tif (binaryEntity.getEntityName() === data.getEntityName()) {\n\t\t\treturn;\n\t\t}\n\t\t// console.log(\"saveArrayBufferCols save!!A!! data:\" + data);\n\t\t// console.log(data);\n\t\t// console.log(\"saveArrayBufferCols save!!B!! data:\" + data);\n\t\tfor (let key in data) {\n\t\t\tconst column = data[key];\n\t\t\tif (!column) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Array.isArray(column)) {\n\t\t\t\tfor (let index of column) {\n\t\t\t\t\tconst item = column[index];\n\t\t\t\t\tif (!item || item.byteLength) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst pk = await this.saveArrayBufferData(item);\n\t\t\t\t\tcolumn[index] = new PrimaryKey(pk);\n\t\t\t\t}\n\t\t\t} else if (column.byteLength) {\n\t\t\t\tconst pk = await this.saveArrayBufferData(column);\n\t\t\t\tdata[key] = new PrimaryKey(pk);\n\t\t\t}\n\t\t}\n\t}\n\tasync saveArrayBufferData(item) {\n\t\t// console.log(\"saveArrayBufferData save!!A!! item:\" + item);\n\t\t// console.log(item);\n\t\t// console.log(\"saveArrayBufferData save!!B!! item:\" + item);\n\t\tif (!item.getEntityName && item.byteLength) {\n\t\t\tconst data = new Binary(item);\n\t\t\tconst newPK = await this.getBinaryPK();\n\t\t\tdata.setPk(newPK);\n\t\t\t// console.log(\"saveArrayBufferData save!!C!! data:\" + data);\n\t\t\t// console.log(data);\n\t\t\tawait this.em.Binary.saveWithBinary(data);\n\t\t\treturn newPK;\n\t\t} else if (item.getEntityName && item.getEntityName() === \"PrimaryKey\") {\n\t\t\treturn item;\n\t\t} else if (item.getEntityName && item.getEntityName() === \"Binary\") {\n\t\t\tconst currentPK = item.getPk();\n\t\t\tif (currentPK) {\n\t\t\t\titem.setPk(currentPK);\n\t\t\t\t// console.log(\"saveArrayBufferData save!!D!! item:\" + item);\n\t\t\t\tawait this.em.Binary.saveWithBinary(item);\n\t\t\t\treturn currentPK;\n\t\t\t} else {\n\t\t\t\t// console.log(\"saveArrayBufferData save!!E!! item:\" + item);\n\t\t\t\tconst newPK = await this.getBinaryPK();\n\t\t\t\titem.setPk(newPK);\n\t\t\t\tawait this.em.Binary.saveWithBinary(item);\n\t\t\t\treturn newPK;\n\t\t\t}\n\t\t}\n\t}\n\tasync getBinaryPK() {\n\t\tconst newNumber = await this.pkais.acquirePKNo(this.userId, binaryEntity, BINALY_PK_ROW);\n\t\treturn PrimaryKey.assemblePK(binaryEntity, newNumber);\n\t}\n\tasync loadAll() {\n\t\treturn await this.ss.loadAll(this.entity);\n\t}\n\tasync getAsMap(keys) {\n\t\treturn await this.ss.getAsMap(keys, this.entity);\n\t}\n\tasync get(pk, isSizeOnly) {\n\t\tif (isSizeOnly) {\n\t\t\tif (binarySizeMap[pk]) {\n\t\t\t\treturn binarySizeMap[pk] * 1;\n\t\t\t}\n\t\t}\n\t\tconst key = \"EntityManagerImpl.get pk:\" + pk + \"/entityName:\" + this.entityName;\n\t\tconsole.time(key)\n\t\tconst result = await this.ss.get(pk, this.entity);\n\t\t// console.log(\"get this.entityName:\" + this.entityName + \"/pk:\" + pk);\n\t\tconsole.timeEnd(key)\n\t\tif (this.isBinary) {\n\t\t\tlet size = await ObjectUtil.recalcSize(this, result);\n\t\t\tbinarySizeMap[pk] = size;\n\t\t}\n\t\treturn result;\n\t}\n\tasync delete(pk) {\n\t\tif (this.isBinary) {\n\t\t\tdelete binarySizeMap[pk];\n\t\t}\n\t\treturn await this.ss.delete(pk);\n\t}\n\n}","import { StorageService } from \"./storageService\"\nimport { EntityManagerImpl } from \"./entityManagerImpl\"\nimport { Binary } from \"./binary\";\nimport { ObjectUtil } from '../../util/objectUtil';\nimport { PrimaryKey } from \"./primaryKey\";\nconst USER_ID = \"default\";\nexport class EntityManager {\n\tconstructor() {}\n\tasync initAsNewUser(entities, userId = USER_ID) {\n\t\tconst promises = [];\n\t\tfor (let entityClass of entities) {\n\t\t\tawait this.initParEntity(entityClass, userId);\n\t\t}\n\t\tawait this.initParEntity(Binary, userId);\n\t}\n\tasync initParEntity(entityClass, userId) {\n\t\tObjectUtil.addBaseCLassese(entityClass);\n\t\tconst entity = new entityClass();\n\t\tconst entityName = entity.getEntityName();\n\t\tthis[entityName] = new EntityManagerImpl(this, entityClass, userId);\n\t\tawait this[entityName].init();\n\t}\n\tisPrimaryKey(item) {\n\t\tif (item && item.getEntityName() === 'PrimaryKey') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tasync getAsMap(keys) {\n\t\tif (!keys || keys.length < 1) {\n\t\t\tconsole.error(\"keys:\" + keys);\n\t\t\talert(\"keys:\" + keys);\n\t\t\treturn null;\n\t\t}\n\t\tconst pk = keys[0];\n\t\tconst truePk = PrimaryKey.getPrimaryKey(pk);\n\t\tif (!PrimaryKey.isPrimaryKey(truePk)) {\n\t\t\tconsole.log(truePk);\n\t\t\treturn null;\n\t\t}\n\t\tconst entityName = PrimaryKey.getEntityName(truePk);\n\t\t// console.log(\"★get entityName:\"+entityName+truePk);\n\t\treturn await this[entityName].getAsMap(keys, this.entity);\n\t}\n\tasync get(pk) {\n\t\tif (!pk) {\n\t\t\tconsole.error(\"pk:\" + pk);\n\t\t\talert(\"pk:\" + pk);\n\t\t\treturn null;\n\t\t}\n\t\tconst truePk = PrimaryKey.getPrimaryKey(pk);\n\t\tif (!PrimaryKey.isPrimaryKey(truePk)) {\n\t\t\tconsole.log(truePk);\n\t\t\treturn null;\n\t\t}\n\t\tconst entityName = PrimaryKey.getEntityName(truePk);\n\t\t// console.log(\"★get entityName:\"+entityName+truePk);\n\t\treturn await this[entityName].get(truePk);\n\t}\n\tasync delete(pk) {\n\t\tif (!pk) {\n\t\t\talert(pk);\n\t\t\treturn null;\n\t\t}\n\t\tconst entityName = PrimaryKey.getEntityName(pk);\n\t\t// console.log(\"★remove entityName:\"+entityName);\n\t\treturn await this[entityName].delete(pk);\n\t}\n}","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['images','setting','series','pages','outputsPars','exports']\nexport class Title extends BaseEntity {\n  constructor(titleId, titlePrefix, name) {\n    super(\"Title\");\n    //console.log(\"!=!titleId:\"+titleId+\"!=!titleId:\"+titleId+\"!=!name:\"+name+\"!=!\"+Date.now());\n    this.id = titleId;\n    this.prefix = titlePrefix;\n    this.name = name;\n    this.target = \"\";\n    this.no = \"\";\n    this.date = \"\";\n    this.pageNo = 0;\n    this.setting = null;\n    this.series = null;\n    this.pageNum = -1;\n    this.images = [];\n    this.pages = [];\n    this.outputsPars = [];\n    this.exports = [];\n    this.direction = \"r2l\";\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n    //console.log(this);\n  }\n  getRefCols(){\n    return refcols;\n  }\n\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['binary','thumbnail']\nexport class Images extends BaseEntity {\n  constructor() {\n    super(\"Images\");\n    this.name = null;\n    this.binary = null;\n    this.type = null;\n    this.thumbnail = null;\n    this.modifyDate=null;\n    this.width = null;\n    this.height = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['binary']\nexport class Thumbnales extends BaseEntity{\n  constructor() {\n    super(\"Thumbnales\");\n    this.name = null;\n    this.binary = null;\n    this.type = null;\n    this.width = null;\n    this.height = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['target']\nexport class Series extends BaseEntity{\n  constructor(name) {\n    super(\"Series\");\n    this.name=name;\n    this.target=null;\n    this.no=\"\";\n    this.date=\"\";\n    this.pageNo=0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","const order = {\n  'number': 1,\n  'string': 2,\n  'boolean': 3,\n  'object': 4,\n  'function': 5,\n  'symbol': 6,\n  'undefined': 7\n};\n\nexport class Sorter {\n  constructor() {}\n  static asc(list, colName) {\n    const func = Sorter.execute([\n      {\n        colName: colName,\n        isDESC: false\n      }\n    ]);\n    list.sort(func);\n  }\n  static desc(list, colName) {\n    const func = Sorter.execute([\n      {\n        colName: colName,\n        isDESC: true\n      }\n    ]);\n    list.sort(func);\n  }\n  static orderBy(list, orders) {\n    const func = Sorter.execute(orders);\n    list.sort(func);\n  }\n  static execute(orders) {\n    return(objA, objB) => {\n      for (let order of orders) {\n        const {colName, isDESC} = order;\n        if(objA === objB){\n          return 0;\n        }\n        if(!objA){\n          return isDESC\n            ? 1\n            : -1;\n        }\n        if(!objB){\n          return isDESC\n            ? -1\n            : 1;\n        }\n        let a = objA[colName];\n        let b = objB[colName];\n        //console.log(\"a:\"+a+\"/b:\"+b);\n        if (a < b) {\n          return isDESC\n            ? 1\n            : -1;\n        } else if (a > b) {\n          return isDESC\n            ? -1\n            : 1;\n        }\n      }\n      return 0;\n    };\n  }\n  static thinningNullData(array) {\n    const thinninged = [];\n    for (let index in array) {\n      const element = array[index];\n      if (element === null || element === undefined) {\n        continue;\n      }\n      thinninged.push(element);\n    }\n    const length = array.length;\n    for (let i = 0; i < length; i++) {\n      array.pop();\n    }\n    for (let index in thinninged) {\n      const element = thinninged[index];\n      array.push(element);\n    }\n  }\n  static typeof() {}\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class ProgressActionCreator {\n  constructor() {}\n  static creatAddAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addProgressBar\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeProgressBar\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateProgressBar\", targetView, data, storeKey);\n  }\n  static creatCompleatAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"compleatProgressBar\", targetView, data, storeKey);\n  }\n}\n","import {MainService} from \"./mainService\";\nimport {ProgressActionCreator} from \"../reduxy/action/progressActionCreator\";\nimport {ActionDispatcher} from \"../util/reactive/actionDispatcher\";\nexport class FileUploadExecuter {\n  constructor() {\n    this.actionDispatcher = ActionDispatcher.createStandAlone();\n    this.name = \"FileUploader\";\n    this.ms = MainService.getInstance();\n  }\n  async readAsArrayBuffer(file) {\n    return await this.read(file, \"ArrayBuffer\");\n  }\n  async readAsBinaryString(file) {\n    return await this.read(file, \"BinaryString\");\n  }\n  async readAsDataURL(file) {\n    return await this.read(file, \"DataURL\");\n  }\n  async readAsText(file) {\n    return await this.read(file, \"text\");\n  }\n  read(file, type = \"binaryString\") {\n    return new Promise((resolve, reject) => {\n      this.reader = new FileReader();\n      //this.progress.init();\n      this.reader.onerror = (event) => {\n        reject(this.errorHandler(event));\n      };\n      this.reader.onprogress = (event) => {\n        this.updateProgress(event);\n      };\n      this.reader.onabort = (e) => {\n        alert('File read cancelled');\n      };\n\n      this.reader.onloadstart = (event) => {\n        this.onLoadStart(event)\n      };\n      this.reader.onload = (event) => {\n        resolve(this.onload(event));\n      };\n      if (type === \"ArrayBuffer\") {\n        this.reader.readAsArrayBuffer(file);\n      } else if (type === \"BinaryString\") {\n        this.reader.readAsBinaryString(file);\n      } else if (type === \"DataURL\") {\n        this.reader.readAsDataURL(file);\n      } else {\n        this.reader.readAsText(file);\n      }\n    })\n  }\n  abortRead() {\n    if (this.reader) {\n      this.reader.abort();\n    }\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatRemoveAction());\n  }\n  errorHandler(event) {\n    switch (event.target.error.code) {\n      case event.target.error.NOT_FOUND_ERR:\n        alert('File Not Found!');\n        break;\n      case event.target.error.NOT_READABLE_ERR:\n        alert('File is not readable');\n        break;\n      case event.target.error.ABORT_ERR:\n        break; // noop\n      default:\n        alert('An error occurred reading this file.');\n    };\n  }\n\n  updateProgress(event) {\n    const percentLoaded = Math.round((event.loaded / event.total) * 100);\n    if (percentLoaded < 100) {\n      //this.progress.progress(percentLoaded);\n      this.actionDispatcher.dispatch(ProgressActionCreator.creatUpdateAction(null,{progress:percentLoaded}));\n\n    }\n  }\n  onload(event) {\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatCompleatAction());\n    return this.reader.result;\n  }\n  onLoadStart() {\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatAddAction());\n    //this.progress.start();\n  }\n}\n","import {Title} from \"../../entity/title\";\nimport {Images} from \"../../entity/images\";\nimport {Thumbnales} from \"../../entity/thumbnales\";\nimport {Series} from \"../../entity/series\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nimport {Sorter} from \"../../util/sorter\";\nimport {MainService} from \"../../service/mainService\";\nimport {FileUploadExecuter} from \"../../service/fileUploadExecuter\";\n\nconst TITLE_STORE_NAME = \"CopiBonTitles\";\nconst defaultTitle = \"CopiBon\";\nconst defaultName = \"DefaultName\";\nconst defaultTitlePrefix = \"title_\";\nexport class TitleManager {\n  constructor(entityManager, titleId) {\n    this.em = entityManager;\n    this.ms = MainService.getInstance();\n    this.ip = this.ms.ip;\n    this.im = this.ms.im;\n    this.tbm = this.ms.tbm;\n    this.sm = this.ms.sm;\n    console.log(\"title is new!!\" + this.tbm);\n    //this.load(titleId).then((title)=>{this.currentTitle=title;console.log(\"title is new!\")});\n  }\n  async loadCurrent() {\n    return this.currentTitle;\n  }\n  async isExist(titleId){\n    return titleId?!!await this.em.Title.get(titleId):false;\n  }\n  async load(titleId = defaultTitle) {\n    if(!titleId){\n      return null;\n    }\n    if (this.currentTitle && this.currentTitle.getPk() === titleId) {\n      return this.currentTitle;\n    }\n    let title = await this.em.Title.get(titleId);\n    if (!title) {\n      title = await this.createTitle(titleId);\n    }\n    this.currentTitle = title;\n    return title;\n  }\n\n  async createTitle(titleId = defaultTitle, titlePrefix = defaultTitlePrefix, name = defaultName) {\n    const title = new Title(titleId, titlePrefix, name);\n    title.setPk(titleId);\n    title.setting = titleId;\n    await this.sm.createDefault(titleId);\n    await this.em.Title.save(title);\n    return title;\n  }\n\n  async changeTitle(newTitleId) {\n    this.currentTitle = await this.loadTitle(newTitleId);\n    if (!this.currentTitle) {\n      this.currentTitle = await this.createTitle(defaultTitle, defaultTitlePrefix, defaultName);\n    }\n  }\n  async loadTitleList() {\n    return await this.em.Title.loadAll();\n  }\n  async saveTitle(title) {\n    if (title) {\n      title.updateDate = Date.now();\n      const images = title.images;\n      Sorter.thinningNullData(images);\n      for (let index in images) {\n        const image = images[index];\n        if (!PrimaryKey.isPrimaryKey(image)) {\n          images[index] = PrimaryKey.getPrimaryKey(image);\n        }\n      }\n      this.currentTitle = await this.em.Title.save(title);\n    }\n  }\n  async deleteTitleCascade() {\n    const titelId = this.titelId;\n    const titelPrefix = this.titelPrefix;\n  }\n  async addImageFiles(files) {\n    const title = await this.loadCurrent();\n    const images = title.images;\n    Sorter.thinningNullData(images);\n    const iamageEntitis = [];\n    let count = images.length;\n    for (let file of files) {\n      let {imagePk, imageEntity} = await this.im.saveImageFile(file, count);\n      count++;\n      images.push(imagePk);\n      iamageEntitis.push(imageEntity);\n    }\n    //console.log(images);\n    await this.saveTitle(title);\n    return iamageEntitis;\n  }\n  async addImage(name, dataURI) {}\n  async removeImage(pk) {\n    const title = await this.load();\n    const images = title.images;\n    for (let index in images) {\n      const imageEntityPk = images[index];\n      if (PrimaryKey.getPrimaryKey(imageEntityPk) === pk) {\n        await this.im.remove(pk);\n        delete images[index];\n      };\n    }\n    // console.log(images);\n    await this.saveTitle(title);\n  }\n  async getExports() {\n    const title = await this.loadCurrent();\n    if(title && title.exports && Array.isArray(title.exports)){\n      return title.exports;\n    }else{\n      title.exports = [];\n      await this.saveTitle(title);\n      return title.exports;\n    }\n  }\n  async getCurrentTitleName() {\n    const title = await this.loadCurrent();\n    return title.name;\n  }\n  async saveCurrent() {\n    const title = await this.loadCurrent();\n    await this.saveTitle(title);\n  }\n\n  async loadSettings() {\n    const title = await this.loadCurrent();\n    const pk = title.getPk();\n    const settingEntityLoad = await this.sm.loadByPk(pk);\n    if(!settingEntityLoad){\n      const settingEntity =  await this.sm.createDefault(pk);\n      return settingEntity;\n    }\n    return settingEntityLoad;\n  }\n  async loadThumbnails() {\n    const title = await this.loadCurrent();\n    return await this.im.loadThumbnails(title.images);\n  }\n  async updateImagesListing(newList) {\n    const title = await this.loadCurrent();\n    return await this.im.updateImagesListing(title.images,newList);\n  }\n}\n","import { Binary } from \"../entity/binary\";\nimport { PrimaryKey } from \"../entity/primaryKey\";\nexport class BinaryManager {\n\tconstructor(entityManager) {\n\t\tthis.em = entityManager;\n\t}\n\tasync load(pk) {\n\t\tconsole.time('BinaryManager.load');\n\t\tlet binaryPk = pk;\n\t\tif (!pk) {\n\t\t\tbinaryPk = PrimaryKey.getPrimaryKey(pk);\n\t\t}\n\t\tconst result = await this.em.Binary.get(binaryPk);\n\t\tconsole.timeEnd('BinaryManager.load');\n\t\treturn result\n\t}\n\tasync remove(pk) {\n\t\tlet binaryPk = pk;\n\t\tif (!pk) {\n\t\t\tbinaryPk = PrimaryKey.getPrimaryKey(pk);\n\t\t}\n\t\treturn await this.em.Binary.delete(binaryPk);\n\t}\n\tasync save(pk, name, ab, addDataMap) {\n\t\tconsole.time('BinaryManager.save');\n\t\t// console.log(\"BinaryManager save!!A!! pk:\" + pk);\n\t\t// console.log(binary);\n\t\t// console.log(\"BinaryManager save!!B!! name:\" + name);\n\t\tlet binEntity = null;\n\t\tif (pk) {\n\t\t\tbinEntity = await this.em.Binary.get(pk);\n\t\t}\n\t\t// console.log(binary);\n\t\t//alert(binary);\n\t\t// let binaryPk = PrimaryKey.getPrimaryKey(binary);\n\t\tif (!binEntity) {\n\t\t\tbinEntity = new Binary(ab);\n\t\t} else {\n\t\t\tbinEntity.updateDate = Date.now();\n\t\t\tbinEntity._ab = ab;\n\t\t}\n\t\tif (addDataMap && typeof addDataMap === \"object\") {\n\t\t\tfor (let key in addDataMap) {\n\t\t\t\tbinEntity[key] = addDataMap[key];\n\t\t\t}\n\t\t}\n\t\tconst binaryEntitySaved = await this.em.Binary.save(binEntity)\n\t\tconsole.timeEnd('BinaryManager.save');\n\t\treturn PrimaryKey.getPrimaryKey(binaryEntitySaved);\n\t}\n}","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['previewThumbnail','outputImage','outputExpandImage','outputDualImage','thumbnail','baseImage']\nexport class Pages extends BaseEntity{\n  constructor() {\n    super(\"Pages\");\n    this.previewThumbnail = null;\n    this.outputImage = null;\n    this.outputExpandImage = null;\n    this.outputDualImage = null;\n    this.thumbnail = null;\n    this.baseImage = null;\n    this.isForceColor = false;\n    this.isNoCropping = false;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","import {Pages} from \"../../entity/pages\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class PagesManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  setTitleManager(tm){\n    this.tm = tm;\n  }\n  async loadFromImagePk(pk) {\n    const pagePk = PrimaryKey.getPrimaryKey(pk);\n    const pageEntity = await this.em.get(pagePk);\n    if (!pageEntity || !pageEntity.thumbnail) {\n      return null;\n    }\n    const thumbnailPk = PrimaryKey.getPrimaryKey(pageEntity.thumbnail);\n    const thumbnailEntity = await this.em.get(thumbnailPk);\n    thumbnailEntity.parentPk = pagePk;\n    return thumbnailEntity\n  }\n  async remove(pk) {\n    const target = await this.em.Pages.get(pk);\n    if (target) {\n      if (target.previewThumbnail) {\n        await this.em.Binary.delete(target.previewThumbnail);\n      }\n      if (target.outputImage) {\n        await this.em.Binary.delete(target.outputImage);\n      }\n      await this.em.Pages.delete(pk);\n    }\n  }\n  async removeImage(pk) {\n    const target = await this.em.Pages.get(pk);\n    if (target) {\n      if (target.previewThumbnail) {\n        await this.em.Binary.delete(target.previewThumbnail);\n      }\n      if (target.outputImage) {\n        await this.em.Binary.delete(target.outputImage);\n      }\n      if (target.outputDualImage) {\n        await this.em.Binary.delete(target.outputDualImage);\n      }\n      if (target.outputExpandImage) {\n        await this.em.Binary.delete(target.outputExpandImage);\n      }\n      target.baseImage = null;\n      target.thumbnail = null;\n      target.outputDualImage = null;\n      target.outputExpandImage = null;\n      target.previewThumbnail = null;\n      target.outputImage = null;\n      await this.em.Pages.save(target);\n    }\n  }\n\n  async addPage(imagePk,pagePk) {\n    const title = await this.tm.load();\n    const pages = title.pages;\n    const pageEntitis = [];\n    for (let index in pages) {\n      const pk = pages[index];\n      if (!pk) {\n        continue;\n      }\n      const pageEntity = await this.em.get(pk);\n      if(pk === pagePk){\n        const imageEntity = await this.em.get(imagePk);\n        const thumbnailEntity = await this.em.get(imageEntity.thumbnail);\n        const binaryEntity = await this.em.get(thumbnailEntity.binary);\n        pageEntity.thumbnail = imageEntity.thumbnail;\n        pageEntity.baseImage = imagePk;\n        await this.em.Pages.save(pageEntity);\n        //alert(\"pagePk:\"+pagePk+\"/imagePｋ:\"+imagePk+JSON.stringify(pageEntity));\n      }\n      pageEntitis.push(pageEntity);\n    }\n    return pageEntitis;\n  }\n  async move(fromPk, toPk) {\n    const targetFrom = await this.em.Pages.get(fromPk);\n    const targetTo = await this.em.Pages.get(toPk);\n    if(!targetFrom|| !targetTo){\n      return \n    }\n    const previewThumbnailFrom = targetFrom.previewThumbnail;\n    const previewThumbnailTo = targetTo.previewThumbnail;\n    const outputImageFrom = targetFrom.outputImage;\n    const outputImageTo = targetTo.outputImage;\n    const thumbnailFrom = targetFrom.thumbnail;\n    const thumbnailTo = targetTo.thumbnail;\n    const baseImageFrom = targetFrom.baseImage;\n    const baseImageTo = targetTo.baseImage;\n    targetFrom.previewThumbnail= previewThumbnailTo;\n    targetTo.previewThumbnail= previewThumbnailFrom;\n    targetFrom.outputImage= outputImageTo;\n    targetTo.outputImage= outputImageFrom;\n    targetFrom.thumbnail= thumbnailTo;\n    targetTo.thumbnail= thumbnailFrom;\n    targetFrom.baseImage= baseImageTo;\n    targetTo.baseImage= baseImageFrom;\n    await this.em.Pages.save(targetFrom);\n    await this.em.Pages.save(targetTo);\n  }\n  async loadAll() {\n    const retList = [];\n    const pages = this.em.Pages.loadAll();\n    for (let page of pages) {\n      retList.push(page);\n    }\n    return retList;\n  }\n  async load(pk) {\n    return await this.em.Pages.get(pk);\n  }\n  /*\n  */\n  async save(pk, previewThumbnail=null, outputImage=null,thumbnail=null,baseImage=null, listing = 0,binary = null) {\n    let page = null;\n    if (pk) {\n      page = await this.em.Pages.get(pk);\n    }\n    let binaryPk = binary?PrimaryKey.getPrimaryKey(binary):null;\n    if (!page) {\n      page = new Pages();\n    } else {\n      page.updateDate = Date.now();\n    }\n    page.previewThumbnail = previewThumbnail || previewThumbnail === null\n      ? previewThumbnail\n      : page.previewThumbnail;\n    page.outputImage = binaryPk\n      ? binaryPk\n      : binary;\n    page.outputImage = outputImage || outputImage === null\n      ? outputImage\n      : page.outputImage;\n    page.thumbnail = thumbnail || thumbnail === null\n      ? thumbnail\n      : page.thumbnail;\n    page.baseImage = baseImage || baseImage === null\n      ? baseImage\n      : page.baseImage;\n    page.listing = listing || listing === null\n      ? listing\n      : page.listing;\n    return await this.em.Pages.save(page);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['outputProfile']\nexport class Settings extends BaseEntity{\n  constructor() {\n    super(\"Settings\");\n    this.name = \"\";\n    this.pageNum = 0;\n    this.startPage = \"l\";\n    this.pageDelection = 0;\n    this.outputProfile = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","import {Settings} from \"../../entity/settings\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class SettingsManager {\n  constructor(entityManager, opm) {\n    this.em = entityManager;\n    this.opm = opm;\n  }\n  async loadByPk(titilePk) {\n    const settingEntity = await this.em.Settings.get(titilePk);\n    return settingEntity;\n  }\n\n  async loadAll() {\n    const retList = [];\n    const settings = this.em.Pages.loadAll();\n    for (let setting of settings) {\n      retList.push(setting);\n    }\n    return retList;\n  }\n  async createDefault(titilePk) {\n    const setting = new Settings();\n    setting.setPk(titilePk);\n    setting.pageNum = 8;\n    setting.startPage = \"l\";\n    setting.pageDelection = \"r2l\";\n    setting.outputProfile = this.opm.getDefaultPk();\n    setting.listing = 0;\n    const saved = await this.em.Settings.save(setting);\n    return saved;\n  }\n  async save(pk, name, pageNum, startPage, pageDirection,outputProfile, listing = 0) {\n    let settings = null;\n    if (pk) {\n      settings = await this.em.Settings.get(pk);\n    }\n    if (!settings) {\n      settings = new Settings();\n    } else {\n      settings.updateDate = Date.now();\n    }\n    settings.name = name || name === null\n      ? name\n      : settings.name;\n    settings.pageNum = pageNum\n      ? pageNum\n      : 8;\n    settings.startPage = startPage || startPage === null\n      ? startPage\n      : settings.startPage;\n    settings.pageDirection = pageDirection || pageDirection === null\n      ? pageDirection\n      : settings.pageDirection;\n    settings.outputProfile = outputProfile || outputProfile === null\n      ? outputProfile\n      : settings.outputProfile;\n    settings.listing = listing || listing === null\n      ? listing\n      : settings.listing;\n    return await this.em.Settings.save(settings);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = []\nexport class OutputProfiles extends BaseEntity {\n  constructor(id, prefix, name) {\n    super(\"OutputProfiles\");\n    //console.log(\"!=!titleId:\"+titleId+\"!=!titleId:\"+titleId+\"!=!name:\"+name+\"!=!\"+Date.now());\n    this.id = id;\n    this.prefix = prefix;\n    this.pageSize = \"A5\";\n    this.direction = \"r2l\";\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n    //console.log(this);\n  }\n  getRefCols(){\n    return refcols;\n  }\n\n}\n","import {OutputProfiles} from \"../../entity/outputProfiles\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nconst defaultPk = 'copibondefa'\nexport class OutputProfilesManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n    this.createDefault();\n  }\n  getDefaultPk() {\n    return defaultPk;\n  }\n  async loadAll() {\n    const retList = [];\n    const outputProfiles = await this.em.OutputProfiles.loadAll();\n    for (let outputProfile of outputProfiles) {\n      retList.push(outputProfile);\n    }\n    if (retList.length < 1) {\n      retList.push(await this.createDefault());\n    }\n    return retList;\n  }\n  async loadByPk(pk) {\n    const outputProfilePK = PrimaryKey.getPrimaryKey(pk);\n    if (!outputProfilePK) {\n      const outputProfileEntity = await this.em.OutputProfiles.get(pk);\n      return outputProfileEntity;\n    } else {\n      const outputProfileEntity = await this.em.OutputProfiles.get(outputProfilePK);\n      return outputProfileEntity;\n    }\n  }\n  async createDefault() {\n    const savedOne = await this.loadByPk(defaultPk);\n    if (savedOne) {\n      return savedOne;\n    }\n    const outputProfiles = new OutputProfiles();\n    outputProfiles.setPk(defaultPk);\n    const saved = await this.em.OutputProfiles.save(outputProfiles);\n    return saved;\n  }\n  async save(pk, name, binary, type, width, height, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.OutputProfiles.get(pk);\n    }\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Setting();\n    } else {\n      image.updateDate = Date.now();\n    }\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    return await this.em.Thumbnales.save(image);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['binary','thumbnail']\nexport class ImageOutputs extends BaseEntity {\n  constructor() {\n    super(\"ImageOutputs\");\n    this.name = null;\n    this.binary = null;\n    this.type = null; // zip or pdf\n    this.thumbnail = null; // thumnails of firstPage\n    this.orderName = \"\";\n    this.size = 0;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","import {ImageOutputs} from \"../../entity/imageOutputs\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class ImageOutputsManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.ImageOutputs.get(binaryPk);\n  }\n  async remove(pk) {\n    const target = await this.em.ImageOutputs.get(pk);\n    if (target) {\n      if (target.binary) {\n        await this.em.Binary.delete(target.binary);\n      }\n      await this.em.ImageOutputs.delete(pk);\n    }\n  }\n  async save(pk, name, binary, type, orderName,size, listing = 0) {\n    let imageOutputs = null;\n    if (pk) {\n      imageOutputs = await this.em.ImageOutputs.get(pk);\n    }\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!imageOutputs) {\n      imageOutputs = new ImageOutputs();\n    } else {\n      imageOutputs.updateDate = Date.now();\n    }\n    imageOutputs.name = name || name === null\n      ? name\n      : imageOutputs.name;\n    imageOutputs.binary = binaryPk\n      ? binaryPk\n      : binary;\n    imageOutputs.type = type || type === null\n      ? type\n      : imageOutputs.type;\n    imageOutputs.orderName = orderName || orderName === null\n      ? orderName\n      : imageOutputs.orderName;\n    imageOutputs.size = size || size === null\n      ? size\n      : imageOutputs.size;\n    imageOutputs.listing = listing || listing === null\n      ? listing\n      : imageOutputs.listing;\n    const imageEntitySaved =  await this.em.ImageOutputs.save(imageOutputs);\n    return PrimaryKey.getPrimaryKey(imageEntitySaved);\n  }\n}\n","import {Images} from \"../../entity/images\";\nimport {MainService} from \"../../service/mainService\";\nimport bc from \"../../util/binaryConverter\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nimport {Sorter} from \"../../util/sorter\";\nimport {FileUploadExecuter} from \"../fileUploadExecuter\";\n\nconst loadedImageMap = new Map();\nexport class ImageManager {\n  constructor(entityManager) {\n    this.ms = MainService.getInstance();\n    this.em = entityManager;\n    this.ip = this.ms.ip;\n    this.tbm = this.ms.tbm;\n  }\n  setTitleManager(tm){\n    this.tm = tm;\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (typeof pk!==\"string\") {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Images.get(binaryPk);\n  }\n  async reloadLoadedImages() {\n    return await this.createRetList(this.getEntitisAsList());\n  }\n  async loadImages() {\n    const title = await this.tm.load();\n    const images = title.images;\n    const imageEntitis = [];\n    for (let index in images) {\n      const pk = images[index];\n      if (!pk) {\n        continue;\n      }\n      const imageEntity = await this.em.get(pk);\n      if(imageEntity){\n\n      }\n      imageEntitis.push(imageEntity);\n    }\n    return await this.createRetList(imageEntitis);\n  }\n  async remove(pk) {\n    const imageEntity = await this.em.get(pk);\n    console.log(\"removeImage imageEntity.thumbnail:\" + imageEntity.thumbnail);\n    const binaryPk = PrimaryKey.getPrimaryKey(imageEntity.binary);\n    console.log(\"removeImage binaryPk:\" + binaryPk);\n    const thumbnailPk = PrimaryKey.getPrimaryKey(imageEntity.thumbnail);\n    console.log(\"removeImage thumbnailPk:\" + thumbnailPk);\n    if (thumbnailPk) {\n      const thumbnailEntity = await this.em.get(thumbnailPk);\n      console.log(\"removeImage thumbnailEntity:\" + thumbnailEntity);\n      const thumbnailBinaryPk = PrimaryKey.getPrimaryKey(thumbnailEntity.binary);\n      console.log(\"removeImage thumbnailBinaryPk:\" + thumbnailBinaryPk);\n      await this.em.delete(thumbnailBinaryPk);\n      await this.em.delete(thumbnailPk);\n    }\n    await this.em.delete(binaryPk);\n    await this.em.delete(pk);\n  }\n  async saveImageFile(file, count = 0) {\n    const fue = new FileUploadExecuter();\n    const arrayBuffer = await fue.readAsArrayBuffer(file);\n    const data = {\n      name: file.name,\n      ab: arrayBuffer,\n      type: file.type\n    };\n    const imgElm = await this.ip.createImageNodeByData(data);\n    const dataURI = await this.ip.createThumbnail(arrayBuffer, 100, 100, file.type);\n    const arrayBufferThumbnail = bc.dataURI2ArrayBuffer(dataURI);\n    const imgElmThumb = await this.ip.createImageNodeByData({name: file.name, ab: arrayBufferThumbnail, type: file.type});\n    const thumbnailEntity = await this.tbm.save(null, file.name, arrayBufferThumbnail, file.type, imgElmThumb.width, imgElmThumb.height, 0);\n    console.log(\"addImageFiles thumbnailEntity:\" + thumbnailEntity);\n    const thumbnailPk = PrimaryKey.getPrimaryKey(thumbnailEntity);\n    console.log(\"addImageFiles thumbnailPk:\" + thumbnailPk);\n    const imageEntity = await this.save(null, file.name, arrayBuffer, file.type, imgElm.width, imgElm.height, thumbnailPk, count);\n    console.log(\"addImageFiles imageEntity:\" + imageEntity);\n    const imagePk = imageEntity.getPk();\n    return {imagePk: imagePk, imageEntity: imageEntity};\n  }\n  async save(pk, name, binary, type, width, height, thumbnail, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.Images.get(pk);\n    }\n        console.log(\"ImageManager save!!9!! binary:\" + binary);\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Images();\n    } else {\n      image.updateDate = Date.now();\n    }\n\n    console.log(\"ImageManager save!!A!! image:\" + image);\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.thumbnail = thumbnail || thumbnail === null\n      ? thumbnail\n      : PrimaryKey.getPrimaryKey(image.thumbnail);\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    const savedData = await this.em.Images.save(image);\n    console.log(\"ImageManager save!!B!! image:\" + savedData);\n    return savedData;\n  }\n\n  async loadThumbnails(images) {\n    const retList = [];\n    const imageList = [];\n    for (let image of images) {\n      const imagePk = PrimaryKey.getPrimaryKey(image);\n      const imageEntity = await this.load(imagePk);\n      imageList.push(imageEntity);\n    }\n    Sorter.orderBy( imageList,[{colName:\"listing\", isDESC:false}]);\n    for (let imageEntity of imageList) {\n      const imagePk = PrimaryKey.getPrimaryKey(imageEntity);\n      const thumbnailEntity = await this.tbm.loadFromImagePk(imagePk);\n      retList.push(thumbnailEntity);\n    }\n    return retList;\n  }\n  async createRetList(imageEntitis) {\n    Sorter.orderBy(imageEntitis, [\n      {\n        colName: \"listing\",\n        isDESC: false\n      }, {\n        colName: \"updateDate\",\n        isDESC: true\n      }\n    ]);\n    //console.log(\"=★=showFilesInit imageEntitis:\" + imageEntitis.length);\n    const retList = [];\n    for (let imageEntity of imageEntitis) {\n      const pk = imageEntity && imageEntity.getPk?imageEntity.getPk():null;\n      if (loadedImageMap.has(pk)) {\n        const retObj = loadedImageMap.get(pk);\n        retList.push(retObj);\n      } else if (!pk) {\n        retList.push(null);\n      } else {\n        const retObj = await this.processParImage(imageEntity);\n        loadedImageMap.set(pk, retObj);\n        retList.push(retObj);\n      }\n    }\n    return retList;\n  }\n  async processParImage(imageEntity) {\n    const imagePk = imageEntity.getPk();\n    const thumbnailEntity = await this.em.get(imageEntity.thumbnail);\n    const binaryEntity = await this.em.get(thumbnailEntity.binary);\n    const imgElm = await this.ip.createImageNodeByData({name: imageEntity.name, ab: binaryEntity.ab, type: imageEntity.type});\n    const size = (\n      binaryEntity.ab\n      ? (new Uint8Array(binaryEntity.ab)).length\n      : 0);\n    const imageText = escape(imageEntity.name) + ' (' + (\n    imageEntity.type || 'n/a') + ') - ' + size + 'bytes, last modified: ' + imageEntity.modifyDate + ' size:' + imageEntity.width + 'x' + imageEntity.height\n\n    const retObj = {\n      imageEntity: imageEntity,\n      binaryEntity: binaryEntity,\n      size: size,\n      imageText: imageText,\n      isOnPage:false\n    };\n    return retObj;\n  }\n  removeLoaded(pk){\n    loadedImageMap.delete(pk);\n  }\n  getRetObjsAsList() {\n    const retList = [];\n    for (let [key, retObj] of loadedImageMap.entries()) {\n      retList.push(retObj);\n    }\n    return retList;\n  }\n  getEntitisAsList() {\n    const retList = [];\n    for (let [key, retObj] of loadedImageMap.entries()) {\n      retList.push(retObj.imageEntity);\n    }\n    return retList;\n  }\n  getFromLoaded(pk){\n    return loadedImageMap.get(pk);\n  }\n}\n","import {Thumbnales} from \"../../entity/thumbnales\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class ThumbnaleManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  async loadFromImagePk(pk) {\n    const imagePk = PrimaryKey.getPrimaryKey(pk);\n    const imageEntity = await this.em.get(imagePk);\n    if(!imageEntity || !imageEntity.thumbnail){\n      return null;\n    }\n    const thumbnailPk  = PrimaryKey.getPrimaryKey(imageEntity.thumbnail);\n    const thumbnailEntity = await this.em.get(thumbnailPk);\n    thumbnailEntity.parentPk = imagePk;\n    return thumbnailEntity\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Thumbnales.get(binaryPk);\n  }\n  async save(pk, name, binary, type, width, height, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.Thumbnales.get(pk);\n    }\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Thumbnales();\n    } else {\n      image.updateDate = Date.now();\n    }\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    return await this.em.Thumbnales.save(image);\n  }\n}\n","const ua = navigator.userAgent.replace(/[\\.0-9]+/g, \"x\");\nconst domain = window.location;\nconst A5 = {};\nexport default {\n\tA5: A5\n}\nexport const SettingData = {\n\tpageStart: {\n\t\tl: \"fromLeft\",\n\t\tr: \"fromRight\"\n\t},\n\tpageDirection: {\n\t\tl2r: \"LeftToRight\",\n\t\tr2l: \"RightToLeft\"\n\t},\n\tpageNums: [1, 2, 4, 6, 8, 10, 12, 16]\n}\nexport const PrefareceData = {\n\tpreviewSizeSingle: {\n\t\tw400: 400,\n\t\tw500: 500,\n\t\tw800: 800,\n\t\tw1000: 1000\n\t},\n\te: {\n\t\tw400: 400,\n\t\tw500: 500,\n\t\tw800: 800,\n\t\tw1000: 1000\n\t}\n}\nexport const dpis = {\n\tdpi72: 72,\n\tdpi150: 150,\n\tdpi300: 300,\n\tdpi350: 350,\n\tdpi600: 600,\n\tdpi1200: 1200,\n\tsame: 0\n}\nexport const printMargin = {\n\tnone: 0,\n\tconbini: 5\n}\nexport const basePaper = {\n\tB6: {\n\t\ttarget: \"B6\",\n\t\tframe: \"B6\",\n\t\tmultiple: 1\n\t},\n\tA5: {\n\t\ttarget: \"A5\",\n\t\tframe: \"A5\",\n\t\tmultiple: 1\n\t},\n\tB5: {\n\t\ttarget: \"B5\",\n\t\tframe: \"B5\",\n\t\tmultiple: 1\n\t},\n\tA4: {\n\t\ttarget: \"A4\",\n\t\tframe: \"A4\",\n\t\tmultiple: 1\n\t},\n\tB4: {\n\t\ttarget: \"B4\",\n\t\tframe: \"B4\",\n\t\tmultiple: 1\n\t},\n\tA3: {\n\t\ttarget: \"A3\",\n\t\tframe: \"A3\",\n\t\tmultiple: 1\n\t},\n\tmangaPaperB5: {\n\t\ttarget: \"A5\",\n\t\tframe: \"B5\",\n\t\tmultiple: 1\n\t},\n\tmangaPaperA4: {\n\t\ttarget: \"B5\",\n\t\tframe: \"A4\",\n\t\tmultiple: 1\n\t},\n\tmangaPaperA4ExpandTatikiri: {\n\t\ttarget: \"B5\",\n\t\tframe: \"A4\",\n\t\tmultiple: (274 / 257)\n\t},\n\tmangaPaperB4: {\n\t\ttarget: \"A4\",\n\t\tframe: \"B4\",\n\t\tmultiple: 1\n\t},\n\tmangaPaperA3: {\n\t\ttarget: \"B4\",\n\t\tframe: \"A3\",\n\t\tmultiple: 1\n\t},\n\tpure_fit: {\n\t\ttarget: \"same\",\n\t\tframe: \"same\",\n\t\tmultiple: 1\n\t}\n}\nexport const paperSizeSet = {\n\tA6: {\n\t\tx: 105,\n\t\ty: 148\n\t},\n\tB6: {\n\t\tx: 128,\n\t\ty: 182\n\t},\n\tA5: {\n\t\tx: 148,\n\t\ty: 210\n\t},\n\tB5: {\n\t\tx: 182,\n\t\ty: 257\n\t},\n\tA4: {\n\t\tx: 210,\n\t\ty: 297\n\t},\n\tB4: {\n\t\tx: 257,\n\t\ty: 364\n\t},\n\tA3: {\n\t\tx: 297,\n\t\ty: 420\n\t}\n}\n\nexport const ExportOrders = [ //\n\t{\n\t\torderName: \"B6 none croping\",\n\t\tbasePaper: \"B6\"\n\t},\n\t{\n\t\torderName: \"A5 none croping\",\n\t\tbasePaper: \"A5\"\n\t},\n\t{\n\t\torderName: \"B5 none croping\",\n\t\tbasePaper: \"B5\"\n\t},\n\t{\n\t\torderName: \"A4 none croping\",\n\t\tbasePaper: \"A4\"\n\t},\n\t{\n\t\torderName: \"B4 none croping\",\n\t\tbasePaper: \"B4\"\n\t},\n\t{\n\t\torderName: \"A3 none croping\",\n\t\tbasePaper: \"A3\"\n\t},\n\t{\n\t\torderName: \"Manga Paper B5 Tatikiri to A5\",\n\t\tbasePaper: \"mangaPaperB5\"\n\t},\n\t{\n\t\torderName: \"Manga Paper A4 Tatikiri to B5\",\n\t\tbasePaper: \"mangaPaperA4\"\n\t},\n\t{\n\t\torderName: \"Manga Paper B4 Tatikiri to A4\",\n\t\tbasePaper: \"mangaPaperB4\"\n\t},\n\t{\n\t\torderName: \"Manga Paper A4 ExpandTatikiriSpecial\",\n\t\tbasePaper: \"mangaPaperA4ExpandTatikiri\"\n\t}\n];","import { dpis, printMargin, paperSizeSet, basePaper } from \"../../settings/exportSettings\";\nexport class Paper {\n\tconstructor() {\n\t\t//\n\t\tthis.paparSize = {}\n\t}\n\tcalcClopOffsetPixcel(basePaperSet, dpi) {\n\t\tconst cropSizeMm = this.calcClopOffsetMm(basePaperSet);\n\t\t//const size = this.getTargetPaperSizeMm(basePaperSet);\n\t\tconst offset = {\n\t\t\tx: this.calcPixcel(dpi, cropSizeMm.x) * -1,\n\t\t\ty: this.calcPixcel(dpi, cropSizeMm.y) * -1\n\t\t};\n\t\t// console.log(\"calcClopOffsetPixce:l\"+JSON.stringify(offset)+\"/\"+dpi);\n\t\treturn offset;\n\t}\n\tcalcClopOffsetMm(basePaperSet) {\n\t\tconst targetPaper = basePaper[basePaperSet];\n\t\tconst offset = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\t\tif (!targetPaper || targetPaper.target === \"same\") {\n\t\t\t//\n\t\t\treturn offset;\n\t\t}\n\t\tconst targetSize = this.getPaperSizeMm(targetPaper.target);\n\t\tconst frameSize = this.getPaperSizeMm(targetPaper.frame);\n\t\tconst targetX = targetSize.x * targetPaper.multiple;\n\t\tconst targetY = targetSize.y * targetPaper.multiple;\n\t\toffset.x = (frameSize.x - targetX) / 2;\n\t\toffset.y = (frameSize.y - targetY) / 2;\n\t\treturn offset;\n\t}\n\tgetTargetPaperSizeMm(basePaperSet) {\n\t\tconst size = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\t\tif (!basePaperSet) {\n\t\t\t//\n\t\t\treturn size;\n\t\t}\n\t\tconst targetSize = this.getPaperSizeMm(basePaperSet);\n\t\treturn targetSize;\n\t}\n\tgetTargetPaperSize(basePaperSet, dpiName) {\n\t\tconst targetPaper = basePaper[basePaperSet];\n\t\tconst size = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\t\tif (!targetPaper || targetPaper.target === \"same\") {\n\t\t\t//\n\t\t\treturn size;\n\t\t}\n\t\tconst targetSize = this.getTargetPaperSizeMm(targetPaper.target);\n\t\tconst dpi = this.getDpi(dpiName);\n\t\tsize.x = this.calcPixcel(targetSize.x, dpi);\n\t\tsize.y = this.calcPixcel(targetSize.y, dpi);\n\t\treturn size;\n\t}\n\tcalcPixcel(dpi, mm) {\n\t\treturn Math.floor(mm * dpi / 25.4);\n\t}\n\n\tcalcDpi(pixcel, mm) {\n\t\treturn pixcel / mm * 25.4;\n\t}\n\tgetPaperFrameSizeMm(basePaperSet) {\n\t\tconst targetPaper = basePaper[basePaperSet];\n\t\treturn paperSizeSet[targetPaper.frame];\n\t}\n\tgetTragetPaper(basePaperSet) {\n\t\tconst targetPaper = basePaper[basePaperSet];\n\t\treturn targetPaper.target;\n\t}\n\tgetPaperSizeMm(paperSize) {\n\t\treturn paperSizeSet[paperSize];\n\t}\n\tgetPrintMargin(marginSetting) {\n\t\treturn printMargin[marginSetting];\n\t}\n\tgetDpi(dpiName) {\n\t\treturn dpis[dpiName];\n\t}\n\tgetOffset(dpiName, marginSetting) {\n\t\tconst margin = this.getPrintMargin(marginSetting);\n\t\tconst dpi = this.getDpi(dpiName);\n\t\tconst mpi = dpi / 25.4;\n\t\treturn Math.floor(mpi * margin);\n\t}\n\tgetPixcelSizeBySelected(paperSize, dpiName, marginSetting = \"none\") {\n\t\tconst size = this.getPaperSizeMm(paperSize);\n\t\tconst margin = this.getPrintMargin(marginSetting);\n\t\tconst dpi = this.getDpi(dpiName);\n\t\treturn this.getPixcelSizeWithMargin(dpi, size.x, size.y, margin);\n\t}\n\tgetPixcelSize(dpi, mmWidth, mmHeight) {\n\t\tconst mpi = dpi / 25.4;\n\t\treturn {\n\t\t\twidth: Math.floor(mpi * mmWidth),\n\t\t\theight: Math.floor(mpi * mmHeight)\n\t\t}\n\t}\n\tgetPixcelSizeWithMargin(dpi, mmWidth, mmHeight, mmMargin) {\n\t\tconst mmMarginDual = mmMargin * 2;\n\t\treturn this.getPixcelSize(dpi, mmWidth - mmMarginDual, mmHeight - mmMarginDual)\n\t}\n}","import vu from \"./viewUtil\";\nimport bc from \"./binaryConverter\";\nimport { Paper } from \"./image/paper\";\nimport { ImageMerger } from \"./image/imageMerger\";\nimport { ImageResizer } from \"./image/imageResizer\";\nconst imgRe = /^image\\/.+|application\\/octet-stream/;\nexport class ImageProcessor {\n\tconstructor() {\n\t\tthis.canvas = vu.createCanvas(null, \"hidden\");\n\n\t\tthis.ctx = this.canvas.getContext('2d');\n\t\tthis.paper = new Paper();\n\t\tthis.imageMerger = new ImageMerger();\n\t\tthis.imageResizer = new ImageResizer();\n\t\twindow.onload = () => {\n\t\t\tdocument.body.appendChild(this.canvas);\n\t\t};\n\t}\n\tsetDataURI(dataURI) {\n\t\tthis.dataURI = dataURI;\n\t}\n\tasync resize(ab, maxWidth, maxHeight) {\n\t\tconst origin = await this.getImageDataFromArrayBuffer(ab);\n\t\treturn this.resizeInMaxSize(origin, maxWidth, maxHeight);\n\t}\n\tasync resizeAsPaper(ab, paperSize, dpiName, marginSetting) {\n\t\tconst origin = await this.getImageDataFromArrayBuffer(ab);\n\t\tconst sizeOfPaper = this.paper.getPixcelSizeBySelected(paperSize, dpiName);\n\t\tlet newPaperData = this.ctx.createImageData(sizeOfPaper.width, sizeOfPaper.height);\n\t\tconst sizeOfImage = this.paper.getPixcelSizeBySelected(paperSize, dpiName, marginSetting);\n\t\tconst newData = this.resizeInMaxSize(origin, sizeOfImage.width, sizeOfImage.height);\n\t\tconst marginMM = this.paper.getOffset(dpiName, marginSetting);\n\t\tconst data = {\n\t\t\toffsetY: marginMM,\n\t\t\toffsetX: marginMM,\n\t\t\tdata: newData.data,\n\t\t\twidth: newData.width,\n\t\t\theight: newData.height\n\t\t}\n\t\tconst len = newData.data.length\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tnewPaperData.data[i] = newData.data[i];\n\t\t}\n\t\tthis.canvas.width = newPaperData.width;\n\t\tthis.canvas.height = newPaperData.height;\n\t\tawait this.imageMerger.margeReplace(newPaperData, [data], true);\n\t\t// console.log(\"newData---------------------------------------------------width:\" + sizeOfImage.width + \"/height:\" + sizeOfImage.height)\n\t\t// console.log(newData)\n\t\t// console.log(data)\n\t\t// console.log(newPaperData.data)\n\t\tthis.ctx.putImageData(newPaperData, 0, 0);\n\t\tnewPaperData = undefined;\n\t\tlet dataUri = this.canvas.toDataURL();\n\t\tconsole.time('resize copy');\n\t\tconst abResized = bc.dataURI2ArrayBuffer(dataUri);\n\t\tdataUri = undefined;\n\t\tconsole.timeEnd('resize copy');\n\t\treturn abResized;\n\t}\n\n\tresizeInMaxSize(iamegData, maxWidth, maxHeight) {\n\t\tconst { data, width, height } = iamegData;\n\t\tconst retioOuter = maxWidth / maxHeight;\n\t\tconst retioInner = width / height;\n\t\tconst isWidthGreater = retioInner >= retioOuter;\n\t\tconst retio = isWidthGreater ?\n\t\t\tmaxWidth / width :\n\t\t\tmaxHeight / height;\n\t\tconst newWidth = isWidthGreater ?\n\t\t\tmaxWidth :\n\t\t\twidth * retio;\n\t\tconst newHeight = isWidthGreater ?\n\t\t\theight * retio :\n\t\t\tmaxHeight;\n\t\t// console.log(\"resizeInMaxSize---------------------------------------------------newWidth:\" + newWidth + \"/newHeight:\" + newHeight)\n\t\treturn this.resizeExecute(iamegData, newWidth, newHeight);\n\t}\n\tresizeExecute(iamegData, newWidth, newHeight) {\n\t\tconsole.time('resize');\n\t\tconst newImageData = this.ctx.createImageData(newWidth, newHeight);\n\t\tthis.imageResizer.resize(iamegData, newWidth, newHeight, newImageData);\n\t\tconsole.timeEnd('resize');\n\t\treturn newImageData;\n\t}\n\tgetImageDataFromArrayBuffer(ab) {\n\t\t// console.time('resize getImageDataFromArrayBuffer');\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet dataUri = bc.arrayBuffer2DataURI(ab);\n\t\t\tab = null;\n\t\t\tconst img = new Image();\n\t\t\timg.src = dataUri;\n\t\t\timg.onload = () => {\n\t\t\t\tdataUri = null\n\t\t\t\tconst width = img.width;\n\t\t\t\tconst height = img.height;\n\t\t\t\tthis.canvas.width = width;\n\t\t\t\tthis.canvas.height = height;\n\t\t\t\tthis.ctx.drawImage(img, 0, 0);\n\t\t\t\tconst imageData = this.ctx.getImageData(0, 0, width, height);\n\t\t\t\tresolve(imageData);\n\t\t\t\t// console.timeEnd('resize getImageDataFromArrayBuffer');\n\t\t\t}\n\t\t\timg.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\tgetArrayBufferFromImageBitmapDataAsJpg(iamgeBitmapData, quority) {\n\t\tconst option = {\n\t\t\ttype: 'image/jpeg',\n\t\t\tquority: quority\n\t\t};\n\t\treturn this.getArrayBufferFromImageBitmapData(iamgeBitmapData, option);\n\t}\n\tgetArrayBufferFromImageBitmapDataAsPng(iamgeBitmapData) {\n\t\treturn this.getArrayBufferFromImageBitmapData(iamgeBitmapData);\n\t}\n\tgetArrayBufferFromImageBitmapData(iamgeBitmapData, option) {\n\t\tconsole.time('resize getArrayBufferFromImageBitmapData');\n\t\tthis.canvas.width = Math.floor(iamgeBitmapData.width);\n\t\tthis.canvas.height = Math.floor(iamgeBitmapData.height);\n\t\tlet newPaperData = this.ctx.createImageData(iamgeBitmapData.width, iamgeBitmapData.height);\n\t\tconst len = iamgeBitmapData.data.length\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tnewPaperData.data[i] = iamgeBitmapData.data[i];\n\t\t}\n\t\tthis.ctx.putImageData(newPaperData, 0, 0);\n\t\tlet dataUri = option ? this.canvas.toDataURL(option.type, option.quority) : this.canvas.toDataURL();\n\t\tconst abResized = bc.dataURI2ArrayBuffer(dataUri);\n\t\t// console.log('iamgeBitmapData.data.length:'+iamgeBitmapData.data.length+'/w:'+iamgeBitmapData.width+'/h:'+iamgeBitmapData.height);\n\t\t// console.log('dataUri:'+dataUri);\n\t\t// console.log(abResized);\n\t\tnewPaperData = undefined;\n\t\tconsole.timeEnd('resize getArrayBufferFromImageBitmapData');\n\t\treturn abResized;\n\t}\n\tcreate(arrayBuffer, width, height, type) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst imgElm = new Image();\n\t\t\timgElm.src = bc.arrayBuffer2DataURI(arrayBuffer, type);\n\t\t\timgElm.onload = () => {\n\t\t\t\tconst widthScale = width / imgElm.width;\n\t\t\t\tconst heightScale = height / imgElm.height;\n\t\t\t\tconst scale = widthScale <= heightScale ?\n\t\t\t\t\twidthScale :\n\t\t\t\t\theightScale;\n\t\t\t\tthis.canvas.height = Math.floor(imgElm.height * scale);\n\t\t\t\tthis.canvas.width = Math.floor(imgElm.width * scale);\n\t\t\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\t\t\tthis.ctx.scale(scale, scale);\n\t\t\t\tthis.ctx.drawImage(imgElm, 0, 0);\n\t\t\t\tresolve(this.exportPng());\n\t\t\t};\n\t\t\timgElm.onerror = (e) => {\n\t\t\t\tconsole.log('失敗');\n\t\t\t\tconsole.error(e);\n\t\t\t\treject(null);\n\t\t\t};\n\t\t});\n\t}\n\texportPng() {\n\t\treturn this.canvas.toDataURL();\n\t}\n\texportJpeg(quority = 1.0) {\n\t\treturn this.canvas.toDataURL('image/jpeg', quority);\n\t}\n\n\tcreateImageNodeByData(data) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet { name, ab, type } = data;\n\t\t\tlet imgElm = vu.createImage();\n\t\t\timgElm.alt = escape(name);\n\n\t\t\tif (!type) {\n\t\t\t\ttype = \"application/octet-stream\";\n\t\t\t}\n\t\t\tif (type && type.match(imgRe)) {\n\t\t\t\timgElm.src = bc.arrayBuffer2DataURI(ab, type);\n\t\t\t\timgElm.onload = () => {\n\t\t\t\t\tdata.height = imgElm.height;\n\t\t\t\t\tdata.width = imgElm.width;\n\t\t\t\t\tresolve(imgElm);\n\t\t\t\t}\n\t\t\t\timgElm.onerror = (e) => {\n\t\t\t\t\tconsole.log('失敗');\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\treject(e);\n\t\t\t\t};\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\tresolve(imgElm);\n\t\t\t}\n\n\t\t});\n\t}\n}","import { ImageProcessor } from \"../util/imageProcessor\";\nexport class ImageProcessService {\n\tconstructor() {\n\t\tthis.ip = new ImageProcessor();\n\t}\n\tasync createThumbnail(arrayBuffer, type) {\n\t\tconst retURI = await this.ip.create(arrayBuffer, 100, 100, type);\n\t\t// console.log(retURI);\n\t\treturn retURI;\n\t}\n\n\tasync createImageNodeByData(data) {\n\t\treturn await this.ip.createImageNodeByData(data);\n\t}\n\n\tasync resize(ab, newWidth, newHeight) {\n\t\treturn await this.ip.resize(ab, newWidth, newHeight);\n\t}\n\tasync resizeAsPaperB5_72(ab) {\n\t\treturn await this.ip.resizeAsPaper(ab, \"B5\", \"dpi72\", \"conbini\");\n\t}\n\tasync getImageDataFromArrayBuffer(ab) {\n\t\treturn await this.ip.getImageDataFromArrayBuffer(ab);\n\t}\n\tgetArrayBufferFromImageBitmapData(imageBitmapData, option) {\n\t\tconsole.time(\"ImageProcessService.getArrayBuffer From ImageBitmapData\")\n\t\tconst result = this.ip.getArrayBufferFromImageBitmapData(imageBitmapData, option);\n\t\tconsole.timeEnd(\"ImageProcessService.getArrayBuffer From ImageBitmapData\")\n\t\treturn result;\n\t}\n\tgetArrayBufferFromImageBitmapDataAsJpg(imageBitmapData, quority) {\n\t\tconsole.time(\"ImageProcessService.getArrayBufferFromImageBitmapDataAsJpg\")\n\t\tconst result = this.ip.getArrayBufferFromImageBitmapDataAsJpg(imageBitmapData, quority);\n\t\tconsole.timeEnd(\"ImageProcessService.getArrayBufferFromImageBitmapDataAsJpg\")\n\t\treturn result;\n\t}\n\tgetArrayBufferFromImageBitmapDataAsPng(imageBitmapData) {\n\t\treturn this.ip.getArrayBufferFromImageBitmapDataAsPng(imageBitmapData);\n\t}\n}","import {MainServiceImpl} from \"./mainServiceImpl\"\nimport {Thread} from \"../util/thread/thread\"\nconst mainServiceImpl = new MainServiceImpl();\nconst currentSiries = \"\";\nconst currentTitle = \"\";\nexport class MainService {\n  static getInstance(){\n    const thread = new Thread();\n    thread.postMessage(\"WASMcaller\",\"\");\n    return mainServiceImpl;\n  }\n  async init(appTitle,appVersion){\n    await mainServiceImpl.init(appTitle,appVersion);\n  }\n}\n","import {EntityManager} from \"./entity/entityManager\";\nimport {TitleManager} from \"./manager/titleManager\";\nimport {BinaryManager} from \"./manager/binaryManager\";\nimport {PagesManager} from \"./manager/pagesManager\";\nimport {SettingsManager} from \"./manager/settingsManager\";\nimport {OutputProfilesManager} from \"./manager/outputProfilesManager\";\nimport {ImageOutputsManager} from \"./manager/imageOutputsManager\";\nimport {ImageManager} from \"./manager/imageManager\";\nimport {ThumbnaleManager} from \"./manager/thumbnailManager\";\nimport {Images} from \"../entity/images\";\nimport {Series} from \"../entity/series\";\nimport {Thumbnales} from \"../entity/thumbnales\";\nimport {Title} from \"../entity/title\";\nimport {Pages} from \"../entity/pages\";\nimport {Settings} from \"../entity/settings\";\nimport {OutputProfiles} from \"../entity/outputProfiles\";\nimport {ImageOutputs} from \"../entity/imageOutputs\";\nimport {ImageProcessService} from \"./imageProcessService\"\n\nconst title = \"CopiBon\";\nconst titlePrefix = \"title_\";\nexport class MainServiceImpl {\n  constructor() {\n    this.em = new EntityManager();\n    this.ip = new ImageProcessService();\n  }\n  async init(appTitle,appVersion) {\n    this.appTitle = appTitle;\n    this.appVersion = appVersion;\n    await this.em.initAsNewUser([Images, Series, Thumbnales, Title, Pages, Settings, OutputProfiles,ImageOutputs]);\n    this.ip = new ImageProcessService();\n    this.bm = new BinaryManager(this.em);\n    this.tbm = new ThumbnaleManager(this.em);\n    this.pb = new ThumbnaleManager(this.em);\n    this.tbm = new ThumbnaleManager(this.em);\n    this.im = new ImageManager(this.em);\n    this.pm = new PagesManager(this.em);\n    this.opm = new OutputProfilesManager(this.em);\n    this.iom = new ImageOutputsManager(this.em);\n    this.sm = new SettingsManager(this.em,this.opm );\n    this.tm = new TitleManager(this.em);\n    this.im.setTitleManager(this.tm);\n    this.pm.setTitleManager(this.tm);\n    await this.tm.load();\n  }\n  getAppTitle(){\n    return this.appTitle;\n  }\n  getAppVersion(){\n    return this.appVersion;\n  }\n}\n","import {MenuSelectActionCreator} from '../action/menuSelectActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nlet menuSelectViewReducer = null;\nexport class MenuSelectViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.menuSelectAction = MenuSelectActionCreator.creatSelectAction();\n    this.atatch(this.menuSelectAction);\n    this.storeKey = MenuSelectActionCreator.getStoreKey();\n    this.addInitializeKey(this.storeKey);\n  }\n  static register() {\n    if (!menuSelectViewReducer) {\n      menuSelectViewReducer = new MenuSelectViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.menuSelectAction.type === action.type) {\n      store[this.storeKey] = action.data.id;\n    }\n    return store;\n  }\n}\n","import vu from \"../util/viewUtil\";\nimport { BaseView } from \"../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../util/reactive/base/vtags\";\nimport { MenuSelectActionCreator } from '../reduxy/action/menuSelectActionCreator'\nimport { MenuSelectViewReducer } from '../reduxy/reducer/menuSelectViewReducer'\nexport class Menu extends BaseView {\n\tconstructor() {\n\t\tsuper(\"menu\", \"Menu\");\n\t\tthis.text = \"Menu\";\n\t\tthis.storeKey = MenuSelectActionCreator.getStoreKey();\n\t\tthis.menuButtonClass = \"MenuButton\";\n\t\tthis.selected = \"\";\n\t\tthis.steps = [];\n\t\tthis.steps.push({\n\t\t\tid: 'step0',\n\t\t\tancker: '#' + 'TitleMng',\n\t\t\tlabel: 'Step0 Select or New',\n\t\t\ttargets: ['TitleMng']\n\t\t});\n\t\tthis.steps.push({\n\t\t\tid: 'step1',\n\t\t\tancker: '#' + 'TitleSettings',\n\t\t\tlabel: 'Step1 Work Setting',\n\t\t\ttargets: ['TitleSettings']\n\t\t});\n\t\tthis.steps.push({\n\t\t\tid: 'step2',\n\t\t\tancker: '#' + 'fuaPArent',\n\t\t\tlabel: 'Step2 Select Files',\n\t\t\ttargets: ['fuaPArent', 'FilesArea']\n\t\t});\n\t\tthis.steps.push({\n\t\t\tid: 'step3',\n\t\t\tancker: '#' + 'ExportArea',\n\t\t\tlabel: 'Step3 Export',\n\t\t\ttargets: ['ExportArea']\n\t\t});\n\t\tthis.steps.push({\n\t\t\tid: 'step4',\n\t\t\tancker: '#' + 'step4',\n\t\t\tlabel: 'Step4 Pref',\n\t\t\ttargets: ['']\n\t\t});\n\t\tthis.isSelectByManual = false;\n\t}\n\trender() {\n\t\treturn div(this.id + 'Frame', [\"MenuFrame\"], this.createButtons());\n\t}\n\tasync onAfterAttach(store, data) {\n\t\tMenuSelectViewReducer.register();\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\tconst id = store[this.storeKey];\n\t\t\tthis.hilightMenu(id);\n\t\t}\n\t}\n\tonClick(id) {\n\t\treturn (event) => {\n\t\t\tthis.isSelectByManual = true;\n\t\t\tthis.hilightMenu(id);\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.isSelectByManual = false;\n\t\t\t}, 1000);\n\t\t}\n\t}\n\thilightMenu(id) {\n\t\tconst parent = document.getElementById(this.id + 'Frame');\n\t\tif (this.isSelectByManual) {\n\t\t\tfor (let step of this.steps) {\n\t\t\t\tif (step.id === id) {\n\t\t\t\t\tfor (let child of parent.children) {\n\t\t\t\t\t\tchild.classList.remove(\"active\");\n\t\t\t\t\t};\n\t\t\t\t\tdocument.getElementById(step.id)\n\t\t\t\t\t\t.classList.add(\"active\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tfor (let child of parent.children) {\n\t\t\tchild.classList.remove(\"active\");\n\t\t};\n\t\tfor (let step of this.steps) {\n\t\t\tfor (let target of step.targets) {\n\t\t\t\tif (target === id) {\n\t\t\t\t\tdocument.getElementById(step.id)\n\t\t\t\t\t\t.classList.add(\"active\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcreateButtons() {\n\t\tconst menuTabs = [];\n\t\tfor (let step of this.steps) {\n\t\t\tmenuTabs.push(a(step.id, [this.menuButtonClass], step.ancker, {\n\t\t\t\ton: {\n\t\t\t\t\tclick: this.onClick(step.id)\n\t\t\t\t}\n\t\t\t}, step.label))\n\t\t}\n\t\treturn menuTabs;\n\t}\n}","\nexport class BaseEventHandler {\n  constructor() {\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nconst baseActions = [\"addImage\", \"removeImage\", \"sortImages\", 'loadImages'];\nexport class ImageActionCreator {\n  constructor() {}\n  static creatAddAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addImage\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeImage\", targetView, data, storeKey);\n  }\n  static creatLoadImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadImages\", targetView, data, storeKey);\n  }\n  static creatSortImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"sortImages\", targetView, data, storeKey);\n  }\n  static creatChangeTitleImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"changeTitle\", targetView, data, storeKey);\n  }\n  static creatDetailAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"detail\", targetView, data, storeKey);\n  }\n  static getStoreImagesKey(){\n    return \"imagesData\";\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nconst baseActions = [\"addImage\", \"removeImage\", \"sortImages\", 'loadImages'];\nexport class PageActionCreator {\n  constructor() {}\n  static creatAddPageAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addPage\", targetView, data, storeKey);\n  }\n  static creatRemovePageAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removePage\", targetView, data, storeKey);\n  }\n  static creatResetPagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"resetPages\", targetView, data, storeKey);\n  }\n  static creatSortPagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"sortPages\", targetView, data, storeKey);\n  }\n  static getStorePagesKey(){\n    return \"pagesData\";\n  }\n}\n","import { Sorter } from \"../../util/sorter\";\nimport { MainService } from \"../../service/mainService\"\nexport class PageProcessor {\n\tconstructor() {\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.em = this.ms.em;\n\t\tthis.pm = this.ms.pm;\n\t\tthis.tm = this.ms.tm;\n\t}\n\n\tasync resetPagesFull() {\n\t\tconst setting = await this.tm.loadSettings();\n\t\tconst pageNum = setting.pageNum;\n\t\treturn await this.resetPages(pageNum);\n\t}\n\tasync resetPages(pageNum) {\n\t\tconst title = await this.tm.load();\n\t\tconst pages = title.pages;\n\t\tconst pageEntitis = [];\n\t\tconst delPages = [];\n\t\tconst addPageAsNew = {};\n\t\tif (pages.length > pageNum) {\n\n\t\t\tconst pageEntitysMap = await this.em.getAsMap(pages);\n\t\t\tfor (let index in pages) {\n\t\t\t\tconst pk = pages[index];\n\t\t\t\tif (!pk || typeof pk !== \"string\") {\n\t\t\t\t\taddPageAsNew[index] = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst pageEntity = pageEntitysMap[pk]; //await this.em.get(pk);\n\t\t\t\tif (!pageEntity) {\n\t\t\t\t\taddPageAsNew[index] = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tpageEntitis.push(pageEntity);\n\t\t\t\tif (index >= pageNum) {\n\t\t\t\t\tdelPages.push(pk);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let index in delPages) {\n\t\t\t\tconst delTarget = delPages[index];\n\t\t\t\tfor (let i in pages) {\n\t\t\t\t\tconst current = pages[i];\n\t\t\t\t\tif (delTarget === current) {\n\t\t\t\t\t\tdelete pages[i];\n\t\t\t\t\t\tthis.pm.remove(delTarget);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let keyIndex in addPageAsNew) {\n\t\t\t\tconst index = keyIndex * 1;\n\t\t\t\tif (index < pageNum) {\n\t\t\t\t\tconst addOne = await this.pm.save(null, null, null, null, null, index);\n\t\t\t\t\tpages[index] = addOne.getPk();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst addCount = pageNum - pages.length;\n\t\t\tfor (let index = pages.length; index < pageNum; index++) {\n\t\t\t\tconst addOne = await this.pm.save(null, null, null, null, null, index);\n\t\t\t\tpages.push(addOne.getPk());\n\t\t\t}\n\t\t}\n\n\t\tfor (let index = 0; index < pageNum; index++) {\n\t\t\tif (index >= pages.length) {\n\t\t\t\tconst addOne = await this.pm.save(null, null, null, null, null, index);\n\t\t\t\tpages.push(addOne.getPk());\n\t\t\t\t// console.warn(\"index:\"+index+\"/pk:\"+pk+\"/pages[index]:\"+pages[index]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst pk = pages[index];\n\t\t\tif (!pk || typeof pk !== \"string\") {\n\t\t\t\tconst addOne = await this.pm.save(null, null, null, null, null, index);\n\t\t\t\tpages[index] = addOne.getPk();\n\t\t\t\t// console.warn(\"index:\"+index+\"/pk:\"+pk+\"/pages[index]:\"+pages[index]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst pageEntity = await this.em.get(pk);\n\t\t\tif (!pageEntity) {\n\t\t\t\tconst addOne = await this.pm.save(null, null, null, null, null, index);\n\t\t\t\tpages[index] = addOne.getPk();\n\t\t\t\t// console.warn(\"index:\"+index+\"/pk:\"+pk+\"/pages[index]:\"+pages[index]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// console.warn(\"index:\"+index+\"/pk:\"+pk+\"/pages[index]:\"+pages[index]+\"/pageNum:\"+pageNum);\n\t\t}\n\t\tawait this.tm.saveTitle(title);\n\t}\n\tasync loadPages() {\n\t\tconst title = await this.tm.load();\n\t\tconst pages = title.pages;\n\t\tconst pageEntitis = [];\n\t\tfor (let index in pages) {\n\t\t\tconst pk = pages[index];\n\t\t\tif (!pk) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst pageEntity = await this.em.get(pk);\n\t\t\tpageEntitis.push(pageEntity);\n\t\t}\n\t\treturn pageEntitis;\n\t}\n\tasync move(fromPk, toPk) {\n\t\tawait this.pm.move(fromPk, toPk)\n\t}\n\tasync add(imagePk, pagePk) {\n\t\tawait this.pm.addPage(imagePk, pagePk);\n\t}\n\tasync remove(pagePk) {\n\t\tawait this.pm.removeImage(pagePk);\n\t}\n}","import {ImageActionCreator} from '../action/imageActionCreator'\nimport {PageActionCreator} from '../action/pageActionCreator'\nimport {Sorter} from \"../../util/sorter\";\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nimport {PageProcessor} from '../processor/pageProcessor'\nlet imageViewReducer = null;\nexport class ImageViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.em = this.ms.em;\n    this.im = this.ms.im;\n    this.tm = this.ms.tm;\n    this.imagAddAction = ImageActionCreator.creatAddAction();\n    this.imageRemoveAction = ImageActionCreator.creatRemoveAction();\n    this.imagesLoadAction = ImageActionCreator.creatLoadImagesAction();\n    this.imagesSortAction = ImageActionCreator.creatSortImagesAction();\n    this.imagesChangeTitleAction = ImageActionCreator.creatChangeTitleImagesAction();\n    this.imagesDetailAction = ImageActionCreator.creatDetailAction();\n    this.atatch(this.imagAddAction);\n    this.atatch(this.imageRemoveAction);\n    this.atatch(this.imagesLoadAction);\n    this.atatch(this.imagesSortAction);\n    this.atatch(this.imagesChangeTitleAction);\n    this.atatch(this.imagesDetailAction);\n    this.pp = new PageProcessor();\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n    this.storePagesKey = PageActionCreator.getStorePagesKey();\n  }\n  static register() {\n    if (!imageViewReducer) {\n      imageViewReducer = new ImageViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    let isCalled = false;\n    if (this.imagAddAction.type === action.type) {\n      store[this.storeImagesKey] = await this.saveFiles(action.data.files);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imageRemoveAction.type === action.type) {\n      store[this.storeImagesKey] = await this.remove(action.data.imagePKforDelete);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesLoadAction.type === action.type) {\n      store[this.storeImagesKey] = await this.loadImages();\n      store[this.storePagesKey] = await this.loadPages();\n      //alert(store[this.storePagesKey]);\n    } else if (this.imagesSortAction.type === action.type) {\n      store[this.storeImagesKey] = await this.sort(action.data.imagePKmove, action.data.imagePKdrop);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesChangeTitleAction.type === action.type) {\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesDetailAction.type === action.type) {\n      store[\"imagesDetailData\"] = await this.loadAImage(action.data.imagePK);\n    }\n    return store;\n  }\n  async loadPages(){\n    return await this.pp.loadPages();\n  }\n  async saveFiles(files) {\n    const imageEntitis = await this.tm.addImageFiles(files);\n    const retList = this.im.getEntitisAsList();\n    for (let imageEntity of imageEntitis) {\n      retList.unshift(imageEntity);\n    }\n    return await this.im.createRetList(retList);\n  }\n\n  async sort(movePk, dropPk) {\n    //console.log('sort movePk:' + movePk + '/dropPk:' + dropPk+\"/this.em.save:\"+this.em)\n      // console.log(this.em)\n    const imageEntitis = this.im.getEntitisAsList();\n\n    for (let index in imageEntitis) {\n      const imageEntity = imageEntitis[index];\n      const pk = imageEntity.getPk();\n      imageEntity.listing = index;\n      //console.log('sort pk:' + pk + '/index:' + index + '/imageEntity.listing:' + imageEntity.listing)\n    }\n    Sorter.orderBy(imageEntitis, [\n      {\n        colName: \"listing\",\n        isDESC: false\n      }, {\n        colName: \"updateDate\",\n        isDESC: true\n      }\n    ]);\n    const converterMap = {};\n    converterMap[movePk] = dropPk;\n    converterMap[dropPk] = movePk;\n    for (let index in imageEntitis) {\n      const imageEntity = imageEntitis[index];\n      const pk = imageEntity.getPk();\n      console.log('sort pk:' + pk + '/index:' + index + '/imageEntity.listing:' + imageEntity.listing)\n      const convertedPk = converterMap[pk]\n        ? converterMap[pk]\n        : pk;\n      if (convertedPk !== pk) {\n        const imageEntityConverted = this.im.getFromLoaded(convertedPk).imageEntity;\n        imageEntityConverted.listing = index;\n        imageEntityConverted.updateDate = Date.now();\n        await this.em.Images.save(imageEntityConverted);\n      } else {\n        imageEntity.listing = index;\n      }\n    }\n    return await this.im.createRetList(imageEntitis);\n  }\n\n  async loadAImage(pk) {\n    if(!pk){\n      return\n    }\n    const imageEntity = await this.em.get(pk);\n    const binaryEntity = await this.em.get(imageEntity.binary);\n    const size = binaryEntity._ab.byteLength;\n    const imageText = escape(imageEntity.name) + ' (' + (\n    imageEntity.type || 'n/a') + ') - ' + size + 'bytes, last modified: ' + imageEntity.modifyDate + ' size:' + imageEntity.width + 'x' + imageEntity.height\n\n    return {imageEntity:imageEntity,binaryEntity:binaryEntity,imageText:imageText}\n  }\n  async loadImages() {\n    const a = await this.pp.resetPagesFull();\n    return await this.im.loadImages();\n  }\n\n  async remove(pk) {\n    await this.tm.removeImage(pk);\n    this.im.removeLoaded(pk);\n    return this.im.getRetObjsAsList();\n  }\n}\n// setTimeout(ImageViewReducer.register,1);\n","import {BaseEventHandler} from \"./baseEventHandler\";\nimport {ImageActionCreator} from '../reduxy/action/imageActionCreator'\nimport {ImageViewReducer} from '../reduxy/reducer/imageViewReducer'\nexport class FileUploader extends BaseEventHandler {\n  constructor(fileProcessor) {\n    super();\n    // this.fileProcessor = fileProcessor;\n    this.name = \"FileUploader\";\n    ImageViewReducer.register();\n  }\n  handleFileSelect(view) {\n    return (event)=>{\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const files = event.target.files; // FileList object\n      this.handleFiles(view,files);\n    }\n  }\n\n  handleDrop(view){\n    return (event)=>{\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const files = event.dataTransfer.files;\n      this.handleFiles(view,files);\n    }\n  }\n  handleFiles(view,files){\n    const actin = ImageActionCreator.creatAddAction(view,{files:files});\n    view.dispatch(actin);\n    //this.fileProcessor.processFiles(files);\n  }\n  async areadParFile(file){\n    return await areadParFile(file);\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  file\n} from \"../../util/reactive/base/vtags\";\nimport {FileUploader} from \"../../eventHandler/fileUploader\";\nconst text = \"Drop image file\";\nexport class FileUploadArea extends BaseView {\n  constructor() {\n    super(\"fuaPArent\", \"FileUploadArea\",true);\n    this.fu = new FileUploader();\n  }\n  render() {\n    this.FileUploadFile = file(\"FileUploadFile\", [\"FileUploadFile\"],{on:{\n      'change':this.fu.handleFileSelect(this)\n    }});\n    this.fileUploadArea = div(\"FileUploadArea\", [\"FileUploadAreaA\"],text);\n\n    return div(this.id, [\"FileUploadArea\"], {\n      on: {\n        'dragover': this.fu.handleDrop(this),\n        'drop': this.fu.handleDrop(this),\n        'click': (e) => {\n          const fileInput = this.getElementById(\"FileUploadFile\");\n          fileInput.elm.click();\n        }\n      }\n    }, [this.fileUploadArea, this.FileUploadFile]);\n  }\n  async onAfterAttach(store, data) {\n\n    //alert('FileUploadArea onAfterAttach')\n    //this.addEventListeners();\n\n  }\n}\n","const re_yyyy = /yyyy/;\nconst re_MM = /MM/;\nconst re_dd = /dd/;\nconst re_hh = /hh/;\nconst re_mm = /mm/;\nconst re_ss = /ss/;\n\nexport const unixTimeToDateFormat = (unixtime, format = \"yyyy-MM-dd hh:mm:ss\") => {\n\tconst d = new Date(unixtime);\n\tconst year = d.getFullYear();\n\tconst month = ('0' + (d.getMonth() * 1 + 1))\n\t\t.slice(-2);\n\tconst day = ('0' + d.getDate())\n\t\t.slice(-2);;\n\tconst hour = ('0' + d.getHours())\n\t\t.slice(-2);\n\tconst min = ('0' + d.getMinutes())\n\t\t.slice(-2);\n\tconst sec = ('0' + d.getSeconds())\n\t\t.slice(-2);\n\treturn format.replace(re_yyyy, year)\n\t\t.replace(re_MM, month)\n\t\t.replace(re_dd, day)\n\t\t.replace(re_hh, hour)\n\t\t.replace(re_mm, min)\n\t\t.replace(re_ss, sec);\n}\nexport const getNowUnixtime = () => {\n\treturn new Date()\n\t\t.getTime();\n}","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class SettingActionCreator {\n  constructor() {}\n  static creatAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"creatSetting\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeSetting\", targetView, data, storeKey);\n  }\n  static creatLoadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadSetting\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateSetting\", targetView, data, storeKey);\n  }\n  static getStoreKey(){\n    return \"settings\";\n  }\n  static getStoreKeyOpm(){\n    return \"settingsOpm\";\n  }\n}\n","import { SettingActionCreator } from '../action/settingActionCreator'\nimport { PageActionCreator } from '../action/pageActionCreator'\nimport { PageProcessor } from '../processor/pageProcessor'\nimport { ImageActionCreator } from '../action/imageActionCreator'\nimport { Sorter } from \"../../util/sorter\";\nimport { MainService } from \"../../service/mainService\"\nimport { BaseReducer } from '../../util/reactive/baseReducer'\nlet settingViewReducer = null;\nexport class SettingViewReducer extends BaseReducer {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.tm = this.ms.tm;\n\t\tthis.sm = this.ms.sm;\n\t\tthis.im = this.ms.im;\n\t\tthis.opm = this.ms.opm;\n\t\tthis.creatAction = SettingActionCreator.creatAction();\n\t\tthis.creatRemoveAction = SettingActionCreator.creatRemoveAction();\n\t\tthis.creatLoadAction = SettingActionCreator.creatLoadAction();\n\t\tthis.creatUpdateAction = SettingActionCreator.creatUpdateAction();\n\t\tthis.atatch(this.creatAction);\n\t\tthis.atatch(this.creatRemoveAction);\n\t\tthis.atatch(this.creatLoadAction);\n\t\tthis.atatch(this.creatUpdateAction);\n\t\tthis.storeKey = SettingActionCreator.getStoreKey();\n\t\tthis.storeKeyOpm = SettingActionCreator.getStoreKeyOpm();\n\n\t\tthis.pp = new PageProcessor();\n\t\tthis.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n\t\tthis.storePagesKey = PageActionCreator.getStorePagesKey();\n\t}\n\tstatic register() {\n\t\tif (!settingViewReducer) {\n\t\t\tsettingViewReducer = new SettingViewReducer();\n\t\t}\n\t}\n\tasync reduce(store, action) {\n\t\tif (this.creatAction.type === action.type) {\n\t\t\tstore[this.storeKey] = await this.load()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tstore[this.storeKeyOpm] = await this.opm.loadAll()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t} else if (this.creatRemoveAction.type === action.type) {\n\t\t\tstore[this.storeKey] = await this.reset(action.data)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tstore[this.storeKeyOpm] = await this.opm.loadAll()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t} else if (this.creatLoadAction.type === action.type) {\n\t\t\tstore[this.storeKey] = await this.load()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tstore[this.storeKeyOpm] = await this.opm.loadAll()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t} else if (this.creatUpdateAction.type === action.type) {\n\t\t\tstore[this.storeKey] = await this.update(action.data)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\t// alert(\"creatUpdateAction:\" + JSON.stringify(store[this.storeKey]));\n\t\t\tstore[this.storeKeyOpm] = await this.opm.loadAll()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tconst result = await this.pp.resetPagesFull()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tstore[this.storePagesKey] = await this.pp.loadPages(result)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tstore[this.storeImagesKey] = await this.im.loadImages()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\t// console.error(\"storePagesKey:\"+store[this.storePagesKey].length);\n\t\t}\n\t}\n\tasync update(data) {\n\t\tconst title = await this.tm.load();\n\t\tconst pk = title.getPk();\n\n\t\tconst saved = await this.sm.save(pk, data.name, data.pageNum, data.startPage, data.pageDirection, data.outputProfile, data.listing);\n\t\tconst settingEntityLoad = await this.sm.loadByPk(pk);\n\n\t\tif (!settingEntityLoad) {\n\t\t\tconst settingEntity = await this.sm.createDefault(pk);\n\t\t\treturn settingEntity;\n\t\t}\n\t\tconst savedLoad = await this.tm.loadSettings();\n\t\t// console.warn(saved);\n\t\t// console.warn(settingEntityLoad);\n\t\t// console.warn(savedLoad);\n\t\treturn saved;\n\t}\n\tasync reset() {\n\t\tconst title = await this.tm.load();\n\t\tconst pk = title.getPk();\n\t\tconst settingEntity = await this.sm.createDefault(pk);\n\t\treturn settingEntity;\n\t}\n\tasync load() {\n\t\treturn await this.tm.loadSettings();\n\t}\n}","import vu from \"../../util/viewUtil\";\nimport { unixTimeToDateFormat } from \"../../util/timeUtil\";\nimport { BaseView } from \"../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel,\n\tselect,\n\toption,\n\tcreateSelectVnode\n} from \"../../util/reactive/base/vtags\";\nimport { SettingViewReducer } from '../../reduxy/reducer/settingViewReducer'\nimport { SettingData } from '../../settings/exportSettings'\nimport { SettingActionCreator } from '../../reduxy/action/settingActionCreator'\nexport class TitleSettings extends BaseView {\n\tconstructor() {\n\t\tsuper(\"TitleSettings\", \"TitleSettings\");\n\t\tthis.text = \"TitleSettingsAAA\";\n\t\tthis.bodyId = this.id + \"Child\";\n\t\tthis.storeKey = SettingActionCreator.getStoreKey();\n\t\tthis.getStoreKeyOpm = SettingActionCreator.getStoreKeyOpm();\n\t}\n\trender() {\n\t\treturn div(this.bodyId, [\"TitleSettings\"], this.text);\n\t}\n\tasync onAfterAttach(store, data) {\n\t\tSettingViewReducer.register();\n\t\tconst action = SettingActionCreator.creatLoadAction(this, {});\n\t\t// console.warn(\"onAfterAttach action:\" + action.type);\n\t\tawait this.dispatch(action);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\t// console.log(\"TitleSettings onViewShow 01 this.storeKey:\" + this.storeKey + '/' + store[this.storeKey]);\n\t\tif (store[this.storeKey]) {\n\t\t\tawait this.showSettings(store[this.storeKey], store[this.getStoreKeyOpm]);\n\t\t}\n\t}\n\tupdate() {\n\t\treturn (event) => {\n\t\t\tthis.updateExec();\n\t\t\t// setTimeout(() => { this.updateExec(); }, 20);\n\t\t}\n\t}\n\tupdateExec() {\n\t\tconst nameInput = document.getElementById(this.id + \"NameInput\")\n\t\t\t.value;\n\t\tconst pageNumInput = document.getElementById(this.id + \"PageNumInput\")\n\t\t\t.value;\n\t\tconst startPageInput = document.getElementById(this.id + \"StartPageInput\")\n\t\t\t.value;\n\t\tconst pageDirectionInput = document.getElementById(this.id + \"PageDirectionInput\")\n\t\t\t.value;\n\t\tconst outputProfileInput = document.getElementById(this.id + \"OutputProfileInput\")\n\t\t\t.value;\n\t\t//alert(\"update NameInput:\" + nameInput + \"/\" + pageNumInput + \"/\" + startPageInput + \"/\" + pageDirectionInput + \"/\" + outputProfileInput)\n\t\t//data.name, data.pageNum, data.startPage,, data.startPage, data.outputProfile, data.listing);\n\t\tconst action = SettingActionCreator.creatUpdateAction(this, {\n\t\t\tname: nameInput,\n\t\t\tpageNum: pageNumInput,\n\t\t\tstartPage: startPageInput,\n\t\t\tpageDirection: pageDirectionInput,\n\t\t\toutputProfile: outputProfileInput,\n\t\t\tlisting: 0\n\t\t});\n\n\t\tthis.dispatch(action);\n\t}\n\tasync showSettings(setting, outputProfiles) {\n\t\t// console.log(setting);\n\t\t// console.log(outputProfiles);\n\t\tconst labelClass = this.id + \"Label\";\n\t\tconst inputClass = this.id + \"Input\";\n\t\tconst title = div(\"\", [this.id + \"Title\"], \"Setting for Output\");\n\t\tconst nameLabel = span(\"\", [labelClass], 'name:');\n\t\tconst nameInput = input(this.id + \"NameInput\", [this.id + \"NameInput\"], {\n\t\t\tprops: {\n\t\t\t\tname: this.id + \"NameInput\"\n\t\t\t}\n\t\t}, \"text\", setting.name);\n\t\tconst nameRow = div(\"\", [this.id + \"Row\"], [nameLabel, nameInput]);\n\t\tconst pageNumLabel = span(\"\", [labelClass], 'pageNum:');\n\t\tconst idpageNumInput = this.id + \"PageNumInput\";\n\t\tconst pageNumInput = createSelectVnode(idpageNumInput, [\n\t\t\tinputClass, idpageNumInput\n\t\t], idpageNumInput, SettingData.pageNums, setting.pageNum);\n\t\tconst pageNumRow = div(\"\", [this.id + \"Row\"], [pageNumLabel, pageNumInput]);\n\n\t\tconst startPageLabel = span(\"\", [labelClass], 'startPage:');\n\t\tconst idStartPageInput = this.id + \"StartPageInput\";\n\t\tconst startPageInput = createSelectVnode(idStartPageInput, [\n\t\t\tinputClass, idStartPageInput\n\t\t], idStartPageInput, SettingData.pageStart, setting.startPage);\n\t\tconst startPageRow = div(\"\", [this.id + \"Row\"], [startPageLabel, startPageInput]);\n\n\t\tconst pageDirectionLabel = span(\"\", [labelClass], 'pageDirection:');\n\t\tconst idPageDirectionInput = this.id + \"PageDirectionInput\";\n\t\tconst pageDirectionInput = createSelectVnode(idPageDirectionInput, [\n\t\t\tinputClass, idPageDirectionInput\n\t\t], idPageDirectionInput, SettingData.pageDirection, setting.pageDirection);\n\t\tconst pageDirectionRow = div(\"\", [this.id + \"Row\"], [pageDirectionLabel, pageDirectionInput]);\n\n\t\tconst outputProfileLabel = span(\"\", [labelClass], 'outputProfile:');\n\t\tconst idOutputProfileInput = this.id + \"OutputProfileInput\";\n\t\tconst outputProfileInput = input(idOutputProfileInput, [\n\t\t\tinputClass, idOutputProfileInput\n\t\t], {\n\t\t\tprops: {\n\t\t\t\tname: idOutputProfileInput\n\t\t\t}\n\t\t}, \"text\", setting.outputProfile);\n\t\tconst outputProfileRow = div(\"\", [this.id + \"Row\"], [outputProfileLabel, outputProfileInput]);\n\t\tconst frameL = div(\"\", [this.id + \"FrameL\"], [nameRow, pageNumRow]);\n\t\tconst frameR = div(\"\", [this.id + \"FrameR\"], [startPageRow, pageDirectionRow, outputProfileRow]);\n\t\tconst frame = div(\"\", [this.id + \"Frame\"], [frameL, frameR]);\n\t\tconst button = div(\"\", [this.id + \"Update\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.update()\n\t\t\t}\n\t\t}, \"Save! LastUpdate:\" + unixTimeToDateFormat(setting.updateDate));\n\t\tconst childlen = [title, frame, button];\n\t\tthis.prePatch(\"#\" + this.bodyId, div(this.bodyId, [\"TitleSettings\"], childlen));\n\t}\n}","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class ExportActionCreator {\n  constructor() {}\n  static createExecuteAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"executeExport\", targetView, data, storeKey);\n  }\n  static creatExecuteAllAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"executeExportAll\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeExported\", targetView, data, storeKey);\n  }\n  static creatLoadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadExported\", targetView, data, storeKey);\n  }\n  static createDownloadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"downloadExport\", targetView, data, storeKey);\n  }\n  static createExecutePdfAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"executePdfExport\", targetView, data, storeKey);\n  }\n  static createDownloadPdfAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"downloadPdfExport\", targetView, data, storeKey);\n  }\n  static createDownloadImgAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"downloadUploadedImgZip\", targetView, data, storeKey);\n  }\n  static createDownloadFullBKAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"downloadFullBackup\", targetView, data, storeKey);\n  }\n  static createSelectOrderAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"selectOrderExport\", targetView, data, storeKey);\n  }\n  static getStoreKey(){\n    return \"exports\";\n  }\n  static getStorePdfDLKey(){\n    return \"exportPdfDL\";\n  }\n  static getStoreZipDLKey(){\n    return \"exportZipDL\";\n  }\n  static getStoreUploadedImgZipDLKey(){\n    return \"exportUploadedImgZipDL\";\n  }\n  static getStoreFullBackupZipDLKey(){\n    return \"exportFullBackupZipDL\";\n  }\n  static getStoreRemoveResultKey(){\n    return \"exportRemoveResult\";\n  }\n  static getStoreExportResultKey(){\n    return \"exportExportResult\";\n  }\n  static getStoreSelectedOrderKey(){\n    return \"exportSelectedOrder\";\n  }\n}\n","import { ImageMerger } from \"./imageMerger\";\nexport class ImageCropper {\n\tconstructor() {\n\t\tthis.imageMerger = new ImageMerger();\n\t}\n\n\tasync cropImage(imageData, newWidth, newHieght, offsetX, offsetY) {\n\t\tconst retArray = new Uint8ClampedArray(newWidth * newHieght * 4);\n\t\tconst imagaDataBase = {\n\t\t\tdata: retArray,\n\t\t\twidth: newWidth,\n\t\t\theight: newHieght\n\t\t};\n\t\timageData.offsetX = offsetX;\n\t\timageData.offsetY = offsetY;\n\t\tawait this.imageMerger.margeReplace(imagaDataBase, [imageData], false)\n\t\treturn imagaDataBase;\n\t}\n\tasync corpImageToData(imageData, distData, offset) {\n\t\timageData.offsetX = offset.x;\n\t\timageData.offsetY = offset.y;\n\t\tawait this.imageMerger.margeReplace(distData, [imageData], false);\n\t}\n}","import {ByteUtil} from \"./byteUtil\";\nexport class ImageFilter {\n  constructor() {\n  }\n\n  beGrascale(imageData) {\n    const data = imageData.data;\n    const width = imageData.width;\n    const height = imageData.height;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const index = (y * width + x)*4;\n        const gray = ByteUtil.trimByte((data[index] + data[index + 1] + data[index + 2])/3);\n        data[index] = gray;\n        data[index + 1] = gray;\n        data[index + 2] = gray;\n      }\n    }\n    return imageData;\n  }\n}\n","export class UnicodeEncoder {\n  static surrogatePairToCodePoint(charCode1, charCode2) {\n    return ((charCode1 & 0x3FF) << 10) + (charCode2 & 0x3FF) + 0x10000;\n  }\n\n  static stringToCodePointArray(str) {\n    const codePoints = [];\n    const len = str.length;\n    for (let i = 0; i < len; i++) {\n      const charCode = str.charCodeAt(i);\n      if ((charCode & 0xF800) === 0xD800) {\n        codePoints.push(UnicodeEncoder.surrogatePairToCodePoint(charCode, str.charCodeAt(++i)));\n      } else {\n        codePoints.push(charCode);\n      }\n    }\n    console.log(codePoints)\n    return codePoints;\n  }\n\n  static codePointArrayToString(codePoints) {\n    let stringParts = \"\";\n    const len = codePoints.length\n    for (let i = 0; i < len; ++i) {\n      let codePointCharCodes = null;\n      const codePoint = codePoints[i];\n      if (codePoint > 0xFFFF) {\n        const offset = codePoint - 0x10000;\n        codePointCharCodes = [\n          0xD800 + (offset >> 10),\n          0xDC00 + (offset & 0x3FF)\n        ];\n      } else {\n        codePointCharCodes = [codePoint];\n      }\n      stringParts += (String.fromCharCode.apply(String, codePointCharCodes));\n    }\n    return stringParts;\n  }\n  static encodeUTF8(str) {\n    const codes = UnicodeEncoder.stringToCodePointArray(str);\n    const len = codes.length;\n    const array = [];\n    for (let i = 0; i < len; i++) {\n      const c = codes[i];\n      if (c <= 0x7f) { //1byte\n        array.push(c);\n      } else if (c <= 0x7ff) { //2byte\n        array.push(0xc0 | c >>> 6, 0x80 | c & 0xbf);\n      } else if (c <= 0xffff) { //3byte\n        array.push(0xe0 | c >>> 12, 0x80 | c >>> 6 & 0xbf, 0x80 | c & 0xbf);\n      } else if (c <= 0x1ffff) { //4byte\n        array.push(0xf0 | c >>> 18, 0x80 | c >>> 12 & 0xbf, 0x80 | c >>> 6 & 0xbf, 0x80 | c & 0xbf);\n      }\n    }\n    return new Uint8Array(array);\n  }\n  static encodeUTF16(str, endian) {\n    const codes = UnicodeEncoder.stringToCodePointArray(str);\n    const len = codes.length;\n    const array = endian\n      ? endian === 'LE'\n        ? [0xff, 0xfe]\n        : [0xfe, 0xff]\n      : []; //BOM\n    for (let i = 0; i < len; i++) {\n      const c = codes[i];\n      if (endian === 'LE') {\n        array.push(c & 0xff, c >>> 8 & 0xff);\n      } else {\n        array.push(c >>> 8 & 0xff, c & 0xff);\n      }\n    }\n    return new Uint8Array(array);\n  }\n  decodeUTF8(array) {\n    let str = \"\";\n    const len = array.length;\n    for (let i = 0; i < len; i++) {\n      const c = array[i];\n      if (c <= 0x7f) {\n        str += String.fromCharCode(c);\n      } else if (c <= 0xdf && c >= 0xc2) {\n        str += String.fromCharCode((c & 31) << 6 | array[++i] & 63);\n      } else if (c <= 0xef && c >= 0xe0) {\n        str += String.fromCharCode((c & 15) << 12 | (array[++i] & 63) << 6 | array[++i] & 63);\n      } else if (c <= 0xf7 && c >= 0xf0) {\n        //utf8   11110uuu  10uuxxxx  10xxxxxx  10xxxxxx\n        //utf16  110110wwwwxxxxxx  110111xxxxxxxxxx (wwww = uuuuu-1)\n        str += String.fromCharCode(0xd800 | ((c & 7) << 8 | (array[++i] & 63) << 2 | array[++i] >>> 4 & 3) - 64, 0xdc00 | (array[i++] & 15) << 6 | array[i] & 63);\n      } else {\n        str += String.fromCharCode(0xfffd);\n      }\n    }\n    return str;\n  }\n  decodeUTF16(array) {\n    let endian = 'BE';\n    let i = 0;\n    const len = array.length;\n    let str = \"\";\n    if (array[0] * array[1] === 0xff * 0xfe) { // remove BOM\n      endian = array[0] === 0xff\n        ? 'LE'\n        : 'BE';\n      i = 2;\n    }\n    for (; i < len; i += 2) {\n      str += String.fromCharCode(\n        endian === 'LE'\n        ? (array[i + 1] << 8 | array[i])\n        : (array[i] << 8 | array[i + 1]));\n    }\n    return str;\n  }\n  static stringToByteArray(str) {\n    const len = str.length;\n    const array = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      array[i] = str.charCodeAt(i) & 0xff;\n    }\n    return array;\n  }\n}\n","import { ProgressActionCreator } from \"../action/progressActionCreator\"\nimport { ActionDispatcher } from \"../../util/reactive/actionDispatcher\";\nexport class ProgressBarProcessor {\n\tconstructor(pp) {\n\t\tthis.actionDispatcher = ActionDispatcher.createStandAlone();\n\t}\n\tasync update(percentProgress, msg) {\n\t\tif (percentProgress < 100) {\n\t\t\t//this.progress.progress(percentLoaded);\n\t\t\tconst percent = Math.floor(percentProgress * 10) / 10;\n\t\t\tawait this.actionDispatcher.dispatch(ProgressActionCreator.creatUpdateAction(null, {\n\t\t\t\tprogress: percent,\n\t\t\t\tmsg: msg\n\t\t\t}));\n\t\t}\n\t}\n\tasync comple(msg) {\n\t\t// setTimeout(()=>{\n\t\tawait this.actionDispatcher.dispatch(ProgressActionCreator.creatCompleatAction(null, { msg: msg }))\n\t\t// });\n\t}\n\tasync open(title) {\n\t\tawait this.actionDispatcher.dispatch(ProgressActionCreator.creatAddAction(null, {\n\t\t\tmsg: \"\",\n\t\t\ttitle: title\n\t\t}))\n\t}\n\tasync close() {\n\t\tawait this.actionDispatcher.dispatch(ProgressActionCreator.creatRemoveAction());\n\t}\n}","import { Sorter } from \"../../util/sorter\";\nimport { MainService } from \"../../service/mainService\"\nimport { ProgressBarProcessor } from \"./progressBarProcessor\"\nexport class PreviewProcessor {\n\tconstructor() {\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.em = this.ms.em;\n\t\tthis.tm = this.ms.tm;\n\t\tthis.ip = this.ms.ip;\n\t\tthis.previewMaxWidth = 1000;\n\t\tthis.previewMaxHeight = 1000;\n\t\tthis.pbp = new ProgressBarProcessor();\n\t\tthis.progress = 0;\n\t}\n\n\tasync loadPreviews() {\n\t\tawait this.pbp.open('Create Previews');\n\t\tthis.progress = 0;\n\t\tthis.pbp.update(this.progress, 'loading Settings');\n\t\tconst title = await this.tm.load();\n\t\tconst pages = title.pages;\n\t\tconst retPreviews = [];\n\t\tconst pegaNum = pages.length;\n\t\tconst stepNum = 4\n\t\tconst progressUnit = 100 / (stepNum * pegaNum)\n\t\tlet pageCount = 0;\n\n\t\tconst pageEntitysMap = await this.em.getAsMap(pages);\n\t\tfor (let pagePk of pages) {\n\t\t\tpageCount++;\n\t\t\tconst pageStep = \"[\" + pageCount + \"/\" + pegaNum + \"]\";\n\t\t\tthis.progress += progressUnit;\n\t\t\tthis.pbp.update(this.progress, 'load pageEnitity' + pageStep);\n\t\t\tif (!pagePk) {\n\t\t\t\tretPreviews.push(null);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst pageEnitity = pageEntitysMap[pagePk]; //await this.em.get(pagePk);\n\t\t\tif (!pageEnitity) {\n\t\t\t\tretPreviews.push(null);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst previewThumbnail = pageEnitity.previewThumbnail;\n\t\t\tconst baseImage = pageEnitity.baseImage;\n\t\t\tif (baseImage) {\n\t\t\t\tif (previewThumbnail) {\n\t\t\t\t\tthis.progress += progressUnit * 3;\n\t\t\t\t\tthis.pbp.update(this.progress, 'load binaryEntity' + pageStep);\n\t\t\t\t\tconst binaryEntity = await this.em.get(previewThumbnail);\n\t\t\t\t\tbinaryEntity.parent = pageEnitity;\n\t\t\t\t\tbinaryEntity.parentPk = pagePk;\n\t\t\t\t\tretPreviews.push(binaryEntity);\n\t\t\t\t} else {\n\t\t\t\t\tthis.progress += progressUnit;\n\t\t\t\t\tthis.pbp.update(this.progress, 'load imageEntity' + pageStep);\n\t\t\t\t\tconst imageEntity = await this.em.get(baseImage);\n\t\t\t\t\tthis.progress += progressUnit;\n\t\t\t\t\tthis.pbp.update(this.progress, 'load binaryEntity' + pageStep);\n\t\t\t\t\tconst binaryEntity = await this.em.get(imageEntity.binary);\n\t\t\t\t\t//TODO mk previews\n\t\t\t\t\t//binaryEntity._ab = await this.ip.resize(binaryEntity._ab,this.previewMaxWidth,this.previewMaxHeight);\n\t\t\t\t\tthis.progress += progressUnit;\n\t\t\t\t\tthis.pbp.update(this.progress, 'resize As Paper B5_72dpi' + pageStep);\n\t\t\t\t\tbinaryEntity._ab = await this.ip.resizeAsPaperB5_72(binaryEntity._ab);\n\t\t\t\t\t// console.log(newData.data);\n\t\t\t\t\t// console.log(binaryEntity._ab);\n\t\t\t\t\t// alert(binaryEntity._ab);\n\t\t\t\t\tbinaryEntity.parent = pageEnitity;\n\t\t\t\t\tbinaryEntity.parentPk = pagePk;\n\t\t\t\t\tretPreviews.push(binaryEntity);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tretPreviews.push(null);\n\t\t\t}\n\t\t}\n\n\t\tthis.progress = 100;\n\t\tawait this.pbp.update(this.progress, 'end all!');\n\t\treturn retPreviews;\n\t}\n\tasync shapeListBySets(previews, isSingle, setting) {\n\t\tconst cratePageData = PreviewProcessor.getCratePageDataFunc();\n\t\tif (isSingle) {\n\t\t\tconst retSetLis = [];\n\t\t\tfor (let index in previews) {\n\t\t\t\tretSetLis.push(cratePageData(index * 1 + 1, false, false, previews, this.dummyClass));\n\t\t\t}\n\t\t\tawait this.pbp.comple(this.progress);\n\t\t\treturn retSetLis;\n\t\t} else {\n\t\t\tconst pageNum = setting.pageNum * 1; //SettingData.pageNums[setting.pageNum-1]*1;\n\t\t\tthis.pageNum = pageNum;\n\t\t\tawait this.pbp.comple(this.progress);\n\t\t\treturn PreviewProcessor.buildPageFrames(setting, previews, cratePageData, this.dummyClass);\n\t\t}\n\t}\n\t//\n\tstatic getCratePageDataFunc() {\n\t\treturn (pageNo, className, isRight, binaries, dummyClass) => {\n\t\t\tconst currentBinary = binaries[pageNo - 1];\n\t\t\treturn {\n\t\t\t\tpageNo: pageNo,\n\t\t\t\tparent: currentBinary ? currentBinary.parent : null,\n\t\t\t\tparentPk: currentBinary ? currentBinary.parentPk : null,\n\t\t\t\tisDummy: className === dummyClass,\n\t\t\t\tisRight: isRight,\n\t\t\t\tbinary: currentBinary\n\t\t\t}\n\t\t}\n\t}\n\tstatic buildPageFrames(setting, binaries, cratePageData, dummyClass) {\n\t\tconst retFrames = [];\n\t\tconst startPage = setting.startPage;\n\t\tconst pageNum = setting.pageNum * 1; //SettingData.pageNums[setting.pageNum-1]*1;\n\t\tconst pageDirection = setting.pageDirection;\n\t\tconst isPageDirectionR2L = pageDirection === \"r2l\";\n\t\tconst isPageStartR = startPage === \"r\";\n\t\tconst frameNum = Math.ceil(pageNum / 2);\n\t\tconst isOdd = (pageNum % 2 === 1);\n\t\tconst isMatchPageStartSide = (pageDirection.indexOf(startPage) === 0);\n\t\tconst addPageNum = isOdd ?\n\t\t\t1 :\n\t\t\tisMatchPageStartSide ?\n\t\t\t0 :\n\t\t\t1;\n\t\tconst totalPageFrame = frameNum * 1 + addPageNum * 1;\n\t\tconst pageClass = \"Page\";\n\t\tconst isStartFull = (isPageDirectionR2L && isPageStartR) || (!isPageDirectionR2L && !isPageStartR)\n\t\tconst leftStartDummyClass = !isPageStartR || isStartFull ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst rightStartDummyClass = isPageStartR || isStartFull ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst leftEndDummyClass = (isOdd && (!isStartFull || (isStartFull && !isPageDirectionR2L))) || (!isOdd && (!isPageDirectionR2L || isStartFull)) ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst rightEndDummyClass = (isOdd && (!isStartFull || (isStartFull && isPageDirectionR2L))) || (!isOdd && (isPageDirectionR2L || isStartFull)) ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst lastIndex = totalPageFrame - 1;\n\t\tlet pagNo = 0;\n\t\tlet pageOffset = 0;\n\t\t//console.log(\"★lastIndex:\"+lastIndex+\"/pageNum:\"+pageNum+\"/setting.pageNum:\"+setting.pageNum);\n\t\tfor (let index = 0; index < totalPageFrame; index++) {\n\t\t\tconst leftPageNo = (\n\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t1 :\n\t\t\t\t0) + pageOffset + pagNo;\n\t\t\tconst rightPageNo = (\n\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t0 :\n\t\t\t\t1) + pageOffset + pagNo;\n\t\t\tconst pagePair = [];\n\t\t\tretFrames.push(pagePair);\n\t\t\t//////////////////////////////////\n\t\t\tif (index === 0) { //LR\n\t\t\t\tconst leftPageNoFirst = isPageDirectionR2L && isStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t\t1 :\n\t\t\t\t\tisStartFull ?\n\t\t\t\t\t1 :\n\t\t\t\t\t0\n\t\t\t\tconst rightPageNoFirst = isPageDirectionR2L && isStartFull ?\n\t\t\t\t\t1 :\n\t\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t\t0 :\n\t\t\t\t\tisStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\t1\n\t\t\t\tpagePair.push(cratePageData(leftPageNoFirst, leftStartDummyClass, false, binaries, dummyClass));\n\t\t\t\tpagePair.push(cratePageData(rightPageNoFirst, rightStartDummyClass, true, binaries, dummyClass));\n\t\t\t\tpageOffset = 1;\n\t\t\t\tpagNo += isStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\t1;\n\t\t\t} else if (index === lastIndex) {\n\t\t\t\tpagePair.push(cratePageData(leftPageNo, leftEndDummyClass, false, binaries, dummyClass));\n\t\t\t\tpagePair.push(cratePageData(rightPageNo, rightEndDummyClass, true, binaries, dummyClass));\n\t\t\t} else {\n\t\t\t\tpagePair.push(cratePageData(leftPageNo, \"\", false, binaries, dummyClass));\n\t\t\t\tpagePair.push(cratePageData(rightPageNo, \"\", true, binaries, dummyClass));\n\t\t\t\tpagNo += 2;\n\t\t\t}\n\t\t}\n\t\treturn retFrames;\n\t}\n\n\tasync updatePage(pk, key) {\n\t\tconst pageEntity = await this.em.Pages.get(pk);\n\t\tconst cratePageData = PreviewProcessor.getCratePageDataFunc();\n\t\tif (pageEntity) {\n\t\t\tconst value = pageEntity[key];\n\t\t\tpageEntity[key] = !value;\n\t\t\tawait this.em.Pages.save(pageEntity);\n\n\t\t}\n\t\treturn pageEntity;\n\t}\n}","export class BinaryUtil {\n\tconstructor() {}\n\ttoArrayBuffer() {\n\n\t}\n\tstatic joinU8as(u8as) {\n\t\tlet len = 0;\n\t\tlet index = 0;\n\t\tconst u8aEdge = [];\n\t\tfor (let u8a of u8as) {\n\t\t\tconst start = len;\n\t\t\tlen += u8a.byteLength;\n\t\t\tconst end = len;\n\t\t\tu8aEdge.push({\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t});\n\t\t}\n\t\t// console.log(\"joinU8as.len:\" + len);\n\t\tconst retU8a = new Uint8Array(len);\n\t\tfor (let u8a of u8as) {\n\t\t\tconst edge = u8aEdge[index];\n\t\t\tconst start = edge.start;\n\t\t\tconst end = edge.end;\n\t\t\tfor (let i = start; i < end; i++) {\n\t\t\t\tretU8a[i] = u8a[i - start];\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\t\treturn retU8a;\n\t}\n\tstatic hexString2U8a(hexStr) {\n\t\tconst retArrray = [];\n\t\tconst hexList = hexStr.split(\",\");\n\t\t// console.log(\"BinaryUtil.hexString2U8a hexStr:\" + hexStr + \" /len:\" + hexList.length)\n\t\t// console.log(hexList)\n\t\tfor (let hex of hexList) {\n\t\t\tif (hex && !Number.isNaN(parseInt(hex, 16))) {\n\t\t\t\tretArrray.push(parseInt(hex, 16));\n\t\t\t}\n\t\t}\n\t\treturn new Uint8Array(retArrray);\n\t}\n\tstatic convertDataUri2U8a(dataUri) {\n\t\tconst dataUriParts = dataUri.split(',');\n\t\tconst base64 = dataUriParts[1];\n\t\tconst binStr = atob(base64);\n\t\tconst binLen = binStr.length;\n\t\tconst u8a = new Uint8Array(new ArrayBuffer(binLen));\n\t\tfor (let i = 0; i < binLen; i++) {\n\t\t\tu8a[i] = binStr.charCodeAt(i);\n\t\t}\n\t\treturn u8a;\n\t}\n\tconvertStr2Ab(str) {\n\t\tconst string = btoa(unescape(encodeURIComponent(str)));\n\t\tconst charList = string.split('');\n\t\tconst len = charList.length;\n\t\tconst ua = new Uint8Array(len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tua[i] = charList[i].charCodeAt(0);\n\t\t}\n\t\treturn ua.buffer;\n\t}\n\tuintToString(ab) {\n\t\tconst ua = new Uint8Array(ab);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tua[i] = charList[i].charCodeAt(0);\n\t\t}\n\t\tconst encodedString = String.fromCharCode.apply(null, uintArray)\n\t\tconst decodedString = decodeURIComponent(escape(atob(encodedString)));\n\t\treturn decodedString;\n\t}\n\n\tconvertHexToAb(array) {\n\t\tconst len = array.length;\n\t\tconst retArray = new Uint8Array(len);\n\t\tfor (let index = 0; index < len; index++) {\n\t\t\tconst hexStr = array[index];\n\t\t\tretArray[index] = parseInt(hexStr, 16);\n\t\t}\n\t\treturn retArray.buffer;\n\t}\n\tunicodeStringToTypedArray(s) {\n\t\tconst escstr = encodeURIComponent(s);\n\t\tconst binstr = escstr.replace(/%([0-9A-F]{2})/g, function(match, p1) {\n\t\t\treturn String.fromCharCode('0x' + p1);\n\t\t});\n\t\tconst ua = new Uint8Array(binstr.length);\n\t\tArray.prototype.forEach.call(binstr, function(ch, i) {\n\t\t\tua[i] = ch.charCodeAt(0);\n\t\t});\n\t\treturn ua;\n\t}\n\ttypedArrayToUnicodeString(ua) {\n\t\tconst binstr = Array.prototype.map.call(ua, function(ch) {\n\t\t\t\treturn String.fromCharCode(ch);\n\t\t\t})\n\t\t\t.join('');\n\t\tconst escstr = binstr.replace(/(.)/g, function(m, p) {\n\t\t\tconst code = p.charCodeAt(p)\n\t\t\t\t.toString(16)\n\t\t\t\t.toUpperCase();\n\t\t\tif (code.length < 2) {\n\t\t\t\tcode = '0' + code;\n\t\t\t}\n\t\t\treturn '%' + code;\n\t\t});\n\t\treturn decodeURIComponent(escstr);\n\t}\n}","export class UnicodeEncoder {\n\tstatic surrogatePairToCodePoint(charCode1, charCode2) {\n\t\treturn ((charCode1 & 0x3FF) << 10) + (charCode2 & 0x3FF) + 0x10000;\n\t}\n\n\tstatic stringToCodePointArray(str) {\n\t\tconst codePoints = [];\n\t\tif (!str) {\n\t\t\treturn codePoints;\n\t\t}\n\t\tconst len = str.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst charCode = str.charCodeAt(i);\n\t\t\tif ((charCode & 0xF800) === 0xD800) {\n\t\t\t\tcodePoints.push(UnicodeEncoder.surrogatePairToCodePoint(charCode, str.charCodeAt(++i)));\n\t\t\t} else {\n\t\t\t\tcodePoints.push(charCode);\n\t\t\t}\n\t\t}\n\t\t// console.log(codePoints)\n\t\treturn codePoints;\n\t}\n\n\tstatic codePointArrayToString(codePoints) {\n\t\tlet stringParts = \"\";\n\t\tconst len = codePoints.length\n\t\tfor (let i = 0; i < len; ++i) {\n\t\t\tlet codePointCharCodes = null;\n\t\t\tconst codePoint = codePoints[i];\n\t\t\tif (codePoint > 0xFFFF) {\n\t\t\t\tconst offset = codePoint - 0x10000;\n\t\t\t\tcodePointCharCodes = [\n\t\t\t\t\t0xD800 + (offset >> 10),\n\t\t\t\t\t0xDC00 + (offset & 0x3FF)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tcodePointCharCodes = [codePoint];\n\t\t\t}\n\t\t\tstringParts += (String.fromCharCode.apply(String, codePointCharCodes));\n\t\t}\n\t\treturn stringParts;\n\t}\n\tstatic encodeUTF8(str) {\n\t\tconst codes = UnicodeEncoder.stringToCodePointArray(str);\n\t\tconst len = codes.length;\n\t\tconst array = [];\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst c = codes[i];\n\t\t\tif (c <= 0x7f) { //1byte\n\t\t\t\tarray.push(c);\n\t\t\t} else if (c <= 0x7ff) { //2byte\n\t\t\t\tarray.push(0xc0 | c >>> 6, 0x80 | c & 0xbf);\n\t\t\t} else if (c <= 0xffff) { //3byte\n\t\t\t\tarray.push(0xe0 | c >>> 12, 0x80 | c >>> 6 & 0xbf, 0x80 | c & 0xbf);\n\t\t\t} else if (c <= 0x1ffff) { //4byte\n\t\t\t\tarray.push(0xf0 | c >>> 18, 0x80 | c >>> 12 & 0xbf, 0x80 | c >>> 6 & 0xbf, 0x80 | c & 0xbf);\n\t\t\t}\n\t\t}\n\t\treturn new Uint8Array(array);\n\t}\n\tstatic encodeUTF16(str, endian) {\n\t\tconst codes = UnicodeEncoder.stringToCodePointArray(str);\n\t\tconst len = codes.length;\n\t\tconst array = endian ?\n\t\t\tendian === 'LE' ? [0xff, 0xfe] : [0xfe, 0xff] : []; //BOM\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst c = codes[i];\n\t\t\tif (endian === 'LE') {\n\t\t\t\tarray.push(c & 0xff, c >>> 8 & 0xff);\n\t\t\t} else {\n\t\t\t\tarray.push(c >>> 8 & 0xff, c & 0xff);\n\t\t\t}\n\t\t}\n\t\treturn new Uint8Array(array);\n\t}\n\tdecodeUTF8(array) {\n\t\tlet str = \"\";\n\t\tconst len = array.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst c = array[i];\n\t\t\tif (c <= 0x7f) {\n\t\t\t\tstr += String.fromCharCode(c);\n\t\t\t} else if (c <= 0xdf && c >= 0xc2) {\n\t\t\t\tstr += String.fromCharCode((c & 31) << 6 | array[++i] & 63);\n\t\t\t} else if (c <= 0xef && c >= 0xe0) {\n\t\t\t\tstr += String.fromCharCode((c & 15) << 12 | (array[++i] & 63) << 6 | array[++i] & 63);\n\t\t\t} else if (c <= 0xf7 && c >= 0xf0) {\n\t\t\t\t//utf8   11110uuu  10uuxxxx  10xxxxxx  10xxxxxx\n\t\t\t\t//utf16  110110wwwwxxxxxx  110111xxxxxxxxxx (wwww = uuuuu-1)\n\t\t\t\tstr += String.fromCharCode(0xd800 | ((c & 7) << 8 | (array[++i] & 63) << 2 | array[++i] >>> 4 & 3) - 64, 0xdc00 | (array[i++] & 15) << 6 | array[i] & 63);\n\t\t\t} else {\n\t\t\t\tstr += String.fromCharCode(0xfffd);\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\tdecodeUTF16(array) {\n\t\tlet endian = 'BE';\n\t\tlet i = 0;\n\t\tconst len = array.length;\n\t\tlet str = \"\";\n\t\tif (array[0] * array[1] === 0xff * 0xfe) { // remove BOM\n\t\t\tendian = array[0] === 0xff ?\n\t\t\t\t'LE' :\n\t\t\t\t'BE';\n\t\t\ti = 2;\n\t\t}\n\t\tfor (; i < len; i += 2) {\n\t\t\tstr += String.fromCharCode(\n\t\t\t\tendian === 'LE' ?\n\t\t\t\t(array[i + 1] << 8 | array[i]) :\n\t\t\t\t(array[i] << 8 | array[i + 1]));\n\t\t}\n\t\treturn str;\n\t}\n\tstatic stringToByteArray(str) {\n\t\tconst len = str.length;\n\t\tconst array = new Uint8Array(len);\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tarray[i] = str.charCodeAt(i) & 0xff;\n\t\t}\n\t\treturn array;\n\t}\n}","export const KeyKeywords = {\n\tType: true,\n\tSubtype: true,\n\tBaseFont: true,\n\tPDF: true,\n\tColorSpace: true,\n\tFilter: true,\n\tProcSet: true\n};\n//72dpi 25.4mm 1mm=2.834645669\nexport const pageSazeMapA = {\n\tA4: [0, 0, 595, 842],\n\tA4: [0, 0, 595, 842]\n}\nexport const paperSizeSet = {\n\tA6: {\n\t\tx: 105,\n\t\ty: 148\n\t},\n\tB6: {\n\t\tx: 128,\n\t\ty: 182\n\t},\n\tA5: {\n\t\tx: 148,\n\t\ty: 210\n\t},\n\tB5: {\n\t\tx: 182,\n\t\ty: 257\n\t},\n\tA4: {\n\t\tx: 210,\n\t\ty: 297\n\t},\n\tB4: {\n\t\tx: 257,\n\t\ty: 364\n\t},\n\tA3: {\n\t\tx: 297,\n\t\ty: 420\n\t}\n}\nexport const pageSazeMap = (() => {\n\tconst retMap = {};\n\tconst retio = 1 / 25.4 * 72;\n\tfor (let key in paperSizeSet) {\n\t\tconst value = paperSizeSet[key];\n\t\tconst x = Math.floor(value.x * 10 * retio) / 10;\n\t\tconst y = Math.floor(value.y * 10 * retio) / 10;\n\t\tretMap[key] = [0, 0, x, y];\n\t}\n\treturn retMap\n})()","import {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tUnicodeEncoder\n} from '../util/unicodeEncoder'\nimport {\n\tKeyKeywords\n} from '../constants/pdfConstants'\nconst refMap = new Map();\nconst NEWLINE = '\\n';\nconst refList = [];\nexport class RefObject {\n\tconstructor() {\n\t\tthis.exportText = '';\n\t\tthis.map = {};\n\t\tthis.isBePlaneMap = false;\n\t\tthis.afterRegsterRefMap = [];\n\t\tthis.isRoot = false;\n\t\tthis.isInfo = false;\n\t}\n\tcreateExport() {\n\n\t}\n\tstatic getRefMap() {\n\t\treturn refMap;\n\t}\n\tstatic init() {\n\t\tconst len = refList.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\trefList.pop();\n\t\t}\n\t\trefMap.clear();\n\t}\n\tstatic getRefList() {\n\t\treturn refList;\n\t}\n\tregisterAfterRefMap(obj) {\n\t\tthis.afterRegsterRefMap.push(obj);\n\t}\n\tregisterRefMap() {\n\t\trefList.push(this);\n\t\tlet index = 1;\n\t\tfor (let obj of refList) {\n\t\t\tconst indexPrefix = index + \" 0 \";\n\t\t\trefMap.set(obj, indexPrefix);\n\t\t\tindex++;\n\t\t}\n\t\tfor (let obj of this.afterRegsterRefMap) {\n\t\t\tobj.registerRefMap();\n\t\t}\n\t}\n\tgetRefNo() {\n\t\treturn refMap.get(this);\n\t}\n\tisRegisterd() {\n\t\treturn refMap.has(this);\n\t}\n\tsetBePlaneMap() {\n\t\tthis.isBePlaneMap = true;\n\t}\n\tsetElm(key, value) {\n\t\tthis.map[key] = value;\n\t}\n\tstatic getNewLine() {\n\t\treturn NEWLINE;\n\t}\n\tcreateFile() {}\n\tstatic getAsU8a(text) {\n\t\treturn UnicodeEncoder.encodeUTF8(text + NEWLINE);\n\t}\n\tcreateObject() {\n\t\tconst u8aStream = this.createStream(this.map);\n\t\tconst u8aStart = UnicodeEncoder.encodeUTF8(this.getRefNo() + 'obj' + NEWLINE);\n\t\tconst u8aMain = UnicodeEncoder.encodeUTF8(this.createMap(\"\", this.map));\n\t\tconst u8aEnd = UnicodeEncoder.encodeUTF8('endobj' + NEWLINE);\n\t\treturn BinaryUtil.joinU8as([u8aStart, u8aMain, u8aStream, u8aEnd]);\n\t}\n\tcreateMap(keyword, value) {\n\t\tlet retText = '';\n\t\tif (value === null || value === undefined) {\n\n\t\t} else if (typeof value === 'string') {\n\t\t\tif (KeyKeywords[keyword]) {\n\t\t\t\tretText += \"/\" + value;\n\t\t\t} else {\n\t\t\t\tretText += \"(\" + value + ')';\n\t\t\t}\n\t\t} else if (typeof value === 'number') {\n\t\t\tretText += value;\n\t\t} else if (typeof value === 'object' && Array.isArray(value)) {\n\t\t\tconst newArray = [];\n\t\t\tfor (let index in value) {\n\t\t\t\tconst val = value[index];\n\t\t\t\tnewArray.push(this.createMap(keyword, val));\n\t\t\t}\n\t\t\tretText += '[ ' + newArray.join(' ') + ' ]';\n\t\t} else if (typeof value === 'object' && value.isRegisterd && value.isRegisterd()) {\n\t\t\tretText += value.getRefNo() + 'R';\n\t\t} else if (typeof value === 'object' && value.isRegisterd && value.map) {\n\t\t\tretText += '<<' + NEWLINE\n\t\t\tfor (let key in value.map) {\n\t\t\t\tconst val = value.map[key]\n\t\t\t\tconst row = '/' + key + ' ' + this.createMap(key, val);\n\t\t\t\tretText += row + NEWLINE;\n\t\t\t}\n\t\t\tretText += '>>';\n\t\t} else if (typeof value === 'object') {\n\t\t\tretText += '<<' + NEWLINE\n\t\t\tfor (let key in value) {\n\t\t\t\tconst val = value[key]\n\t\t\t\tconst row = '/' + key + ' ' + this.createMap(key, val);\n\t\t\t\tretText += row + NEWLINE;\n\t\t\t}\n\t\t\tretText += '>>' + NEWLINE;\n\t\t}\n\t\treturn retText;\n\t}\n\tcreateStream() {\n\t\treturn UnicodeEncoder.encodeUTF8('');\n\t}\n}","import {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tRefObject\n} from './refObject'\nimport {\n\tUnicodeEncoder\n} from '../util/unicodeEncoder'\nconst NEW_LINE = RefObject.getNewLine();\nexport class Header {\n\tstatic getText() {\n\t\tconst retText = '%PDF-1.４' + NEW_LINE + '%';\n\t\treturn retText;\n\t}\n\tstatic getU8a() {\n\t\tconst u8aMain = UnicodeEncoder.encodeUTF8(Header.getText());\n\t\tconst binStrU8a = BinaryUtil.hexString2U8a('e2,e3,cf,d3');\n\t\tconst u8aNewLine = UnicodeEncoder.encodeUTF8(NEW_LINE);\n\t\treturn BinaryUtil.joinU8as([u8aMain, binStrU8a, u8aNewLine]);\n\t}\n}","import {\n\tRefObject\n} from '../base/refObject'\nexport class CatalogObject extends RefObject {\n\tconstructor(pagesObj) {\n\t\tsuper();\n\t\tthis.setElm('Type', 'Catalog');\n\t\tthis.setElm('Pages', pagesObj);\n\t\t// this.setElm('Version', 0);\n\t\tthis.registerAfterRefMap(pagesObj);\n\t\tthis.isRoot = true;\n\t}\n}","import {\n\tRefObject\n} from '../base/refObject'\nimport {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tUnicodeEncoder\n} from '../util/unicodeEncoder'\nexport class ImageContentsObject extends RefObject {\n\tconstructor(imageId) {\n\t\tsuper();\n\t\tthis.setElm('Length', 0);\n\t\tthis.imageId = imageId;\n\t}\n\tsetParentPage(pageObj) {\n\t\tthis.pageObj = pageObj;\n\t\tthis.pageWidth = this.pageObj.width;\n\t\tthis.pageHeight = this.pageObj.height;\n\t}\n\tcreateStream() {\n\t\tconst NEWLINE = RefObject.getNewLine();\n\t\tconst u8as = [];\n\t\tlet retText = ''\n\t\tu8as.push(RefObject.getAsU8a('stream'));\n\t\tretText += 'q' + NEWLINE;\n\t\tretText += this.pageWidth + ' 0 0' + ' ' + this.pageHeight + ' 0 0 cm' + NEWLINE;\n\t\tretText += '/' + this.imageId + ' Do' + NEWLINE;\n\t\tretText += 'Q';\n\t\tconst u8a = RefObject.getAsU8a(retText);\n\t\tconst length = u8a.byteLength;\n\t\tthis.setElm('Length', length);\n\t\tu8as.push(u8a);\n\t\tu8as.push(RefObject.getAsU8a('endstream'));\n\t\treturn BinaryUtil.joinU8as(u8as);\n\t}\n}","import {\n\tRefObject\n} from '../base/refObject'\nimport {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tUnicodeEncoder\n} from '../util/unicodeEncoder'\nexport class ImageResourcesObject extends RefObject {\n\tconstructor(imageId) {\n\t\tsuper();\n\t\tthis.setElm('ProcSet', ['PDF', 'ImageC']);\n\t\tthis.imageId = imageId;\n\t}\n\tsetImageXObject(imageXObject) {\n\t\tconst xObjectMap = new RefObject();\n\t\txObjectMap.setBePlaneMap();\n\t\tconst imageId = imageXObject.getImageId();\n\t\txObjectMap.setElm(imageId, imageXObject);\n\t\timageXObject.registerRefMap();\n\t\tthis.setElm('XObject', xObjectMap);\n\t}\n}","import {\n\tRefObject\n} from '../base/refObject'\nimport {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tUnicodeEncoder\n} from '../util/unicodeEncoder'\nexport class ImageXObject extends RefObject {\n\tconstructor(imageId, u8a, width, height) {\n\t\tsuper();\n\t\tthis.setElm('Type', 'XObject');\n\t\tthis.setElm('Subtype', 'Image');\n\t\tthis.setElm('Width', width);\n\t\tthis.setElm('Height', height);\n\t\tthis.setElm('BitsPerComponent', 8);\n\t\tthis.setElm('Length', 0);\n\t\tthis.setElm('ColorSpace', 'DeviceRGB');\n\t\tthis.setElm('Filter', 'DCTDecode');\n\t\tthis.imageId = imageId;\n\t\tconsole.log(\"ImageXObject.constructor u8a:\" + u8a.byteLength)\n\t\tthis.jpegU8a = u8a;\n\t}\n\tgetImageId() {\n\t\treturn this.imageId;\n\t}\n\tcreateStream() {\n\t\tconst NEWLINE = RefObject.getNewLine();\n\t\tconst u8as = [];\n\t\tconst retText = ''\n\t\tu8as.push(RefObject.getAsU8a('stream'));\n\t\tconst length = this.jpegU8a.byteLength;\n\t\tthis.setElm('Length', length);\n\t\tu8as.push(this.jpegU8a);\n\t\tu8as.push(RefObject.getAsU8a(NEWLINE + 'endstream'));\n\t\tconsole.log(\"ImageXObject.createStream this.jpegU8a:\" + this.jpegU8a.byteLength)\n\t\tconst result = BinaryUtil.joinU8as(u8as);\n\t\tconsole.log(\"ImageXObject.createStream result:\" + result.byteLength)\n\t\treturn result;\n\t}\n}","const re_yyyy = /yyyy/;\nconst re_MM = /MM/;\nconst re_dd = /dd/;\nconst re_hh = /hh/;\nconst re_mm = /mm/;\nconst re_ss = /ss/;\n\nexport const unixTimeToDateFormat = (unixtime, format = \"yyyy-MM-dd hh:mm:ss\") => {\n\tconst d = new Date(unixtime);\n\tconst year = d.getFullYear();\n\tconst month = ('0' + (d.getMonth() * 1 + 1))\n\t\t.slice(-2);\n\tconst day = ('0' + d.getDate())\n\t\t.slice(-2);;\n\tconst hour = ('0' + d.getHours())\n\t\t.slice(-2);\n\tconst min = ('0' + d.getMinutes())\n\t\t.slice(-2);\n\tconst sec = ('0' + d.getSeconds())\n\t\t.slice(-2);\n\treturn format.replace(re_yyyy, year)\n\t\t.replace(re_MM, month)\n\t\t.replace(re_dd, day)\n\t\t.replace(re_hh, hour)\n\t\t.replace(re_mm, min)\n\t\t.replace(re_ss, sec);\n}\nexport const getNowUnixtime = () => {\n\treturn new Date()\n\t\t.getTime();\n}\nexport const getNow = () => {\n\t//(D:20181012023235+02'00')\n\tconst now = getNowUnixtime();\n\tconst retText = unixTimeToDateFormat(now, \"D:yyyyMMddhhmmss+0:00\")\n\treturn retText;\n}","import { RefObject } from '../base/refObject'\nimport { getNow } from '../util/pdfTimeUtil'\nexport class InfoObject extends RefObject {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.setElm('Type', 'Info');\n\t\tthis.setElm('Creator', 'It is me!');\n\t\tthis.setElm('CreationDate', getNow());\n\t\tthis.setElm('ModDate', getNow());\n\t\tthis.setElm('Producer', 'aaa');\n\t\tthis.isInfo = true;\n\t}\n}","import {\n\tpageSazeMap\n} from '../constants/pdfConstants'\nimport {\n\tUnitUtil\n} from '../util/unitUtil'\nimport {\n\tRefObject\n} from '../base/refObject'\nexport class PageObject extends RefObject {\n\tconstructor(sizeName = \"A4\") {\n\t\tsuper();\n\t\tthis.setElm('Type', 'Page');\n\t\tconst paperSizePoint = pageSazeMap[sizeName];\n\t\tthis.width = paperSizePoint[2];\n\t\tthis.height = paperSizePoint[3];\n\t\t// console.log(pageSazeMap)\n\t\t// console.log(paperSizePoint)\n\t\t// alert(pageSazeMap + \"/this.width+:\" + this.width + \"/this.height:\" + this.height)\n\t\tthis.setElm('MediaBox', paperSizePoint);\n\t}\n\tsetParent(parent) {\n\t\tthis.setElm('Parent', parent);\n\t}\n\tsetResources(resources) {\n\t\tthis.setElm('Resources', resources);\n\t\tresources.registerRefMap();\n\t}\n\tsetContents(contents) {\n\t\tif (contents.setParentPage) {\n\t\t\tcontents.setParentPage(this);\n\t\t}\n\t\tthis.setElm('Contents', contents);\n\t\tcontents.registerRefMap();\n\t}\n\tgetFontName() {\n\t\treturn this.fontName;\n\t}\n}","\nimport {RefObject} from '../base/refObject'\nexport class PagesObject extends RefObject {\n  constructor() {\n    super();\n    this.setElm('Type','Pages');\n    this.pages=[];\n    this.setElm('Kids',this.pages);\n    this.setElm('Count',this.pages.length);\n  }\n  addPage(pageObj){\n    this.pages.push(pageObj);\n    pageObj.registerRefMap();\n    pageObj.setParent(this);\n    this.setElm('Kids',this.pages);\n    this.setElm('Count',this.pages.length);\n  }\n}\n","import {\n\tpageSazeMap\n} from '../constants/pdfConstants'\nimport {\n\tUnitUtil\n} from '../util/unitUtil'\nimport {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tRefObject\n} from '../base/refObject'\nconst CRLF = '\\r\\n';\nexport class TrailerObject extends RefObject {\n\tconstructor() {\n\t\tsuper();\n\t}\n\tsetRoot(rootObj) {\n\t\trootObj.registerRefMap();\n\t}\n\tsetInfo(infoObj) {\n\t\tinfoObj.registerRefMap();\n\t}\n\tcreateXref(startOffset) {\n\t\tconst NEWLINE = RefObject.getNewLine();\n\t\tlet retText = 'xref' + NEWLINE\n\t\tconst list = RefObject.getRefList();\n\t\tconst len = list.length;\n\t\tretText += '0 ' + len + NEWLINE\n\t\tconst results = [];\n\t\tlet rootObj = null;\n\t\tlet infoObj = null;\n\t\tretText += '0000000000 65535 f' + CRLF;\n\t\tlet currentBytes = startOffset;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst refObje = list[i];\n\t\t\tconst u8a = refObje.createObject();\n\t\t\tretText += ('0000000000' + currentBytes)\n\t\t\t\t.slice(-10) + ' 00000 n' + CRLF;\n\t\t\tcurrentBytes += u8a.length;\n\t\t\tresults.push(u8a);\n\t\t\tif (refObje.isRoot) {\n\t\t\t\trootObj = refObje;\n\t\t\t}\n\t\t\tif (refObje.isInfo) {\n\t\t\t\tinfoObj = refObje;\n\t\t\t}\n\t\t}\n\t\tretText += 'trailer' + NEWLINE\n\t\tretText += '<<' + NEWLINE\n\t\tretText += '/Root ' + rootObj.getRefNo() + 'R' + NEWLINE\n\t\tif (infoObj) {\n\t\t\tretText += '/Info ' + infoObj.getRefNo() + 'R' + NEWLINE\n\t\t}\n\t\tretText += '/Size ' + len + NEWLINE\n\t\tretText += '>>' + NEWLINE\n\t\tretText += 'startxref' + NEWLINE\n\t\tretText += currentBytes + NEWLINE\n\t\tretText += '%%EOF'\n\t\tconst trailerU8a = RefObject.getAsU8a(retText);\n\t\tresults.push(trailerU8a);\n\t\t// <<\n\t\t// /Root 1 0 R\n\t\t// /Size 6\n\t\t// >>\n\t\t// startxref\n\t\t// 440\n\t\t// %%EOF\n\t\treturn BinaryUtil.joinU8as(results);\n\t}\n}","import {\n\tRefObject\n} from './base/refObject'\nimport {\n\tHeader\n} from './base/header'\nimport {\n\tBinaryUtil\n} from './util/binaryUtil'\nimport {\n\tCatalogObject\n} from './objects/catalogObject'\nimport {\n\tFontObject\n} from './objects/fontObject'\nimport {\n\tImageContentsObject\n} from './objects/imageContentsObject'\nimport {\n\tImageResourcesObject\n} from './objects/imageResourcesObject'\nimport {\n\tImageXObject\n} from './objects/imageXObject'\nimport {\n\tInfoObject\n} from './objects/infoObject'\nimport {\n\tPageObject\n} from './objects/pageObject'\nimport {\n\tPagesObject\n} from './objects/pagesObject'\nimport {\n\tTextStreamObject\n} from './objects/textStreamObject'\nimport {\n\tTrailerObject\n} from './objects/trailerObject'\nexport class PdfDocument {\n\tconstructor(pageSizse) {\n\t\tRefObject.init();\n\t\tthis.pageSize = pageSizse;\n\t\tthis.info = new InfoObject();\n\t\tthis.pages = new PagesObject();\n\t\tthis.root = new CatalogObject(this.pages);\n\t\tthis.trailer = new TrailerObject();\n\t\tthis.trailer.setRoot(this.root);\n\t\tthis.trailer.setInfo(this.info);\n\t\tthis.imageCount = 0;\n\t}\n\taddDummyPage() {\n\t\tconst page = new PageObject(this.pageSize);\n\t\t//this.pages.addPage(page);\n\t}\n\taddImagePage(dataUri, ab, width, height) {\n\t\tlet u8aImage = new Uint8Array(ab);\n\t\tlet currentWidth = width;\n\t\tlet currentHeight = height;\n\t\tif (!dataUri && !ab) {\n\t\t\tu8aImage = new Uint8Array([255, 255, 255, 255]);\n\t\t\tcurrentWidth = 1;\n\t\t\tcurrentHeight = 1;\n\t\t}\n\t\tconst imageId = 'img' + this.imageCount;\n\t\tconst ic = new ImageContentsObject(imageId);\n\t\tconst ir = new ImageResourcesObject(imageId);\n\t\tconst page = new PageObject(this.pageSize);\n\t\tconst binaryU8a = !dataUri ? u8aImage : BinaryUtil.convertDataUri2U8a(dataUri);\n\t\tconst imageXobj = new ImageXObject(imageId, binaryU8a, currentWidth, currentHeight);\n\t\tthis.pages.addPage(page);\n\t\tpage.setContents(ic);\n\t\tpage.setResources(ir);\n\t\tir.setImageXObject(imageXobj);\n\t\tthis.imageCount++;\n\t}\n\tcreateFile() {\n\t\tconst retArray = [];\n\t\tconst headerU8a = Header.getU8a();\n\t\t// console.log(\"headerU8a:\" + headerU8a.byteLength);\n\t\tretArray.push(headerU8a);\n\t\tconst body = this.trailer.createXref(headerU8a.byteLength);\n\t\tretArray.push(body);\n\t\treturn BinaryUtil.joinU8as(retArray);\n\t}\n}","import {\n\tPdfDocument\n} from './pdfDocument'\nexport class PdfBuilder {\n\tconstructor() {}\n\tcreateDoc(title) {}\n\tcreateImagesDoc(pageSize = 'A4', imageList) {\n\t\tconst pdfDoc = new PdfDocument(pageSize);\n\t\t// console.log(\"createImagesDoc imageList:\" + imageList.length);\n\t\tlet i = 0;\n\t\tfor (let item of imageList) {\n\t\t\ti++;\n\t\t\tif (!item || typeof item !== 'object') {\n\t\t\t\tpdfDoc.addDummyPage();\n\t\t\t\t// console.log(item);\n\t\t\t\t// console.log(\"createImagesDoc continue:\" + item);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst dataUri = item.dataUri;\n\t\t\tconst ab = item.ab;\n\t\t\tconst height = item.height;\n\t\t\tconst width = item.width;\n\t\t\tpdfDoc.addImagePage(dataUri, ab, width, height);\n\t\t\t// console.log(\"createImagesDoc i:\" + i + \"item:\" + item);\n\t\t}\n\t\treturn pdfDoc.createFile();\n\t}\n}","import {\n\tMainService\n} from \"../../service/mainService\"\nimport {\n\tProgressBarProcessor\n} from \"./progressBarProcessor\"\nimport {\n\tPdfBuilder\n} from \"../../util/pdf/pdfBuilder\"\nimport { Paper } from \"../../util/image/paper\";\n\nexport class ExportPdfProcessor {\n\tconstructor(pp) {\n\t\tthis.pp = pp;\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.em = this.ms.em;\n\t\tthis.bm = this.ms.bm;\n\t\tthis.im = this.ms.im;\n\t\tthis.ip = this.ms.ip;\n\t\tthis.paper = new Paper();\n\t\tthis.delList = [];\n\t}\n\tasync createPdf(paperSize, pages, targetSize, settings, isSaddleStitchingOrder) {\n\t\tconst letList = [];\n\t\tconst pageNum = settings.pageNum;\n\t\tconst startPage = settings.startPage;\n\t\tconst isPageDirectionR2L = settings.pageDirection === \"r2l\";\n\t\tconst isMatchPageStartSide = (settings.pageDirection.indexOf(startPage) === 0);\n\t\tconst pdfImage = {\n\t\t\tdata: new Uint8Array(targetSize.x * targetSize.y * 4),\n\t\t\twidth: targetSize,\n\t\t\theight: targetSize.y\n\t\t};\n\t\tif (isMatchPageStartSide) {\n\t\t\tletList.push({});\n\t\t}\n\t\tlet pageCount = 0;\n\t\t// alert(\"isSaddleStitchingOrder:\" + isSaddleStitchingOrder);\n\t\tfor (let page of pages) {\n\t\t\tpageCount++;\n\t\t\tif (pageNum < pageCount) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!page || !page.outputExpandImage) {\n\t\t\t\tletList.push({})\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst binaryEntity = await this.loadBinaryWidCleanUp(page.outputExpandImage);\n\t\t\tpdfImage.data = new Uint8ClampedArray(binaryEntity._ab);\n\t\t\tpdfImage.width = binaryEntity.width;\n\t\t\tpdfImage.height = binaryEntity.height;\n\t\t\tlet pdfImageAb = this.ip.getArrayBufferFromImageBitmapDataAsJpg(pdfImage, 1.0);\n\t\t\tletList.push({\n\t\t\t\tab: pdfImageAb,\n\t\t\t\twidth: pdfImage.width,\n\t\t\t\theight: pdfImage.height\n\t\t\t})\n\t\t\t// console.log(pdfImageAb);\n\t\t}\n\t\tthis.reSortAsSaddleStitchingOrder(letList, isPageDirectionR2L, isSaddleStitchingOrder);\n\t\tconst pdfBuilder = new PdfBuilder();\n\t\tconsole.log(paperSize + \"/isMatchPageStartSide:\" + isMatchPageStartSide)\n\t\t// alert(paperSize)\n\t\tconst result = pdfBuilder.createImagesDoc(paperSize, letList);\n\t\tthis.delOnList();\n\t\t// console.log(result)\n\t\t// console.log(result.byteLength)\n\t\t// alert(result)\n\t\treturn result;\n\t}\n\treSortAsSaddleStitchingOrder(letList, isPageDirectionR2L, isSaddleStitchingOrder) {\n\t\t// console.log(\"reSortAsSaddleStitchingOrder A1:\" + \"/\" + letList.length)\n\t\tif (isSaddleStitchingOrder !== true) {\n\t\t\treturn\n\t\t}\n\t\tconst tmpList = [];\n\t\tconst len = letList.length;\n\t\t// console.log(\"reSortAsSaddleStitchingOrder len:\" + len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\ttmpList.push(letList.shift());\n\t\t}\n\t\tconst mod = 4 - len % 4;\n\t\t// console.log(\"reSortAsSaddleStitchingOrder mod:\" + mod);\n\t\tif (mod < 4) {\n\t\t\tfor (let i = 0; i < mod; i++) {\n\t\t\t\ttmpList.push({});\n\t\t\t}\n\t\t}\n\t\tconst outputLength = tmpList.length;\n\t\t// console.log(\"reSortAsSaddleStitchingOrder outputLength:\" + outputLength);\n\t\tlet isFromFirst = isPageDirectionR2L === false;\n\t\t// console.log(\"reSortAsSaddleStitchingOrder A2:\" + isFromFirst + \"/\" + tmpList.length + \"/\" + letList.length)\n\t\tconst setCount = outputLength / 4;\n\t\tfor (let i = 0; i < setCount; i++) {\n\t\t\tconst switchFlag = isFromFirst; //setCount % 2 > 0 ? !isFromFirst : isFromFirst;\n\t\t\tconst offsetPageNum = i * 2;\n\t\t\tconst one = switchFlag ? tmpList[offsetPageNum] : tmpList[outputLength - (1 + offsetPageNum)];\n\t\t\tconst two = switchFlag ? tmpList[outputLength - (1 + offsetPageNum)] : tmpList[offsetPageNum];\n\t\t\tconst three = switchFlag ? tmpList[outputLength - (2 + offsetPageNum)] : tmpList[offsetPageNum + 1];\n\t\t\tconst four = switchFlag ? tmpList[offsetPageNum + 1] : tmpList[outputLength - (2 + offsetPageNum)];\n\n\t\t\tletList.push(one);\n\t\t\tletList.push(two);\n\t\t\tletList.push(three);\n\t\t\tletList.push(four);\n\t\t}\n\t\t// console.log(\"reSortAsSaddleStitchingOrder A3:\" + isFromFirst + \"/\" + tmpList.length + \"/\" + letList.length)\n\t}\n\taddDummyPage() {\n\t\treturn {};\n\t}\n\tasync loadBinaryWidCleanUp(pk) {\n\t\tif (!pk) {\n\t\t\treturn null;\n\t\t}\n\t\tconst binaryEntity = await this.em.get(pk);\n\t\tthis.delList.push(pk);\n\t\treturn binaryEntity;\n\t}\n\tasync delOnList() {\n\t\tfor (let pk of this.delList) {\n\t\t\tconst outputNew = await this.bm.save(pk, \"expandPage\", new Uint8Array(1)\n\t\t\t\t.buffer, { width: 1, height: 1 });\n\t\t\t// await this.bm.remove(pk);\n\t\t}\n\t}\n}","import { Sorter } from \"../../util/sorter\";\nimport { getNowUnixtime, unixTimeToDateFormat } from \"../../util/timeUtil\";\nimport { Paper } from \"../../util/image/paper\";\nimport { ImageMerger } from \"../../util/image/imageMerger\";\nimport { ImageResizer } from \"../../util/image/imageResizer\";\nimport { ImageCropper } from \"../../util/image/imageCropper\";\nimport { ImageFilter } from \"../../util/image/imageFilter\";\nimport { UnicodeEncoder } from \"../../util/unicodeEncoder\";\nimport { MainService } from \"../../service/mainService\"\nimport { PreviewProcessor } from \"./previewProcessor\"\nimport { ProgressBarProcessor } from \"./progressBarProcessor\"\nimport { ExportPdfProcessor } from \"./exportPdfProcessor\"\n// import {Zlib, Zip, Raw, PKZIP} from \"zlibjs/bin/zlib_and_gzip.min\"\nimport { Zlib } from \"zlibjs/bin/zip.min\"\n\nconst order = {\n\torderName: \"MangaPaperA4ExpandTatikiri\",\n\tbasePaper: \"mangaPaperA4ExpandTatikiri\",\n\tdpiName: \"dpi600\"\n};\nexport class ExportImageProcessor {\n\tconstructor(pp) {\n\t\tthis.pp = pp;\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.em = this.ms.em;\n\t\tthis.sm = this.ms.sm;\n\t\tthis.bm = this.ms.bm;\n\t\tthis.im = this.ms.im;\n\t\tthis.iom = this.ms.iom;\n\t\tthis.ip = this.ms.ip;\n\t\tthis.tm = this.ms.tm;\n\t\tthis.paper = new Paper();\n\t\tthis.imageMerger = new ImageMerger();\n\t\tthis.imageResizer = new ImageResizer();\n\t\tthis.imageCropper = new ImageCropper();\n\t\tthis.imageFilter = new ImageFilter();\n\t\tthis.pbp = new ProgressBarProcessor();\n\t\tthis.epp = new ExportPdfProcessor();\n\n\t\tthis.progress = 0;\n\t\tthis.delList = [];\n\t}\n\tasync exportZipExecute(exportOrders = [order]) {\n\t\treturn await this.exportExecute(exportOrders, true);\n\t}\n\tasync exportPdfExecute(exportOrders) {\n\t\treturn await this.exportExecute(exportOrders, false);\n\t}\n\tasync exportExecute(exportOrders = [order], isZip = true) {\n\t\t// 0 load Title & pages ExecutePerPage\n\t\tawait this.pbp.open('Export and save files for print as ' + (isZip ? \"zip\" : \"pdf\"));\n\t\tthis.progress = 0;\n\t\tthis.pbp.update(this.progress, 'loading Settings');\n\t\tconst setting = await this.tm.loadSettings()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e)\n\t\t\t});\n\t\tthis.progress = 1;\n\t\tthis.pbp.update(this.progress, 'loading pages');\n\t\tconst pages = await this.pp.loadPages()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e)\n\t\t\t});\n\t\tthis.progress = 2;\n\t\tawait this.pbp.update(this.progress, 'start executess');\n\t\tconst result = await this.executeParOrder(setting, pages, exportOrders[0], isZip)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"ExportImageProcessor exportExecute executeParOrder\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\tawait this.pbp.comple(this.progress);\n\t\treturn result;\n\t}\n\tasync executeParOrder(setting, pages, order, isZip) {\n\t\t//-1 order consts calc\n\t\tconst targetDpi = this.paper.getDpi(order.dpiName);\n\t\tconst targetSize = this.paper.getTargetPaperSize(order.basePaper, order.dpiName);\n\t\tconst clopOffset = this.paper.calcClopOffsetPixcel(order.basePaper, targetDpi);\n\t\tconst frameSizeMm = this.paper.getPaperFrameSizeMm(order.basePaper);\n\t\tconst isGrayscale = order.isGrayscale;\n\t\tconst isMaxSize10M = order.isMaxSize10M;\n\t\tconst isLanczose = order.isLanczose;\n\t\tconst isSaddleStitchingOrder = order.isSaddleStitchingOrder;\n\t\tconst frameSize = {\n\t\t\tx: this.paper.calcPixcel(targetDpi, frameSizeMm.x),\n\t\t\ty: this.paper.calcPixcel(targetDpi, frameSizeMm.y)\n\t\t};\n\t\tthis.progress = 3;\n\t\tthis.pbp.update(this.progress, 'expandAndCropSize');\n\t\tawait this.expandAndCropSize(targetSize, frameSizeMm, frameSize, clopOffset, pages, isGrayscale, isLanczose, setting.pageNum)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"ExportImageProcessor exportExecute executeParOrder\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\tconst exports = isZip ? (await this.executeAsZip(targetSize, setting, pages, isMaxSize10M)) : (await this.executeAsPdf(order.basePaper, setting, pages, isMaxSize10M, isSaddleStitchingOrder));\n\t\treturn exports;\n\t}\n\tasync executeAsZip(targetSize, setting, pages, isMaxSize10M) {\n\t\tconst isPageDirectionR2L = setting.pageDirection === \"r2l\";\n\t\tconst isRightStart = setting.startPage === \"r\";\n\t\tconst isSideSynced = (isPageDirectionR2L && isRightStart) || (!isPageDirectionR2L && !isRightStart);\n\t\tconst isOdd = pages.length % 2 > 0;\n\n\t\tthis.progress = 60;\n\t\tthis.pbp.update(this.progress, 'start exportDualImage4Print');\n\t\tawait this.exportDualImage4Print(targetSize, setting, pages, isSideSynced, isOdd, isPageDirectionR2L, isMaxSize10M)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"ExportImageProcessor exportExecute executeParOrder\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\t//11 save zip\n\t\tthis.progress = 85;\n\t\tthis.pbp.update(this.progress, 'start exoprtAsZip');\n\t\tawait this.delOnList();\n\t\tconst compressed = await this.exoprtAsZip(pages)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"ExportImageProcessor exportExecute executeParOrder\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\treturn await this.commonEnd(compressed, \"zip\");\n\t}\n\tasync executeAsPdf(targetSize, setting, pages, isMaxSize10M, isSaddleStitchingOrder) {\n\t\tconst isPageDirectionR2L = setting.pageDirection === \"r2l\";\n\t\tconst isRightStart = setting.startPage === \"r\";\n\t\tconst isSideSynced = (isPageDirectionR2L && isRightStart) || (!isPageDirectionR2L && !isRightStart);\n\t\tconst isOdd = pages.length % 2 > 0;\n\n\t\tthis.progress = 60;\n\t\tthis.pbp.update(this.progress, 'start exportDualImage4Print');\n\t\tthis.progress = 85;\n\t\tthis.pbp.update(this.progress, 'start exoprtAsPdf');\n\t\tconst targetPaper = this.paper.getTragetPaper(targetSize);\n\t\t// console.log(setting);\n\t\t// alert(setting);\n\t\tconst pdf = await this.epp.createPdf(targetPaper, pages, targetSize, setting, isSaddleStitchingOrder)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"ExportImageProcessor exportExecute executeParOrder\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\t// alert(\"pdf:\" + pdf);\n\t\treturn await this.commonEnd(pdf, \"pdf\");\n\t}\n\t//End\n\tasync commonEnd(result, type) {\n\t\tconst exports = await this.tm.getExports();\n\t\tlet exportImagePk = null;\n\t\tlet outputOld = null;\n\t\tfor (let exportPk of exports) {\n\t\t\tconst imageOutput = await this.iom.load(exportPk);\n\t\t\tif (imageOutput && imageOutput.type === type) {\n\t\t\t\texportImagePk = exportPk;\n\t\t\t\toutputOld = imageOutput.binary;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst outputNew = await this.bm.save(outputOld, \"expandPage\", result);\n\t\tconst size = result.byteLength;\n\t\tconst now = (new Date()\n\t\t\t.getTime());\n\t\tconst yyyyMMddThhmmss = unixTimeToDateFormat(now, \"yyyyMMddThhmmss\");\n\t\tconst settings = await this.tm.loadSettings();\n\t\tconst defaultTitle = await this.tm.getCurrentTitleName();\n\t\tconst exportPrefix = settings.name ? settings.name : defaultTitle;\n\t\tconst exportImageNewPk = await this.iom.save(exportImagePk, exportPrefix + yyyyMMddThhmmss + \".\" + type, outputNew, type, order.orderName, size);\n\t\t// console.log(result);\n\t\tif (exportImageNewPk) {\n\t\t\texports.push(exportImageNewPk);\n\t\t\tawait this.tm.saveCurrent();\n\t\t}\n\t\tawait this.delOnList();\n\t\t// return pk list PK!PK!\n\t\tthis.progress = 100;\n\t\tthis.pbp.update(this.progress, 'end all!');\n\t\tthis.pbp.comple(this.progress);\n\t\treturn exports;\n\t}\n\tasync expandAndCropSize(targetSize, frameSizeMm, frameSize, clopOffset, pages, isGrayscale, isLanczose, pageNum) {\n\t\t//console.log(\"--targetSize--isGrascale:\" + isGrascale)\n\t\t//console.log(targetSize)\n\t\tconst expandedPaper = {\n\t\t\tdata: new Uint8ClampedArray(frameSize.x * frameSize.y * 4),\n\t\t\twidth: frameSize.x,\n\t\t\theight: frameSize.y\n\t\t};\n\t\tconst cropedPaper = {\n\t\t\tdata: new Uint8ClampedArray(targetSize.x * targetSize.y * 4),\n\t\t\twidth: targetSize.x,\n\t\t\theight: targetSize.y\n\t\t};\n\t\tconst cropedPaperForSave = {\n\t\t\tdata: new Uint8ClampedArray(targetSize.x * targetSize.y * 4),\n\t\t\twidth: targetSize.x,\n\t\t\theight: targetSize.y\n\t\t};\n\t\tconst targetRetio = targetSize.x / targetSize.y;\n\t\tconst isBaseWhite = true;\n\t\tlet currentDataAb = null\n\t\tthis.progress = 5;\n\t\tthis.pbp.update(this.progress, 'start pages');\n\t\t//50\n\t\tconst pegaNum = pageNum; //pages.length;\n\t\tconst stepNum = 9\n\t\tconst progressUnit = 50 / (stepNum * pegaNum)\n\t\tlet pageCount = 0;\n\t\tfor (let pageEntity of pages) {\n\t\t\tpageCount++;\n\t\t\tif (pageCount > pegaNum) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst pageStep = \"[\" + pageCount + \"/\" + pegaNum + \"]\";\n\t\t\tif (pageEntity && pageEntity.baseImage) {\n\t\t\t\t// console.log(pageEntity)\n\t\t\t\t//1 Expand\n\t\t\t\tthis.pbp.update(this.progress, 'load baseImageEntity' + pageStep);\n\t\t\t\tconst baseImageEntity = await this.em.get(pageEntity.baseImage);\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'load baseBinaryEntity' + pageStep);\n\t\t\t\tconst width = baseImageEntity.width;\n\t\t\t\tconst height = baseImageEntity.height;\n\t\t\t\tconst baseBinaryEntity = await this.em.get(baseImageEntity.binary);\n\t\t\t\t// console.log(baseImageEntity)\n\t\t\t\t// console.log(bastapNumseBinaryEntity)\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa0a\")\n\t\t\t\t// TODO convert flate bitmap data\n\t\t\t\tcurrentDataAb = baseBinaryEntity._ab;\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'get ImageDataFromArrayBuffer' + pageStep);\n\t\t\t\tconst origin = await this.ip.getImageDataFromArrayBuffer(baseBinaryEntity._ab);\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa0a w:\" + origin.width + '/h:' + origin.height)\n\t\t\t\tconst retio = width / height;\n\t\t\t\tconst isWider = retio > targetRetio;\n\t\t\t\tconst longPixcel = isWider ?\n\t\t\t\t\twidth :\n\t\t\t\t\theight;\n\t\t\t\tconst longMm = isWider ?\n\t\t\t\t\tframeSizeMm.x :\n\t\t\t\t\tframeSizeMm.y;\n\t\t\t\tconst dpi = this.paper.calcDpi(longPixcel, longMm);\n\t\t\t\t//paper size nomalize\n\t\t\t\tconst sizeWhitePaperWidth = isWider ?\n\t\t\t\t\twidth :\n\t\t\t\t\tMath.floor(height * targetRetio);\n\t\t\t\tconst sizeWhitePaperHeight = isWider ?\n\t\t\t\t\tMath.floor(width / targetRetio) :\n\t\t\t\t\theight;\n\t\t\t\tconst offsetX = isWider ?\n\t\t\t\t\t0 :\n\t\t\t\t\tMath.floor((sizeWhitePaperWidth - width) / 2);\n\t\t\t\tconst offsetY = isWider ?\n\t\t\t\t\tMath.floor((sizeWhitePaperHeight - height) / 2) :\n\t\t\t\t\t0;\n\t\t\t\tconst whitePaper = {\n\t\t\t\t\tdata: new Uint8ClampedArray(sizeWhitePaperWidth * sizeWhitePaperHeight * 4),\n\t\t\t\t\twidth: sizeWhitePaperWidth,\n\t\t\t\t\theight: sizeWhitePaperHeight\n\t\t\t\t};\n\t\t\t\torigin.offsetX = offsetX;\n\t\t\t\torigin.offsetY = offsetY;\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa1a/\" + whitePaper.data.length + '/w:' + sizeWhitePaperWidth + '/h:' + sizeWhitePaperHeight); // + \"/isGrascale:\" + isGrascale)\n\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'maege Replace origin to whitePaper' + pageStep);\n\n\t\t\t\tconsole.time(\"maege Replace origin to whitePaper\" + pageStep)\n\t\t\t\tif (isGrayscale && !pageEntity.isForceColor) {\n\t\t\t\t\tawait this.imageMerger.margeReplace(whitePaper, [this.imageFilter.beGrascale(origin)], isBaseWhite, true);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.imageMerger.margeReplace(whitePaper, [origin], isBaseWhite, true);\n\t\t\t\t}\n\t\t\t\tconsole.timeEnd(\"maege Replace origin to whitePaper\" + pageStep)\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa2a/\" + expandedPaper.data.length)\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, (isLanczose ? 'expand resizeAsLanczos' : 'expand resizeAsByCubic') + pageStep);\n\t\t\t\tconsole.time((isLanczose ? 'expand resizeAsLanczos' : 'expand resizeAsByCubic') + pageStep)\n\t\t\t\tif (pageEntity.isNoCropping) {\n\t\t\t\t\tif (isLanczose) {\n\t\t\t\t\t\tawait this.imageResizer.resizeAsLanczos(whitePaper, cropedPaper, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.imageResizer.resizeAsByCubic(whitePaper, cropedPaper, true);\n\t\t\t\t\t}\n\t\t\t\t\t//console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa3a/\" + cropedPaper.data.length)\n\t\t\t\t\tthis.progress += progressUnit;\n\t\t\t\t\tthis.pbp.update(this.progress, 'No crop!' + pageStep);\n\t\t\t\t} else {\n\t\t\t\t\tif (isLanczose) {\n\t\t\t\t\t\tawait this.imageResizer.resizeAsLanczos(whitePaper, expandedPaper, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.imageResizer.resizeAsByCubic(whitePaper, expandedPaper, true);\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa3a/\" + cropedPaper.data.length)\n\t\t\t\t\tthis.progress += progressUnit;\n\t\t\t\t\tthis.pbp.update(this.progress, 'crop!' + pageStep);\n\t\t\t\t\tawait this.imageCropper.corpImageToData(expandedPaper, cropedPaper, clopOffset);\n\t\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa3b/\" + cropedPaper.data.length)\n\t\t\t\t}\n\t\t\t\tconsole.timeEnd((isLanczose ? 'expand resizeAsLanczos' : 'expand resizeAsByCubic') + pageStep)\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'get ArrayBuffer From ImageBitmapData' + pageStep);\n\n\t\t\t\t//currentDataAb = this.ip.getArrayBufferFromImageBitmapData(cropedPaper);\n\t\t\t\tcurrentDataAb = cropedPaper.data.buffer;\n\t\t\t\tconst plain = cropedPaper.data;\n\t\t\t\t//console.log(Zlib);\n\t\t\t\t//console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa4a-/\")\n\t\t\t\t//console.time('RawDeflate');\n\t\t\t\t// const deflate = new Raw.RawDeflate(plain);\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa5a\")\n\t\t\t\t// const compressed = deflate.compress();\n\t\t\t\t// console.timeEnd('RawDeflate');\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa6a\")\n\t\t\t\t// cropedPaperForSave.data = compressed;\n\n\t\t\t\t// console.log(compressed)\n\t\t\t\t// alert(frameSizeMm);\n\t\t\t\t//expand\n\t\t\t\t//2 Save to page\n\t\t\t\tconst outputOld = pageEntity.outputExpandImage;\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'save ArrayBuffer' + pageStep);\n\t\t\t\tconst outputNew = await this.bm.save(outputOld, \"expandPage\", currentDataAb, { width: cropedPaper.width, height: cropedPaper.height });\n\t\t\t\tpageEntity.outputExpandImage = outputNew;\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'save pageEntity' + pageStep);\n\t\t\t\tawait this.em.Pages.save(pageEntity);\n\t\t\t\t//3 CropPage\n\t\t\t\t//4 saveImage\n\t\t\t\t//5 Save to page\n\t\t\t\t//break;\n\t\t\t} else {\n\t\t\t\tthis.progress += progressUnit * stepNum;\n\t\t\t\tthis.pbp.update(this.progress, 'save pageEntity' + pageStep);\n\t\t\t}\n\t\t}\n\t}\n\tasync exoprtAsZip(pages) {\n\t\tconsole.time(\"exoprtAsZip\")\n\t\tconst zip = new Zlib.Zip({ compress: false });\n\t\tlet pageNum = 0;\n\t\tlet lastOne = null;\n\t\tfor (let pageEntity of pages) {\n\t\t\tif (pageEntity && pageEntity.outputDualImage) {\n\t\t\t\tif (pageEntity.outputDualImage === lastOne) {\n\t\t\t\t\tpageEntity.outputDualImage = null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tpageNum++;\n\t\t\t\tlastOne = pageEntity.outputDualImage;\n\t\t\t\tconst outputBinaryEntity = await this.em.get(lastOne);\n\t\t\t\t//console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa7a pageNum:\" + pageNum + \"/outputBinaryEntity:\" + outputBinaryEntity + \"/lastOne:\" + lastOne);\n\t\t\t\tif (outputBinaryEntity) {\n\t\t\t\t\tconst nextPageNo = pageNum * 2;\n\t\t\t\t\tconst currentPageNo = nextPageNo - 1;\n\t\t\t\t\tzip.addFile(new Uint8Array(outputBinaryEntity._ab), {\n\t\t\t\t\t\tfilename: UnicodeEncoder.stringToByteArray('page' + currentPageNo + \"-\" + nextPageNo + '.jpg')\n\t\t\t\t\t});\n\t\t\t\t\tthis.delList.push(lastOne);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t//uncompress\n\t\tconst result = zip.compress();\n\t\tconsole.timeEnd(\"exoprtAsZip\")\n\t\treturn result;\n\t}\n\tasync exportDualImage4Print(targetSize, setting, pages, isSideSynced, isOdd, isPageDirectionR2L, isMaxSize10M) {\n\t\t//6 new WhiteImageCreate\n\t\t//7 load2PageImage\n\t\t//8 merge\n\t\t//9 save\n\t\tconst cropedPaperDual = {\n\t\t\tdata: new Uint8ClampedArray(targetSize.x * targetSize.y * 8),\n\t\t\twidth: targetSize.x * 2,\n\t\t\theight: targetSize.y\n\t\t};\n\t\t//console.log(setting);\n\t\t// const cratePageData = PreviewProcessor.getCratePageDataFunc();\n\t\tconst dummyClass = \"dummy\";\n\t\t// const shapedList = PreviewProcessor.buildPageFrames(setting, pages, cratePageData, dummyClass);\n\t\tconst pairPages = {\n\t\t\tright: null,\n\t\t\tleft: null,\n\t\t\trightBin: null,\n\t\t\tleftBin: null\n\t\t};\n\t\tlet isSkeped = isSideSynced !== true;\n\t\tconst printPages = [];\n\t\tconst printPairs = [];\n\t\tlet indexA = 0;\n\t\tconsole.time(\"exportDualImage4Print A1:\");\n\t\tfor (let page of pages) {\n\t\t\tif (indexA === 0 && isSideSynced) {\n\t\t\t\tprintPages.push(null);\n\t\t\t}\n\t\t\tindexA++;\n\t\t\t// console.error(page);\n\t\t\tconst data = {\n\t\t\t\tpageNo: indexA,\n\t\t\t\tisDummy: false,\n\t\t\t\tisRight: indexA % 2 > 0 && isSideSynced,\n\t\t\t\tbinary: !page || page.baseImage === null ?\n\t\t\t\t\tnull : page\n\t\t\t}\n\t\t\tprintPages.push(data);\n\t\t}\n\t\tconsole.timeEnd(\"exportDualImage4Print A1:\");\n\n\t\tconsole.time(\"exportDualImage4Print A2:\");\n\t\tfor (let index = 0; index < printPages.length; index++) {\n\t\t\tconst newPair = [null, null];\n\t\t\tnewPair[0] = printPages[index];\n\t\t\tindex++;\n\t\t\tif (index < printPages.length) {\n\t\t\t\tnewPair[1] = printPages[index];\n\t\t\t}\n\t\t\tprintPairs.push(newPair);\n\t\t}\n\t\tthis.progress = 61;\n\t\tthis.pbp.update(this.progress, 'start exportDualImage4Print');\n\t\tconst pageNum = printPairs.length;\n\t\tlet pageCount = 0;\n\t\tconst stepNum = 9\n\t\tconst progressUnit = 20 / (stepNum * pageNum)\n\t\tconsole.timeEnd(\"exportDualImage4Print A2:\");\n\t\tconsole.time(\"exportDualImage4Print A3:\");\n\t\tfor (let printPagePair of printPairs) {\n\t\t\tpageCount++;\n\t\t\tconst pageStep = \"[\" + pageCount + \"/\" + pageNum + \"]\";\n\t\t\tthis.progress += progressUnit;\n\t\t\tthis.pbp.update(this.progress, 'exportDualImage4Print' + pageStep);\n\n\t\t\t// console.log(\"exportDualImage4Print　pageStep:\" + pageStep + \"/\" + cropedPaperDual.data.length);\n\t\t\t// console.log(cropedPaperDual);\n\t\t\tawait this.buildDualImage(targetSize, cropedPaperDual, pairPages, printPagePair, isPageDirectionR2L, isMaxSize10M, pageStep, progressUnit);\n\t\t}\n\t\tconsole.timeEnd(\"exportDualImage4Print A3:\");\n\t\t// console.log(cropedPaperDual);\n\t}\n\tasync buildDualImage(targetSize, cropedPaperDual, pairPages, shapedPagePair, isPageDirectionR2L, isMaxSize10M, pageStep, progressUnit) {\n\t\tconsole.time(\"exportDualImage4Print buildDualImageA3 pageStep:\" + pageStep);\n\t\t//console.log(shapedPagePair);\n\t\tconst one = shapedPagePair[0];\n\t\tconst two = shapedPagePair[1];\n\t\t// reverse side!\n\t\tconst right = isPageDirectionR2L ?\n\t\t\tone :\n\t\t\ttwo;\n\t\tconst left = isPageDirectionR2L ?\n\t\t\ttwo :\n\t\t\tone;\n\t\tpairPages.right = right === null || right.isDummy ?\n\t\t\tnull :\n\t\t\tright.binary;\n\t\tpairPages.left = left === null || left.isDummy ?\n\t\t\tnull :\n\t\t\tleft.binary;\n\t\tpairPages.rightBin = null;\n\t\tpairPages.leftBin = null;\n\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa6a shapedPagePair:\" + shapedPagePair + \"/left:\" + pairPages.left + \"/right:\" + pairPages.right);\n\n\t\tlet pageEntity = null;\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'load pairPages.right' + pageStep);\n\t\tif (pairPages.right && pairPages.right.outputExpandImage) {\n\t\t\t// pairPages.rightBin = await this.em.get(pairPages.right.outputExpandImage);\n\t\t\tpairPages.rightBin = await this.loadBinaryWidCleanUp(pairPages.right.outputExpandImage);\n\t\t\tpageEntity = pairPages.right;\n\t\t}\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'load pairPages.left' + pageStep);\n\t\tif (pairPages.left && pairPages.left.outputExpandImage) {\n\t\t\t// pairPages.leftBin = await this.em.get(pairPages.left.outputExpandImage);\n\t\t\tpairPages.leftBin = await this.loadBinaryWidCleanUp(pairPages.left.outputExpandImage);\n\t\t\tpageEntity = pairPages.left;\n\t\t}\n\t\tif (!pageEntity) {\n\t\t\tthis.progress += progressUnit * 7;\n\t\t\tthis.pbp.update(this.progress, 'load null' + pageStep);\n\t\t\treturn;\n\t\t}\n\t\tthis.imageMerger.beWhiteImage(cropedPaperDual, true);\n\t\t//console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa6a left:\" + pairPages.left + \"/right:\" + pairPages.right);\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'set Left' + pageStep);\n\t\tif (pairPages.leftBin) {\n\t\t\tconst data = pairPages.leftBin._ab;\n\t\t\t//\tconst data = await this.ip.getImageDataFromArrayBuffer(pairPages.leftBin._ab);\n\t\t\tconst origin = { data: new Uint8Array(data), width: pairPages.leftBin.width, height: pairPages.leftBin.height }\n\t\t\torigin.offsetX = 0;\n\t\t\torigin.offsetY = 0;\n\t\t\t// console.log(\"A pairPages.leftBin　pageStep:\" + pageStep);\n\t\t\t// console.log(cropedPaperDual);\n\t\t\t// console.log(origin);\n\t\t\tawait this.imageMerger.margeReplace(cropedPaperDual, [origin], false, true);\n\t\t\t// console.log(\"pairPages.leftBin\");\n\t\t}\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'set right' + pageStep);\n\t\tif (pairPages.rightBin) {\n\t\t\tconst data = pairPages.rightBin._ab;\n\t\t\t// const data = await this.ip.getImageDataFromArrayBuffer(pairPages.rightBin._ab);\n\t\t\tconst origin = { data: new Uint8Array(data), width: pairPages.rightBin.width, height: pairPages.rightBin.height }\n\t\t\torigin.offsetX = targetSize.x;\n\t\t\torigin.offsetY = 0;\n\t\t\t// console.log(\"B pairPages.rightBin　pageStep:\" + pageStep);\n\t\t\t// console.log(cropedPaperDual);\n\t\t\t// console.log(origin);\n\t\t\tawait this.imageMerger.margeReplace(cropedPaperDual, [origin], false, true);\n\t\t\t// console.log(\"pairPages.rightBin\");\n\t\t}\n\t\t//ping?\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'convert to jepg' + pageStep);\n\t\tlet cropedPaperDualAb = this.ip.getArrayBufferFromImageBitmapDataAsJpg(cropedPaperDual, 1.0);\n\t\tconst size10MB = 10 * 1000 * 1000;\n\t\tconst length = cropedPaperDualAb.byteLength;\n\t\tif (isMaxSize10M && size10MB < length) {\n\t\t\tconst retio = size10MB / length;\n\t\t\tropedPaperDualAb = this.ip.getArrayBufferFromImageBitmapDataAsJpg(cropedPaperDual, retio);\n\t\t}\n\t\tconst outputOld = pageEntity.outputDualImage;\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'save jepg binary' + pageStep);\n\t\tconst outputNew = await this.bm.save(outputOld, \"expandDualPage\", cropedPaperDualAb);\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'save right and delete temp files' + pageStep);\n\t\tif (pairPages.right && pairPages.right.outputExpandImage) {\n\t\t\tpairPages.right.outputDualImage = outputNew;\n\t\t\tawait this.em.Pages.save(pairPages.right);\n\t\t\tawait this.em.delete(pairPages.rightBin);\n\t\t}\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'save left and delete temp files' + pageStep);\n\t\tif (pairPages.left && pairPages.left.outputExpandImage) {\n\t\t\tpairPages.left.outputDualImage = outputNew;\n\t\t\tawait this.em.Pages.save(pairPages.left);\n\t\t\tawait this.em.delete(pairPages.leftBin);\n\t\t}\n\t\tconsole.timeEnd(\"exportDualImage4Print buildDualImageA3 pageStep:\" + pageStep);\n\t}\n\tasync loadBinaryWidCleanUp(pk) {\n\t\tconst binaryEntity = await this.em.get(pk);\n\t\tthis.delList.push(pk);\n\t\treturn binaryEntity;\n\t}\n\tasync delOnList() {\n\t\tfor (let pk of this.delList) {\n\t\t\t// const outputNew = await this.bm.save(pk, \"expandPage\", new Uint8Array(1)\n\t\t\t// \t.buffer, { width: 1, height: 1 });\n\t\t\tawait this.bm.remove(pk);\n\t\t}\n\t}\n}","import {\n\tSorter\n} from \"../../util/sorter\";\nimport {\n\tunixTimeToDateFormat\n} from \"../../util/timeUtil\";\nimport {\n\tUnicodeEncoder\n} from \"../../util/unicodeEncoder\";\nimport {\n\tMainService\n} from \"../../service/mainService\"\nimport {\n\tPreviewProcessor\n} from \"./previewProcessor\"\nimport { Zlib } from \"zlibjs/bin/zip.min\"\n\nconst order = {\n\torderName: \"MangaPaperA4ExpandTatikiri\",\n\tbasePaper: \"mangaPaperA4ExpandTatikiri\",\n\tdpiName: \"dpi600\"\n};\nexport class ExportUtilProcessor {\n\tconstructor(pp) {\n\t\tthis.pp = pp;\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.em = this.ms.em;\n\t\tthis.bm = this.ms.bm;\n\t\tthis.im = this.ms.im;\n\t\tthis.iom = this.ms.iom;\n\t\tthis.tm = this.ms.tm;\n\t}\n\tasync load() {\n\t\tconst exportPks = await this.tm.getExports();\n\t\treturn await this.getZipPdfPair(exportPks);\n\t}\n\tasync remove(exportPk = -1) {\n\t\tconst exportPks = await this.tm.getExports();\n\t\tif (exportPks) {\n\t\t\tfor (let exportｓIndex in exportPks) {\n\t\t\t\tconst current = exportPks[exportｓIndex];\n\t\t\t\tdelete exportPks[exportｓIndex];\n\t\t\t\tawait this.iom.remove(current);\n\t\t\t}\n\t\t\tawait this.tm.saveCurrent();\n\t\t}\n\t}\n\tasync loadZip(exportPk) {\n\t\tif (exportPk) {\n\t\t\talert('ExportUtilProcessor loadZip is NULL!');\n\t\t} else {\n\t\t\tconst imageOutpus = await this.load();\n\t\t\tconst zip = imageOutpus.zip;\n\t\t\tif (zip && zip.binary) {\n\t\t\t\t//alert(zip.binary);\n\t\t\t\tconst binaryEntity = await this.bm.load(zip.binary);\n\t\t\t\tzip.ab = binaryEntity._ab;\n\t\t\t\t// console.error(zip.ab)\n\t\t\t}\n\t\t\treturn zip;\n\t\t}\n\t\treturn null;\n\t}\n\tasync loadPdf(exportPk) {\n\t\tif (exportPk) {\n\t\t\talert('ExportUtilProcessor loadPdf exportPk is NULL!');\n\t\t} else {\n\t\t\tconst imageOutpus = await this.load();\n\t\t\tconst pdf = imageOutpus.pdf;\n\t\t\tif (pdf && pdf.binary) {\n\t\t\t\tconst binaryEntity = await this.bm.load(pdf.binary);\n\t\t\t\tpdf.ab = binaryEntity._ab;\n\t\t\t}\n\t\t\treturn pdf;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getZipPdfPair(exportPks) {\n\t\tconst imageOutpus = {\n\t\t\tpdf: null,\n\t\t\tzip: null\n\t\t};\n\t\tif (!!exportPks === false) {\n\t\t\treturn imageOutpus;\n\t\t}\n\t\tfor (let exportPk of exportPks) {\n\t\t\tconst imageOutput = await this.iom.load(exportPk);\n\t\t\tif (imageOutput && imageOutput.type === \"zip\") {\n\t\t\t\timageOutpus.zip = imageOutput;\n\t\t\t}\n\t\t\tif (imageOutput && imageOutput.type === \"pdf\") {\n\t\t\t\timageOutpus.pdf = imageOutput;\n\t\t\t}\n\t\t}\n\t\treturn imageOutpus;\n\t}\n\tasync loadUploadedImagesZip() {\n\t\tconst now = (new Date()\n\t\t\t.getTime());\n\t\tconst yyyyMMddThhmmss = unixTimeToDateFormat(now, \"yyyyMMddThhmmss\");\n\t\tconst output = {\n\t\t\tab: null,\n\t\t\tname: \"UploadedImagesZip_\" + yyyyMMddThhmmss + \".zip\"\n\t\t}\n\t\tconst imageEntitis = await this.im.loadImages()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e)\n\t\t\t});\n\t\tconsole.log(\"aaaaaaaaaaaaaaaaaaaaaaaa5a imageEntitis:\" + imageEntitis);\n\t\tconsole.log(imageEntitis);\n\t\tif (!imageEntitis) {\n\t\t\talert('ExportUtilProcessor UploadedImages is None!');\n\t\t} else {\n\t\t\toutput.ab = await this.exoprtAsUploadedZip(imageEntitis);\n\t\t}\n\t\treturn output;\n\t}\n\tasync exoprtAsUploadedZip(imageEntitis) {\n\t\tconsole.time(\"exoprtAsUploadedZip\")\n\t\tconst zip = new Zlib.Zip({\n\t\t\tcompress: false\n\t\t});\n\t\tlet lastOne = null;\n\t\tfor (let imageEntity of imageEntitis) {\n\t\t\tconsole.log(\"aaaaaaaaaaaaaaaaaaaaaaaa6a imageEntity:\" + imageEntity);\n\t\t\tif (imageEntity && imageEntity.imageEntity && imageEntity.imageEntity.binary && imageEntity.imageEntity.binary.pk) {\n\t\t\t\tif (imageEntity.imageEntity.binary.pk === lastOne) {\n\t\t\t\t\t// pageEntity.baseImage = null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlastOne = imageEntity.imageEntity.binary.pk;\n\t\t\t\tconst binaryEntity = await this.em.get(lastOne);\n\t\t\t\tconsole.log(\"aaaaaaaaaaaaaaaaaaaaaaaa7a binaryEntity:\" + binaryEntity + \"/lastOne:\" + lastOne);\n\t\t\t\tif (binaryEntity) {\n\t\t\t\t\tzip.addFile(new Uint8Array(binaryEntity._ab), {\n\t\t\t\t\t\tfilename: UnicodeEncoder.stringToByteArray(imageEntity.imageEntity.name)\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(\"exoprtAsUploadedZip\" + binaryEntity)\n\t\t\t\t\t// this.delList.push(lastOne);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//uncompress\n\t\tconst result = zip.compress();\n\t\tconsole.timeEnd(\"exoprtAsUploadedZip\")\n\t\treturn result;\n\t}\n\n\tasync loadFullBackupZip() {\n\t\treturn null;\n\t}\n}","import { ExportActionCreator } from '../action/exportActionCreator'\nimport { MainService } from \"../../service/mainService\"\nimport { BaseReducer } from '../../util/reactive/baseReducer'\nimport { ExportImageProcessor } from '../processor/exportImageProcessor'\nimport { ExportUtilProcessor } from '../processor/exportUtilProcessor'\nimport { PageProcessor } from '../processor/pageProcessor'\nimport { ImageActionCreator } from '../action/imageActionCreator'\nlet exportReducer = null;\nexport class ExportReducer extends BaseReducer {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.im = this.ms.im;\n\t\tthis.bm = this.ms.bm;\n\t\tthis.iom = this.ms.iom;\n\t\tthis.tm = this.ms.tm;\n\t\tthis.exportExecuteAction = ExportActionCreator.createExecuteAction();\n\t\tthis.exportExecuteAllAction = ExportActionCreator.creatExecuteAllAction();\n\t\tthis.exportRemoveAction = ExportActionCreator.creatRemoveAction();\n\t\tthis.exportsLoadAction = ExportActionCreator.creatLoadAction();\n\t\tthis.exportDownloadAction = ExportActionCreator.createDownloadAction();\n\t\tthis.exportExecutePdfAction = ExportActionCreator.createExecutePdfAction();\n\t\tthis.exportDownloadPdfAction = ExportActionCreator.createDownloadPdfAction();\n\t\tthis.createDownloadImgAction = ExportActionCreator.createDownloadImgAction();\n\t\tthis.createDownloadFullBKAction = ExportActionCreator.createDownloadFullBKAction();\n\t\tthis.selectOrderAction = ExportActionCreator.createSelectOrderAction();\n\t\tthis.atatch(this.exportExecuteAction);\n\t\tthis.atatch(this.exportExecuteAllAction);\n\t\tthis.atatch(this.exportRemoveAction);\n\t\tthis.atatch(this.exportsLoadAction);\n\t\tthis.atatch(this.exportDownloadAction);\n\t\tthis.atatch(this.exportExecutePdfAction);\n\t\tthis.atatch(this.exportDownloadPdfAction);\n\t\tthis.atatch(this.createDownloadImgAction);\n\t\tthis.atatch(this.createDownloadFullBKAction);\n\t\tthis.atatch(this.selectOrderAction);\n\n\t\tthis.pp = new PageProcessor();\n\t\tthis.eip = new ExportImageProcessor(this.pp);\n\t\tthis.eup = new ExportUtilProcessor(this.pp);\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n\t\tthis.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n\t\tthis.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n\t\tthis.storeUploadedImgZipDLKey = ExportActionCreator.getStoreUploadedImgZipDLKey();\n\t\tthis.storeFullBackupZipDLKey = ExportActionCreator.getStoreFullBackupZipDLKey();\n\t\tthis.storeSelectedOrderKey = ExportActionCreator.getStoreSelectedOrderKey();\n\t\tthis.addInitializeKey(this.storeKey);\n\t\tthis.addInitializeKey(this.storePdfDLKey);\n\t\tthis.addInitializeKey(this.storeZipDLKey);\n\t\tthis.addInitializeKey(this.storeRemoveResultKey);\n\t\tthis.addInitializeKey(this.storeExportResultKey);\n\t\tthis.addInitializeKey(this.storeUploadedImgZipDLKey);\n\t\tthis.addInitializeKey(this.storeFullBackupZipDLKey);\n\t\tthis.addInitializeKey(this.storeSelectedOrderKey);\n\t}\n\tstatic register() {\n\t\tif (!exportReducer) {\n\t\t\texportReducer = new ExportReducer();\n\t\t}\n\t}\n\tasync reduce(store, action) {\n\t\tif (this.exportExecuteAction.type === action.type) {\n\t\t\tconst loadPks = await this.exportExecute(action.data.exportOrders);\n\t\t\tstore[this.storeKey] = loadPks;\n\t\t\tstore[this.storeExportResultKey] = loadPks;\n\t\t} else if (this.exportExecuteAllAction.type === action.type) {\n\t\t\tstore[this.storeExportResultKey] = await this.exportExecute(action.data.exportOrders);\n\t\t\tstore[this.storeExportResultKey] = await this.exportPdfExecute(action.data.exportOrders);\n\t\t} else if (this.exportRemoveAction.type === action.type) {\n\t\t\tconst loadPks = await this.remove(action.data.exportPk);\n\t\t\tstore[this.storeRemoveResultKey] = loadPks;\n\t\t} else if (this.exportsLoadAction.type === action.type) {\n\t\t\tstore[this.storeKey] = await this.load();\n\t\t} else if (this.exportDownloadAction.type === action.type) {\n\t\t\tstore[this.storeZipDLKey] = await this.loadZip(action.data.exportPk);\n\t\t} else if (this.exportExecutePdfAction.type === action.type) {\n\t\t\tconst loadPks = await this.exportPdfExecute(action.data.exportOrders);\n\t\t\tstore[this.storeKey] = loadPks;\n\t\t\tstore[this.storeExportResultKey] = loadPks;\n\t\t} else if (this.exportDownloadPdfAction.type === action.type) {\n\t\t\tstore[this.storePdfDLKey] = await this.loadPdf(action.data.exportPk);\n\t\t} else if (this.createDownloadImgAction.type === action.type) {\n\t\t\tstore[this.storeUploadedImgZipDLKey] = await this.loadUploadedImageZip();\n\t\t} else if (this.createDownloadFullBKAction.type === action.type) {\n\t\t\tstore[this.storeFullBackupZipDLKey] = await this.loadFullBackupZip(action.data.exportPk);\n\t\t} else if (this.selectOrderAction.type === action.type) {\n\t\t\tif (action.data.selectOrder && action.data.selectOptions) {\n\t\t\t\tconst newData = {\n\t\t\t\t\tselectOptions: action.data.selectOptions,\n\t\t\t\t\tselectOrder: action.data.selectOrder\n\t\t\t\t};\n\t\t\t\tstore[this.storeSelectedOrderKey] = newData;\n\t\t\t}\n\t\t}\n\t\treturn store;\n\t}\n\tasync exportExecute(exportOrders) {\n\t\tconst exportPks = await this.eip.exportZipExecute(exportOrders);\n\t\treturn await this.eup.getZipPdfPair(exportPks);\n\t}\n\tasync exportPdfExecute(exportOrders) {\n\t\tconst exportPks = await this.eip.exportPdfExecute(exportOrders);\n\t\treturn await this.eup.getZipPdfPair(exportPks);\n\t}\n\t// whh save single data ? the data is too Big for indexeddb !\n\tasync loadZip(exportPk) {\n\t\treturn await this.eup.loadZip(exportPk);\n\t}\n\t// whh save single data ? the data is too Big for indexeddb !\n\tasync loadPdf(exportPk) {\n\t\treturn await this.eup.loadPdf(exportPk);\n\t}\n\t// whh save single data ? the data is too Big for indexeddb !\n\tasync loadUploadedImageZip(exportPk) {\n\t\treturn await this.eup.loadUploadedImagesZip(exportPk);\n\t}\n\t// whh save single data ? the data is too Big for indexeddb !\n\tasync loadFullBackupZip(exportPk) {\n\t\treturn await this.eup.loadFullBackupZip(exportPk);\n\t}\n\tasync remove(exportPk) {\n\t\t//\n\t\tawait this.eup.remove(exportPk);\n\t\treturn await this.eup.load();\n\t}\n\tasync load() {\n\t\treturn await this.eup.load();\n\t}\n}\n","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nexport class ExportAllButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ExportAllButton\", \"ExportAllButton\", true);\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n\t\tthis.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n\t\tthis.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n\t}\n\n\trender(store, actionData) {\n\t\treturn div(this.id, [this.id + \"Frame\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [div(\"\", [\"button\"], \"make zip and pdf!\")]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\tconst result = store[this.storeKey];\n\t\t\tif (result.pdf && result.zip) {\n\t\t\t\t// alert(\"OK All Exported!\");\n\t\t\t}\n\t\t}\n\t}\n\tclick() {\n\t\treturn (event) => {\n\t\t\tconst action = ExportActionCreator.creatExecuteAllAction();\n\t\t\tthis.dispatch(action);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","import { ActionCreator } from '../../util/reactive/actionCreator'\nexport class DialogActionCreator {\n\tconstructor() {}\n\tstatic creatOpenAction(targetView, data, storeKey = null) {\n\t\treturn ActionCreator.createBaseAction(\"openDialog\", targetView, data, storeKey);\n\t}\n\tstatic creatAlertAction(targetView, data, storeKey = null) {\n\t\treturn ActionCreator.createBaseAction(\"openAlertDialogX\", targetView, data, storeKey);\n\t}\n\tstatic creatConfirmAction(targetView, data, storeKey = null) {\n\t\treturn ActionCreator.createBaseAction(\"openConfirmDialog\", targetView, data, storeKey);\n\t}\n\tstatic creatCloseAction(targetView, data, storeKey = null) {\n\t\treturn ActionCreator.createBaseAction(\"closeDialog\", targetView, data, storeKey);\n\t}\n\tstatic getStoreKey() {\n\t\treturn \"dialog\";\n\t}\n}","import {\n\tDialogActionCreator\n} from '../action/dialogActionCreator'\nimport {\n\tMainService\n} from \"../../service/mainService\"\nimport {\n\tBaseReducer\n} from '../../util/reactive/baseReducer'\nlet dialogViewReducer = null;\nexport class DialogViewReducer extends BaseReducer {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.dialogOpenAction = DialogActionCreator.creatOpenAction();\n\t\tthis.dialogAlertAction = DialogActionCreator.creatAlertAction();\n\t\tthis.dialogConfirmAction = DialogActionCreator.creatConfirmAction();\n\t\tthis.dialogCloseAction = DialogActionCreator.creatCloseAction();\n\t\tthis.atatch(this.dialogOpenAction);\n\t\tthis.atatch(this.dialogAlertAction);\n\t\tthis.atatch(this.dialogConfirmAction);\n\t\tthis.atatch(this.dialogCloseAction);\n\t\tthis.storeKey = DialogActionCreator.getStoreKey();\n\t\tthis.addInitializeKey(this.storeKey);\n\t}\n\tstatic register() {\n\t\tif (!dialogViewReducer) {\n\t\t\tdialogViewReducer = new DialogViewReducer();\n\t\t}\n\t}\n\tasync reduce(store, action) {\n\t\tif (this.dialogOpenAction.type === action.type) {\n\t\t\tstore[this.storeKey] = this.createDialog(true, action.type, action.data.msg, action.data.title, action.data.nextActions);\n\t\t} else if (this.dialogAlertAction.type === action.type) {\n\t\t\tstore[this.storeKey] = this.createDialog(true, action.type, action.data.msg, action.data.title);\n\t\t} else if (this.dialogConfirmAction.type === action.type) {\n\t\t\tstore[this.storeKey] = this.createDialog(true, action.type, action.data.msg, action.data.title);\n\t\t} else if (this.dialogCloseAction.type === action.type) {\n\t\t\tstore[this.storeKey] = this.createDialog(false, action.type);\n\t\t}\n\t\treturn store;\n\t}\n\tcreateDialog(isVisible, type, msg, title, nextActions) {\n\t\treturn {\n\t\t\tisVisible: isVisible,\n\t\t\ttype: type,\n\t\t\tmsg: msg,\n\t\t\ttitle: title,\n\t\t\tnextActions\n\t\t}\n\t}\n}","import vu from \"../../../util/viewUtil\";\nimport { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { DialogActionCreator } from '../../../reduxy/action/dialogActionCreator'\nimport { DialogViewReducer } from '../../../reduxy/reducer/dialogViewReducer'\nlet dialogInstance = null;\nexport class Dialog extends BaseView {\n\tconstructor() {\n\t\tsuper(\"Dialog\", [\"Dialog\", BaseView.ModalWindowClass()]);\n\t\tthis.storeKey = DialogActionCreator.getStoreKey();\n\t\tthis.dialogOpenAction = DialogActionCreator.creatOpenAction();\n\t\tthis.dialogAlertAction = DialogActionCreator.creatAlertAction();\n\t\tthis.dialogConfirmAction = DialogActionCreator.creatConfirmAction();\n\t\tthis.title = \"Dialog\";\n\t\tdialogInstance = this;\n\t\tthis.resolv = null;\n\t\tthis.reject = null;\n\t}\n\n\tasync onAfterAttach(store, data) {\n\t\tthis.close();\n\t\tDialogViewReducer.register();\n\t}\n\tstatic async opneAlert(title, msg) {\n\t\treturn new Promise(\n\t\t\t(resolv, reject) => {\n\t\t\t\tdialogInstance.showAlertDialog(title, msg);\n\t\t\t\tdialogInstance.resolv = resolv;\n\t\t\t\tdialogInstance.reject = reject;\n\t\t\t}\n\t\t);\n\t}\n\tstatic async opneConfirm(title, msg) {\n\t\treturn new Promise(\n\t\t\t(resolv, reject) => {\n\t\t\t\tdialogInstance.showConfirmDialog(title, msg);\n\t\t\t\tdialogInstance.resolv = resolv;\n\t\t\t\tdialogInstance.reject = reject;\n\t\t\t}\n\t\t);\n\t}\n\tshowAlertDialog(title, msg) {\n\t\tconst action = DialogActionCreator.creatAlertAction(this, { title: title, msg: msg });\n\t\tthis.dispatch(action);\n\t}\n\tshowConfirmDialog(title, msg) {\n\t\tconst action = DialogActionCreator.creatConfirmAction(this, { title: title, msg: msg });\n\t\tthis.dispatch(action);\n\t}\n\trender() {\n\t\treturn div(\"\" [\"DialogView\"], {\n\t\t\tstyle: {\n\t\t\t\tdisplay: \"none\"\n\t\t\t}\n\t\t}, [\n\t\t\tdiv('', ['dialogTitle'], this.title),\n\t\t\tdiv('', ['dialogFrame'], [div('', ['dialog'], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: this.initPoint\n\t\t\t\t}\n\t\t\t})]),\n\t\t\tdiv('', ['dialogInfo'], [\n\t\t\t\tdiv('', ['dialogMessage'], \"\")\n\t\t\t]),\n\t\t\tdiv('', ['dialogDeside'], [\n\t\t\t\tdiv('', ['dialogOk'], { on: { click: this.onOK() } }, \"OK\"),\n\t\t\t\tdiv('', ['dialogCancel'], { on: { click: this.onCancel() } }, \"Cancel\")\n\t\t\t])\n\t\t]);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\t//alert(\"onViewShow\");\n\t\t\tthis.showDialog(store[this.storeKey]);\n\t\t\t//console.log(\"Dialog onViewShow\");\n\t\t}\n\t}\n\tonOK() {\n\t\treturn (event) => {\n\t\t\tconst action = DialogActionCreator.creatCloseAction(this, {});\n\t\t\tif (this.resolv) {\n\t\t\t\tthis.resolv(true);\n\t\t\t\tthis.resolv = null;\n\t\t\t\tthis.reject = null;\n\t\t\t}\n\t\t\tthis.dispatch(action);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\tonCancel() {\n\t\treturn (event) => {\n\t\t\tconst action = DialogActionCreator.creatCloseAction(this, {});\n\t\t\tif (this.resolv) {\n\t\t\t\tthis.resolv(false);\n\t\t\t\tthis.resolv = null;\n\t\t\t\tthis.reject = null;\n\t\t\t}\n\t\t\tthis.dispatch(action);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\tshowDialog(data) {\n\t\tconst { isVisible, type, msg, title } = data;\n\t\tif (title) {\n\t\t\tthis.title = title;\n\t\t}\n\t\tif (isVisible) {\n\t\t\tthis.show();\n\t\t\tthis.prePatch(\".dialog\", div(\"\", [\"dialog\"], {\n\t\t\t\tstyle: {}\n\t\t\t}, ));\n\t\t\tthis.prePatch(\".dialogTitle\", div(\"\", [\"dialogTitle\"], {}, this.title));\n\t\t\tthis.prePatch(\".dialogMessage\", div(\"\", [\"dialogMessage\"], {}, msg));\n\t\t\tconst buttons = [];\n\t\t\tbuttons.push(div('', ['dialogOk'], { on: { click: this.onOK() } }, \"OK\"));\n\t\t\tif (this.dialogConfirmAction.type === type) {\n\t\t\t\tbuttons.push(div('', ['dialogCancel'], { on: { click: this.onCancel() } }, \"Cancel\"));\n\t\t\t}\n\t\t\tthis.prePatch(\".dialogDeside\", div('', ['dialogDeside'], buttons));\n\t\t} else {\n\t\t\tthis.close();\n\t\t\tthis.prePatch(\".dialog\", div(\"\", [\"dialog\"], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: \"0%\"\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis.prePatch(\".dialogPoints\", div(\"\", [\"dialogPoints\"], {}, this.initPoint));\n\t\t}\n\t}\n}","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\n\nimport { unixTimeToDateFormat } from \"../../../util/timeUtil\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { getNowUnixtime } from \"../../../util/timeUtil\";\nimport { Dialog } from \"../dialog/dialog\";\nexport class ExportImgZipButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ExportImgZipButton\", \"ExportImgZipButton\", true);\n\t\tthis.storeSelectedOrderKey = ExportActionCreator.getStoreSelectedOrderKey();\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n\t\tthis.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n\t\tthis.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n\t\tthis.stateId = \"exportedStateZip\";\n\t\tthis.isExported = false;\n\t\tthis.exportOrderData = null;\n\t\tthis.startTime = null;\n\t}\n\n\trender(store, actionData) {\n\t\tconst buttonName = div(\"\", [\"buttonName\"], \"make zip!\");\n\t\tconst exportedState = div(this.stateId, [\"exportedStateNone\"], \"no export\");\n\t\treturn div(this.id, [this.id + \"Frame\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [div(\"\", [\"button\"], [buttonName, exportedState])]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeExportResultKey]) {\n\t\t\tconst data = store[this.storeExportResultKey];\n\t\t\tconst zip = data.zip;\n\t\t\tconst isSuccess = this.buildButton(data);\n\t\t\tconst duration = (getNowUnixtime() - this.startTime) / 1000;\n\t\t\tif (isSuccess && this.startTime) {\n\t\t\t\tthis.startTime = null;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tDialog.opneAlert(\"Build Zip File Complete!\", \"OK download zip file! \" + zip.size + \"byte  Duration:\" + duration + \"sec\");\n\t\t\t\t}, 1000)\n\t\t\t\t//\":\" + JSON.stringify(store[this.storeExportResultKey]) + \"/this.isExported:\" + this.isExported);\n\t\t\t}\n\t\t} else if (store[this.storeKey]) {\n\t\t\t//alert(JSON.stringify(store[this.storeKey]));\n\t\t\tthis.buildButton(store[this.storeKey]);\n\t\t}\n\n\t\tif (store[this.storeSelectedOrderKey]) {\n\t\t\tconst orderData = store[this.storeSelectedOrderKey];\n\t\t\tconst selectOptions = orderData.selectOptions;\n\t\t\tconst selectOrder = orderData.selectOrder;\n\t\t\tthis.exportOrderData = {\n\t\t\t\tbasePaper: selectOrder.basePaper,\n\t\t\t\torderName: selectOrder.orderName,\n\t\t\t\tdpiName: selectOptions.dpiName,\n\t\t\t\tisGrayscale: selectOptions.isGrayscale,\n\t\t\t\tisMaxSize10M: selectOptions.isMaxSize10M,\n\t\t\t\tisLanczose: selectOptions.isLanczose\n\t\t\t}\n\t\t}\n\t}\n\tbuildButton(exports) {\n\t\tif (exports && exports.zip) {\n\t\t\tconst zip = exports.zip\n\t\t\tconst exportString = \"*Last Exported One* \" + zip.name + \" / \" + zip.orderName + \" /size: \" + zip.size + \"byte / \" + unixTimeToDateFormat(zip.updateDate);\n\t\t\tthis.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedState\"], exportString));\n\t\t\tthis.isExported = true;\n\t\t\treturn true;\n\t\t\t// console.log(data);\n\t\t\t//alert(\"OK download zip file!:\" + JSON.stringify(exports) + \"/this.isExported:\" + this.isExported);\n\n\t\t} else {\n\t\t\tthis.isExported = false;\n\t\t\tthis.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedStateNone\"], \"no export\"));\n\t\t\treturn false;\n\t\t\t// console.log(data);\n\t\t\t//alert(\"OK download zip file!:\" + JSON.stringify(exports) + \"/this.isExported:\" + this.isExported);\n\t\t}\n\t}\n\n\tclick() {\n\t\treturn async (event) => {\n\t\t\tif (!this.exportOrderData) {\n\t\t\t\tDialog.opneAlert(\"I'm need ExportSettings!\", \"Export Order is not Selected!\");\n\t\t\t\t// alert(\"Export Order is not Selected!\");\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst result = await Dialog.opneConfirm(\"Comfirm\", \"is export orverride ok?\");\n\t\t\tif (!this.isExported || this.isExported && result) {\n\t\t\t\tthis.startTime = getNowUnixtime();\n\t\t\t\tconst action = ExportActionCreator.createExecuteAction(this, { exportOrders: [this.exportOrderData] });\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","import {\n\tBaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { unixTimeToDateFormat } from \"../../../util/timeUtil\";\nimport {\n\tExportActionCreator\n} from '../../../reduxy/action/exportActionCreator'\nimport { getNowUnixtime } from \"../../../util/timeUtil\";\nimport { Dialog } from \"../dialog/dialog\";\nexport class ExportPdfButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ExportPdfButton\", \"ExportPdfButton\", true);\n\t\tthis.storeSelectedOrderKey = ExportActionCreator.getStoreSelectedOrderKey();\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n\t\tthis.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n\t\tthis.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n\t\tthis.stateId = \"exportedStatePdf\";\n\t\tthis.isExported = false;\n\t\tthis.exportOrderData = null;\n\t}\n\n\trender(store, actionData) {\n\t\tconst buttonName = div(\"\", [\"buttonName\"], \"make pdf!\");\n\t\tconst exportedState = div(this.stateId, [\"exportedStateNone\"], \"no export\");\n\t\treturn div(this.id, [this.id + \"Frame\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [div(\"\", [\"button\"], [buttonName, exportedState])]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeExportResultKey]) {\n\t\t\tconst data = store[this.storeExportResultKey];\n\t\t\tconst pdf = data.pdf;\n\t\t\tconst isSuccess = this.buildButton(data);\n\t\t\tconst duration = (getNowUnixtime() * 1 - this.startTime) / 1000;\n\t\t\tif (isSuccess && this.startTime) {\n\t\t\t\tthis.startTime = null;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tDialog.opneAlert(\"Build Pdf File Complete!\", \"OK download pdf file! \" + pdf.size + \"byte  Duration:\" + duration + \"sec\");\n\t\t\t\t}, 1000)\n\t\t\t\t//\":\" + JSON.stringify(store[this.storeExportResultKey]) + \"/this.isExported:\" + this.isExported);\n\t\t\t}\n\t\t} else if (store[this.storeKey]) {\n\t\t\tthis.buildButton(store[this.storeKey]);\n\t\t}\n\n\t\tif (store[this.storeSelectedOrderKey]) {\n\t\t\tconst orderData = store[this.storeSelectedOrderKey];\n\t\t\tconst selectOptions = orderData.selectOptions;\n\t\t\tconst selectOrder = orderData.selectOrder;\n\t\t\tthis.exportOrderData = {\n\t\t\t\tbasePaper: selectOrder.basePaper,\n\t\t\t\torderName: selectOrder.orderName,\n\t\t\t\tdpiName: selectOptions.dpiName,\n\t\t\t\tisGrayscale: selectOptions.isGrayscale,\n\t\t\t\tisMaxSize10M: selectOptions.isMaxSize10M,\n\t\t\t\tisLanczose: selectOptions.isLanczose,\n\t\t\t\tisSaddleStitchingOrder: selectOptions.isSaddleStitchingOrder\n\t\t\t}\n\t\t}\n\t}\n\tbuildButton(exports) {\n\t\tif (exports && exports.pdf) {\n\t\t\tconst pdf = exports.pdf\n\t\t\tconst exportString = \"*Last Exported One* \" + pdf.name + \" / \" + pdf.orderName + \" /size: \" + pdf.size + \"byte / \" + unixTimeToDateFormat(pdf.updateDate);\n\t\t\tthis.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedState\"], exportString));\n\t\t\tthis.isExported = true;\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.isExported = false;\n\t\t\tthis.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedStateNone\"], \"no export\"));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tclick() {\n\t\treturn async (event) => {\n\t\t\tif (!this.exportOrderData) {\n\t\t\t\tDialog.opneAlert(\"I'm need ExportSettings!\", \"Export Order is not Selected!\");\n\t\t\t\t// alert(\"Export Order is not Selected!\");\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst result = await Dialog.opneConfirm(\"Comfirm\", \"is export orverride ok?\");\n\t\t\tif (!this.isExported || this.isExported && result) {\n\t\t\t\tthis.startTime = getNowUnixtime() * 1;\n\t\t\t\tconst action = ExportActionCreator.createExecutePdfAction(this, { exportOrders: [this.exportOrderData] });\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","export class FileDownloader {\n  static download(fileName, content, mimeType = \"text/plain\") {\n    const blob = new Blob([content], {\"type\": mimeType});\n    const ancker = document.createElement(\"a\");\n    ancker.style.display=\"none\";\n    ancker.download = fileName;\n    ancker.href = window.URL.createObjectURL(blob);\n    ancker.dataset.downloadurl = [mimeType, fileName, ancker.href].join(\":\");\n    document.body.appendChild(ancker);\n    ancker.click();\n    setTimeout(()=>{document.body.removeChild(ancker) });\n  }\n}\n","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { unixTimeToDateFormat } from \"../../../util/timeUtil\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { FileDownloader } from \"../../../util/fileDownloader\";\nexport class DownloadLastExportZipButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"DownloadLastExportZipButton\", \"DownloadLastExportZipButton\", true);\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n\t\tthis.stateId = this.id + \"Button\";\n\t\tthis.isExported = false;\n\t}\n\n\trender(store, actionData) {\n\t\tconst text = div(this.stateId, [\n\t\t\t\"button\", \"disable\"\n\t\t], \"-no export Zip-\");\n\t\treturn div(this.id, [this.id + \"Frame\"], {}, [text]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeZipDLKey]) {\n\t\t\tconst output = store[this.storeZipDLKey];\n\t\t\tif (output.ab) {\n\t\t\t\tFileDownloader.download(output.name, output.ab, \"application/zip\");\n\t\t\t} else {\n\t\t\t\talert(\"not exported!\");\n\t\t\t}\n\t\t} else if (store[this.storeKey]) {\n\t\t\tconst data = store[this.storeKey];\n\t\t\tconst zip = data.zip;;\n\t\t\tif (zip) {\n\t\t\t\t// const exportString = zip.name + \" / \" + zip.orderName + \" / \" + unixTimeToDateFormat(zip.updateDate);\n\t\t\t\tconst text = div(this.stateId, [\n\t\t\t\t\t\"button\", \"enable\"\n\t\t\t\t], {\n\t\t\t\t\ton: {\n\t\t\t\t\t\tclick: this.click()\n\t\t\t\t\t}\n\t\t\t\t}, \"download Zip!\");\n\t\t\t\tthis.prePatch(\"#\" + this.stateId, text);\n\t\t\t\tthis.isExported = true;\n\t\t\t} else {\n\t\t\t\tconst text = div(this.stateId, [\n\t\t\t\t\t\"button\", \"disable\"\n\t\t\t\t], \"no export Zip\");\n\t\t\t\tthis.prePatch(\"#\" + this.stateId, text);\n\t\t\t\tthis.isExported = false;\n\t\t\t}\n\t\t}\n\t}\n\tclick() {\n\t\treturn (event) => {\n\t\t\tif (this.isExported) {\n\t\t\t\tconst action = ExportActionCreator.createDownloadAction(); //createDownloadPdfAction\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { unixTimeToDateFormat } from \"../../../util/timeUtil\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { FileDownloader } from \"../../../util/fileDownloader\";\nexport class DownloadLastExportPdfButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"DownloadLastExportPdfButton\", \"DownloadLastExportPdfButton\", true);\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.stateId = this.id + \"Button\";\n\t\tthis.isExported = false;\n\t}\n\n\trender(store, actionData) {\n\t\tconst text = div(this.stateId, [\n\t\t\t\"button\", \"disable\"\n\t\t], \"-no export PDF-\");\n\t\tconst result = div(this.id, [\n\t\t\tthis.id + \"Frame\"\n\t\t], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [text]);\n\t\t// alert(\"render this.isExported :\" + this.isExported+'/this.id:'+this.id);\n\t\treturn result;\n\t}\n\tasync onAfterAttach(store, data) {\n\t\t// alert(\"onAfterAttach this.isExported :\" + this.isExported+'/this.id:'+this.id);\n\t}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storePdfDLKey]) {\n\t\t\tconst output = store[this.storePdfDLKey];\n\t\t\tif (output.ab) {\n\t\t\t\tFileDownloader.download(output.name, output.ab, \"application/pdf\");\n\t\t\t} else {\n\t\t\t\talert(\"not exported!\");\n\t\t\t}\n\t\t} else if (store[this.storeKey]) {\n\t\t\tconst data = store[this.storeKey];\n\t\t\tconst pdf = data.pdf;\n\t\t\tif (pdf) {\n        // const exportString = zip.name + \" / \" + zip.orderName + \" / \" + unixTimeToDateFormat(zip.updateDate);\n        const text = div(this.stateId, [\n          \"button\", \"enable\"\n        ],{\n          on: {\n            click: this.click()\n          }\n        }, \"download PDF!\");\n        this.prePatch(\"#\" + this.stateId, text);\n        this.isExported = true;\n      } else {\n        const text = div(this.stateId, [\n          \"button\", \"disable\"\n        ], \"no export PDF\");\n        this.prePatch(\"#\" + this.stateId, text);\n        this.isExported = false;\n\t\t\t}\n\t\t} else {}\n\t}\n\tclick() {\n\t\treturn (event) => {\n\t\t\tif (this.isExported) {\n\t\t\t\tconst action = ExportActionCreator.createDownloadPdfAction(); //createDownloadPdfAction\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}\n","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { unixTimeToDateFormat } from \"../../../util/timeUtil\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { FileDownloader } from \"../../../util/fileDownloader\";\nexport class DownloadUploadedImgZipButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"DownloadUploadedImgZipButton\", \"DownloadUploadedImgZipButton\", true);\n\t\tthis.storeUploadedImgZipDLKey = ExportActionCreator.getStoreUploadedImgZipDLKey();\n\t\tthis.stateId = this.id + \"Button\";\n\t\tthis.isExported = false;\n\t}\n\n\trender(store, actionData) {\n\t\tconst text = div(this.stateId, [\n\t\t\t\"button\", \"enable\"\n\t\t], \"-Download Uploaded Images Zip-\");\n\t\tconst result = div(this.id, [\n\t\t\tthis.id + \"Frame\"\n\t\t], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [text]);\n\t\t// alert(\"render this.isExported :\" + this.isExported+'/this.id:'+this.id);\n\t\treturn result;\n\t}\n\tasync onAfterAttach(store, data) {\n\t\t// alert(\"onAfterAttach this.isExported :\" + this.isExported+'/this.id:'+this.id);\n\t}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeUploadedImgZipDLKey]) {\n\t\t\tconst output = store[this.storeUploadedImgZipDLKey];\n\t\t\tif (output) {\n\t\t\t\tif (output.ab) {\n\t\t\t\t\tFileDownloader.download(output.name, output.ab, \"application/zip\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tclick() {\n\t\treturn (event) => {\n\t\t\tconst action = ExportActionCreator.createDownloadImgAction(); //createDownloadPdfAction\n\t\t\tthis.dispatch(action);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { unixTimeToDateFormat } from \"../../../util/timeUtil\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { FileDownloader } from \"../../../util/fileDownloader\";\nexport class DownloadFullBackupZipButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"DownloadFullBackupZipButton\", \"DownloadFullBackupZipButton\", true);\n\t\tthis.storeFullBackupZipDLKey = ExportActionCreator.getStoreFullBackupZipDLKey();\n\t\tthis.stateId = this.id + \"Button\";\n\t\tthis.isExported = false;\n\t}\n\n\trender(store, actionData) {\n\t\tconst text = div(this.stateId, [\n\t\t\t\"button\", \"enable\"\n\t\t], \"-Download Full Backup Zip-\");\n\t\tconst result = div(this.id, [\n\t\t\tthis.id + \"Frame\"\n\t\t], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [text]);\n\t\t// alert(\"render this.isExported :\" + this.isExported+'/this.id:'+this.id);\n\t\treturn result;\n\t}\n\tasync onAfterAttach(store, data) {\n\t\t// alert(\"onAfterAttach this.isExported :\" + this.isExported+'/this.id:'+this.id);\n\t}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeFullBackupZipDLKey]) {\n\t\t\tconst data = store[this.storeFullBackupZipDLKey];\n\t\t\tconst pdf = data.pdf;\n\t\t\tif (pdf) {\n\t\t\t\t// const exportString = zip.name + \" / \" + zip.orderName + \" / \" + unixTimeToDateFormat(zip.updateDate);\n\t\t\t\tconst text = div(this.stateId, [\n\t\t\t\t\t\"button\", \"enable\"\n\t\t\t\t], {\n\t\t\t\t\ton: {\n\t\t\t\t\t\tclick: this.click()\n\t\t\t\t\t}\n\t\t\t\t}, \"Download Full Backup Zip!\");\n\t\t\t\tthis.prePatch(\"#\" + this.stateId, text);\n\t\t\t}\n\t\t} else {}\n\t}\n\tclick() {\n\t\treturn (event) => {\n\t\t\tconst action = ExportActionCreator.createDownloadFullBKAction(); //createDownloadPdfAction\n\t\t\tthis.dispatch(action);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { Dialog } from \"../dialog/dialog\";\nexport class DeleteExportOneButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"DeleteExportOneButton\", \"DeleteExportOneButton\", true);\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n\t\tthis.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n\t\tthis.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n\t}\n\n\trender(store, actionData) {\n\t\treturn div(this.id, [this.id + \"Frame\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [div(\"\", [\"button\"], \"delete Exports!\")]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeRemoveResultKey]) {\n\t\t\t//  alert(\"delete exports!\");\n\t\t\tconst action = ExportActionCreator.creatLoadAction(this);\n\t\t\tthis.dispatch(action);\n\t\t}\n\t}\n\tclick() {\n\t\treturn async (event) => {\n\t\t\tconst result = await Dialog.opneConfirm(\"Let's start!\", \"delete exports?\");\n\t\t\tif (result) {\n\t\t\t\tconst action = ExportActionCreator.creatRemoveAction();\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\"; //\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { ExportReducer } from '../../../reduxy/reducer/exportReducer'\nimport { ExportAllButton } from './exportAllButton'\nimport { ExportImgZipButton } from \"./exportImgZipButton\";\nimport { ExportPdfButton } from './exportPdfButton'\nimport { DownloadLastExportZipButton } from './downloadLastExportZipButton'\nimport { DownloadLastExportPdfButton } from './downloadLastExportPdfButton'\nimport { DownloadUploadedImgZipButton } from './downloadUploadedImgZipButton'\nimport { DownloadFullBackupZipButton } from './downloadFullBackupZipButton'\nimport { DeleteExportOneButton } from './deleteExportOneButton'\nexport class ExportButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ExportButton\", \"ExportButtonFrame\");\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.exportAllButton = new ExportAllButton();\n\t\tthis.exportImgZipButton = new ExportImgZipButton();\n\t\tthis.exportPdfButton = new ExportPdfButton();\n\t\tthis.downloadLastExportZipButton = new DownloadLastExportZipButton();\n\t\tthis.downloadLastExportPdfButton = new DownloadLastExportPdfButton();\n\t\tthis.downloadUploadedImgZipButton = new DownloadUploadedImgZipButton();\n\t\tthis.downloadFullBackupZipButton = new DownloadFullBackupZipButton();\n\t\tthis.deleteExportOneButton = new DeleteExportOneButton();\n\t}\n\tasync onAfterAttach(store, data) {\n\t\tawait this.exportAllButton.attach(this);\n\t\tawait this.exportImgZipButton.attach(this);\n\t\tawait this.exportPdfButton.attach(this);\n\t\tawait this.downloadLastExportZipButton.attach(this);\n\t\tawait this.downloadLastExportPdfButton.attach(this);\n\t\tawait this.downloadUploadedImgZipButton.attach(this);\n\t\tawait this.downloadFullBackupZipButton.attach(this);\n\t\tawait this.deleteExportOneButton.attach(this);\n\t\tExportReducer.register();\n\t\tconst action = ExportActionCreator.creatLoadAction(this);\n\t\tawait this.dispatch(action);\n\t}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\t//alert(\"OK\");\n\t\t}\n\t}\n\n\trender(store, actionData) {\n\t\treturn div(\"\", [\"ExportButtons\"], [\n\t\t\tdiv(this.exportAllButton.id),\n\t\t\tdiv(this.exportImgZipButton.id),\n\t\t\tdiv(this.exportPdfButton.id),\n\t\t\tdiv(this.downloadLastExportZipButton.id),\n\t\t\tdiv(this.downloadLastExportPdfButton.id),\n\t\t\tdiv(this.deleteExportOneButton.id),\n\t\t\tdiv(this.downloadUploadedImgZipButton.id),\n\t\t\tdiv(this.downloadFullBackupZipButton.id)\n\t\t]);\n\t}\n}","\nimport {\n  BaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {dpis, ExportOrders} from \"../../../settings/exportSettings\";\nimport {ExportActionCreator} from '../../../reduxy/action/exportActionCreator'\nexport class ExportOrderRow extends BaseView {\n  constructor(parent) {\n    super(\"ExportOrderRow\", \"ExportOrderRow\");\n    this.parent = parent;\n    this.selectOrder = null;\n    this.ordersMap = {};\n    this.orderOptions={isGrayscale:false,dpiName:\"dpi72\",isMaxSize10M:false,isLanczose:false}\n    this.activeClassName = \"active\";\n  }\n\n  render(store, actionData) {\n    const name = div(\"\", [\"TitleName\"], \"TitleName\");\n    return div(\"\", [this.id + \"Frame\"], [name, div(this.imageAreaID, [\"ImageDetailA\"], this.id + \"aaaaa\")]);\n  }\n  async onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {}\n  getCurrentSelected(){\n    return this.ordersMap[this.selectOrder];\n  }\n  getSelectOrder(name){\n    return (event)=>{\n      if(name){\n        this.selectOrder = name;\n      }\n      const action = ExportActionCreator.createSelectOrderAction(this.parent,{\n        selectOrder:this.ordersMap[this.selectOrder],\n        selectOptions:this.parent.getCurrentOptions()\n      });\n      this.dispatch(action);\n      event.stopPropagation();\n      return false;\n    }\n  }\n\n  buildRows(exportOrderData){\n    const retList = [];\n    const ordersList = ExportOrders;\n    const selectOrder = exportOrderData && exportOrderData.selectOrder? exportOrderData.selectOrder:null;\n    for(let order of ordersList){\n      const name=order.orderName;\n      const activeClass = selectOrder && selectOrder.orderName && order.orderName===selectOrder.orderName? this.activeClassName:\"\";\n      this.ordersMap[name]= order;\n      const label = span(\"\",[name+\"Text\"],[name]);\n      const id = \"ExportOrderRow-\"+name;\n      const row = div(id,[name,activeClass],{\n        on:{click:this.getSelectOrder(name)}\n      },[label]);\n      retList.push(row);\n    }\n    return retList;\n  }\n}\n","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\tcreateSelectVnode,\n\tspan,\n\tlabel,\n\tcheckbox\n} from \"../../../util/reactive/base/vtags\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { ExportOrderRow } from './exportOrderRow'\nimport { dpis, ExportOrders } from \"../../../settings/exportSettings\";\nexport class ExportOrderList extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ExportOrdrList\", \"ExportOrdrList\");\n\t\tthis.exportOrderRow = new ExportOrderRow(this);\n\t\tthis.storeSelectedOrderKey = ExportActionCreator.getStoreSelectedOrderKey();\n\t\tthis.listFrameId = this.id + \"ListFrame\";\n\t\tthis.listId = this.id + \"List\";\n\t\tthis.checkboxIsGrascale = \"checkboxIsGrascaleAt\" + this.Id;\n\t\tthis.selectBoxDpiName = \"selectBoxDpiNameAt\" + this.Id;\n\t\tthis.checkboxIsMaxSize10M = \"checkboxIsMaxSize10MAt\" + this.Id;\n\t\tthis.checkboxIsLanczose = \"checkboxIsLanczoseAt\" + this.Id;\n\t\tthis.checkboxIsSaddleStitchingOrder = \"checkboxIsSaddleStitchingOrder\" + this.Id;\n\t}\n\n\trender(store, actionData) {\n\t\tconst inputFrameClass = \"ExportOrdrs\";\n\t\tconst name = div(\"\", [inputFrameClass], \"Export Orders List\");\n\t\t////\n\t\tconst inputClass = \"ExportOrdersOptions\";\n\t\tconst checkboxIsGrascale = label(\"\", [inputClass], [checkbox(this.checkboxIsGrascale, [\"\"], {\n\t\t\ton: { change: this.exportOrderRow.getSelectOrder() }\n\t\t}, \"\"), \"isGrayscale?\"]);\n\t\tconst dpiList = {};\n\t\tlet firstKey = \"\";\n\t\tfor (let dpiName in dpis) {\n\t\t\tfirstKey = dpis[dpiName];\n\t\t\tbreak;\n\t\t}\n\n\t\tconst selectBoxDpiName = label(\"\", [inputClass], [\" \", createSelectVnode(this.selectBoxDpiName, [], \"\", dpis, dpiList[firstKey], {\n\t\t\tchange: this.exportOrderRow.getSelectOrder()\n\t\t}), \"dpi\"]);\n\t\tconst checkboxIsMaxSize10M = label(\"\", [inputClass], [checkbox(this.checkboxIsMaxSize10M, [\"\"], {\n\t\t\ton: { change: this.exportOrderRow.getSelectOrder() }\n\t\t}, \"\"), \"isMaxSize10MB/Paper?\"]);\n\t\tconst checkboxIsLanczose = label(\"\", [inputClass], [checkbox(this.checkboxIsLanczose, [\"\"], {\n\t\t\ton: { change: this.exportOrderRow.getSelectOrder() }\n\t\t}, \"\"), \"isLanczose Or ByCubic?\"]);\n\t\tconst checkboxIsSaddleStitchingOrder = label(\"\", [inputClass], [checkbox(this.checkboxIsSaddleStitchingOrder, [\"\"], {\n\t\t\ton: { change: this.exportOrderRow.getSelectOrder() }\n\t\t}, \"\"), \"is Saddle Stitching Order At PDF?\"]);\n\t\tconst exportOptions = div(\"\", [inputFrameClass], [\"Options:\", selectBoxDpiName, checkboxIsGrascale, checkboxIsMaxSize10M, checkboxIsLanczose, checkboxIsSaddleStitchingOrder]);\n\t\t////\n\t\tconst list = div(this.listFrameId, [inputFrameClass], this.buildRows());\n\t\treturn div(this.listId, [this.id + \"Frame\"], [name, list, exportOptions]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeSelectedOrderKey]) {\n\t\t\tconst inputFrameClass = \"ExportOrdrs\";\n\t\t\tconst selectOrderData = store[this.storeSelectedOrderKey];\n\t\t\tconst list = div(this.listFrameId, [inputFrameClass], this.buildRows(selectOrderData));\n\t\t\tthis.prePatch(\"#\" + this.listFrameId, list);\n\t\t}\n\t}\n\tgetCurrentOptions() {\n\t\tconst result = {\n\t\t\tisGrayscale: document.getElementById(this.checkboxIsGrascale)\n\t\t\t\t.checked,\n\t\t\tdpiName: document.getElementById(this.selectBoxDpiName)\n\t\t\t\t.value,\n\t\t\tisMaxSize10M: document.getElementById(this.checkboxIsMaxSize10M)\n\t\t\t\t.checked,\n\t\t\tisLanczose: document.getElementById(this.checkboxIsLanczose)\n\t\t\t\t.checked,\n\t\t\tisSaddleStitchingOrder: document.getElementById(this.checkboxIsSaddleStitchingOrder)\n\t\t\t\t.checked\n\t\t};\n\t\treturn result;\n\n\t}\n\n\tbuildRows(selectOrderData = null) {\n\t\treturn this.exportOrderRow.buildRows(selectOrderData)\n\t}\n}","import vu from \"../../util/viewUtil\";\nimport {\n  BaseView\n} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {\n  ExportButton\n} from '../parts/export/exportButton'\nimport {\n  ExportOrderList\n} from '../parts/export/exportOrderList'\n\nimport {\n  ExportActionCreator\n} from '../../reduxy/action/exportActionCreator'\nexport class ExportArea extends BaseView {\n  constructor() {\n    super(\"ExportArea\", \"ExportArea\");\n    this.text = \"ExportArea\";\n    this.exportButton = new ExportButton();\n    this.exportOrderList = new ExportOrderList();\n  }\n\n  async onAfterAttach(store, data) {\n    await this.exportOrderList.attach(this);\n    await this.exportButton.attach(this);\n    const action = ExportActionCreator.creatLoadAction();\n    await this.dispatch(action);\n  }\n  render() {\n    return div(this.id, [\"ExportArea\"], [\n      div('', ['ExportAreaTitle'], this.text),\n      div(this.exportOrderList.id),\n      div(this.exportButton.id)\n    ]);\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {\n\tBaseView\n} from \"../../util/reactive/baseView\";\nimport bc from \"../../util/binaryConverter\";\n\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../util/reactive/base/vtags\";\nimport {\n\tImageActionCreator\n} from '../../reduxy/action/imageActionCreator'\nconst PLANE = 'PLANE';\nconst WINDOW = 'WINDOW';\nconst DOUBLE = 'DOUBLE';\nconst HELF = 'HELF';\nconst QUAD = 'QUAD';\nconst FULL = 'FULL';\nexport class ImageDetail extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ImageDetail\", \"ImageDetail\");\n\t\tthis.imageAreaID = this.id + \"child\";\n\t\tthis.isOnScroll = false;\n\t\tthis.startX = 0;\n\t\tthis.startY = 0;\n\t\tthis.previewMode = PLANE;\n\t\tthis.pk = null;\n\t}\n\trender(store, actionData) {\n\t\tconst toNativeSizeButton = div(this.id + \"toNativeSizeButton\", [\"toNativeSizeButton\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.toNativeSize()\n\t\t\t}\n\t\t}, \"1:1\");\n\t\tconst toWindowSizeButton = div(this.id + \"toWindowSizeButton\", [\"toWindowSizeButton\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.toWindowSize()\n\t\t\t}\n\t\t}, \"W\");\n\t\tconst toDoubleWindowSizeButton = div(this.id + \"toDoubleWindowSizeButton\", [\"toDoubleWindowSizeButton\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.toDoubleWindowSize()\n\t\t\t}\n\t\t}, \"Wx2\");\n\t\tconst toQuadWindowSizeButton = div(this.id + \"toQuadWindowSizeButton\", [\"toQuadWindowSizeButton\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.toQuadWindowSize()\n\t\t\t}\n\t\t}, \"Wx4\");\n\t\tconst toHelfWindowSizeButton = div(this.id + \"toHelfWindowSizeButton\", [\"toHelfWindowSizeButton\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.toHelfWindowSize()\n\t\t\t}\n\t\t}, \"W/2\");\n\t\tconst toFullWindowSizeButton = div(this.id + \"toFullWindowSizeButton\", [\"toFullWindowSizeButton\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.toHelfWindowSize()\n\t\t\t}\n\t\t}, \"FW\");\n\t\tconst title = span(\"\", [\"ImageDetailTitleText\"], \"ImageDetailTitle\");\n\t\tconst titleBar = div(\"\", [\"ImageDetailTitle\"], [title, toNativeSizeButton, toWindowSizeButton, toDoubleWindowSizeButton, toQuadWindowSizeButton, toHelfWindowSizeButton, toFullWindowSizeButton]);\n\t\treturn div(\"\", [\"\"], [titleBar, div(this.imageAreaID, [\"ImageDetailA\"], \"No Image Selected\")]);\n\t}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store.imagesDetailData) {\n\t\t\tawait this.showImage(store.imagesDetailData);\n\t\t\tthis.startX = 0;\n\t\t\tthis.startY = 0;\n\t\t\tthis.offsetX = 0;\n\t\t\tthis.offsetY = 0;\n\t\t\tthis.isOnScroll = false;\n\t\t}\n\t}\n\tasync onAfterAttach(store, data) {\n\t\tthis.setSelectStyle(\"toNativeSizeButton\", PLANE)\n\t\tthis.setSelectStyle(\"toWindowSizeButton\", WINDOW)\n\t\tthis.setSelectStyle(\"toDoubleWindowSizeButton\", DOUBLE)\n\t\tthis.setSelectStyle(\"toQuadWindowSizeButton\", QUAD)\n\t\tthis.setSelectStyle(\"toHelfWindowSizeButton\", HELF)\n\t\tthis.setSelectStyle(\"toFullWindowSizeButton\", FULL)\n\t}\n\tasync showImage(imageData) {\n\t\tconst {\n\t\t\timageEntity,\n\t\t\tbinaryEntity,\n\t\t\timageText\n\t\t} = imageData;\n\t\tconst pk = imageEntity.getPk();\n\t\tif (this.pk !== pk) {\n\t\t\tthis.previewMode = PLANE;\n\t\t}\n\t\tthis.setSelectStyle(\"toNativeSizeButton\", PLANE)\n\t\tthis.setSelectStyle(\"toWindowSizeButton\", WINDOW)\n\t\tthis.setSelectStyle(\"toDoubleWindowSizeButton\", DOUBLE)\n\t\tthis.setSelectStyle(\"toQuadWindowSizeButton\", QUAD)\n\t\tthis.setSelectStyle(\"toHelfWindowSizeButton\", HELF)\n\t\tthis.setSelectStyle(\"toFullWindowSizeButton\", FULL)\n\t\tthis.pk = pk;\n\t\tconst dataUri = bc.arrayBuffer2DataURI(binaryEntity._ab);\n\t\tconst imgVnode = img(pk + \"_image\", imageEntity.name, imageEntity.name, dataUri, {});\n\t\tconst textVnode = span(pk + \"_text\", [\"thumbnail_text\"], imageData.imageText);\n\t\tconst image = [\n\t\t\tdiv(\"\", [\"\"], [imgVnode]),\n\t\t\tdiv(\"\", [textVnode])\n\t\t]\n\t\tthis.prePatch(\"#\" + this.imageAreaID, div(this.imageAreaID, [\"image_detail_block\", this.previewMode], {\n\t\t\ton: {\n\t\t\t\tmousedown: this.onMouseOn(),\n\t\t\t\tmousemove: this.onMouseMove(),\n\t\t\t\tclick: this.onClick()\n\t\t\t},\n\t\t\tstyle: {\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0\n\t\t\t}\n\t\t}, image));\n\t}\n\tonClick() {\n\t\treturn (event) => {\n\t\t\talert(\"click\");\n\t\t\tthis.toNativeSize()\n\t\t}\n\t}\n\tsetSelectStyle(id, className) {\n\t\tconst active = \"active\";\n\t\tconst button = document.getElementById(this.id + id);\n\t\tif (this.previewMode === className) {\n\t\t\t// alert(this.previewMode);\n\t\t\tbutton.classList.add(active);\n\t\t} else {\n\t\t\tbutton.classList.remove(active);\n\t\t}\n\t}\n\ttoNativeSize() {\n\t\treturn (event) => {\n\t\t\t// alert(\"toNativeSize this.pk):\" + this.pk);\n\t\t\tthis.previewMode = PLANE;\n\t\t\tif (this.pk) {\n\t\t\t\tconst action = ImageActionCreator.creatDetailAction(this, {\n\t\t\t\t\timagePK: this.pk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\ttoWindowSize() {\n\t\treturn (event) => {\n\t\t\t// alert(\"toWindowSize this.pk):\" + this.pk);\n\t\t\tthis.previewMode = WINDOW;\n\t\t\tif (this.pk) {\n\t\t\t\tconst action = ImageActionCreator.creatDetailAction(this, {\n\t\t\t\t\timagePK: this.pk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\ttoDoubleWindowSize() {\n\t\treturn (event) => {\n\t\t\t// alert(\"toDoubleWindowSize this.pk):\" + this.pk);\n\t\t\tthis.previewMode = DOUBLE;\n\t\t\tif (this.pk) {\n\t\t\t\tconst action = ImageActionCreator.creatDetailAction(this, {\n\t\t\t\t\timagePK: this.pk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\ttoHelfWindowSize() {\n\t\treturn (event) => {\n\t\t\t// alert(\"toHelfWindowSize this.pk):\" + this.pk);\n\t\t\tthis.previewMode = HELF;\n\t\t\tif (this.pk) {\n\t\t\t\tconst action = ImageActionCreator.creatDetailAction(this, {\n\t\t\t\t\timagePK: this.pk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\ttoQuadWindowSize() {\n\t\treturn (event) => {\n\t\t\t// alert(\"toHelfWindowSize this.pk):\" + this.pk);\n\t\t\tthis.previewMode = QUAD;\n\t\t\tif (this.pk) {\n\t\t\t\tconst action = ImageActionCreator.creatDetailAction(this, {\n\t\t\t\t\timagePK: this.pk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\ttoFullWindowSize() {\n\t\treturn (event) => {\n\t\t\t// alert(\"toHelfWindowSize this.pk):\" + this.pk);\n\t\t\tthis.previewMode = FULL;\n\t\t\tif (this.pk) {\n\t\t\t\tconst action = ImageActionCreator.creatDetailAction(this, {\n\t\t\t\t\timagePK: this.pk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\tonMouseOn() {\n\t\treturn (event) => {\n\t\t\t// alert(\"onMouseOn\");\n\t\t\tthis.startX = this.offsetX ?\n\t\t\t\tevent.clientX + this.offsetX * 0 - this.offsetX１ :\n\t\t\t\tevent.clientX;\n\t\t\tthis.startY = this.offsetY ?\n\t\t\t\tevent.clientY + this.offsetY * 0 - this.offsetY１ :\n\t\t\t\tevent.clientY;\n\t\t\tconst elm = event.target;\n\t\t\tthis.isOnScroll = this.isOnScroll ? false : true;\n\t\t}\n\t}\n\tonMouseOff() {\n\t\treturn (event) => {\n\t\t\t// alert(\"onMouseOff\");\n\t\t\tconst elm = event.target;\n\t\t\tthis.isOnScroll = false;\n\t\t}\n\t}\n\tonMouseMove() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (this.isOnScroll) {\n\t\t\t\tconst currentX = event.clientX;\n\t\t\t\tconst currentY = event.clientY;\n\t\t\t\tconst offsetX = currentX - this.startX;\n\t\t\t\tconst offsetY = currentY - this.startY;\n\t\t\t\tconst targetNode = elm.parentNode.parentNode;\n\t\t\t\t// console.log(\"elm.tagName:\" + elm.tagName + \"/(offsetX:\" + offsetX + \"/offsetY:\" + offsetY\n\t\t\t\t// + \")/(currentX:\" + currentX + \"/currentY:\" + currentY\n\t\t\t\t// + \")/(this.startX:\" + this.startX + \"/this.startY:\" + this.startY);\n\t\t\t\ttargetNode.style.top = offsetY + \"px\";\n\t\t\t\ttargetNode.style.left = offsetX + \"px\";\n\t\t\t\tthis.offsetX = this.startX;\n\t\t\t\tthis.offsetY = this.startY;\n\t\t\t\tthis.offsetX１ = offsetX;\n\t\t\t\tthis.offsetY１ = offsetY;\n\t\t\t}\n\t\t}\n\t}\n}","import vu from \"../../util/viewUtil\";\nimport bc from \"../../util/binaryConverter\";\nimport { BaseView } from \"../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../util/reactive/base/vtags\";\nimport { PageActionCreator } from '../../reduxy/action/pageActionCreator'\nimport { ImageActionCreator } from '../../reduxy/action/imageActionCreator'\nexport class PageImage extends BaseView {\n\tconstructor(parent, listing, draggableArea) {\n\t\tsuper(\"PageImage\" + listing, \"PageImage\");\n\t\tthis.ip = this.ms.ip;\n\t\tthis.parent = parent;\n\t\tthis.draggableArea = draggableArea;\n\t\tthis.listing = listing;\n\t\tthis.thumbnail = null;\n\t\tthis.thumbnail_block = \"thumbnail_block\";\n\t\tthis.draggableArea.toDropPage = (elm) => { this.doDrop(elm) };\n\t}\n\trender() {\n\t\tthis.button = div(this.id + \"child\", \"PageImageA\", this.id);\n\t\treturn div([this.button]);\n\t}\n\tasync setPageData(pageData, imageData) {\n\t\tthis.pageData = pageData;\n\t\tthis.imageData = imageData;\n\t\tif (!pageData) {\n\t\t\treturn;\n\t\t}\n\t\tthis.pk = pageData.getPk();\n\t\tconst binaryEntity = this.imageData ?\n\t\t\tthis.imageData.binaryEntity :\n\t\t\tnull;\n\t\tif (binaryEntity) {\n\t\t\tconst data = {\n\t\t\t\tname: \"page_\" + this.listing,\n\t\t\t\tab: binaryEntity._ab,\n\t\t\t\ttype: binaryEntity.type\n\t\t\t}\n\t\t\tthis.thumbnail = await this.ip.createImageNodeByData(data)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tthrow e\n\t\t\t\t});\n\t\t\t// console.log(this.thumbnail)\n\t\t} else {\n\t\t\tthis.thumbnail = null;\n\t\t}\n\t}\n\trender(store, actionData) {\n\t\treturn div('', \"\");\n\t}\n\tremove(pk) {\n\t\treturn (event) => {\n\t\t\tif (window.confirm(\"delete ok?\")) {\n\t\t\t\tconst action = PageActionCreator.creatRemoveAction(this, { imagePKforDelete: pk });\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\thandleDragStart(dragImageSrc) {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tthis.parent.dropElm = null;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n\t\t\tthis.draggableArea.nowSelectedElm = elm;\n\t\t\tevent.dataTransfer.effectAllowed = 'move';\n\t\t\tevent.dataTransfer.setData('text/html', elm.innerHTML);\n\t\t\tlet dragIcon = document.createElement('img');\n\t\t\tdragIcon.src = dragImageSrc;\n\t\t\tdragIcon.width = 100;\n\t\t\tevent.dataTransfer.setDragImage(dragIcon, -10, -10);\n\t\t}\n\t}\n\thandleDragOver() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tevent.preventDefault(); // Necessary. Allows us to drop.\n\t\t\tevent.dataTransfer.dropEffect = 'move'; // See the section on the DataTransfer object.\n\t\t\treturn false;\n\t\t}\n\t}\n\thandleDragEnter() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.classList.add('over');\n\t\t}\n\t}\n\thandleDragLeave() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.classList.remove('over'); // this / event.target is previous target element.\n\t\t}\n\t}\n\thandleDrop(event) {\n\t\treturn (event) => {\n\t\t\tevent.stopPropagation(); // Stops some browsers from redirecting.\n\t\t\tevent.preventDefault();\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.doDrop(elm);\n\t\t\treturn false;\n\t\t}\n\t}\n\tdoDrop(elm) {\n\t\tthis.parent.dropElm = elm;\n\t\tconst nowSelectedElm = this.draggableArea.nowSelectedElm;\n\t\tif (nowSelectedElm && nowSelectedElm.dataset.pk && nowSelectedElm !== elm) {\n\t\t\tconst selectedPk = nowSelectedElm.dataset.pk;\n\t\t\tconst targetPk = elm.dataset.pk;\n\t\t\tif (selectedPk && nowSelectedElm.dataset.is_image) {\n\t\t\t\t//console.log('sort handleDrop imagePKmove:' + nowSelectedElm+ \"/elm.dataset.pk:\" + elm.dataset.pk+\"/targetPk:\"+targetPk)\n\t\t\t\tconst action = PageActionCreator.creatAddPageAction(this, {\n\t\t\t\t\timagePk: selectedPk,\n\t\t\t\t\tpagePk: targetPk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t} else if (selectedPk && nowSelectedElm.dataset.is_page) {\n\t\t\t\t//console.log('sort handleDrop imagePKmove:' + nowSelectedElm + \"/elm.dataset.pk:\" + elm.dataset.pk+\"/targetPk:\"+targetPk)\n\t\t\t\tconst action = PageActionCreator.creatSortPagesAction(this, {\n\t\t\t\t\tformPk: selectedPk,\n\t\t\t\t\ttoPk: targetPk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t\tvu.clearSideElmClass(elm, 'over');\n\t}\n\thandleDragEnd(event) {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tconst targetPk = elm.dataset.pk;\n\t\t\t//console.log('sort handleDrop imagePKmove:' + this.draggableArea.nowSelectedElm + \"/elm.dataset.pk:\" + elm.dataset.pk + \"/targetPk:\" + targetPk)\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.draggableArea.nowSelectedElm = null;\n\t\t\tvu.clearSideElmClass(elm, 'over');\n\t\t\tif (this.draggableArea.cancelPageArea !== null) {\n\t\t\t\tconst action = PageActionCreator.creatRemovePageAction(this, {\n\t\t\t\t\tpagePk: targetPk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\thandleTouchStart(dragImageSrc) {\n\t\treturn (event) => {\n\t\t\t//console.log(\"handleTouchStart PP\");\n\t\t\tconst elm = event.target;\n\t\t\tthis.parent.dropElm = null;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\twindow.blockMenuHeaderScroll = true;\n\t\t\telm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n\t\t\tthis.draggableArea.nowSelectedElm = elm;\n\t\t\t// event.dataTransfer.effectAllowed = 'move';\n\t\t\t// // event.dataTransfer.setData('text/html', elm.innerHTML);\n\t\t\t// let dragIcon = document.createElement('img');\n\t\t\t// dragIcon.src = dragImageSrc;\n\t\t\t// dragIcon.width = 100;\n\t\t\t// event.dataTransfer.setDragImage(dragIcon, -10, -10);\n\t\t}\n\t}\n\thandleTouchMove() {\n\t\treturn (event) => {\n\t\t\t//console.log(\"handleTouchMove PP\");\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst pointedElm = vu.getCurrentPointedElm(event);\n\t\t\tif (this.pointedElm && this.pointedElm !== pointedElm) {\n\t\t\t\tvu.clearSideElmClass(this.pointedElm, 'over');\n\t\t\t}\n\t\t\tthis.pointedElm = pointedElm;\n\t\t\tif (!pointedElm.getAttribute('draggable') || pointedElm === elm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpointedElm.classList.add('over');\n\t\t}\n\t}\n\thandleTouchEnd() {\n\t\treturn (event) => {\n\t\t\twindow.blockMenuHeaderScroll = false;\n\t\t\tconst elm = event.target;\n\t\t\tconst targetPk = elm.dataset.pk;\n\t\t\t//console.log('sort handleDrop imagePKmove:' + this.draggableArea.nowSelectedElm + \"/elm.dataset.pk:\" + elm.dataset.pk + \"/targetPk:\" + targetPk)\n\t\t\tvu.clearSideElmClass(elm, 'over');\n\t\t\tconst pointedElm = this.pointedElm;\n\t\t\tif (!pointedElm || pointedElm === elm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.pointedElm = null;\n\t\t\tvu.clearSideElmClass(pointedElm, 'over');\n\t\t\tif (!pointedElm.classList || !pointedElm.classList.contains(pointedElm.thumbnail_block)) {\n\t\t\t\tif (pointedElm.id === 'thumnailsImageArea' || pointedElm.getAttribute('draggable')) {\n\t\t\t\t\tconst action = PageActionCreator.creatRemovePageAction(this, {\n\t\t\t\t\t\tpagePk: targetPk\n\t\t\t\t\t});\n\t\t\t\t\tthis.dispatch(action);\n\t\t\t\t}\n\t\t\t\tthis.doDrop(pointedElm);\n\t\t\t\tthis.draggableArea.nowSelectedElm = null;\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (!pointedElm.getAttribute('draggable')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.doDrop(pointedElm);\n\t\t\t// this.draggableArea.toDropTumnails(pointedElm);\n\t\t\tthis.draggableArea.nowSelectedElm = null;\n\t\t}\n\t}\n\tselectImage(event) {\n\t\treturn (event) => {\n\t\t\tevent.stopPropagation(); // Stops some browsers from redirecting.\n\t\t\tevent.preventDefault();\n\t\t\tconst elm = event.target;\n\t\t\t// console.log('sort selecImage imagePKmove:/elm.dataset.pk:' + elm.dataset.pk + \"/\" + this.pageData)\n\t\t\tif (this.pageData && this.pageData.baseImage) {\n\t\t\t\tconst action = ImageActionCreator.creatDetailAction(this, { imagePK: this.pageData.baseImage });\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\trenderVnode(parent) {\n\t\tconst pageEntity = this.pageData;\n\t\tif (!pageEntity) {\n\t\t\treturn div(this.id, [\"aaaaaaa\" + this.listing], \"null\" + this.listing);\n\t\t}\n\t\tconst src = this.thumbnail ?\n\t\t\tthis.thumbnail.src :\n\t\t\tnull;\n\t\tconst imageBg = !src ? {} : {\n\t\t\t\"background-image\": \"url(\" + src + \")\"\n\t\t};\n\t\t//console.log(\"★A binaryEntity 01\"+this.id+\"/src:\"+src)\n\t\t//const imgVnode = img(this.pk + \"_page\", [\"\"], \"\", src, {});\n\t\tconst enable = 'enable'\n\t\tconst disable = 'disable'\n\t\tconst pageBlock = div(\"\", [\"page_block\"], []);\n\t\tconst checkNoCropping = div(\"\", [\"checkNoCropping\", (pageEntity.isNoCropping ? enable : disable)], \"isNoCropping\");\n\t\tconst checkForceColor = div(\"\", [\"checkForceColor\", (pageEntity.isForceColor ? enable : disable)], \"isForceColor\");\n\t\tconst optionsBlock = div(\"\", [\"options_block\"], [checkForceColor, checkNoCropping]);\n\t\tconst rowVnode = div(this.id, [\"thumbnail_block\"], {\n\t\t\ton: {\n\t\t\t\tdragstart: this.handleDragStart(src),\n\t\t\t\tdragover: this.handleDragOver(),\n\t\t\t\tdragenter: this.handleDragEnter(),\n\t\t\t\tdragleave: this.handleDragLeave(),\n\t\t\t\tdrop: this.handleDrop(),\n\t\t\t\tdragend: this.handleDragEnd(),\n\t\t\t\tclick: this.selectImage(),\n\t\t\t\ttouchstart: this.handleTouchStart(),\n\t\t\t\ttouchmove: this.handleTouchMove(),\n\t\t\t\ttouchend: this.handleTouchEnd()\n\t\t\t},\n\t\t\tdataset: {\n\t\t\t\tpk: this.pk,\n\t\t\t\tis_page: true\n\t\t\t},\n\t\t\tstyle: imageBg,\n\t\t\tprops: {\n\t\t\t\t\"draggable\": \"true\"\n\t\t\t}\n\t\t}, [pageBlock, optionsBlock]);\n\t\tparent.prePatch(\"#\" + this.id, rowVnode);\n\t\treturn rowVnode;\n\t}\n\tcreateVnode() {}\n}","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class PreviewActionCreator {\n  constructor() {}\n  static creatOpenAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"openPreview\", targetView, data, storeKey);\n  }\n  static creatCloseAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"closePreview\", targetView, data, storeKey);\n  }\n  static creatNextAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"nextPreview\", targetView, data, storeKey);\n  }\n  static creatBackAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"backPreview\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateOnPreview\", targetView, data, storeKey);\n  }\n  static getStorePreviewKey(){\n    return \"previewCommand\";\n  }\n  static getStoreUpdatePreviewKey(){\n    return \"previewUpdateCommand\";\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport { BaseView } from \"../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../util/reactive/base/vtags\";\nimport { SettingData } from '../../settings/exportSettings'\nimport { SettingActionCreator } from '../../reduxy/action/settingActionCreator'\nimport { PageImage } from './pageImage'\nimport { PageProcessor } from '../../reduxy/processor/pageProcessor'\nimport { ImageActionCreator } from '../../reduxy/action/imageActionCreator'\nimport { PageActionCreator } from '../../reduxy/action/pageActionCreator'\nimport { PreviewActionCreator } from '../../reduxy/action/previewActionCreator'\nexport class PageImages extends BaseView {\n\tconstructor(draggableArea) {\n\t\tsuper(\"PageImages\", \"PageImages\");\n\t\tthis.storeKey = SettingActionCreator.getStoreKey();\n\t\tthis.childId = this.id + \"child\";\n\t\tthis.thumbnails = {};\n\t\tthis.dummyClass = \"Dummy\";\n\t\tthis.pages = [];\n\t\tthis.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n\t\tthis.storePagesKey = PageActionCreator.getStorePagesKey();\n\t\tfor (let index = 0; index < 32; index++) {\n\t\t\tthis.pages.push(new PageImage(this, index, draggableArea))\n\t\t}\n\t\tthis.dropElm = null;\n\t\tthis.lastSettingOne = null;\n\t\tthis.lastPagesData = null;\n\t\tthis.lastImagesData = null;\n\t}\n\trender() {\n\t\tthis.setting = div(this.id + \"child\", [\"PageImagesA\"], this.id);\n\t\treturn div(this.id, \"PageImages\", [this.setting]);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tconst pagesData = store[this.storePagesKey];\n\t\tconst imagesData = store[this.storeImagesKey];\n\t\tconst pagesDataJson = JSON.stringify(pagesData);\n\t\tconst imagesDataJson = JSON.stringify(imagesData);\n\t\tif (store[this.storeKey]) {\n\t\t\tconst settings = store[this.storeKey];\n\t\t\tconst settingsJson = JSON.stringify(settings);\n\t\t\t// console.log(\"Pages onViewShow settingsJson:\" + settingsJson);\n\t\t\t// console.log(\"Pages onViewShow settingsJson:\" + this.lastSettingOne);\n\t\t\tif (settingsJson !== this.lastSettingOne) {\n\t\t\t\t//alert(\"imagesData:\"+imagesData+\"/pagesData:\"+pagesData);\n\t\t\t\t// alert(\"store[this.storeKey]:\"+this.lastSettingOne+\"/\"+(JSON.stringify(settings)));\n\t\t\t\t// \n\t\t\t\t// console.log(\"Pages onViewShow pagesData:\" + pagesData);\n\t\t\t\t// console.log(pagesData);\n\t\t\t\t// alert(\"Pages onViewShow\" + JSON.stringify(settings));\n\t\t\t\tconst pageFrames = this.buildPageFrames(settings);\n\t\t\t\tthis.prePatch(\"#\" + this.childId, div(this.childId, pageFrames));\n\t\t\t\tthis.lastSettingOne = settingsJson;\n\t\t\t}\n\t\t} else {\n\t\t\t// return;\n\t\t}\n\t\tif (imagesData && pagesData && (this.lastPagesData !== pagesDataJson || this.lastImagesData !== imagesDataJson)) {\n\t\t\tawait this.showPages(pagesData, imagesData);\n\t\t\tthis.lastPagesData = pagesDataJson;\n\t\t\tthis.lastImagesData = imagesDataJson;\n\t\t\t// console.log(\"Pages onViewShow\"+store[this.storeKey]);\n\t\t}\n\t}\n\taddPage(imagesPk, pagePk) {\n\t\tconst action = PageActionCreator.creatAddPageAction(this, {\n\t\t\timagePk: imagesPk,\n\t\t\tpagePk: pagePk\n\t\t});\n\t\tthis.dispatch(action);\n\t}\n\tasync showPages(pagesData, imagesData) {\n\t\tconst imageMap = {};\n\t\tfor (let imageData of imagesData) {\n\t\t\tif (!imageData) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst imageEntity = imageData.imageEntity;\n\t\t\tconst imagePk = imageEntity.getPk();\n\t\t\timageMap[imagePk] = imageData;\n\t\t}\n\t\tlet index = 0;\n\t\tfor (let pageEntity of pagesData) {\n\t\t\tconst page = this.pages[index];\n\t\t\tindex++;\n\t\t\tif (!pageEntity) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst pk = pageEntity.getPk();\n\t\t\tconst imagePk = pageEntity.baseImage;\n\t\t\tconst imageData = imageMap[imagePk];\n\t\t\t//alert(\"id:\"+imageData+\"/imagePk:\"+imagePk)\n\t\t\tawait page.setPageData(pageEntity, imageData);\n\t\t\tpage.renderVnode(this);\n\t\t}\n\t}\n\tcreatPageFrame(pageNo, dummyClass, isRight) {\n\t\tconst frameParts = [];\n\t\tif (dummyClass === this.dummyClass) {\n\t\t\treturn frameParts;\n\t\t}\n\t\tconst sideClass = \"pageFrameHeader\" + (\n\t\t\tisRight ?\n\t\t\t\"Right\" :\n\t\t\t\"Left\");\n\t\tframeParts.push(div(\"\", [\n\t\t\t\"pageFrameHeader\", sideClass\n\t\t], pageNo + \"\"))\n\t\tconst pageIndex = pageNo - 1;\n\t\tconst page = this.pages[pageIndex].renderVnode(this);\n\t\tframeParts.push(page)\n\t\treturn frameParts;\n\t}\n\tshowPreviewSingle() {\n\t\treturn (event) => {\n\t\t\t//alert(\"showPreviewSingle\");\n\t\t\tconst action = PreviewActionCreator.creatOpenAction(this, { isSingle: true });\n\t\t\tthis.dispatch(action);\n\t\t}\n\t}\n\tshowPreviewDual() {\n\t\treturn (event) => {\n\t\t\t//alert(\"showPreviewDual\");\n\t\t\tconst action = PreviewActionCreator.creatOpenAction(this, { isSingle: false });\n\t\t\tthis.dispatch(action);\n\t\t}\n\t}\n\tbuildPreviewButtons() {\n\t\tconst previewSingle = div(\"\", [\"previewCallButton\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.showPreviewSingle()\n\t\t\t}\n\t\t}, \"Preview Single\");\n\t\tconst previewDouble = div(\"\", [\"previewCallButton\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.showPreviewDual()\n\t\t\t}\n\t\t}, \"Preview Dual\");\n\t\treturn div(\"\", [\"previewFrame\"], [previewSingle, previewDouble]);\n\t}\n\tbuildPageFrames(setting) {\n\t\tconst frames = [];\n\t\tframes.push(this.buildPreviewButtons());\n\t\tconst startPage = setting.startPage;\n\t\tconst pageNum = setting.pageNum * 1; //SettingData.pageNums[setting.pageNum-1]*1;\n\t\tthis.pageNum = pageNum;\n\t\tconst pageDirection = setting.pageDirection;\n\t\tconst isPageDirectionR2L = pageDirection === \"r2l\";\n\t\tconst isPageStartR = startPage === \"r\";\n\t\tconst frameNum = Math.ceil(pageNum / 2);\n\t\tconst isOdd = (pageNum % 2 === 1);\n\t\tconst isMatchPageStartSide = pageDirection && (pageDirection.indexOf(startPage) === 0);\n\t\tconst addPageNum = isOdd ?\n\t\t\t1 :\n\t\t\tisMatchPageStartSide ?\n\t\t\t0 :\n\t\t\t1;\n\t\tconst totalPageFrame = frameNum * 1 + addPageNum * 1;\n\t\tconst dummyClass = this.dummyClass;\n\t\tconst pageClass = \"Page\";\n\t\tconst isStartFull = (isPageDirectionR2L && isPageStartR) || (!isPageDirectionR2L && !isPageStartR)\n\t\tconst leftStartDummyClass = !isPageStartR || isStartFull ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst rightStartDummyClass = isPageStartR || isStartFull ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst leftEndDummyClass = (isOdd && (!isStartFull || (isStartFull && !isPageDirectionR2L))) || (!isOdd && (!isPageDirectionR2L || isStartFull)) ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst rightEndDummyClass = (isOdd && (!isStartFull || (isStartFull && isPageDirectionR2L))) || (!isOdd && (isPageDirectionR2L || isStartFull)) ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst lastIndex = totalPageFrame - 1;\n\t\tlet pagNo = 0;\n\t\tlet pageOffset = 0;\n\t\t//console.log(\"★lastIndex:\"+lastIndex+\"/pageNum:\"+pageNum+\"/setting.pageNum:\"+setting.pageNum);\n\t\tfor (let index = 0; index < totalPageFrame; index++) {\n\t\t\tconst leftPageNo = (\n\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t1 :\n\t\t\t\t0) + pageOffset + pagNo;\n\t\t\tconst rightPageNo = (\n\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t0 :\n\t\t\t\t1) + pageOffset + pagNo;\n\t\t\tconst pagePair = [];\n\t\t\t//////////////////////////////////\n\t\t\tif (index === 0) { //LR\n\t\t\t\tconst leftPageNoFirst = isPageDirectionR2L && isStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t\t1 :\n\t\t\t\t\tisStartFull ?\n\t\t\t\t\t1 :\n\t\t\t\t\t0\n\t\t\t\tconst rightPageNoFirst = isPageDirectionR2L && isStartFull ?\n\t\t\t\t\t1 :\n\t\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t\t0 :\n\t\t\t\t\tisStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\t1\n\t\t\t\tpagePair.push(div(\"\", [\n\t\t\t\t\tpageClass, leftStartDummyClass\n\t\t\t\t], this.creatPageFrame(leftPageNoFirst, leftStartDummyClass, false), totalPageFrame + \"L\" + leftPageNoFirst + \" \" + isMatchPageStartSide));\n\t\t\t\tpagePair.push(div(\"\", [\n\t\t\t\t\tpageClass, rightStartDummyClass\n\t\t\t\t], this.creatPageFrame(rightPageNoFirst, rightStartDummyClass, true), frameNum + \"R\" + rightPageNoFirst + \" \" + isOdd));\n\t\t\t\tpageOffset = 1;\n\t\t\t\tpagNo += isStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\t1;\n\t\t\t} else if (index === lastIndex) {\n\t\t\t\tpagePair.push(div(\"\", [\n\t\t\t\t\tpageClass, leftEndDummyClass\n\t\t\t\t], this.creatPageFrame(leftPageNo, leftEndDummyClass, false), \"L\" + leftPageNo));\n\t\t\t\tpagePair.push(div(\"\", [\n\t\t\t\t\tpageClass, rightEndDummyClass\n\t\t\t\t], this.creatPageFrame(rightPageNo, rightEndDummyClass, true), \"R\" + rightPageNo));\n\t\t\t} else {\n\t\t\t\tpagePair.push(div(\"\", [pageClass], this.creatPageFrame(leftPageNo, \"\", false), \"L\" + leftPageNo));\n\t\t\t\tpagePair.push(div(\"\", [pageClass], this.creatPageFrame(rightPageNo, \"\", true), \"R\" + rightPageNo));\n\t\t\t\tpagNo += 2;\n\t\t\t}\n\t\t\tframes.push(div(\"\", [\"PageFrame\"], pagePair, \"pageFrame index:\" + index))\n\t\t}\n\t\treturn frames;\n\t}\n}","import {PreviewActionCreator} from '../action/previewActionCreator'\nimport {SettingActionCreator} from '../action/settingActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nimport {PreviewProcessor} from '../processor/previewProcessor'\nlet previewReducer = null;\nexport class PreviewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.tm = this.ms.tm;\n    this.pvp = new PreviewProcessor();\n    this.previewOpenAction = PreviewActionCreator.creatOpenAction();\n    this.previewCloseAction = PreviewActionCreator.creatCloseAction();\n    this.previewNextAction = PreviewActionCreator.creatNextAction();\n    this.previewBackAction = PreviewActionCreator.creatBackAction();\n    this.previewUpdateAction = PreviewActionCreator.creatUpdateAction();\n    this.atatch(this.previewOpenAction);\n    this.atatch(this.previewCloseAction);\n    this.atatch(this.previewNextAction);\n    this.atatch(this.previewBackAction);\n    this.atatch(this.previewUpdateAction);\n    this.storeKey = PreviewActionCreator.getStorePreviewKey();\n    this.storeUpdateKey = PreviewActionCreator.getStoreUpdatePreviewKey();\n    this.storeSettingKey = SettingActionCreator.getStoreKey();\n    this.addInitializeKey(this.storeKey);\n    this.addInitializeKey(this.storeUpdateKey);\n    this.addInitializeKey(this.storeSettingKey);\n  }\n  static register() {\n    if (!previewReducer) {\n      previewReducer = new PreviewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.previewOpenAction.type === action.type) {\n      const isSingle = action.data.isSingle;\n      const setting = await this.tm.loadSettings().catch((e) => {\n        console.log(e)\n      });\n      const list = await this.loadPreviews(setting, isSingle);\n      store[this.storeKey] = {\n        isSingle: isSingle,\n        list: list,\n        setting: setting\n      };\n    } else if (this.previewCloseAction.type === action.type) {\n      store[this.storeKey] = {\n        type: this.previewCloseAction.type\n      };\n    } else if (this.previewNextAction.type === action.type) {\n      store[this.storeKey] = {\n        isSingle: action.data.isSingle,\n        nowSetNum: action.data.pageNo,\n        type: this.previewNextAction.type\n      };\n    } else if (this.previewBackAction.type === action.type) {\n      store[this.storeKey] = {\n        isSingle: action.data.isSingle,\n        nowSetNum: action.data.pageNo,\n        type: this.previewBackAction.type\n      };\n    } else if (this.previewUpdateAction.type === action.type) {\n      store[this.storeUpdateKey] = {\n        pk: action.data.pk,\n        page:await this.pvp.updatePage(action.data.pk,action.data.key)\n      };\n    }\n    return store;\n  }\n  async loadPreviews(setting, isSingle) {\n    const binaries = await this.pvp.loadPreviews();\n    const list = await this.pvp.shapeListBySets(binaries, isSingle, setting);\n    return list;\n  }\n}\n","import vu from \"../../../util/viewUtil\";\nimport bc from \"../../../util/binaryConverter\";\nimport { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { PreviewReducer } from '../../../reduxy/reducer/previewReducer'\nimport { ImageActionCreator } from '../../../reduxy/action/imageActionCreator'\nimport { PreviewActionCreator } from '../../../reduxy/action/previewActionCreator'\nexport class Preview extends BaseView {\n\tconstructor() {\n\t\tsuper(\"Preview\", [\"Preview\", BaseView.ModalWindowClass()], true);\n\t\tthis.storeKey = PreviewActionCreator.getStorePreviewKey();\n\t\tthis.storeUpdateKey = PreviewActionCreator.getStoreUpdatePreviewKey();\n\t\tthis.previewOpenAction = PreviewActionCreator.creatOpenAction();\n\t\tthis.previewCloseAction = PreviewActionCreator.creatCloseAction();\n\t\tthis.previewNextAction = PreviewActionCreator.creatNextAction();\n\t\tthis.previewBackAction = PreviewActionCreator.creatBackAction();\n\t\tthis.list = [];\n\t\tthis.currentSetNum = 0;\n\t\tthis.isSingle = true;\n\t\tthis.classNameRight = \"previeRight\";\n\t\tthis.classNameLeft = \"previeLeft\";\n\t\tthis.dummyClassName = \"dummy\";\n\t\tthis.closeActionType = this.previewCloseAction.type;\n\t}\n\tonAfterAttach(store, data) {\n\t\tPreviewReducer.register();\n\t}\n\trender() {\n\t\tconst viewFrame = div('', ['previewFrame', BaseView.ModalWindowClass()], [\n\t\t\tdiv('', ['previewLeft'], \"<\"),\n\t\t\tdiv('', ['previewFrameA'], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: \"100%\"\n\t\t\t\t}\n\t\t\t}),\n\t\t\tdiv('', ['previewRight'], \">\")\n\t\t])\n\t\treturn div(this.id, [\"Preview\"], {\n\t\t\tstyle: {\n\t\t\t\tdisplay: \"none\"\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tclick: this.beClose()\n\t\t\t}\n\t\t}, [viewFrame]);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tconst data = store[this.storeKey];\n\t\tconst dataUpdate = store[this.storeUpdateKey];\n\t\tif (dataUpdate && this.list) {\n\t\t\tconst { page, pk } = dataUpdate;\n\t\t\tfor (let index in this.list) {\n\t\t\t\tconst pageData = this.list[index];\n\t\t\t\tif (Array.isArray(pageData)) {\n\t\t\t\t\tconst one = pageData[0];\n\t\t\t\t\tif (one.parentPk === pk) {\n\t\t\t\t\t\tone.parent = page;\n\t\t\t\t\t\tthis.showPreview(this.list, this.isSingle, this.pageNo, this.isR2L);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst two = pageData[1];\n\t\t\t\t\tif (two.parentPk === pk) {\n\t\t\t\t\t\ttwo.parent = page;\n\t\t\t\t\t\tthis.showPreview(this.list, this.isSingle, this.pageNo, this.isR2L);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (pageData.parentPk === pk) {\n\t\t\t\t\t\tpageData.parent = page;\n\t\t\t\t\t\tthis.showPreview(this.list, this.isSingle, this.pageNo, this.isR2L);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\tif (data) {\n\t\t\tconst { isSingle, nowSetNum, list, type, setting } = data;\n\t\t\tif (isSingle !== undefined) {\n\t\t\t\tthis.isSingle = isSingle;\n\t\t\t}\n\t\t\tif (setting) {\n\t\t\t\tthis.setting = setting;\n\t\t\t}\n\t\t\tif (list) {\n\t\t\t\tthis.list = list;\n\t\t\t} else if (type === this.previewCloseAction.type) {\n\t\t\t\tthis.list = null;\n\t\t\t\t// alert(\"onViewShow beClose\");\n\t\t\t\tthis.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.currentVnode.elm.style.display = 'block';\n\t\t\tconst pageSetCount = this.list.length;\n\t\t\tthis.isR2L = this.setting.pageDirection === \"r2l\";\n\t\t\t// console.log(this.list)\n\t\t\t// alert(this.list+\"/isR2L:\"+isR2L);\n\t\t\t// alert(\"list:\"+this.list+\"/isSingle:\"+isSingle);\n\t\t\tif (list) {\n\t\t\t\tconst pageNo = 1;\n\t\t\t\tthis.pageNo = pageNo;\n\t\t\t\tthis.showPreview(this.list, isSingle, this.pageNo, this.isR2L);\n\t\t\t} else if (this.previewNextAction.type === type) {\n\t\t\t\tif (pageSetCount > nowSetNum) {\n\t\t\t\t\tconst pageNo = nowSetNum * 1 + 1;\n\t\t\t\t\tthis.pageNo = pageNo;\n\t\t\t\t\tthis.showPreview(this.list, isSingle, this.pageNo, this.isR2L);\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else if (this.previewBackAction.type === type) {\n\t\t\t\tif (nowSetNum > 1) {\n\t\t\t\t\tconst pageNo = nowSetNum * 1 - 1;\n\t\t\t\t\tthis.pageNo = pageNo;\n\t\t\t\t\tthis.showPreview(this.list, isSingle, this.pageNo, this.isR2L);\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//console.log(\"Preview onViewShow\");\n\t\t}\n\t}\n\tshowPreview(list, isSingle, pageNo, isR2L) {\n\t\t// console.warn(\"showPreview isR2L:\" + isR2L);\n\t\tconst pageSet = list[pageNo - 1];\n\t\tlet mainView = null;\n\t\tconst leftText = isR2L ?\n\t\t\t\"Next\" :\n\t\t\t\"Back\";\n\t\tconst rightText = isR2L ?\n\t\t\t\"Back\" :\n\t\t\t\"Next\";\n\t\tconst left = div('', [\n\t\t\t'previewLeft', \"button\"\n\t\t], {\n\t\t\ton: {\n\t\t\t\tclick: this.goNextOrBack(false)\n\t\t\t}\n\t\t}, [\n\t\t\tspan('', [\n\t\t\t\t\"dummy\", \"button\", \"symbol\"\n\t\t\t], \"\"),\n\t\t\tspan('', [\n\t\t\t\tleftText, \"button\", \"symbol\"\n\t\t\t], \"<\"),\n\t\t\tspan('', [\n\t\t\t\tleftText, \"button\", \"text\"\n\t\t\t], leftText)\n\t\t]);\n\t\tconst right = div('', [\n\t\t\t'previewRight', \"button\"\n\t\t], {\n\t\t\ton: {\n\t\t\t\tclick: this.goNextOrBack(true)\n\t\t\t}\n\t\t}, [\n\t\t\tspan('', [\n\t\t\t\t\"close\", \"button\", \"symbol\"\n\t\t\t], { on: { click: this.beClose() } }, \"X\"),\n\t\t\tspan('', [\n\t\t\t\trightText, \"button\", \"symbol\"\n\t\t\t], \">\"),\n\t\t\tspan('', [\n\t\t\t\trightText, \"button\", \"text\"\n\t\t\t], rightText)\n\t\t]);\n\t\tif (isSingle) {\n\t\t\t// console.log(pageSet)\n\t\t\t// alert(pageSet+\"/pageNo:\"+pageNo);\n\t\t\tconst imgVnode = this.buildImageArea(pageSet, pageNo, null);\n\t\t\t//alert(\"isSingle:\"+isSingle+\"/pageNo:\"+pageNo+\"/dataUri:\"+dataUri);\n\t\t\tmainView = div('', ['preview_single'], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: \"100%\"\n\t\t\t\t},\n\t\t\t\ton: {\n\t\t\t\t\tclick: this.doNothing()\n\t\t\t\t}\n\t\t\t}, [imgVnode]);\n\t\t} else {\n\t\t\t// console.log(list);\n\t\t\t// alert(\"AAAlist:\"+list+\"/isSingle:\"+isSingle);\n\t\t\tconst lNo = (pageNo - 1) * 2 + (\n\t\t\t\tisR2L ?\n\t\t\t\t1 :\n\t\t\t\t0);\n\t\t\tconst rNo = (pageNo - 1) * 2 + (\n\t\t\t\tisR2L ?\n\t\t\t\t0 :\n\t\t\t\t1);\n\t\t\tconst one = pageSet[0];\n\t\t\tconst two = pageSet[1];\n\t\t\tconst imgVnodeL = this.buildImageArea(one, lNo, false);\n\t\t\tconst imgVnodeR = this.buildImageArea(two, rNo, true);\n\t\t\tmainView = div('', ['preview_dual'], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: \"100%\"\n\t\t\t\t},\n\t\t\t\ton: {\n\t\t\t\t\tclick: this.doNothing()\n\t\t\t\t}\n\t\t\t}, [imgVnodeL, imgVnodeR]);\n\t\t}\n\t\tthis.prePatch(\".previewFrame\", div(\"\", [\"previewFrame\", BaseView.ModalWindowClass()], {\n\t\t\tstyle: {}\n\t\t}, [left, mainView, right]));\n\t}\n\tbuildImageArea(pageData, pageNo, isRight) {\n\t\tconst pageEnitiy = pageData.parent;\n\t\t// alert(JSON.stringify(pageEnitiy));\n\t\tthis.parentPkRight = isRight ? pageData.parentPk : this.parentPkRight;\n\t\tthis.parentPkLeft = !isRight ? pageData.parentPk : this.parentPkLeft;\n\t\tconst binalyEnitiy = pageData.binary;\n\t\tconst isForceColor = pageEnitiy ? pageEnitiy.isForceColor : null;\n\t\tconst isNoCropping = pageEnitiy ? pageEnitiy.isNoCropping : null;\n\t\tconst isForceColorClass = isForceColor ?\n\t\t\t\"enable\" :\n\t\t\t\"disable\";\n\t\tconst isNoCroppingClass = isNoCropping ?\n\t\t\t\"enable\" :\n\t\t\t\"disable\";\n\t\tconst currentClass = isRight === null ?\n\t\t\t\"\" :\n\t\t\t(\n\t\t\t\tisRight ?\n\t\t\t\tthis.classNameRight :\n\t\t\t\tthis.classNameLeft);\n\t\tif (binalyEnitiy) {\n\t\t\tconst dataUri = bc.arrayBuffer2DataURI(binalyEnitiy._ab);\n\t\t\t// console.log(dataUri);\n\t\t\tconst imgVnode = img(binalyEnitiy.pk + \"_preview\", \"preview_\" + pageNo, \"\", dataUri, {});\n\t\t\tconst pageNoText = div('', [\"pageNo\"], {}, \"pageNo:\" + pageNo);\n\t\t\tconst checkForceColor = div('', [\n\t\t\t\t\"checkForceColor\", isForceColorClass\n\t\t\t], {\n\t\t\t\ton: {\n\t\t\t\t\tclick: this.onCheckUpdate(\"isForceColor\", isRight)\n\t\t\t\t}\n\t\t\t}, \"isForceColor\");\n\t\t\tconst checkNoCropping = div('', [\n\t\t\t\t\"checkNoCropping\", isNoCroppingClass\n\t\t\t], {\n\t\t\t\ton: {\n\t\t\t\t\tclick: this.onCheckUpdate(\"isNoCropping\", isRight)\n\t\t\t\t}\n\t\t\t}, \"isNoCropping:\");\n\t\t\tconst pageSide = isRight === null ? \"\" : isRight ? \"right\" : \"left\";\n\t\t\tconst info = div('', ['previewInfo'], {}, [pageNoText, div('', [\"options\"], [checkForceColor, checkNoCropping])]);\n\t\t\treturn div('', ['previewImageFrame'], {}, [info, div('', [\"img\", pageSide], [imgVnode])]);\n\t\t} else {\n\t\t\tconst isDummy = binalyEnitiy === undefined;\n\t\t\tconst noimageMsg = isDummy ?\n\t\t\t\t\"no Page\" :\n\t\t\t\t\"no image set\";\n\t\t\tconst dummyClass = isDummy ?\n\t\t\t\tthis.dummyClassName :\n\t\t\t\t\"\";\n\t\t\tconst pageNoString = isDummy ?\n\t\t\t\t\"----\" :\n\t\t\t\t\"pageNo:\" + pageNo;\n\t\t\tconst imgVnode = div('', ['previewInfo'], {}, noimageMsg);\n\t\t\tconst info = div('', ['previewInfo'], {}, pageNoString);\n\t\t\treturn div('', [\n\t\t\t\t'previewImageFrame', dummyClass\n\t\t\t], {}, [info, imgVnode]);\n\t\t}\n\t}\n\tonCheckUpdate(key, isRight) {\n\t\treturn (event) => {\n\t\t\tconst action = PreviewActionCreator.creatUpdateAction(this, {\n\t\t\t\tpk: isRight ? this.parentPkRight : this.parentPkLeft,\n\t\t\t\tkey: key\n\t\t\t});\n\t\t\t// alert(\"beClose\");\n\t\t\tthis.dispatch(action);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\tbeClose() {\n\t\treturn (event) => {\n\t\t\tconst action = PreviewActionCreator.creatCloseAction(this, {\n\t\t\t\tisSingle: this.isSingle\n\t\t\t});\n\t\t\t// alert(\"beClose\");\n\t\t\tthis.dispatch(action);\n\t\t\tconst actionReload = ImageActionCreator.creatLoadImagesAction(this, {});\n\t\t\tthis.dispatch(actionReload);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\tdoNothing() {\n\t\treturn (event) => {\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\tgoNextOrBack(isRight) {\n\t\treturn (event) => {\n\t\t\tconst action = ((isRight && this.isR2L) || (!isRight && !this.isR2L)) ?\n\t\t\t\tPreviewActionCreator.creatBackAction(this, {\n\t\t\t\t\tisSingle: this.isSingle,\n\t\t\t\t\tpageNo: this.pageNo\n\t\t\t\t}) :\n\t\t\t\tPreviewActionCreator.creatNextAction(this, {\n\t\t\t\t\tisSingle: this.isSingle,\n\t\t\t\t\tpageNo: this.pageNo\n\t\t\t\t});\n\t\t\tthis.dispatch(action);\n\t\t\t// alert(\"goNext\");\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","import vu from \"../../util/viewUtil\";\nimport {\n\tBaseView\n} from \"../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../util/reactive/base/vtags\";\nimport {\n\tImageActionCreator\n} from '../../reduxy/action/imageActionCreator'\nimport {\n\tPageActionCreator\n} from '../../reduxy/action/pageActionCreator'\nimport { Dialog } from \"./dialog/dialog\";\nexport class Thumbnail extends BaseView {\n\tconstructor(parent, draggableArea) {\n\t\tsuper(\"Thumnail\" + parent.id, \"Thumnail\");\n\t\tthis.parent = parent;\n\t\tthis.draggableArea = draggableArea;\n\t\tthis.ip = this.ms.ip;\n\t\tthis.draggableArea.nowSelectedElm = null;\n\t\tthis.thumbnail_block = \"thumbnail_block\";\n\t\tthis.displayNone = \"display_none\";\n\t\tthis.draggableArea.toDropTumnails = (elm) => { this.doDrop(elm) };\n\t}\n\tsetImageData(imageData) {\n\t\tthis.imageData = imageData;\n\t}\n\trender(store, actionData) {\n\t\treturn div('', \"\");\n\t}\n\tremove(pk) {\n\t\treturn async (event) => {\n\t\t\tconst result = await Dialog.opneConfirm(\"Clicked Image Delete Button!\", \"delete ok?\");\n\t\t\tif (result) {\n\t\t\t\tconst action = ImageActionCreator.creatRemoveAction(this, {\n\t\t\t\t\timagePKforDelete: pk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\thandleDragStart(dragImageSrc) {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n\t\t\tthis.draggableArea.nowSelectedElm = elm;\n\t\t\tevent.dataTransfer.effectAllowed = 'move';\n\t\t\tevent.dataTransfer.setData('text/html', elm.innerHTML);\n\t\t\tlet dragIcon = document.createElement('img');\n\t\t\tdragIcon.src = dragImageSrc;\n\t\t\tdragIcon.width = 100;\n\t\t\tevent.dataTransfer.setDragImage(dragIcon, -10, -10);\n\t\t}\n\t}\n\thandleDragOver() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tevent.preventDefault(); // Necessary. Allows us to drop.\n\t\t\tevent.dataTransfer.dropEffect = 'move'; // See the section on the DataTransfer object.\n\t\t\treturn false;\n\t\t}\n\t}\n\thandleDragEnter() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.classList.add('over');\n\t\t}\n\t}\n\thandleDragLeave() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.classList.remove('over'); // this / event.target is previous target element.\n\t\t}\n\t}\n\thandleDrop(event) {\n\t\treturn (event) => {\n\t\t\tevent.stopPropagation(); // Stops some browsers from redirecting.\n\t\t\tevent.preventDefault();\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.doDrop(elm);\n\t\t\treturn false;\n\t\t}\n\t}\n\tdoDrop(elm) {\n\t\tconst nowSelectedElm = this.draggableArea.nowSelectedElm;\n\t\tif (nowSelectedElm && nowSelectedElm.dataset.pk && nowSelectedElm !== elm) {\n\t\t\tconst selectedPk = nowSelectedElm.dataset.pk;\n\t\t\tif (nowSelectedElm.dataset.is_image) {\n\t\t\t\t//console.log('sort handleDrop imagePKmove:'+selectedPk+\"/elm.dataset.pk:\"+elm.dataset.pk)\n\t\t\t\tconst action = ImageActionCreator.creatSortImagesAction(this, {\n\t\t\t\t\timagePKmove: selectedPk,\n\t\t\t\t\timagePKdrop: elm.dataset.pk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t} else if (nowSelectedElm.dataset.is_page) {\n\t\t\t\t//console.log('sort handleDrop imagePKmove:'+selectedPk+\"/elm.dataset.pk:\"+elm.dataset.pk)\n\t\t\t\tconst action = PageActionCreator.creatRemovePageAction(this, {\n\t\t\t\t\tpagePk: selectedPk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\tthis.draggableArea.nowSelectedElm = null;\n\t\t}\n\t\tvu.clearSideElmClass(elm, 'over');\n\t}\n\thandleDragEnd(event) {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\twindow.blockMenuHeaderScroll = true;\n\t\t\tconst nowSelectedElm = this.draggableArea.nowSelectedElm;\n\t\t\t// console.log('handleDragEnd imagePKmove:'+(nowSelectedElm?nowSelectedElm.dataset.pk:nowSelectedElm)+\"/elm.dataset.pk:\"+elm.dataset.pk)\n\t\t\tvu.clearSideElmClass(elm, 'over');\n\t\t}\n\t}\n\thandleTouchStart(dragImageSrc) {\n\t\treturn (event) => {\n\t\t\t//console.log(\"handleTouchStart\");\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n\t\t\tthis.draggableArea.nowSelectedElm = elm;\n\t\t\t// event.dataTransfer.effectAllowed = 'move';\n\t\t\t// event.dataTransfer.setData('text/html', elm.innerHTML);\n\t\t\t// let dragIcon = document.createElement('img');\n\t\t\t// dragIcon.src = dragImageSrc;\n\t\t\t// dragIcon.width = 100;\n\t\t\t// event.dataTransfer.setDragImage(dragIcon, -10, -10);\n\t\t}\n\t}\n\thandleTouchMove() {\n\t\treturn (event) => {\n\t\t\twindow.blockMenuHeaderScroll = false;\n\t\t\tevent.preventDefault(); // Necessary. Allows us to drop.\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst pointedElm = vu.getCurrentPointedElm(event);\n\t\t\tif (this.pointedElm && this.pointedElm !== pointedElm) {\n\t\t\t\tvu.clearSideElmClass(this.pointedElm, 'over');\n\t\t\t}\n\t\t\tthis.pointedElm = pointedElm;\n\t\t\tif (!pointedElm.getAttribute('draggable') || pointedElm === elm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpointedElm.classList.add('over');\n\t\t\t// event.dataTransfer.dropEffect = 'move'; // See the section on the DataTransfer object.\n\t\t\treturn false;\n\t\t}\n\t}\n\thandleTouchEnd() {\n\t\treturn (event) => {\n\t\t\t//console.log(\"handleTouchEnd\");\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst nowSelectedElm = this.draggableArea.nowSelectedElm;\n\t\t\tvu.clearSideElmClass(elm, 'over');\n\t\t\tconst pointedElm = this.pointedElm;\n\t\t\tif (!pointedElm || !pointedElm.getAttribute('draggable') || pointedElm === elm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.pointedElm = null;\n\t\t\tif (!pointedElm.classList || !pointedElm.classList.contains(pointedElm.thumbnail_block)) {\n\t\t\t\tthis.draggableArea.toDropPage(pointedElm);\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// console.log('handleDragEnd imagePKmove:'+(nowSelectedElm?nowSelectedElm.dataset.pk:nowSelectedElm)+\"/elm.dataset.pk:\"+elm.dataset.pk)\n\t\t\tvu.clearSideElmClass(pointedElm, 'over');\n\t\t\tthis.doDrop(elm);\n\t\t}\n\t}\n\tselectImage(event) {\n\t\treturn (event) => {\n\t\t\tevent.stopPropagation(); // Stops some browsers from redirecting.\n\t\t\tevent.preventDefault();\n\t\t\tconst elm = event.target;\n\t\t\t// console.log(' selecImage imagePKmove:/elm.dataset.pk:'+elm.dataset.pk)\n\t\t\tconst action = ImageActionCreator.creatDetailAction(this, {\n\t\t\t\timagePK: elm.dataset.pk\n\t\t\t});\n\t\t\tthis.dispatch(action);\n\t\t\treturn false;\n\t\t}\n\t}\n\tasync crateDataLine(imageData, pagesMap = {}) {\n\t\tconst imageEntity = imageData.imageEntity;\n\t\tconst binaryEntity = imageData.binaryEntity;\n\t\t//console.log(binaryEntity)\n\t\tconst data = {\n\t\t\tname: imageEntity.name,\n\t\t\tab: binaryEntity._ab,\n\t\t\ttype: imageEntity.type\n\t\t}\n\t\tconst imgElm = await this.ip.createImageNodeByData(data)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\tthrow e\n\t\t\t});\n\t\tconst pk = imageEntity.getPk();\n\t\t// const imgVnode = img(pk + \"_image\", imageEntity.name, imageEntity.name, imgElm.src, {});\n\t\tconst textVnode = span(pk + \"_text\", [\"thumbnail_text\"], imageData.imageText);\n\t\tconst delButton = span(pk + \"_delButton\", [\"delButton\"], {\n\t\t\ton: {\n\t\t\t\t\"click\": this.remove(pk)\n\t\t\t}\n\t\t}, \"x\");\n\t\tconst imageVnode = div(\"\", [\"image_block\"], {\n\t\t\ton: {\n\t\t\t\tdragstart: this.handleDragStart(imgElm.src),\n\t\t\t\tdragover: this.handleDragOver(),\n\t\t\t\tdragenter: this.handleDragEnter(),\n\t\t\t\tdragleave: this.handleDragLeave(),\n\t\t\t\tdrop: this.handleDrop(),\n\t\t\t\tdragend: this.handleDragEnd(),\n\t\t\t\tclick: this.selectImage(),\n\t\t\t\ttouchstart: this.handleTouchStart(imgElm.src),\n\t\t\t\ttouchmove: this.handleTouchMove(),\n\t\t\t\ttouchend: this.handleTouchEnd()\n\t\t\t},\n\t\t\tdataset: {\n\t\t\t\tpk: pk,\n\t\t\t\tis_image: true\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\t\"draggable\": \"true\"\n\t\t\t}\n\t\t});\n\t\tconst classObj = {};\n\t\tclassObj[this.displayNone] = pagesMap[pk];\n\t\tconst rowVnode = div(\"\", [this.thumbnail_block], {\n\t\t\ton: {\n\t\t\t\tdragstart: this.handleDragStart(imgElm.src),\n\t\t\t\tdragover: this.handleDragOver(),\n\t\t\t\tdragenter: this.handleDragEnter(),\n\t\t\t\tdragleave: this.handleDragLeave(),\n\t\t\t\tdrop: this.handleDrop(),\n\t\t\t\tdragend: this.handleDragEnd(),\n\t\t\t\tclick: this.selectImage(),\n\t\t\t\ttouchstart: this.handleTouchStart(imgElm.src),\n\t\t\t\ttouchmove: this.handleTouchMove(),\n\t\t\t\ttouchend: this.handleTouchEnd()\n\t\t\t},\n\t\t\tstyle: {\n\t\t\t\t\"background-image\": \"url(\" + imgElm.src + \")\"\n\t\t\t},\n\t\t\tclass: classObj,\n\t\t\tdataset: {\n\t\t\t\tpk: pk,\n\t\t\t\tis_image: true\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\t\"draggable\": \"true\"\n\t\t\t}\n\t\t}, [delButton, textVnode]);\n\t\treturn rowVnode;\n\t}\n}","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {Sorter} from \"../../util/sorter\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {ImageActionCreator} from '../../reduxy/action/imageActionCreator'\nimport {PageActionCreator} from '../../reduxy/action/pageActionCreator'\nimport {Thumbnail} from './thumbnail'\nexport class Thumbnails extends BaseView {\n  constructor(draggableArea) {\n    super(\"Thumnails\", \"Thumnails\");\n    this.imageAreaID = \"thumnailsImageArea\";\n    this.thumbnail = new Thumbnail(this, draggableArea);\n    this.ip = this.ms.ip;\n    this.storePagesKey = PageActionCreator.getStorePagesKey();\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n    this.pageMap = {}\n    this.thumbnails_block = 'thumbnails_block';\n    this.draggableArea = draggableArea;\n    this.draggableArea.cancelPageArea = null;\n  }\n  async onAfterAttach(store, data) {\n    const action = ImageActionCreator.creatLoadImagesAction(this, {});\n    await this.dispatch(action);\n  }\n  async onViewShow(store, actionData) {\n    const pagesData = store[this.storePagesKey];\n    const imagesData = store[this.storeImagesKey];\n    if (imagesData && pagesData) {\n      this.updatePageMap(pagesData);\n      await this.showImages(imagesData).catch((e) => {\n        console.error(e)\n      });;\n      // console.error(\"Thumnails onViewShow count:\"+pagesData.length+\"/\"+imagesData.length+\"/\"+JSON.stringify(this.pageMap));\n    }\n  }\n  render(store, actionData) {\n    return div(this.imageAreaID, \"Thumnails\");\n  }\n  updatePageMap(pagesData) {\n    for (let key in this.pageMap) {\n      delete this.pageMap[key];\n    }\n    for (let pageEntity of pagesData) {\n      if(!pageEntity){\n        continue;\n      }\n      const imagePk = pageEntity.baseImage;\n      if (imagePk) {\n        this.pageMap[imagePk] = true;\n      }\n    }\n  }\n  handleDragEnter() {\n    return(event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnails_block)) {\n        return\n      }\n      elm.classList.add('over');\n      this.draggableArea.cancelPageArea = elm;\n    }\n  }\n  handleDragLeave() {\n    return(event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnails_block)) {\n        return\n      }\n      elm.classList.remove('over'); // this / event.target is previous target element.\n      setTimeout(() => {\n        this.draggableArea.cancelPageArea = null;\n      }, 100)\n    }\n  }\n  handleDrop(event) {\n    return(event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n      return false;\n    }\n  }\n\n  reset() {\n    return(event) => {\n      const elm = event.target;\n      //alert(\"reset!\")\n    }\n  }\n  async showImages(imageDatas) {\n    const images = [];\n    for (let imageData of imageDatas) {\n      if (!imageData) {\n        continue;\n      }\n      const imageEntity = imageData.imageEntity;\n      const pk = imageEntity.getPk();\n      const vnode = await this.thumbnail.crateDataLine(imageData, this.pageMap).catch((e) => {\n        console.error(e)\n      });\n      images.push(vnode);\n    }\n    const newVnode = div(this.imageAreaID, [this.thumbnails_block], {\n      on: {\n        dragover: this.handleDragEnter(),\n        dragstart: this.handleDragEnter(),\n        dragenter: this.handleDragEnter(),\n        dragleave: this.handleDragLeave(),\n        drop: this.handleDrop(),\n        dragend: this.handleDrop(),\n        click: this.reset()\n      },\n      props: {\n        \"draggable\": \"true\"\n      }\n    }, images)\n    this.prePatch(\"#\" + this.imageAreaID, newVnode);\n  }\n}\n","import {PageActionCreator} from '../action/pageActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nimport {PageProcessor} from '../processor/pageProcessor'\nimport {ImageActionCreator} from '../action/imageActionCreator'\nlet pagesViewReducer = null;\nexport class PagesViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.im = this.ms.im;\n    this.pageAddAction = PageActionCreator.creatAddPageAction();\n    this.pageRemoveAction = PageActionCreator.creatRemovePageAction();\n    this.pagesResetAction = PageActionCreator.creatResetPagesAction();\n    this.pagesSortAction = PageActionCreator.creatSortPagesAction();\n    this.atatch(this.dropImageToPageAction);\n    this.atatch(this.pageAddAction);\n    this.atatch(this.pageRemoveAction);\n    this.atatch(this.pagesResetAction);\n    this.atatch(this.pagesSortAction);\n\n    this.pp = new PageProcessor();\n    this.storeKey = PageActionCreator.getStorePagesKey();\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n  }\n  static register() {\n    if (!pagesViewReducer) {\n      pagesViewReducer = new PagesViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.pageAddAction.type === action.type) {\n      store[this.storeKey] = await this.add(action.data.imagePk, action.data.pagePk);\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pageRemoveAction.type === action.type) {\n      store[this.storeKey] = await this.remove(action.data.pagePk);\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pagesResetAction.type === action.type) {\n      store[this.storeKey] = await this.reset();\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pagesSortAction.type === action.type) {\n      store[this.storeKey] = await this.move(action.data.formPk, action.data.toPk);\n      store[this.storeImagesKey] = await this.loadImages();\n    }\n    return store;\n  }\n  async loadImages() {\n    return await this.im.loadImages();\n  }\n  async add(imagePk, pagePk) {\n    //\n    await this.pp.add(imagePk, pagePk);\n    return await this.pp.loadPages();\n  }\n  async remove(pagePk) {\n    //\n    await this.pp.remove(pagePk);\n    return await this.pp.loadPages();\n  }\n  async reset() {\n    //\n    return await this.pp.resetPagesFull();\n  }\n  async move(formPk, toPk) {\n    //\n    await this.pp.move(formPk, toPk);\n    return await this.pp.loadPages();\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {ImageDetail} from \"../parts/imageDetail\";\nimport {PageImages} from \"../parts/pageImages\";\nimport {Preview} from '../parts/preview/preview'\nimport {Thumbnails} from \"../parts/thumbnails\";\nimport {ImageViewReducer} from '../../reduxy/reducer/imageViewReducer'\nimport {PagesViewReducer} from '../../reduxy/reducer/pagesViewReducer'\nexport class FilesArea extends BaseView {\n  constructor() {\n    super(\"FilesArea\", \"FilesArea\");\n    this.nowSelectedElm = null;\n    this.imageDetail = new ImageDetail();\n    this.pageImages = new PageImages(this);\n    this.thumbnails = new Thumbnails(this);\n    this.preview = new Preview();\n    ImageViewReducer.register();\n    PagesViewReducer.register();\n  }\n\n  async onAfterAttach(store, data) {\n    await this.imageDetail.attach(this);\n    await this.pageImages.attach(this);\n    await this.thumbnails.attach(this);\n    await this.preview.attach(this);\n  }\n  render() {\n    return div(\"\", [\n      div(this.pageImages.id),\n      div(this.thumbnails.id),\n      div(this.imageDetail.id),\n      div(this.preview.id)\n    ])\n  }\n}\n","import {ProgressActionCreator} from '../action/progressActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nlet progressViewReducer = null;\nexport class ProgressViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.progressBarAddAction = ProgressActionCreator.creatAddAction();\n    this.progressBarRemoveAction = ProgressActionCreator.creatRemoveAction();\n    this.progressBarUpdateAction = ProgressActionCreator.creatUpdateAction();\n    this.progressBarCompleatSortAction = ProgressActionCreator.creatCompleatAction();\n    this.atatch(this.progressBarAddAction);\n    this.atatch(this.progressBarRemoveAction);\n    this.atatch(this.progressBarUpdateAction);\n    this.atatch(this.progressBarCompleatSortAction);\n    this.storeKey = \"progress\";\n    this.addInitializeKey(this.storeKey);\n  }\n  static register() {\n    if (!progressViewReducer) {\n      progressViewReducer = new ProgressViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.progressBarAddAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, 0, false, action.data.msg, action.data.title);\n    } else if (this.progressBarRemoveAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(false, 0, false);\n    } else if (this.progressBarUpdateAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, action.data.progress, false, action.data.msg);\n    } else if (this.progressBarCompleatSortAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, 100, true, action.data.msg);\n    }\n    return store;\n  }\n  createProgress(isVisible, progress, isComple, msg, title) {\n    return {isVisible: isVisible, progress: progress, msg: msg, isComple: isComple, title: title}\n  }\n}\n","import vu from \"../../../util/viewUtil\";\nimport { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { ProgressViewReducer } from '../../../reduxy/reducer/progressViewReducer'\nexport class ProgressBar extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ProgressBar\", [\"ProgressBar\", BaseView.ModalWindowClass()]);\n\t\tthis.storeKey = \"progress\";\n\t\tthis.initPoint = '0%';\n\t\tthis.title = \"ProgressBar\";\n\t}\n\n\tasync onAfterAttach(store, data) {\n\t\tProgressViewReducer.register();\n\t}\n\trender() {\n\t\treturn div(\"\" [\"ProgressBarView\"], {\n\t\t\tstyle: {\n\t\t\t\tdisplay: \"none\"\n\t\t\t}\n\t\t}, [\n\t\t\tdiv('', ['progeressTitle'], \"\"),\n\t\t\tdiv('', ['progeressFrame'], [div('', ['progeress'], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: this.initPoint\n\t\t\t\t}\n\t\t\t})]),\n\t\t\tdiv('', ['progeressInfo'], [\n\t\t\t\tdiv('', ['progeressPoints'], this.initPoint),\n\t\t\t\tdiv('', ['progeressMessage'], \"\")\n\t\t\t])\n\t\t]);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\t//alert(\"onViewShow\");\n\t\t\tthis.showProgress(store[this.storeKey]);\n\t\t\t//console.log(\"ProgressBar onViewShow\");\n\t\t}\n\t}\n\tshowProgress(data) {\n\t\tconst { isVisible, progress, isComple, msg, title } = data;\n\t\tif (title) {\n\t\t\tthis.title = title;\n\t\t}\n\t\tif (isVisible) {\n\t\t\tthis.currentVnode.elm.style.display = 'block';\n\t\t\tthis.prePatch(\".progeress\", div(\"\", [\"progeress\"], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: progress + \"%\"\n\t\t\t\t}\n\t\t\t}, ));\n\t\t\tthis.prePatch(\".progeressTitle\", div(\"\", [\"progeressTitle\"], {}, this.title));\n\t\t\tthis.prePatch(\".progeressPoints\", div(\"\", [\"progeressPoints\"], {}, progress + \"%\"));\n\t\t\tthis.prePatch(\".progeressMessage\", div(\"\", [\"progeressMessage\"], {}, msg));\n\t\t\tif (isComple) {\n\t\t\t\tthis.currentVnode.elm.style.display = 'none';\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentVnode.elm.style.display = 'none';\n\t\t\tthis.prePatch(\".progeress\", div(\"\", [\"progeress\"], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: \"0%\"\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis.prePatch(\".progeressPoints\", div(\"\", [\"progeressPoints\"], {}, this.initPoint));\n\t\t}\n\t}\n}","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class TitleActionCreator {\n  constructor() {}\n  static creatAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"creatTitle\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeTitle\", targetView, data, storeKey);\n  }\n  static creatLoadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadTitle\", targetView, data, storeKey);\n  }\n  static creatChangeAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"changeTitle\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateTitle\", targetView, data, storeKey);\n  }\n  static creatClearAllAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"clearAllTitle\", targetView, data, storeKey);\n  }\n  static getStoreCurrentKey(){\n    return \"titlesCurrentData\";\n  }\n  static getStoreKey(){\n    return \"titlesData\";\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class SplashActionCreator {\n  constructor() {}\n  static creatAddAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addSplashr\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeSplash\", targetView, data, storeKey);\n  }\n  static getStoreKey(){\n    return \"splash\";\n  }\n}\n","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { TitleActionCreator } from '../../../reduxy/action/titleActionCreator'\nimport { SplashActionCreator } from '../../../reduxy/action/splashActionCreator'\nimport { Dialog } from \"../dialog/dialog\";\nexport class StorageMeter extends BaseView {\n\tconstructor() {\n\t\tsuper(\"StorageMeter\", \"StorageMeter\");\n\t\tthis.storeKey = TitleActionCreator.getStoreKey();\n\t\tthis.storeCurrentKey = TitleActionCreator.getStoreCurrentKey();\n\t}\n\n\trender(store, actionData) {\n\t\tconst name = div(\"\", [\"StorageMeter\"], \"Storage now usage:\");\n\t\tconst counter = span('', [\"StorageMeterCounter\"], \"0\");\n\t\tconst unit = span('', [\"StorageMeterUnit\"], \" byte\");\n\t\tconst button = span('', [\"StorageMeterUnit\", \"button\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.onReculc()\n\t\t\t}\n\t\t}, \"reculc!\");\n\t\tconst dataFrame = div('', [\"StorageMeter\"], [counter, unit, button]);\n\t\treturn div(\"\", [this.id + \"Frame\"], [name, dataFrame]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\tconst { list, totalSize } = store[this.storeKey];\n\t\t\t// alert('totalSize:'+totalSize);\n\t\t\tconst counter = span('', [\"StorageMeterCounter\"], totalSize + \"\");\n\t\t\tthis.prePatch(\".StorageMeterCounter\", counter);\n\t\t\tconst action = SplashActionCreator.creatRemoveAction(this);\n\t\t\tthis.dispatch(action);\n\t\t} else if (store[this.storeCurrentKey]) {\n\t\t\talert('bbbbbb');\n\t\t}\n\t}\n\tonReculc() {\n\t\treturn (event) => {\n\t\t\tDialog.opneAlert(\"onReculc!\", \"Taking several time...\");\n\t\t\tconst action = TitleActionCreator.creatLoadAction(this);\n\t\t\tthis.dispatch(action);\n\t\t\tevent.preventDefault(); // Necessary. Allows us to drop.\n\t\t\treturn false;\n\t\t}\n\t}\n}","import {\n  BaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {TitleActionCreator} from '../../../reduxy/action/titleActionCreator';\nexport class TitleRow extends BaseView {\n  constructor() {\n    super(\"TitleRow\", \"TitleRow\");\n  }\n\n  render(store, actionData) {\n    const name = div(\"\", [\"TitleName\"], \"TitleName\");\n    return div(\"\", [this.id + \"Frame\"], [name, div(this.imageAreaID, [\"ImageDetailA\"], this.id + \"aaaaa\")]);\n  }\n  async onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {\n\n  }\n  buildRows(titles){\n    const retList = [];\n    for(let title of titles){\n      retList.push(this.creatRow(title));\n    }\n    return retList;\n  }\n  creatRow(title){\n      const titleId = div('', [\"TitleId\"], this.titleId);\n      const prefix = div('', [\"prefix\"], this.prefix);\n      const name = div(\"\", [\"TitleName\"], title.name);\n      const size = div(\"\", [\"TitleName\"], title.size+\" byte\");\n      const updateButton = div(\"\", [\"TitleUpdate\",\"button\"],{\n        on:{click:this.onUpdate()}\n      }, \"update\");\n      const deleteButton = div(\"\", [\"TitleDelete\",\"button\"], {\n        on:{click:this.onDelete()}\n      }, \"del\");\n      return div(\"\", [this.id + \"Row\"], [titleId,prefix,name,size,updateButton,deleteButton]);\n  }\n  onUpdate() {\n    return(event) => {\n      alert(\"onUpdate\");\n      const action = TitleActionCreator.creatLoadAction(this);\n      this.dispatch(action);\n      event.preventDefault(); // Necessary. Allows us to drop.\n      return false;\n    }\n  }\n  onDelete(){\n    return(event) => {\n      alert(\"onDelete\");\n      const action = TitleActionCreator.creatLoadAction(this);\n      this.dispatch(action);\n      event.preventDefault(); // Necessary. Allows us to drop.\n      return false;\n    }\n  }\n}\n","import {\n  BaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {TitleActionCreator} from '../../../reduxy/action/titleActionCreator'\nimport {TitleRow} from './titleRow'\nexport class TitleList extends BaseView {\n  constructor() {\n    super(\"TitleList\", \"TitleList\");\n      this.storeKey = TitleActionCreator.getStoreKey();\n      this.storeCurrentKey = TitleActionCreator.getStoreCurrentKey();\n      this.titleRow = new TitleRow();\n  }\n\n  render(store, actionData) {\n    const name = div(\"\", [\"TitleListName\"], \"Titles List\");\n    const listView = div('', [\"TitleListRows\"], this.id + \"-----------\");\n    return div(\"\", [this.id + \"Frame\"], [name,listView]);\n  }\n  async onAfterAttach(store, data) {\n\n  }\n\n  async onViewShow(store, actionData) {\n    if(store[this.storeKey]){\n      const {list,totalSize}=store[this.storeKey];\n      this.buildRows(list);\n    }else if(store[this.storeCurrentKey]){\n      alert('bbbbbb');\n    }\n  }\n\n  buildRows(list){\n    const listRows = this.titleRow.buildRows(list);\n    const vnode = div('', [\"TitleListRows\"],listRows);\n    this.prePatch(\".TitleListRows\", vnode);\n  }\n}\n","import {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {TitleActionCreator} from '../../../reduxy/action/titleActionCreator';\nexport class TitleNewone extends BaseView {\n  constructor() {\n    super(\"TitleNewone\", \"TitleNewone\");\n    this.storeKey = TitleActionCreator.getStoreKey();\n    this.storeCurrentKey = TitleActionCreator.getStoreCurrentKey();\n    this.idOfName = this.id+\"name\";\n  }\n\n  render(store, actionData) {\n    //(titleId, titlePrefix, name)\n    const name = div(\"\", [\"TitleNewone\"], \"TitleNewone\");\n    const nameRow = this.createInputRow(\"name\", \"NameInput\");\n    const prefixRow = this.createInputRow(\"prefix\", \"NameInput\");\n    const titleIdRow = this.createInputRow(\"titleId\", \"titleIdInput\");\n    const button = div(\"\", [\"titleIdInput\",\"button\"], {\n      on: {\n        click: this.onClick()\n      }\n    }, \"create new title.\");\n    return div(\"\", [this.id + \"Frame\"], [name, titleIdRow, prefixRow, nameRow,button]);\n  }\n  async onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {\n    if (store[this.storeKey]) {\n      //\n      this.ids = {};\n      const {list, totalSize} = store[this.storeKey];\n      for (let title of list) {\n        this.ids[title.getPk()]=true;\n      }\n    } else if (store[this.storeCurrentKey]) {\n      //\n    }\n  }\n  onClick() {\n    return(event) => {\n      alert(\"onClick\");\n\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      event.preventDefault(); // Necessary. Allows us to drop.\n      return false;\n    }\n  }\n\n  getCurrentOptions() {\n    const result = {\n      isGrayscale: document.getElementById(this.checkboxIsGrascale).checked,\n      dpiName: document.getElementById(this.selectBoxDpiName).value,\n      isMaxSize10M: document.getElementById(this.checkboxIsMaxSize10M).checked,\n      isLanczose: document.getElementById(this.checkboxIsLanczose).checked\n    };\n    return result;\n\n  }\n  createInputRow(label, inputClass, pattern = \"\", defaultValue = \"\") {\n    const labelClass = this.id + \"Label\";\n    const nameLabel = span(\"\", [labelClass], label + ':');\n    const nameInput = input(this.id + inputClass, [this.id + inputClass], {\n      props: {\n        name: this.id + inputClass\n      },\n      attr:{\n        pattern:pattern\n      }\n    }, \"text\", defaultValue);\n    const row = div(\"\", [this.id + \"Row\"], [nameLabel, nameInput]);\n    return row;\n  }\n}\n","import { TitleActionCreator } from \"../action/titleActionCreator\"\nimport { ActionDispatcher } from \"../../util/reactive/actionDispatcher\";\nimport { ObjectUtil } from \"../../util/objectUtil\";\nexport class TitleProcessor {\n\tconstructor(em, tm) {\n\t\tthis.em = em;\n\t\tthis.tm = tm;\n\t\tthis.actionDispatcher = ActionDispatcher.createStandAlone();\n\t\tthis.totalSize = 0;\n\t}\n\tasync loadAll() {\n\t\tconsole.time(\"TitleProcessor.loadAll\");\n\t\tconst titles = await this.tm.loadTitleList();\n\t\tthis.totalSize = 0;\n\t\tconst keys = [];\n\t\tfor (let title of titles) {\n\t\t\tthis.titleSizeCache = {};\n\t\t\tconst size = await this.getSizes(title);\n\t\t\ttitle.size = size;\n\t\t\tthis.totalSize += size;\n\t\t}\n\t\tconsole.timeEnd(\"TitleProcessor.loadAll\");\n\n\t\treturn { list: titles, totalSize: this.totalSize };\n\t}\n\tgetTotalSum() {\n\t\treturn this.totalSize;\n\t}\n\tasync getSizes(target) {\n\t\tif (!target) {\n\t\t\treturn 1;\n\t\t}\n\t\tlet size = await ObjectUtil.calcSize(this.em, target);\n\t\tconst refCols = target.getRefCols();\n\t\tfor (let colName of refCols) {\n\t\t\tconst colValue = target[colName];\n\t\t\tif (!colValue) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Array.isArray(colValue)) {\n\t\t\t\tfor (let pk of colValue) {\n\t\t\t\t\tif (!pk) {\n\t\t\t\t\t\tsize += 2;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.titleSizeCache[pk] === undefined) {\n\t\t\t\t\t\tconst entity = await this.em.get(pk, true);\n\t\t\t\t\t\tconst currentSize = Number.isInteger(entity) ? entity : await this.getSizes(entity);\n\t\t\t\t\t\tthis.titleSizeCache[pk] = true;\n\t\t\t\t\t\tsize += currentSize;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof colValue === \"string\") {\n\t\t\t\tif (this.titleSizeCache[colValue] === undefined) {\n\t\t\t\t\tconst entity = await this.em.get(colValue, true);\n\t\t\t\t\tconst currentSize = Number.isInteger(entity) ? entity : await this.getSizes(entity);\n\t\t\t\t\tthis.titleSizeCache[colValue] = true;\n\t\t\t\t\tsize += currentSize;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn size;\n\t}\n\tasync clearAll() {\n\t\tconst titles = await this.tm.loadTitleList();\n\t\tfor (let title of titles) {\n\t\t\tawait this.removeDescendant(title);\n\t\t}\n\t\t//dual!\n\t\tfor (let title of titles) {\n\t\t\tawait this.removeDescendant(title);\n\t\t}\n\t\treturn await this.loadAll();\n\t}\n\tasync removeDescendant(target) {\n\t\tif (!target) {\n\t\t\treturn;\n\t\t}\n\t\tconst refCols = target.getRefCols();\n\t\tfor (let colName of refCols) {\n\t\t\tconst colValue = target[colName];\n\t\t\tif (!colValue) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Array.isArray(colValue)) {\n\t\t\t\tfor (let pk of colValue) {\n\t\t\t\t\tawait this.removeExecute(pk);\n\t\t\t\t}\n\t\t\t\tfor (let index in colValue) {\n\t\t\t\t\tdelete colValue[index];\n\t\t\t\t}\n\t\t\t} else if (typeof colValue === \"string\") {\n\t\t\t\tawait this.removeExecute(colValue);\n\t\t\t}\n\t\t}\n\t}\n\tasync removeExecute(pk) {\n\t\tif (!pk) {\n\t\t\treturn this.tm.loadCurrent();\n\t\t}\n\t\tconst entity = await this.em.get(pk);\n\t\tif (entity) {\n\t\t\tawait this.removeDescendant(entity);\n\t\t\tif (entity.pages) {\n\t\t\t\tfor (let index in entity.pages) {\n\t\t\t\t\tdelete entity.pages[index];\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait this.em.delete(pk);\n\t\t\tconst titles = await this.tm.loadTitleList();\n\t\t\treturn titles && titles.length > 0 ?\n\t\t\t\ttitles[0] :\n\t\t\t\tnull\n\t\t}\n\t\treturn this.tm.loadCurrent();\n\t}\n\tasync create(titleId, titlePrefix, name) {\n\t\tif (await this.tm.isExist(titleId)) {\n\t\t\treturn await this.tm.load(titleId);\n\t\t}\n\t\treturn await this.tm.createTitle(titleId, titlePrefix, name);\n\t}\n\tasync remove(titleId) {\n\t\tif (await this.tm.isExist(titleId)) {\n\t\t\treturn await this.removeExecute(titleId);\n\t\t} else {\n\t\t\treturn this.tm.loadCurrent();\n\t\t}\n\t}\n\tasync changeTtitle(titleId) {\n\t\treturn await this.tm.changeTitle(titleId);\n\t}\n\tasync update(titleId, name) {\n\t\tconst current = await this.tm.load(titleId);\n\t\tcurrent.name = name;\n\t\tawait this.tm.saveTitle(current);\n\t\treturn this.tm.loadCurrent();\n\t}\n}","import {TitleActionCreator} from '../action/titleActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {TitleProcessor} from '../processor/titleProcessor'\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nlet titleViewReducer = null;\nexport class TitleViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.tm = this.ms.tm;\n    this.em = this.ms.em;\n    this.tp = new TitleProcessor(this.em ,this.tm );\n    this.titleCreatAction = TitleActionCreator.creatAction();\n    this.titleRemoveAction = TitleActionCreator.creatRemoveAction();\n    this.titleLoadAction = TitleActionCreator.creatLoadAction();\n    this.titleChangection = TitleActionCreator.creatChangeAction();\n    this.titleUpdateAction = TitleActionCreator.creatUpdateAction();\n    this.titleClearAllAction = TitleActionCreator.creatClearAllAction();\n    this.atatch(this.titleCreatAction);\n    this.atatch(this.titleRemoveAction);\n    this.atatch(this.titleLoadAction);\n    this.atatch(this.titleChangection);\n    this.atatch(this.titleUpdateAction);\n    this.atatch(this.titleClearAllAction);\n    this.storeKey = TitleActionCreator.getStoreKey();\n    this.storeCurrentKey = TitleActionCreator.getStoreCurrentKey();\n    this.addInitializeKey(this.storeKey);\n    this.addInitializeKey(this.storeCurrentKey);\n  }\n  static register() {\n    if (!titleViewReducer) {\n      titleViewReducer = new TitleViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.titleCreatAction.type === action.type) {\n      store[this.storeCurrentKey] = await this.tp.create(action.data.titleId,action.data.titlePrefix,action.data.name);\n      store[this.storeKey] = await this.tp.loadAll();\n    } else if (this.titleRemoveAction.type === action.type) {\n      store[this.storeCurrentKey] = await this.tp.remove(action.data.titleId);\n      store[this.storeKey] = await this.tp.loadAll();\n    } else if (this.titleLoadAction.type === action.type) {\n      store[this.storeCurrentKey] = await this.tp.loadAll();\n      store[this.storeKey] = await this.tp.loadAll();\n    } else if (this.titleChangection.type === action.type) {\n      store[this.storeKey] = await this.tp.loadAll();\n      store[this.storeCurrentKey] = await this.tp.changeTtitle(action.data.titleId);\n    } else if (this.titleUpdateAction.type === action.type) {\n      store[this.storeKey] = await this.tp.loadAll();\n      store[this.storeCurrentKey] = await this.tp.update(action.data.titleId,action.data.name);\n    } else if (this.titleClearAllAction.type === action.type) {\n      store[this.storeKey] = await this.tp.clearAll();\n    }\n    return store;\n  }\n}\n","import {\n\tBaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { TitleViewReducer } from '../../../reduxy/reducer/titleViewReducer'\nimport { TitleActionCreator } from '../../../reduxy/action/titleActionCreator'\nimport { Dialog } from \"../dialog/dialog\";\nexport class StorageInitializer extends BaseView {\n\tconstructor() {\n\t\tsuper(\"StorageInitializer\", \"StorageInitializer\");\n\t\tthis.storeKey = TitleActionCreator.getStoreKey();\n\t\tthis.storeCurrentKey = TitleActionCreator.getStoreCurrentKey();\n\t}\n\n\trender(store, actionData) {\n\t\tconst name = div(\"\", [\"StorageInitializer\"], \"StorageInitializer\");\n\t\tconst button = div('', [\"StorageInitializerButton button\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.onClearAll()\n\t\t\t}\n\t\t}, \"Init!\");\n\t\treturn div(\"\", [this.id + \"Frame\"], [name, button]);\n\t}\n\tasync onAfterAttach(store, data) {\n\t\tTitleViewReducer.register();\n\t\tconst action = TitleActionCreator.creatLoadAction(this);\n\t\tthis.dispatch(action);\n\t}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\tconst { list, totalSize } = store[this.storeKey];\n\n\t\t} else if (store[this.storeCurrentKey]) {\n\t\t\talert('bbbbbb');\n\t\t}\n\t}\n\tonClearAll() {\n\t\treturn async (event) => {\n\t\t\tconst result = await Dialog.opneConfirm(\"onClearAll\", \"is Clear All Data? This Exection is Not recoverable. \");\n\t\t\tif (result) {\n\t\t\t\tconst actionReload = TitleActionCreator.creatClearAllAction(this, {});\n\t\t\t\tthis.dispatch(actionReload);\n\t\t\t\tevent.stopPropagation();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}","import vu from \"../../util/viewUtil\";\nimport {\n  BaseView\n} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\n\nimport {\n  StorageMeter\n} from '../parts/titleMng/storageMeter'\nimport {\n  TitleList\n} from '../parts/titleMng/titleList'\nimport {\n  TitleNewone\n} from '../parts/titleMng/titleNewone'\nimport {\n  StorageInitializer\n} from '../parts/titleMng/storageInitializer'\nexport class TitleMng extends BaseView {\n  constructor() {\n    super(\"TitleMng\", \"TitleMng\");\n    this.text = \"TitleMng\";\n    this.storageMeter = new StorageMeter(this);\n    this.titleList = new TitleList(this);\n    this.titleNewone = new TitleNewone(this);\n    this.storageInitializer = new StorageInitializer(this);\n  }\n  async onAfterAttach(store, data) {\n    await this.storageMeter.attach(this);\n    await this.titleList.attach(this);\n    await this.titleNewone.attach(this);\n    await this.storageInitializer.attach(this);\n  }\n  render() {\n    return div(this.id+\"Frame\", [\"TitleMng\"], [\n      div(\"\",['name'],'Title Manager'),\n      div(this.storageMeter.id),\n      div(this.titleList.id),\n      div(this.titleNewone.id),\n      div(this.storageInitializer.id)\n    ]);\n  }\n  // loadTitleList\n  // newTitle\n  // deleteTitle\n  // next Button\n}\n","import vu from \"../util/viewUtil\";\nimport { BaseView } from \"../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../util/reactive/base/vtags\";\nimport { FileUploadArea } from \"./content/fileUploadArea\";\nimport { TitleSettings } from \"./content/titleSettings\";\nimport { ExportArea } from \"./content/exportArea\";\nimport { FilesArea } from \"./content/filesArea\";\nimport { ProgressBar } from \"./parts/progress/progressBar\";\nimport { TitleMng } from \"./content/titleMng\";\nimport { Dialog } from \"./parts/dialog/dialog\";\nimport { MenuSelectActionCreator } from '../reduxy/action/menuSelectActionCreator'\nexport class Container extends BaseView {\n\tconstructor() {\n\t\tsuper(\"container\", \"main-container\");\n\t\tthis.fileUploadArea = new FileUploadArea();\n\t\tthis.titleSettings = new TitleSettings();\n\t\tthis.filesArea = new FilesArea();\n\t\tthis.exportArea = new ExportArea();\n\t\tthis.progressBar = new ProgressBar();\n\t\tthis.titleMng = new TitleMng();\n\t\tthis.dialog = new Dialog();\n\t\tthis.contentsScrollTops = [];\n\t\tthis.contentsScrollRanges = [];\n\t\tthis.contentsIdMap = {};\n\t}\n\n\tasync onAfterAttach(store, data) {\n\t\tawait this.progressBar.attach(this);\n\t\tawait this.dialog.attach(this);\n\t\tawait this.addScrollMap(this.titleSettings);\n\t\tawait this.addScrollMap(this.fileUploadArea);\n\t\tawait this.addScrollMap(this.filesArea);\n\t\tawait this.addScrollMap(this.exportArea);\n\t\tawait this.addScrollMap(this.titleMng);\n\t\tthis.buildFinish();\n\t\tthis.currentVnode.elm.childNodes[0].addEventListener('scroll', this.onScroll());\n\t\tthis.currentCheck();\n\t}\n\tasync addScrollMap(part) {\n\t\tawait part.attach(this);\n\t\tconst scrolltop = part.currentVnode.elm.getBoundingClientRect()\n\t\t\t.top;\n\t\tthis.contentsScrollTops.push(scrolltop);\n\t\tthis.contentsIdMap[scrolltop] = part.id;\n\t\tthis.timer = null;\n\t}\n\tbuildFinish() {\n\t\tconst len = this.contentsScrollTops.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst range = {\n\t\t\t\tcurrent: this.contentsScrollTops[i],\n\t\t\t\tnext: i === (len - 1) ?\n\t\t\t\t\t9999 : this.contentsScrollTops[i + 1]\n\t\t\t};\n\t\t\tthis.contentsScrollRanges.push(range);\n\t\t}\n\t}\n\trender() {\n\t\tconst newVnode = div('', ['scroll-container'], {\n\t\t\tstyle: {\n\t\t\t\tcolor: '#000'\n\t\t\t}\n\t\t}, [\n\t\t\tdiv(this.progressBar.id),\n\t\t\tdiv(this.dialog.id),\n\t\t\tdiv(this.titleSettings.id),\n\t\t\tdiv(this.fileUploadArea.id),\n\t\t\tdiv(this.filesArea.id),\n\t\t\tdiv(this.exportArea.id),\n\t\t\tdiv(this.titleMng.id)\n\t\t], \"container\");\n\t\t// console.log('container!render!!!!!!!!!!!')s\n\t\treturn newVnode;\n\t}\n\tonScroll() {\n\t\treturn (event) => {\n\t\t\tthis.currentCheck(event);\n\t\t}\n\t}\n\t// 現在地をチェックする\n\tcurrentCheck(event) {\n\t\tif (this.timer) {\n\t\t\tclearTimeout(this.timer);\n\t\t}\n\t\tif (!this.currentVnode) {\n\t\t\treturn;\n\t\t}\n\t\tthis.timer = setTimeout(() => {\n\t\t\t// 現在のスクロール位置を取得\n\t\t\tconst top = this.currentVnode.elm.getBoundingClientRect()\n\t\t\t\t.top + 120;\n\t\t\tconst scrolltop = this.currentVnode.elm.childNodes[0].scrollTop + top;\n\t\t\tconst len = this.contentsScrollRanges.length;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tconst range = this.contentsScrollRanges[i];\n\t\t\t\t// 現在のスクロール位置が、配列に格納した開始位置と終了位置の間にあるものを調べる\n\t\t\t\tif ((i === 0 || range.current < scrolltop) && (range.next + 0) > scrolltop) {\n\t\t\t\t\tconst id = this.contentsIdMap[range.current];\n\t\t\t\t\tconst action = MenuSelectActionCreator.creatSelectAction(this, { id: id });\n\t\t\t\t\tthis.dispatch(action);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t};\n\t\t}, 100)\n\t}\n}\n","import vu from \"../util/viewUtil\";\nimport { BaseView } from \"../util/reactive/baseView\";\nimport { a, div, li, ul, img, span, input, label } from \"../util/reactive/base/vtags\";\nexport class Footer extends BaseView {\n\tconstructor() {\n\t\tsuper(\"footer\", \"footer\");\n\t\tthis.copyright = \"copyright:ryunosinfx - Licenced MIT\";\n\t}\n\trender() {\n\t\tconst newVnode = div({\n\t\t\tstyle: {\n\t\t\t\tcolor: '#000'\n\t\t\t}\n\t\t}, [div(\"copyright\", [\"copyright\"], this.copyright)]);\n\t\treturn newVnode;\n\t}\n}","import {SplashActionCreator} from '../action/splashActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nlet splashViewReducer = null;\nexport class SplashViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.splashAddAction = SplashActionCreator.creatAddAction();\n    this.splashRemoveAction = SplashActionCreator.creatRemoveAction();\n    this.atatch(this.splashAddAction);\n    this.atatch(this.splashRemoveAction);\n    this.storeKey = SplashActionCreator.getStoreKey();\n    this.addInitializeKey(this.storeKey);\n  }\n  static register() {\n    if (!splashViewReducer) {\n      splashViewReducer = new SplashViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.splashAddAction.type === action.type) {\n      store[this.storeKey] = this.createSplash(true, 0, false, action.data.msg, action.data.title);\n    } else if (this.splashRemoveAction.type === action.type) {\n      store[this.storeKey] = this.createSplash(false, 0, false);\n    }\n    return store;\n  }\n  createSplash(isVisible, progress, isComple, msg, title) {\n    return {isVisible: isVisible, progress: progress, msg: msg, isComple: isComple, title: title}\n  }\n}\n","import vu from \"../../../util/viewUtil\";\nimport { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { SplashActionCreator } from '../../../reduxy/action/splashActionCreator'\nimport { SplashViewReducer } from '../../../reduxy/reducer/splashViewReducer'\nexport class Splash extends BaseView {\n\tconstructor() {\n\t\tsuper(\"Splash\", [\"Splash\", BaseView.ModalWindowClass()], true);\n\t\tthis.splashAddAction = SplashActionCreator.creatAddAction();\n\t\tthis.splashRemoveAction = SplashActionCreator.creatRemoveAction();\n\t\tthis.storeKey = SplashActionCreator.getStoreKey();\n\t\tthis.titleText = this.ms.getAppTitle();\n\t\tthis.Version = this.ms.getAppVersion();\n\t\tthis.message = \"Now loading...\";\n\t}\n\tasync onAfterAttach(store, data) {\n\t\tSplashViewReducer.register();\n\t}\n\trender() {\n\t\tconst appTitle = div('', [\"appTitle\"], [div('', [\"text\"], this.titleText)]);\n\t\tconst appVerion = div('', [\"appVerion\"], [div('', [\"text\"], this.Version)]);\n\t\tconst loadingspans = [];\n\t\tconst chars = this.message.split(\"\");\n\t\tfor (let char of chars) {\n\t\t\tloadingspans.push(span('', [], char));\n\t\t}\n\t\tconst message = div('', [\"message\"], [div('', [this.id + \"MsgText\", \"loader\"], loadingspans)]);\n\n\t\tconst splashTitle = div('', [\"splashTitle\"], [appTitle, appVerion, message]);\n\t\treturn div(this.id, [\"Splash\", BaseView.ModalWindowClass()], [splashTitle]);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tconst data = store[this.storeKey];\n\t\tif (data) {\n\t\t\tif (data.isVisible === false) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t\t//alert(\"OK\");\n\t\t}\n\t}\n}","import vu from \"../util/viewUtil\";\nimport { Header } from \"./header\";\nimport { Menu } from \"./menu\";\nimport { Container } from \"./container\";\nimport { Footer } from \"./footer\";\nimport { BaseView } from \"../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../util/reactive/base/vtags\";\nimport { Splash } from \"./parts/splash/splash\";\nexport class MainFrame extends BaseView {\n\tconstructor(ms) {\n\t\tsuper(\"frame\", \"frame\");\n\t\tthis.ms = ms;\n\t\tBaseView.setMainService(ms);\n\t\tthis.initialize();\n\t}\n\tinitialize() {\n\t\tthis.header = new Header(this.ms);\n\t\tthis.footer = new Footer();\n\t\tthis.container = new Container();\n\t\tthis.menu = new Menu();\n\t\tthis.baseFrame = null;\n\t\tthis.view = '';\n\t\tthis.splash = new Splash();\n\t\tthis.initialPatch();\n\t}\n\tasync onViewShow(store, data) {\n\t\tthis.header.attach(this, '#header');\n\t\tthis.menu.attach(this, '#menu');\n\t\tthis.container.attach(this, '#container');\n\t\tthis.footer.attach(this, '#footer');\n\t\tthis.splash.attach(this);\n\t}\n\trender(titleText) {\n\t\tlet newVnode = div('frame', ['frame'], {}, [\n\t\t\tdiv('header', {\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: '#000'\n\t\t\t\t}\n\t\t\t}, 'hellow!!'),\n\t\t\tdiv('menu', {\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: '#000'\n\t\t\t\t}\n\t\t\t}, 'menu!!'),\n\t\t\tdiv('container', {\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: '#000'\n\t\t\t\t}\n\t\t\t}, [div('content', {\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: '#000'\n\t\t\t\t}\n\t\t\t}, 'content!!')], 'container!!'),\n\t\t\tdiv('footer', {\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: '#000'\n\t\t\t\t}\n\t\t\t}, 'footer!!?'),\n\t\t\tdiv(this.splash.id)\n\t\t]);\n\t\treturn newVnode;\n\t}\n}","import css from \"../index.css\";\nimport { MainFrame } from \"./view/mainFrame\"\nimport { MainService } from \"./service/mainService\"\nconst appTitle = \"CopiBon\";\nconst appVersion = \"v0.0.10alpha\";\nexport default class CopiBonService {\n\tconstructor() {\n\t\tthis.mainService = MainService.getInstance();\n\t}\n\tasync init() {\n\t\tawait this.mainService.init(appTitle, appVersion);\n\t\tthis.mf = new MainFrame(this.mainService);\n\t\t//this.mf.initialize(title);\n\t\t///\n\t\t// const sumModule = await import (\"./sum.wasm\");\n\t\t// console.log(sumModule.sum(22, 2200));\n\t}\n\tstatic main() {\n\t\tconst self = new CopiBonService();\n\t\tself.init();\n\t}\n}\nCopiBonService.main();","export function vnode(sel, data, children, text, elm) {\n    var key = data === undefined ? undefined : data.key;\n    return { sel: sel, data: data, children: children,\n        text: text, elm: elm, key: key };\n}\nexport default vnode;\n//# sourceMappingURL=vnode.js.map","export var array = Array.isArray;\nexport function primitive(s) {\n    return typeof s === 'string' || typeof s === 'number';\n}\n//# sourceMappingURL=is.js.map","function createElement(tagName) {\n    return document.createElement(tagName);\n}\nfunction createElementNS(namespaceURI, qualifiedName) {\n    return document.createElementNS(namespaceURI, qualifiedName);\n}\nfunction createTextNode(text) {\n    return document.createTextNode(text);\n}\nfunction createComment(text) {\n    return document.createComment(text);\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n    parentNode.insertBefore(newNode, referenceNode);\n}\nfunction removeChild(node, child) {\n    node.removeChild(child);\n}\nfunction appendChild(node, child) {\n    node.appendChild(child);\n}\nfunction parentNode(node) {\n    return node.parentNode;\n}\nfunction nextSibling(node) {\n    return node.nextSibling;\n}\nfunction tagName(elm) {\n    return elm.tagName;\n}\nfunction setTextContent(node, text) {\n    node.textContent = text;\n}\nfunction getTextContent(node) {\n    return node.textContent;\n}\nfunction isElement(node) {\n    return node.nodeType === 1;\n}\nfunction isText(node) {\n    return node.nodeType === 3;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nexport var htmlDomApi = {\n    createElement: createElement,\n    createElementNS: createElementNS,\n    createTextNode: createTextNode,\n    createComment: createComment,\n    insertBefore: insertBefore,\n    removeChild: removeChild,\n    appendChild: appendChild,\n    parentNode: parentNode,\n    nextSibling: nextSibling,\n    tagName: tagName,\n    setTextContent: setTextContent,\n    getTextContent: getTextContent,\n    isElement: isElement,\n    isText: isText,\n    isComment: isComment,\n};\nexport default htmlDomApi;\n//# sourceMappingURL=htmldomapi.js.map","import { vnode } from './vnode';\nimport * as is from './is';\nfunction addNS(data, children, sel) {\n    data.ns = 'http://www.w3.org/2000/svg';\n    if (sel !== 'foreignObject' && children !== undefined) {\n        for (var i = 0; i < children.length; ++i) {\n            var childData = children[i].data;\n            if (childData !== undefined) {\n                addNS(childData, children[i].children, children[i].sel);\n            }\n        }\n    }\n}\nexport function h(sel, b, c) {\n    var data = {}, children, text, i;\n    if (c !== undefined) {\n        data = b;\n        if (is.array(c)) {\n            children = c;\n        }\n        else if (is.primitive(c)) {\n            text = c;\n        }\n        else if (c && c.sel) {\n            children = [c];\n        }\n    }\n    else if (b !== undefined) {\n        if (is.array(b)) {\n            children = b;\n        }\n        else if (is.primitive(b)) {\n            text = b;\n        }\n        else if (b && b.sel) {\n            children = [b];\n        }\n        else {\n            data = b;\n        }\n    }\n    if (children !== undefined) {\n        for (i = 0; i < children.length; ++i) {\n            if (is.primitive(children[i]))\n                children[i] = vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&\n        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {\n        addNS(data, children, sel);\n    }\n    return vnode(sel, data, children, text, undefined);\n}\n;\nexport default h;\n//# sourceMappingURL=h.js.map","import { h } from './h';\nfunction copyToThunk(vnode, thunk) {\n    thunk.elm = vnode.elm;\n    vnode.data.fn = thunk.data.fn;\n    vnode.data.args = thunk.data.args;\n    thunk.data = vnode.data;\n    thunk.children = vnode.children;\n    thunk.text = vnode.text;\n    thunk.elm = vnode.elm;\n}\nfunction init(thunk) {\n    var cur = thunk.data;\n    var vnode = cur.fn.apply(undefined, cur.args);\n    copyToThunk(vnode, thunk);\n}\nfunction prepatch(oldVnode, thunk) {\n    var i, old = oldVnode.data, cur = thunk.data;\n    var oldArgs = old.args, args = cur.args;\n    if (old.fn !== cur.fn || oldArgs.length !== args.length) {\n        copyToThunk(cur.fn.apply(undefined, args), thunk);\n        return;\n    }\n    for (i = 0; i < args.length; ++i) {\n        if (oldArgs[i] !== args[i]) {\n            copyToThunk(cur.fn.apply(undefined, args), thunk);\n            return;\n        }\n    }\n    copyToThunk(oldVnode, thunk);\n}\nexport var thunk = function thunk(sel, key, fn, args) {\n    if (args === undefined) {\n        args = fn;\n        fn = key;\n        key = undefined;\n    }\n    return h(sel, {\n        key: key,\n        hook: { init: init, prepatch: prepatch },\n        fn: fn,\n        args: args\n    });\n};\nexport default thunk;\n//# sourceMappingURL=thunk.js.map","import vnode from './vnode';\nimport * as is from './is';\nimport htmlDomApi from './htmldomapi';\nfunction isUndef(s) { return s === undefined; }\nfunction isDef(s) { return s !== undefined; }\nvar emptyNode = vnode('', {}, [], undefined, undefined);\nfunction sameVnode(vnode1, vnode2) {\n    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\nfunction isVnode(vnode) {\n    return vnode.sel !== undefined;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    var i, map = {}, key, ch;\n    for (i = beginIdx; i <= endIdx; ++i) {\n        ch = children[i];\n        if (ch != null) {\n            key = ch.key;\n            if (key !== undefined)\n                map[key] = i;\n        }\n    }\n    return map;\n}\nvar hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];\nexport { h } from './h';\nexport { thunk } from './thunk';\nexport function init(modules, domApi) {\n    var i, j, cbs = {};\n    var api = domApi !== undefined ? domApi : htmlDomApi;\n    for (i = 0; i < hooks.length; ++i) {\n        cbs[hooks[i]] = [];\n        for (j = 0; j < modules.length; ++j) {\n            var hook = modules[j][hooks[i]];\n            if (hook !== undefined) {\n                cbs[hooks[i]].push(hook);\n            }\n        }\n    }\n    function emptyNodeAt(elm) {\n        var id = elm.id ? '#' + elm.id : '';\n        var c = elm.className ? '.' + elm.className.split(' ').join('.') : '';\n        return vnode(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);\n    }\n    function createRmCb(childElm, listeners) {\n        return function rmCb() {\n            if (--listeners === 0) {\n                var parent_1 = api.parentNode(childElm);\n                api.removeChild(parent_1, childElm);\n            }\n        };\n    }\n    function createElm(vnode, insertedVnodeQueue) {\n        var i, data = vnode.data;\n        if (data !== undefined) {\n            if (isDef(i = data.hook) && isDef(i = i.init)) {\n                i(vnode);\n                data = vnode.data;\n            }\n        }\n        var children = vnode.children, sel = vnode.sel;\n        if (sel === '!') {\n            if (isUndef(vnode.text)) {\n                vnode.text = '';\n            }\n            vnode.elm = api.createComment(vnode.text);\n        }\n        else if (sel !== undefined) {\n            // Parse selector\n            var hashIdx = sel.indexOf('#');\n            var dotIdx = sel.indexOf('.', hashIdx);\n            var hash = hashIdx > 0 ? hashIdx : sel.length;\n            var dot = dotIdx > 0 ? dotIdx : sel.length;\n            var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;\n            var elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)\n                : api.createElement(tag);\n            if (hash < dot)\n                elm.setAttribute('id', sel.slice(hash + 1, dot));\n            if (dotIdx > 0)\n                elm.setAttribute('class', sel.slice(dot + 1).replace(/\\./g, ' '));\n            for (i = 0; i < cbs.create.length; ++i)\n                cbs.create[i](emptyNode, vnode);\n            if (is.array(children)) {\n                for (i = 0; i < children.length; ++i) {\n                    var ch = children[i];\n                    if (ch != null) {\n                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));\n                    }\n                }\n            }\n            else if (is.primitive(vnode.text)) {\n                api.appendChild(elm, api.createTextNode(vnode.text));\n            }\n            i = vnode.data.hook; // Reuse variable\n            if (isDef(i)) {\n                if (i.create)\n                    i.create(emptyNode, vnode);\n                if (i.insert)\n                    insertedVnodeQueue.push(vnode);\n            }\n        }\n        else {\n            vnode.elm = api.createTextNode(vnode.text);\n        }\n        return vnode.elm;\n    }\n    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            var ch = vnodes[startIdx];\n            if (ch != null) {\n                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);\n            }\n        }\n    }\n    function invokeDestroyHook(vnode) {\n        var i, j, data = vnode.data;\n        if (data !== undefined) {\n            if (isDef(i = data.hook) && isDef(i = i.destroy))\n                i(vnode);\n            for (i = 0; i < cbs.destroy.length; ++i)\n                cbs.destroy[i](vnode);\n            if (vnode.children !== undefined) {\n                for (j = 0; j < vnode.children.length; ++j) {\n                    i = vnode.children[j];\n                    if (i != null && typeof i !== \"string\") {\n                        invokeDestroyHook(i);\n                    }\n                }\n            }\n        }\n    }\n    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            var i_1 = void 0, listeners = void 0, rm = void 0, ch = vnodes[startIdx];\n            if (ch != null) {\n                if (isDef(ch.sel)) {\n                    invokeDestroyHook(ch);\n                    listeners = cbs.remove.length + 1;\n                    rm = createRmCb(ch.elm, listeners);\n                    for (i_1 = 0; i_1 < cbs.remove.length; ++i_1)\n                        cbs.remove[i_1](ch, rm);\n                    if (isDef(i_1 = ch.data) && isDef(i_1 = i_1.hook) && isDef(i_1 = i_1.remove)) {\n                        i_1(ch, rm);\n                    }\n                    else {\n                        rm();\n                    }\n                }\n                else {\n                    api.removeChild(parentElm, ch.elm);\n                }\n            }\n        }\n    }\n    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n        var oldStartIdx = 0, newStartIdx = 0;\n        var oldEndIdx = oldCh.length - 1;\n        var oldStartVnode = oldCh[0];\n        var oldEndVnode = oldCh[oldEndIdx];\n        var newEndIdx = newCh.length - 1;\n        var newStartVnode = newCh[0];\n        var newEndVnode = newCh[newEndIdx];\n        var oldKeyToIdx;\n        var idxInOld;\n        var elmToMove;\n        var before;\n        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n            if (oldStartVnode == null) {\n                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n            }\n            else if (oldEndVnode == null) {\n                oldEndVnode = oldCh[--oldEndIdx];\n            }\n            else if (newStartVnode == null) {\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (newEndVnode == null) {\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newStartVnode)) {\n                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n                oldStartVnode = oldCh[++oldStartIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (sameVnode(oldEndVnode, newEndVnode)) {\n                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newEndVnode)) {\n                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n                oldStartVnode = oldCh[++oldStartIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldEndVnode, newStartVnode)) {\n                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                if (oldKeyToIdx === undefined) {\n                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n                }\n                idxInOld = oldKeyToIdx[newStartVnode.key];\n                if (isUndef(idxInOld)) {\n                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    newStartVnode = newCh[++newStartIdx];\n                }\n                else {\n                    elmToMove = oldCh[idxInOld];\n                    if (elmToMove.sel !== newStartVnode.sel) {\n                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    }\n                    else {\n                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n                        oldCh[idxInOld] = undefined;\n                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n                    }\n                    newStartVnode = newCh[++newStartIdx];\n                }\n            }\n        }\n        if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n            if (oldStartIdx > oldEndIdx) {\n                before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n                addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n            }\n            else {\n                removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n            }\n        }\n    }\n    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\n        var i, hook;\n        if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {\n            i(oldVnode, vnode);\n        }\n        var elm = vnode.elm = oldVnode.elm;\n        var oldCh = oldVnode.children;\n        var ch = vnode.children;\n        if (oldVnode === vnode)\n            return;\n        if (vnode.data !== undefined) {\n            for (i = 0; i < cbs.update.length; ++i)\n                cbs.update[i](oldVnode, vnode);\n            i = vnode.data.hook;\n            if (isDef(i) && isDef(i = i.update))\n                i(oldVnode, vnode);\n        }\n        if (isUndef(vnode.text)) {\n            if (isDef(oldCh) && isDef(ch)) {\n                if (oldCh !== ch)\n                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n            }\n            else if (isDef(ch)) {\n                if (isDef(oldVnode.text))\n                    api.setTextContent(elm, '');\n                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n            }\n            else if (isDef(oldCh)) {\n                removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n            }\n            else if (isDef(oldVnode.text)) {\n                api.setTextContent(elm, '');\n            }\n        }\n        else if (oldVnode.text !== vnode.text) {\n            api.setTextContent(elm, vnode.text);\n        }\n        if (isDef(hook) && isDef(i = hook.postpatch)) {\n            i(oldVnode, vnode);\n        }\n    }\n    return function patch(oldVnode, vnode) {\n        var i, elm, parent;\n        var insertedVnodeQueue = [];\n        for (i = 0; i < cbs.pre.length; ++i)\n            cbs.pre[i]();\n        if (!isVnode(oldVnode)) {\n            oldVnode = emptyNodeAt(oldVnode);\n        }\n        if (sameVnode(oldVnode, vnode)) {\n            patchVnode(oldVnode, vnode, insertedVnodeQueue);\n        }\n        else {\n            elm = oldVnode.elm;\n            parent = api.parentNode(elm);\n            createElm(vnode, insertedVnodeQueue);\n            if (parent !== null) {\n                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));\n                removeVnodes(parent, [oldVnode], 0, 0);\n            }\n        }\n        for (i = 0; i < insertedVnodeQueue.length; ++i) {\n            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);\n        }\n        for (i = 0; i < cbs.post.length; ++i)\n            cbs.post[i]();\n        return vnode;\n    };\n}\n//# sourceMappingURL=snabbdom.js.map"],"sourceRoot":""}