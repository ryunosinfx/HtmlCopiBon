{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/thread/thread.js","webpack:///./node_modules/snabbdom/vnode.js","webpack:///./node_modules/snabbdom/modules/class.js","webpack:///./node_modules/snabbdom/modules/style.js","webpack:///./node_modules/snabbdom/modules/props.js","webpack:///./node_modules/snabbdom/modules/attributes.js","webpack:///./node_modules/snabbdom/modules/dataset.js","webpack:///./node_modules/snabbdom/modules/eventlisteners.js","webpack:///./node_modules/snabbdom/h.js","webpack:///./node_modules/snabbdom/tovnode.js","webpack:///./node_modules/zlibjs/bin/zip.min.js","webpack:///./index.css?bcd2","webpack:///./index.css","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/snabbdom/is.js","webpack:///./node_modules/snabbdom/htmldomapi.js","webpack:///./src/util/viewUtil.js","webpack:///./src/util/reactive/base/preLoader.js","webpack:///./src/util/objectUtil.js","webpack:///./src/util/reactive/elementSelector.js","webpack:///./src/util/reactive/actionCreator.js","webpack:///./src/util/reactive/viewAttachQueue.js","webpack:///./src/util/reactive/store.js","webpack:///./src/util/reactive/actionDispatcherImple.js","webpack:///./src/util/reactive/actionDispatcher.js","webpack:///./src/util/reactive/base/vtags.js","webpack:///./src/util/reactive/viewBaseActions.js","webpack:///./src/util/reactive/baseReducer.js","webpack:///./src/util/reactive/viewBaseReducer.js","webpack:///./src/util/reactive/baseView.js","webpack:///./src/view/header.js","webpack:///./src/view/menu.js","webpack:///./src/reduxy/action/progressActionCreator.js","webpack:///./src/util/idb/constant.js","webpack:///./src/util/idb/idbUtil.js","webpack:///./src/util/idb/indexeddbHelper.js","webpack:///./src/util/idb/idbRapper.js","webpack:///./src/service/entity/storageService.js","webpack:///./src/service/entity/baseEntity.js","webpack:///./src/service/entity/binary.js","webpack:///./src/service/entity/primaryKey.js","webpack:///./src/util/binaryConverter.js","webpack:///./src/service/entity/primaryKeyAutoIncrementService.js","webpack:///./src/service/entity/entityManagerImpl.js","webpack:///./src/service/entity/entityManager.js","webpack:///./src/service/viewPartsLoader.js","webpack:///./src/entity/title.js","webpack:///./src/entity/images.js","webpack:///./src/entity/thumbnales.js","webpack:///./src/entity/series.js","webpack:///./src/util/sorter.js","webpack:///./src/service/fileUploadExecuter.js","webpack:///./src/service/manager/titleManager.js","webpack:///./src/service/manager/binaryManager.js","webpack:///./src/entity/pages.js","webpack:///./src/service/manager/pagesManager.js","webpack:///./src/entity/settings.js","webpack:///./src/service/manager/settingsManager.js","webpack:///./src/entity/outputProfiles.js","webpack:///./src/service/manager/outputProfilesManager.js","webpack:///./src/entity/imageOutputs.js","webpack:///./src/service/manager/imageOutputsManager.js","webpack:///./src/service/manager/imageManager.js","webpack:///./src/service/manager/thumbnailManager.js","webpack:///./src/settings/exportSettings.js","webpack:///./src/util/image/paper.js","webpack:///./src/util/image/imageMerger.js","webpack:///./src/util/image/imageResizer.js","webpack:///./src/util/imageProcessor.js","webpack:///./src/service/imageProcessService.js","webpack:///./src/service/mainService.js","webpack:///./src/service/mainServiceImpl.js","webpack:///./src/reduxy/reducer/progressViewReducer.js","webpack:///./src/view/parts/progressBar.js","webpack:///./src/eventHandler/baseEventHandler.js","webpack:///./src/reduxy/action/imageActionCreator.js","webpack:///./src/reduxy/action/pageActionCreator.js","webpack:///./src/reduxy/processor/pageProcessor.js","webpack:///./src/reduxy/reducer/imageViewReducer.js","webpack:///./src/eventHandler/fileUploader.js","webpack:///./src/view/content/fileUploadArea.js","webpack:///./src/util/timeUtil.js","webpack:///./src/reduxy/action/settingActionCreator.js","webpack:///./src/reduxy/reducer/settingViewReducer.js","webpack:///./src/view/content/titleSettings.js","webpack:///./src/reduxy/action/exportActionCreator.js","webpack:///./src/util/image/imageCropper.js","webpack:///./src/util/unicodeEncoder.js","webpack:///./src/reduxy/processor/previewProcessor.js","webpack:///./src/reduxy/processor/exportImageProcesser.js","webpack:///./src/reduxy/processor/exportUtilProcesser.js","webpack:///./src/reduxy/reducer/exportReducer.js","webpack:///./src/view/parts/export/exportAllButton.js","webpack:///./src/util/fileDownloader.js","webpack:///./src/view/parts/export/exportImgZipButton.js","webpack:///./src/view/parts/export/exportPdfButton.js","webpack:///./src/view/parts/export/downloadLastExportZipButton.js","webpack:///./src/view/parts/export/downloadLastExportPdfButton.js","webpack:///./src/view/parts/export/deleteExportOneButton.js","webpack:///./src/view/parts/export/exportButton.js","webpack:///./src/view/parts/export/exportOrderRow.js","webpack:///./src/view/parts/export/exportOrderList.js","webpack:///./src/view/content/exportArea.js","webpack:///./src/view/parts/imageDetail.js","webpack:///./src/view/parts/pageImage.js","webpack:///./src/reduxy/action/previewActionCreator.js","webpack:///./src/view/parts/pageImages.js","webpack:///./src/reduxy/reducer/previewReducer.js","webpack:///./src/view/parts/preview/preview.js","webpack:///./src/view/parts/thumbnail.js","webpack:///./src/view/parts/thumbnails.js","webpack:///./src/reduxy/reducer/pagesViewReducer.js","webpack:///./src/view/content/filesArea.js","webpack:///./src/view/container.js","webpack:///./src/view/footer.js","webpack:///./src/view/mainFrame.js","webpack:///./src/main.js","webpack:///./node_modules/snabbdom/es/vnode.js","webpack:///./node_modules/snabbdom/es/is.js","webpack:///./node_modules/snabbdom/es/htmldomapi.js","webpack:///./node_modules/snabbdom/es/h.js","webpack:///./node_modules/snabbdom/es/thunk.js","webpack:///./node_modules/snabbdom/es/snabbdom.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","Thread","defaultWorker","[object Object]","workerJsPath","this","worker","Worker","dataMap","Promise","resolve","reject","transObject","tranceArray","buildPostObj","postMessage","onmessage","event","data","onerror","Array","isArray","count","dataList","buffer","push","byteLength","keys","length","terminate","vnode","sel","children","text","elm","undefined","default","updateClass","oldVnode","cur","oldClass","class","klass","classList","remove","classModule","update","raf","window","requestAnimationFrame","setTimeout","nextFrame","fn","setNextFrame","obj","prop","val","updateStyle","oldStyle","style","oldHasDel","removeProperty","delayed","name2","setProperty","styleModule","destroy","rm","amount","applied","props","getComputedStyle","split","indexOf","addEventListener","ev","target","updateProps","oldProps","propsModule","xlinkNS","xmlNS","colonChar","xChar","updateAttrs","oldAttrs","attrs","setAttribute","removeAttribute","charCodeAt","setAttributeNS","attributesModule","CAPS_REGEX","updateDataset","oldDataset","dataset","replace","toLowerCase","datasetModule","handleEvent","type","on","invokeHandler","handler","args","slice","apply","updateEventListeners","oldOn","oldListener","listener","oldElm","removeEventListener","eventListenersModule","vnode_1","is","h","b","array","primitive","addNS","childData","htmldomapi_1","toVNode","node","domApi","api","isElement","name_1","id","cn","getAttribute","join","tagName","elmAttrs","attributes","elmChildren","childNodes","nodeName","nodeValue","isText","getTextContent","isComment","y","aa","G","e","a","execScript","shift","H","Uint8Array","Uint16Array","Uint32Array","DataView","ba","index","f","Error","ca","set","L","finish","subarray","ha","da","ja","U","ka","la","V","ma","na","pa","k","qa","input","lazy","compressionType","outputBuffer","outputIndex","getParent","pop","Y","sa","g","q","w","u","Q","z","ta","F","I","N","B","C","J","ea","O","W","X","ya","Z","ia","D","za","A","oa","va","ua","v","R","x","fa","K","E","Aa","Ba","P","M","S","T","Ea","ga","ra","Fa","Ga","Ha","Ia","Ca","Da","xa","Ja","Ka","La","$","files","comment","Ma","Na","Oa","Qa","Pa","Ra","compressionMethod","compress","deflateOption","j","size","filename","password","unshift","Math","random","os","date","Date","getMinutes","getSeconds","getHours","getMonth","getDate","getFullYear","extraField","STORE","DEFLATE","MSDOS","UNIX","MACINTOSH","content","options","hmr","transform","insertInto","locals","useSourceMap","list","toString","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","stylesInDom","isOldIE","memo","arguments","memoize","document","all","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","splice","createStyleElement","createElement","addAttrs","el","forEach","result","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","replacement","filter","Boolean","cssNode","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","htmlDomApi","createElementNS","namespaceURI","qualifiedName","createComment","newNode","referenceNode","child","setTextContent","textContent","nodeType","ViewUtil","clasｓName","ce","forId","className","eventType","eventHandler","parent","hasChildNodes","getElementsByTagName","documet","getElementById","styleObj","isBubbling","isCancelable","createEvent","initEvent","dispatchEvent","snabbdom","console","log","preLoader_h","h_default","patch","tovnode_default","init","class_default","style_default","props_default","attributes_default","dataset_default","eventlisteners_default","baseClasses","ObjectUtil","baseClassesList","baseClass","channel","MessageChannel","inPort","port1","outPort","port2","parse","output","baseType","simpleDeepClone","retObj","childTarget","deepVnodeClone","elementSelector_ElementSelector","selectorMap","Map","getElements","selector","isValidNode","cloneNode","prePatch","indexA","parentMap","nodes","isShouldPatch","newOne","isEnd","parentVnode","selectors","nextSelector","firstOne","isMatch","substring","isNextEnd","tokens","selectorId","classes","tag","token","mapA","getSelectorMap","mapB","classesA","classesB","classB","isMatched","classA","actionCreator_baseActions","ActionCreator","storeKey","targetView","addData","parentView","newView","createGoOtherViewAction","view","avtiveViews","activeViewList","ViewAttachQueue","queue","lastTree","parentId","currentId","resultParent","findActivViews","primaryView","currentTree","loadAllActiveViews","currentView","nextView","nextViewTree","resultCurrent","nextId","activeViewsTree","callback","retView","next","viewId","current","resultList","currentLength","mainHolder","mainKey","store_Store","service","newKey","store","has","clonedStore","viewAttachQueue","actionMap","actionDispatcherImple_ActionDispatcherImple","updateMap","updateQueue","action","reducer","reducers","includes","indexof","getStore","preReduce","catch","reduce","postReduce","setStore","isOrverride","views","onViewHide","callUpdate","onViewHidden","actionData","activViews","getActiveViewList","activeView","promise","updateReactiveTheTargetView","then","alert","updateReactive","actionDispatcher_ActionDispatcher","setProps","inputs","newData","vtags","classNames","id2","childrenArray","currentText","currentData","childNode","div","span","vtags_img","alt","src","vtags_file","vtags_option","createSelectVnode","optionsData","selectedValue","suffix","optionSelected","selected","optionNode","vtags_select","viewBaseActions_ViewBaseActions","createShowViewAction","baseReducer_BaseReducer","isBaseUse","baseActions","getBaseActions","atatch","add","delete","super","getGotoAnotherViewAction","getShowViewAction","isEquals","baseView_viewAttachQueue","nodeFrame","rootVnode","ms","baseView_BaseView","isNotRenderWrap","dispatcher","es","onViewLoad","currentVnode","onViewLoaded","updateReactiveCallCount","updateReactiveCallTimer","updateCount","newVnode","patchFromOtherVnode","innerHTML","render","currentRootNode","now","onPreViewBuild","renderWrap","onViewShow","onAfterAttachWrap","onViewShown","clearTimeout","async","taregetSelecotor","warn","isAttached","activeViewTree","addActiveView","creatAttachAction","dispatch","elements","onAfterAttach","header_Header","titleText","color","menu_Menu","menuButtonClass","idOfStep0","idOfStep1","idOfStep2","idOfStep3","idOfStep4","createButtons","menuTabs","click","onClick","progressActionCreator_ProgressActionCreator","createBaseAction","constant","dbName","navigator","userAgent","domain","IdbUtil","table","tabels","condetions","condition","isMutch","start","end","isNotEqualStart","isNotEqualEnd","IDBKeyRange","bound","upperBound","KeyRange","lowerBound","only","key1","key2","key3","key4","key5","MODE_R","MODE_RW","indexeddbHelper_IndexeddbHelper","indexedDB","keyPathMap","newVersion","request","open","onsuccess","onupgradeneeded","onabort","db","tableName","tables","transaction","oncomplete","close","objectStore","callerName","stack","message","error","keyPathName","getOpenDB","throwNewError","getObjectStore","keyPathNameCurrent","keyPath","version","payload","range","_selectAll","direction","_selectAllExecute","isGetFirstOne","req","openCursor","cursor","continue","_selectByKey","_selectByKeyOnTran","_selectFirstOne","getKeyPathByMap","_insertUpdate","currentTables","_insertExecute","_updateExecute","objectStoreRequest","put","_deleteWithRange","_deleteWithRangeExecute","or","_delete","keyPathValue","_deleteOnTran","_truncate","_truncateExecute","clear","names","objectStoreNames","isExist","isAutoIncrement","_createStore","isExistsObjectStore","getCurrentVersion","createObjectStore","_dropStore","deleteObjectStore","idbRapper_IdbRapper","objectStoreName","keypathName","idbh","reslve","firstPromise","record","pk","saveData","dataObj","storeData","recordAsDefaultLoad","loadData","getObjectStoreNames","USER_ID","idbAccessors","storageService_StorageService","entityClass","targetObj","idbAccessor","entityName","getEntityName","userId","storeNameKey","getStoreNameKey","createStoreByName","createStore","toObj","saveDataDefault","loadAllData","retList","row","cloned","getEntity","load","deleteData","baseEntity_BaseEntity","entitiyName","pkValue","deepClone","singleDeepCloneWithoutFuncs","exclude","binary_Binary","arrayBuffer","_ab","createDate","updateDate","ab","DELIMITER","PrimaryKey","entity","number","isPrimaryKey","getPk","oid","getPrimaryKey","BinaryConverter","binaryString","binaryString2Uint8Array","uint8Array2BinaryString","arrayBuffer2BinaryString","rawLength","ArrayBuffer","u8a","String","fromCharCode","base64","binaryString2ArrayBuffer","dataURI","uintArray","reader","FileReader","onload","eve","asArrayBuffer","readAsArrayBuffer","asBinaryString","readAsBinaryString","asDataURL","readAsDataURL","asText","readAsText","primaryKeyAutoIncrementService_USER_ID","primaryKeyAutoIncrementService_PK_INCREMENT_STORE","PK_ROW","primaryKeyAutoIncrementService_PrimaryKeyAutoIncrementService","userid","ss","rowKey","nextCountAB","countUpUint32","save","arrayBuffer2base64","currentCount","dataview","getUint32","setInt32","entityManagerImpl_USER_ID","BINALY_PK_ROW","entityManagerImpl_binaryEntity","entityManagerImpl_EntityManagerImpl","entityManager","pkais","em","saveExecute","isWithBinary","currentPK","assemblePK","acquirePKNo","saveArrayBufferCols","setPk","savedData","column","saveArrayBufferData","newPK","getBinaryPK","Binary","saveWithBinary","newNumber","loadAll","entityManager_USER_ID","entityManager_EntityManager","entities","initParEntity","addBaseCLassese","truePk","viewPartsLoader_ViewPartsLoader","pb","progressBar_ProgressBar","title_Title","titleId","titlePrefix","prefix","no","pageNo","setting","series","pageNum","images","pages","outputsPars","listing","images_Images","binary","thumbnail","modifyDate","width","height","thumbnales_Thumbnales","series_Series","Sorter","colName","func","execute","isDESC","sort","orders","objA","objB","order","thinninged","element","fileUploadExecuter_FileUploadExecuter","actionDispatcher","createStandAlone","mainService_MainService","getInstance","file","read","errorHandler","onprogress","updateProgress","onloadstart","onLoadStart","abort","creatRemoveAction","code","NOT_FOUND_ERR","NOT_READABLE_ERR","ABORT_ERR","percentLoaded","round","loaded","total","creatUpdateAction","progress","creatCompleatAction","creatAddAction","defaultTitle","defaultName","defaultTitlePrefix","titleManager_TitleManager","ip","im","tbm","sm","currentTitle","title","Title","createTitle","createDefault","newTitleId","loadTitle","thinningNullData","image","titelId","titelPrefix","loadCurrent","iamageEntitis","imagePk","imageEntity","saveImageFile","saveTitle","imageEntityPk","settingEntityLoad","loadByPk","loadThumbnails","updateImagesListing","binaryManager_BinaryManager","binaryPk","binEntity","binaryEntitySaved","pages_Pages","previewThumbnail","outputImage","outputExpandImage","outputDualImage","baseImage","pagesManager_PagesManager","tm","pagePk","pageEntity","thumbnailPk","thumbnailEntity","parentPk","Pages","pageEntitis","fromPk","toPk","targetFrom","targetTo","previewThumbnailFrom","previewThumbnailTo","outputImageFrom","outputImageTo","thumbnailFrom","thumbnailTo","baseImageFrom","baseImageTo","page","settings_Settings","startPage","pageDelection","outputProfile","settingsManager_SettingsManager","opm","titilePk","Settings","settings","getDefaultPk","pageDirection","outputProfiles_OutputProfiles","pageSize","defaultPk","outputProfilesManager_OutputProfilesManager","outputProfiles","OutputProfiles","outputProfilePK","savedOne","Setting","Thumbnales","imageOutputs_ImageOutputs","orderName","imageOutputsManager_ImageOutputsManager","ImageOutputs","imageOutputs","imageEntitySaved","loadedImageMap","imageManager_ImageManager","Images","createRetList","getEntitisAsList","imageEntitis","thumbnailBinaryPk","fue","imgElm","createImageNodeByData","createThumbnail","arrayBufferThumbnail","dataURI2ArrayBuffer","imgElmThumb","imageList","orderBy","loadFromImagePk","processParImage","binaryEntity","imageText","escape","isOnPage","entries","thumbnailManager_ThumbnaleManager","SettingData","pageStart","l2r","r2l","pageNums","dpis","dpi72","dpi150","dpi300","dpi350","dpi600","dpi1200","same","printMargin","none","conbini","basePaper","A5","frame","multiple","B5","A4","mangaPaperB5","mangaPaperA4","mangaPaperA4ExpandTatikiri","mangaPaperB4","mangaPaperA3","pure_fit","paperSizeSet","A6","B6","B4","A3","ExportOrders","dpiName","paper_Paper","paparSize","basePaperSet","dpi","cropSizeMm","calcClopOffsetMm","calcPixcel","targetPaper","offset","targetSize","getPaperSizeMm","frameSize","targetX","targetY","getTargetPaperSizeMm","getDpi","mm","floor","pixcel","paperSize","marginSetting","margin","getPrintMargin","mpi","getPixcelSizeWithMargin","mmWidth","mmHeight","mmMargin","mmMarginDual","getPixcelSize","ImageMerger","byteX","maxByte","imageDataBase","isBaseWhite","beWhiteImage","mergeImages","linier","multiplication","imageData","addWidth","addHeight","offsetY","offsetX","addOffsetY","endY","addOffsetX","endX","maxY","maxX","iy","addPixcelIndexY","ix","addPixcelIndexX","basePixcelIndex","addOne","addPixcelIndex","indexAdd","addOaddOffsetXne","trimByte","ImageResizer","alpha","sin","PI","abs","sincLanczos","iamegData","distImage","distBitmap","newWidth","newHeight","Uint8ClampedArray","resizeByCubic","originBitmap","sourceWidth","sourceHeight","resizeExecute","lanczosWeight","culcWeightByCubic","newWidthF","newHeightF","weightFunc","sw","sw4","swLimit","sh","shLimit","wf","hf","dist","sizeHalf","sizeHalfm1","wfy","startY","y32bitOffsetDist","wfx","startX","jy","weightY","y32bitOffset","jx","offset32bit","offset32bitDist","imgRe","imageProcessor_ImageProcessor","canvas","createCanvas","ctx","getContext","paper","imageMerger","imageResizer","body","maxWidth","maxHeight","origin","getImageDataFromArrayBuffer","resizeInMaxSize","sizeOfPaper","getPixcelSizeBySelected","newPaperData","createImageData","sizeOfImage","marginMM","getOffset","len","maegeReplace","putImageData","dataUri","toDataURL","time","abResized","timeEnd","isWidthGreater","retio","newImageData","resize","arrayBuffer2DataURI","img","Image","drawImage","getImageData","iamgeBitmapData","quority","option","getArrayBufferFromImageBitmapData","widthScale","heightScale","scale","clearRect","exportPng","createImage","match","imageProcessService_ImageProcessService","retURI","resizeAsPaper","imageBitmapData","getArrayBufferFromImageBitmapDataAsJpg","getArrayBufferFromImageBitmapDataAsPng","mainServiceImpl","vpl","initAsNewUser","bm","pm","iom","setTitleManager","thread_thread","progressViewReducer","progressViewReducer_ProgressViewReducer","progressBarAddAction","progressBarRemoveAction","progressBarUpdateAction","progressBarCompleatSortAction","createProgress","isVisible","isComple","initPoint","register","display","showProgress","BaseEventHandler","imageActionCreator_ImageActionCreator","pageActionCreator_PageActionCreator","pageProcessor_PageProcessor","loadSettings","resetPages","delPages","addPageAsNew","delTarget","keyIndex","move","addPage","removeImage","imageViewReducer","imageViewReducer_ImageViewReducer","imagAddAction","imageRemoveAction","imagesLoadAction","creatLoadImagesAction","imagesSortAction","creatSortImagesAction","imagesChangeTitleAction","creatChangeTitleImagesAction","imagesDetailAction","creatDetailAction","pp","storeImagesKey","getStoreImagesKey","storePagesKey","getStorePagesKey","saveFiles","loadPages","imagePKforDelete","loadImages","imagePKmove","imagePKdrop","loadAImage","imagePK","addImageFiles","movePk","dropPk","converterMap","convertedPk","imageEntityConverted","getFromLoaded","resetPagesFull","removeLoaded","getRetObjsAsList","fileUploader_FileUploader","fileProcessor","stopPropagation","preventDefault","handleFiles","dataTransfer","actin","areadParFile","fileUploadArea_text","fileUploadArea_FileUploadArea","fu","FileUploadFile","change","handleFileSelect","fileUploadArea","dragover","handleDrop","drop","re_yyyy","re_MM","re_dd","re_hh","re_mm","re_ss","timeUtil_unixTimeToDateFormat","unixtime","format","year","month","day","hour","min","sec","settingActionCreator_SettingActionCreator","settingViewReducer","settingViewReducer_SettingViewReducer","creatAction","creatLoadAction","getStoreKey","storeKeyOpm","getStoreKeyOpm","reset","titleSettings_TitleSettings","bodyId","showSettings","nameInput","pageNumInput","startPageInput","pageDirectionInput","outputProfileInput","labelClass","inputClass","nameLabel","nameRow","pageNumLabel","idpageNumInput","pageNumRow","startPageLabel","idStartPageInput","startPageRow","pageDirectionLabel","idPageDirectionInput","pageDirectionRow","outputProfileLabel","idOutputProfileInput","outputProfileRow","frameL","frameR","childlen","exportActionCreator_ExportActionCreator","imageCropper_ImageCropper","newHieght","imagaDataBase","distData","UnicodeEncoder","charCode1","charCode2","str","codePoints","charCode","surrogatePairToCodePoint","stringParts","codePointCharCodes","codePoint","codes","stringToCodePointArray","endian","previewProcessor_PreviewProcessor","previewMaxWidth","previewMaxHeight","retPreviews","pageEnitity","resizeAsPaperB5_72","previews","isSingle","cratePageData","getCratePageDataFunc","retSetLis","dummyClass","buildPageFrames","isRight","binaries","isDummy","retFrames","isPageDirectionR2L","isPageStartR","frameNum","ceil","isOdd","isMatchPageStartSide","totalPageFrame","isStartFull","leftStartDummyClass","rightStartDummyClass","leftEndDummyClass","rightEndDummyClass","lastIndex","pagNo","pageOffset","leftPageNo","rightPageNo","pagePair","leftPageNoFirst","rightPageNoFirst","exportImageProcesser_order","exportImageProcesser_ExportImageProcesser","imageCropper","exportOrders","executeParOrder","targetDpi","getTargetPaperSize","clopOffset","calcClopOffsetPixcel","frameSizeMm","getPaperFrameSizeMm","expandAndCropSize","isRightStart","isSideSynced","hasAddSet","exportDualImage4Print","compressed","exoprtAsZip","getExports","exportImagePk","outputOld","exportPk","imageOutput","outputNew","getTime","yyyyMMddThhmmss","exportImageNewPk","getCurrentTitleName","saveCurrent","expandedPaper","cropedPaper","targetRetio","currentDataAb","baseImageEntity","baseBinaryEntity","isWider","longPixcel","longMm","sizeWhitePaperWidth","calcDpi","sizeWhitePaperHeight","whitePaper","resizeAsByCubic","corpImageToData","zip","zip_min","Zip","lastOne","outputBinaryEntity","addFile","stringToByteArray","cropedPaperDual","pairPages","right","left","rightBin","leftBin","printPages","printPairs","newPair","printPagePair","buildDualImage","shapedPagePair","one","two","cropedPaperDualAb","exportUtilProcesser_ExportUtilProcesser","exportPks","getZipPdfPair","exportｓIndex","pdf","imageOutpus","exportReducer","exportReducer_ExportReducer","exportExecuteAction","createExecuteAction","exportExecuteAllAction","creatExecuteAllAction","exportRemoveAction","exportsLoadAction","exportDownloadAction","createDownloadAction","exportExecutePdfAction","createExecutePdfAction","exportDownloadPdfAction","createDownloadPdfAction","selectOrderAction","createSelectOrderAction","eip","eup","storePdfDLKey","getStorePdfDLKey","storeZipDLKey","getStoreZipDLKey","storeRemoveResultKey","getStoreRemoveResultKey","storeExportResultKey","getStoreExportResultKey","storeSelectedOrderKey","getStoreSelectedOrderKey","loadPks","exportExecute","exportPdfExecute","loadZip","loadPdf","exportAllButton_ExportAllButton","FileDownloader","fileName","mimeType","ancker","download","downloadurl","exportImgZipButton_ExportImgZipButton","stateId","isExported","buttonName","exportedState","buildButton","exportString","confirm","exportPdfButton_ExportPdfButton","unixTimeToDateFormat","downloadLastExportZipButton_DownloadLastExportZipButton","downloadLastExportPdfButton_DownloadLastExportPdfButton","deleteExportOneButton_DeleteExportOneButton","exportButton_ExportButton","exportAllButton","exportImgZipButton","exportPdfButton","downloadLastExportZipButton","downloadLastExportPdfButton","deleteExportOneButton","attach","exportOrderRow_ExportOrderRow","selectOrder","ordersMap","imageAreaID","ordersList","exportOrderList_ExportOrderList","exportOrderRow","buildRows","exportArea_ExportArea","exportButton","exportOrderList","imageDetail_ImageDetail","isOnScroll","imagesDetailData","showImage","imgVnode","textVnode","mousedown","onMouseOn","mousemove","onMouseMove","top","clientX","offsetX１","clientY","offsetY１","currentX","currentY","targetNode","pageImage_PageImage","draggableArea","thumbnail_block","button","pageData","dragImageSrc","dropElm","contains","opacity","nowSelectedElm","effectAllowed","setData","dragIcon","setDragImage","dropEffect","selectedPk","targetPk","is_image","creatAddPageAction","is_page","creatSortPagesAction","formPk","cancelPageArea","creatRemovePageAction","imageBg","background-image","rowVnode","dragstart","handleDragStart","handleDragOver","dragenter","handleDragEnter","dragleave","handleDragLeave","dragend","handleDragEnd","selectImage","draggable","previewActionCreator_PreviewActionCreator","pageImages_PageImages","childId","thumbnails","lastSettingOne","lastPagesData","lastImagesData","pagesData","imagesData","pagesDataJson","imagesDataJson","showPages","settingsJson","pageFrames","imagesPk","imageMap","setPageData","renderVnode","frameParts","sideClass","pageIndex","creatOpenAction","previewSingle","showPreviewSingle","previewDouble","showPreviewDual","frames","buildPreviewButtons","creatPageFrame","previewReducer","previewReducer_PreviewReducer","pvp","previewOpenAction","previewCloseAction","creatCloseAction","previewNextAction","creatNextAction","previewBackAction","creatBackAction","getStorePreviewKey","storeSettingKey","loadPreviews","nowSetNum","shapeListBySets","preview_Preview","currentSetNum","classNameRight","classNameLeft","dummyClassName","closeActionType","viewFrame","beClose","closePreview","pageSetCount","isR2L","showPreview","pageSet","mainView","goNext","goBack","buildImageArea","doNothing","lNo","rNo","imgVnodeL","imgVnodeR","binalyEnitiy","info","noimageMsg","pageNoString","thumbnail_Thumbnail","displayNone","pagesMap","delButton","imageVnode","classObj","thumbnails_Thumbnails","pageMap","thumbnails_block","updatePageMap","showImages","imageDatas","crateDataLine","pagesViewReducer","pagesViewReducer_PagesViewReducer","pageAddAction","pageRemoveAction","pagesResetAction","creatResetPagesAction","pagesSortAction","dropImageToPageAction","filesArea_FilesArea","imageDetail","pageImages","preview","container_Container","titleSettings","filesArea","exportArea","progressBar","footer_Footer","copyright","mainFrame_MainFrame","setMainService","initialize","header","footer","container","menu","baseFrame","initialPatch","main_title","main_CopiBonService","mainService","mf","main","vnode_vnode","es_vnode","htmldomapi","copyToThunk","thunk","prepatch","old","oldArgs","thunk_thunk","hook","isUndef","isDef","emptyNode","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","ch","hooks","snabbdom_init","cbs","createRmCb","childElm","listeners","parent_1","createElm","insertedVnodeQueue","hashIdx","dotIdx","hash","dot","insert","addVnodes","parentElm","vnodes","startIdx","invokeDestroyHook","removeVnodes","i_1","patchVnode","oldCh","newCh","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","updateChildren","postpatch","pre","isVnode","emptyNodeAt","post"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dest/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","const defaultWorker = \"./dest/worker.js\";\nexport class Thread {\n  constructor(workerJsPath = defaultWorker) {\n    this.worker = new Worker(workerJsPath);\n  }\n  postMessage(key, dataMap) {\n    return new Promise((resolve, reject) => {\n      const {transObject, tranceArray} = Thread.buildPostObj(key, dataMap);\n      this.worker.postMessage(transObject, tranceArray);\n      this.worker.onmessage = (event)=> {\n        resolve(event.data);\n      }\n      this.worker.onerror = (event)=> {\n        reject(event);\n      }\n    });\n  }\n  static buildPostObj(key, dataMap){\n    const tranceArray = [];\n    const transObject = {\n      key: key\n    };\n    if (!dataMap) {\n      // nothig todo\n    } else if (Array.isArray(dataMap)) {\n      let count = 0;\n      for (let value of dataList) {\n        if (value.buffer) {\n          tranceArray.push(value.buffer);\n        } else if (value.byteLength) {\n          tranceArray.push(value);\n        }\n        transObject[count] = value;\n        count++;\n      }\n    } else if (typeof dataMap === 'object' && Object.keys(dataMap).length > 0) {\n      for (let key in Object.keys(dataMap)) {\n        const value = dataMap[dataMap];\n        transObject[key] = value;\n        if (value.buffer) {\n          tranceArray.push(value.buffer);\n        } else if (value.byteLength) {\n          tranceArray.push(value);\n        }\n      }\n    }\n    const retData = {transObject:transObject,tranceArray:tranceArray};\n    return retData;\n  }\n  close(){\n    this.worker.terminate();\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction vnode(sel, data, children, text, elm) {\n    var key = data === undefined ? undefined : data.key;\n    return { sel: sel, data: data, children: children,\n        text: text, elm: elm, key: key };\n}\nexports.vnode = vnode;\nexports.default = vnode;\n//# sourceMappingURL=vnode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction updateClass(oldVnode, vnode) {\n    var cur, name, elm = vnode.elm, oldClass = oldVnode.data.class, klass = vnode.data.class;\n    if (!oldClass && !klass)\n        return;\n    if (oldClass === klass)\n        return;\n    oldClass = oldClass || {};\n    klass = klass || {};\n    for (name in oldClass) {\n        if (!klass[name]) {\n            elm.classList.remove(name);\n        }\n    }\n    for (name in klass) {\n        cur = klass[name];\n        if (cur !== oldClass[name]) {\n            elm.classList[cur ? 'add' : 'remove'](name);\n        }\n    }\n}\nexports.classModule = { create: updateClass, update: updateClass };\nexports.default = exports.classModule;\n//# sourceMappingURL=class.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar raf = (typeof window !== 'undefined' && window.requestAnimationFrame) || setTimeout;\nvar nextFrame = function (fn) { raf(function () { raf(fn); }); };\nfunction setNextFrame(obj, prop, val) {\n    nextFrame(function () { obj[prop] = val; });\n}\nfunction updateStyle(oldVnode, vnode) {\n    var cur, name, elm = vnode.elm, oldStyle = oldVnode.data.style, style = vnode.data.style;\n    if (!oldStyle && !style)\n        return;\n    if (oldStyle === style)\n        return;\n    oldStyle = oldStyle || {};\n    style = style || {};\n    var oldHasDel = 'delayed' in oldStyle;\n    for (name in oldStyle) {\n        if (!style[name]) {\n            if (name[0] === '-' && name[1] === '-') {\n                elm.style.removeProperty(name);\n            }\n            else {\n                elm.style[name] = '';\n            }\n        }\n    }\n    for (name in style) {\n        cur = style[name];\n        if (name === 'delayed' && style.delayed) {\n            for (var name2 in style.delayed) {\n                cur = style.delayed[name2];\n                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {\n                    setNextFrame(elm.style, name2, cur);\n                }\n            }\n        }\n        else if (name !== 'remove' && cur !== oldStyle[name]) {\n            if (name[0] === '-' && name[1] === '-') {\n                elm.style.setProperty(name, cur);\n            }\n            else {\n                elm.style[name] = cur;\n            }\n        }\n    }\n}\nfunction applyDestroyStyle(vnode) {\n    var style, name, elm = vnode.elm, s = vnode.data.style;\n    if (!s || !(style = s.destroy))\n        return;\n    for (name in style) {\n        elm.style[name] = style[name];\n    }\n}\nfunction applyRemoveStyle(vnode, rm) {\n    var s = vnode.data.style;\n    if (!s || !s.remove) {\n        rm();\n        return;\n    }\n    var name, elm = vnode.elm, i = 0, compStyle, style = s.remove, amount = 0, applied = [];\n    for (name in style) {\n        applied.push(name);\n        elm.style[name] = style[name];\n    }\n    compStyle = getComputedStyle(elm);\n    var props = compStyle['transition-property'].split(', ');\n    for (; i < props.length; ++i) {\n        if (applied.indexOf(props[i]) !== -1)\n            amount++;\n    }\n    elm.addEventListener('transitionend', function (ev) {\n        if (ev.target === elm)\n            --amount;\n        if (amount === 0)\n            rm();\n    });\n}\nexports.styleModule = {\n    create: updateStyle,\n    update: updateStyle,\n    destroy: applyDestroyStyle,\n    remove: applyRemoveStyle\n};\nexports.default = exports.styleModule;\n//# sourceMappingURL=style.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction updateProps(oldVnode, vnode) {\n    var key, cur, old, elm = vnode.elm, oldProps = oldVnode.data.props, props = vnode.data.props;\n    if (!oldProps && !props)\n        return;\n    if (oldProps === props)\n        return;\n    oldProps = oldProps || {};\n    props = props || {};\n    for (key in oldProps) {\n        if (!props[key]) {\n            delete elm[key];\n        }\n    }\n    for (key in props) {\n        cur = props[key];\n        old = oldProps[key];\n        if (old !== cur && (key !== 'value' || elm[key] !== cur)) {\n            elm[key] = cur;\n        }\n    }\n}\nexports.propsModule = { create: updateProps, update: updateProps };\nexports.default = exports.propsModule;\n//# sourceMappingURL=props.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xmlNS = 'http://www.w3.org/XML/1998/namespace';\nvar colonChar = 58;\nvar xChar = 120;\nfunction updateAttrs(oldVnode, vnode) {\n    var key, elm = vnode.elm, oldAttrs = oldVnode.data.attrs, attrs = vnode.data.attrs;\n    if (!oldAttrs && !attrs)\n        return;\n    if (oldAttrs === attrs)\n        return;\n    oldAttrs = oldAttrs || {};\n    attrs = attrs || {};\n    // update modified attributes, add new attributes\n    for (key in attrs) {\n        var cur = attrs[key];\n        var old = oldAttrs[key];\n        if (old !== cur) {\n            if (cur === true) {\n                elm.setAttribute(key, \"\");\n            }\n            else if (cur === false) {\n                elm.removeAttribute(key);\n            }\n            else {\n                if (key.charCodeAt(0) !== xChar) {\n                    elm.setAttribute(key, cur);\n                }\n                else if (key.charCodeAt(3) === colonChar) {\n                    // Assume xml namespace\n                    elm.setAttributeNS(xmlNS, key, cur);\n                }\n                else if (key.charCodeAt(5) === colonChar) {\n                    // Assume xlink namespace\n                    elm.setAttributeNS(xlinkNS, key, cur);\n                }\n                else {\n                    elm.setAttribute(key, cur);\n                }\n            }\n        }\n    }\n    // remove removed attributes\n    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)\n    // the other option is to remove all attributes with value == undefined\n    for (key in oldAttrs) {\n        if (!(key in attrs)) {\n            elm.removeAttribute(key);\n        }\n    }\n}\nexports.attributesModule = { create: updateAttrs, update: updateAttrs };\nexports.default = exports.attributesModule;\n//# sourceMappingURL=attributes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CAPS_REGEX = /[A-Z]/g;\nfunction updateDataset(oldVnode, vnode) {\n    var elm = vnode.elm, oldDataset = oldVnode.data.dataset, dataset = vnode.data.dataset, key;\n    if (!oldDataset && !dataset)\n        return;\n    if (oldDataset === dataset)\n        return;\n    oldDataset = oldDataset || {};\n    dataset = dataset || {};\n    var d = elm.dataset;\n    for (key in oldDataset) {\n        if (!dataset[key]) {\n            if (d) {\n                if (key in d) {\n                    delete d[key];\n                }\n            }\n            else {\n                elm.removeAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase());\n            }\n        }\n    }\n    for (key in dataset) {\n        if (oldDataset[key] !== dataset[key]) {\n            if (d) {\n                d[key] = dataset[key];\n            }\n            else {\n                elm.setAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase(), dataset[key]);\n            }\n        }\n    }\n}\nexports.datasetModule = { create: updateDataset, update: updateDataset };\nexports.default = exports.datasetModule;\n//# sourceMappingURL=dataset.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction invokeHandler(handler, vnode, event) {\n    if (typeof handler === \"function\") {\n        // call function handler\n        handler.call(vnode, event, vnode);\n    }\n    else if (typeof handler === \"object\") {\n        // call handler with arguments\n        if (typeof handler[0] === \"function\") {\n            // special case for single argument for performance\n            if (handler.length === 2) {\n                handler[0].call(vnode, handler[1], event, vnode);\n            }\n            else {\n                var args = handler.slice(1);\n                args.push(event);\n                args.push(vnode);\n                handler[0].apply(vnode, args);\n            }\n        }\n        else {\n            // call multiple handlers\n            for (var i = 0; i < handler.length; i++) {\n                invokeHandler(handler[i]);\n            }\n        }\n    }\n}\nfunction handleEvent(event, vnode) {\n    var name = event.type, on = vnode.data.on;\n    // call event handler(s) if exists\n    if (on && on[name]) {\n        invokeHandler(on[name], vnode, event);\n    }\n}\nfunction createListener() {\n    return function handler(event) {\n        handleEvent(event, handler.vnode);\n    };\n}\nfunction updateEventListeners(oldVnode, vnode) {\n    var oldOn = oldVnode.data.on, oldListener = oldVnode.listener, oldElm = oldVnode.elm, on = vnode && vnode.data.on, elm = (vnode && vnode.elm), name;\n    // optimization for reused immutable handlers\n    if (oldOn === on) {\n        return;\n    }\n    // remove existing listeners which no longer used\n    if (oldOn && oldListener) {\n        // if element changed or deleted we remove all existing listeners unconditionally\n        if (!on) {\n            for (name in oldOn) {\n                // remove listener if element was changed or existing listeners removed\n                oldElm.removeEventListener(name, oldListener, false);\n            }\n        }\n        else {\n            for (name in oldOn) {\n                // remove listener if existing listener removed\n                if (!on[name]) {\n                    oldElm.removeEventListener(name, oldListener, false);\n                }\n            }\n        }\n    }\n    // add new listeners which has not already attached\n    if (on) {\n        // reuse existing listener or create new\n        var listener = vnode.listener = oldVnode.listener || createListener();\n        // update vnode for listener\n        listener.vnode = vnode;\n        // if element changed or added we add all needed listeners unconditionally\n        if (!oldOn) {\n            for (name in on) {\n                // add listener if element was changed or new listeners added\n                elm.addEventListener(name, listener, false);\n            }\n        }\n        else {\n            for (name in on) {\n                // add listener if new listener added\n                if (!oldOn[name]) {\n                    elm.addEventListener(name, listener, false);\n                }\n            }\n        }\n    }\n}\nexports.eventListenersModule = {\n    create: updateEventListeners,\n    update: updateEventListeners,\n    destroy: updateEventListeners\n};\nexports.default = exports.eventListenersModule;\n//# sourceMappingURL=eventlisteners.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vnode_1 = require(\"./vnode\");\nvar is = require(\"./is\");\nfunction addNS(data, children, sel) {\n    data.ns = 'http://www.w3.org/2000/svg';\n    if (sel !== 'foreignObject' && children !== undefined) {\n        for (var i = 0; i < children.length; ++i) {\n            var childData = children[i].data;\n            if (childData !== undefined) {\n                addNS(childData, children[i].children, children[i].sel);\n            }\n        }\n    }\n}\nfunction h(sel, b, c) {\n    var data = {}, children, text, i;\n    if (c !== undefined) {\n        data = b;\n        if (is.array(c)) {\n            children = c;\n        }\n        else if (is.primitive(c)) {\n            text = c;\n        }\n        else if (c && c.sel) {\n            children = [c];\n        }\n    }\n    else if (b !== undefined) {\n        if (is.array(b)) {\n            children = b;\n        }\n        else if (is.primitive(b)) {\n            text = b;\n        }\n        else if (b && b.sel) {\n            children = [b];\n        }\n        else {\n            data = b;\n        }\n    }\n    if (is.array(children)) {\n        for (i = 0; i < children.length; ++i) {\n            if (is.primitive(children[i]))\n                children[i] = vnode_1.vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&\n        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {\n        addNS(data, children, sel);\n    }\n    return vnode_1.vnode(sel, data, children, text, undefined);\n}\nexports.h = h;\n;\nexports.default = h;\n//# sourceMappingURL=h.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vnode_1 = require(\"./vnode\");\nvar htmldomapi_1 = require(\"./htmldomapi\");\nfunction toVNode(node, domApi) {\n    var api = domApi !== undefined ? domApi : htmldomapi_1.default;\n    var text;\n    if (api.isElement(node)) {\n        var id = node.id ? '#' + node.id : '';\n        var cn = node.getAttribute('class');\n        var c = cn ? '.' + cn.split(' ').join('.') : '';\n        var sel = api.tagName(node).toLowerCase() + id + c;\n        var attrs = {};\n        var children = [];\n        var name_1;\n        var i = void 0, n = void 0;\n        var elmAttrs = node.attributes;\n        var elmChildren = node.childNodes;\n        for (i = 0, n = elmAttrs.length; i < n; i++) {\n            name_1 = elmAttrs[i].nodeName;\n            if (name_1 !== 'id' && name_1 !== 'class') {\n                attrs[name_1] = elmAttrs[i].nodeValue;\n            }\n        }\n        for (i = 0, n = elmChildren.length; i < n; i++) {\n            children.push(toVNode(elmChildren[i]));\n        }\n        return vnode_1.default(sel, { attrs: attrs }, children, undefined, node);\n    }\n    else if (api.isText(node)) {\n        text = api.getTextContent(node);\n        return vnode_1.default(undefined, undefined, undefined, text, node);\n    }\n    else if (api.isComment(node)) {\n        text = api.getTextContent(node);\n        return vnode_1.default('!', {}, [], text, node);\n    }\n    else {\n        return vnode_1.default('', {}, [], undefined, node);\n    }\n}\nexports.toVNode = toVNode;\nexports.default = toVNode;\n//# sourceMappingURL=tovnode.js.map","/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {'use strict';var n=void 0,y=!0,aa=this;function G(e,b){var a=e.split(\".\"),d=aa;!(a[0]in d)&&d.execScript&&d.execScript(\"var \"+a[0]);for(var c;a.length&&(c=a.shift());)!a.length&&b!==n?d[c]=b:d=d[c]?d[c]:d[c]={}};var H=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function ba(e,b){this.index=\"number\"===typeof b?b:0;this.f=0;this.buffer=e instanceof(H?Uint8Array:Array)?e:new (H?Uint8Array:Array)(32768);if(2*this.buffer.length<=this.index)throw Error(\"invalid index\");this.buffer.length<=this.index&&ca(this)}function ca(e){var b=e.buffer,a,d=b.length,c=new (H?Uint8Array:Array)(d<<1);if(H)c.set(b);else for(a=0;a<d;++a)c[a]=b[a];return e.buffer=c}\nba.prototype.b=function(e,b,a){var d=this.buffer,c=this.index,f=this.f,l=d[c],p;a&&1<b&&(e=8<b?(L[e&255]<<24|L[e>>>8&255]<<16|L[e>>>16&255]<<8|L[e>>>24&255])>>32-b:L[e]>>8-b);if(8>b+f)l=l<<b|e,f+=b;else for(p=0;p<b;++p)l=l<<1|e>>b-p-1&1,8===++f&&(f=0,d[c++]=L[l],l=0,c===d.length&&(d=ca(this)));d[c]=l;this.buffer=d;this.f=f;this.index=c};ba.prototype.finish=function(){var e=this.buffer,b=this.index,a;0<this.f&&(e[b]<<=8-this.f,e[b]=L[e[b]],b++);H?a=e.subarray(0,b):(e.length=b,a=e);return a};\nvar da=new (H?Uint8Array:Array)(256),ha;for(ha=0;256>ha;++ha){for(var U=ha,ja=U,ka=7,U=U>>>1;U;U>>>=1)ja<<=1,ja|=U&1,--ka;da[ha]=(ja<<ka&255)>>>0}var L=da;function la(e){var b=n,a,d=\"number\"===typeof b?b:b=0,c=e.length;a=-1;for(d=c&7;d--;++b)a=a>>>8^V[(a^e[b])&255];for(d=c>>3;d--;b+=8)a=a>>>8^V[(a^e[b])&255],a=a>>>8^V[(a^e[b+1])&255],a=a>>>8^V[(a^e[b+2])&255],a=a>>>8^V[(a^e[b+3])&255],a=a>>>8^V[(a^e[b+4])&255],a=a>>>8^V[(a^e[b+5])&255],a=a>>>8^V[(a^e[b+6])&255],a=a>>>8^V[(a^e[b+7])&255];return(a^4294967295)>>>0}\nvar ma=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,\n2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,\n2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,\n2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,\n3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,\n936918E3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],V=H?new Uint32Array(ma):ma;function na(e){this.buffer=new (H?Uint16Array:Array)(2*e);this.length=0}na.prototype.getParent=function(e){return 2*((e-2)/4|0)};na.prototype.push=function(e,b){var a,d,c=this.buffer,f;a=this.length;c[this.length++]=b;for(c[this.length++]=e;0<a;)if(d=this.getParent(a),c[a]>c[d])f=c[a],c[a]=c[d],c[d]=f,f=c[a+1],c[a+1]=c[d+1],c[d+1]=f,a=d;else break;return this.length};\nna.prototype.pop=function(){var e,b,a=this.buffer,d,c,f;b=a[0];e=a[1];this.length-=2;a[0]=a[this.length];a[1]=a[this.length+1];for(f=0;;){c=2*f+2;if(c>=this.length)break;c+2<this.length&&a[c+2]>a[c]&&(c+=2);if(a[c]>a[f])d=a[f],a[f]=a[c],a[c]=d,d=a[f+1],a[f+1]=a[c+1],a[c+1]=d;else break;f=c}return{index:e,value:b,length:this.length}};function pa(e,b){this.k=qa;this.l=0;this.input=H&&e instanceof Array?new Uint8Array(e):e;this.e=0;b&&(b.lazy&&(this.l=b.lazy),\"number\"===typeof b.compressionType&&(this.k=b.compressionType),b.outputBuffer&&(this.c=H&&b.outputBuffer instanceof Array?new Uint8Array(b.outputBuffer):b.outputBuffer),\"number\"===typeof b.outputIndex&&(this.e=b.outputIndex));this.c||(this.c=new (H?Uint8Array:Array)(32768))}var qa=2,sa=[],Y;\nfor(Y=0;288>Y;Y++)switch(y){case 143>=Y:sa.push([Y+48,8]);break;case 255>=Y:sa.push([Y-144+400,9]);break;case 279>=Y:sa.push([Y-256+0,7]);break;case 287>=Y:sa.push([Y-280+192,8]);break;default:throw\"invalid literal: \"+Y;}\npa.prototype.g=function(){var e,b,a,d,c=this.input;switch(this.k){case 0:a=0;for(d=c.length;a<d;){b=H?c.subarray(a,a+65535):c.slice(a,a+65535);a+=b.length;var f=b,l=a===d,p=n,k=n,q=n,w=n,u=n,m=this.c,h=this.e;if(H){for(m=new Uint8Array(this.c.buffer);m.length<=h+f.length+5;)m=new Uint8Array(m.length<<1);m.set(this.c)}p=l?1:0;m[h++]=p|0;k=f.length;q=~k+65536&65535;m[h++]=k&255;m[h++]=k>>>8&255;m[h++]=q&255;m[h++]=q>>>8&255;if(H)m.set(f,h),h+=f.length,m=m.subarray(0,h);else{w=0;for(u=f.length;w<u;++w)m[h++]=\nf[w];m.length=h}this.e=h;this.c=m}break;case 1:var s=new ba(H?new Uint8Array(this.c.buffer):this.c,this.e);s.b(1,1,y);s.b(1,2,y);var t=ta(this,c),r,Q,z;r=0;for(Q=t.length;r<Q;r++)if(z=t[r],ba.prototype.b.apply(s,sa[z]),256<z)s.b(t[++r],t[++r],y),s.b(t[++r],5),s.b(t[++r],t[++r],y);else if(256===z)break;this.c=s.finish();this.e=this.c.length;break;case qa:var A=new ba(H?new Uint8Array(this.c.buffer):this.c,this.e),F,I,N,B,C,g=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],J,ea,O,W,X,oa=Array(19),\nya,Z,ia,D,za;F=qa;A.b(1,1,y);A.b(F,2,y);I=ta(this,c);J=ua(this.p,15);ea=va(J);O=ua(this.o,7);W=va(O);for(N=286;257<N&&0===J[N-1];N--);for(B=30;1<B&&0===O[B-1];B--);var Aa=N,Ba=B,P=new (H?Uint32Array:Array)(Aa+Ba),v,R,x,fa,M=new (H?Uint32Array:Array)(316),K,E,S=new (H?Uint8Array:Array)(19);for(v=R=0;v<Aa;v++)P[R++]=J[v];for(v=0;v<Ba;v++)P[R++]=O[v];if(!H){v=0;for(fa=S.length;v<fa;++v)S[v]=0}v=K=0;for(fa=P.length;v<fa;v+=R){for(R=1;v+R<fa&&P[v+R]===P[v];++R);x=R;if(0===P[v])if(3>x)for(;0<x--;)M[K++]=\n0,S[0]++;else for(;0<x;)E=138>x?x:138,E>x-3&&E<x&&(E=x-3),10>=E?(M[K++]=17,M[K++]=E-3,S[17]++):(M[K++]=18,M[K++]=E-11,S[18]++),x-=E;else if(M[K++]=P[v],S[P[v]]++,x--,3>x)for(;0<x--;)M[K++]=P[v],S[P[v]]++;else for(;0<x;)E=6>x?x:6,E>x-3&&E<x&&(E=x-3),M[K++]=16,M[K++]=E-3,S[16]++,x-=E}e=H?M.subarray(0,K):M.slice(0,K);X=ua(S,7);for(D=0;19>D;D++)oa[D]=X[g[D]];for(C=19;4<C&&0===oa[C-1];C--);ya=va(X);A.b(N-257,5,y);A.b(B-1,5,y);A.b(C-4,4,y);for(D=0;D<C;D++)A.b(oa[D],3,y);D=0;for(za=e.length;D<za;D++)if(Z=\ne[D],A.b(ya[Z],X[Z],y),16<=Z){D++;switch(Z){case 16:ia=2;break;case 17:ia=3;break;case 18:ia=7;break;default:throw\"invalid code: \"+Z;}A.b(e[D],ia,y)}var Ca=[ea,J],Da=[W,O],T,Ea,ga,ra,Fa,Ga,Ha,Ia;Fa=Ca[0];Ga=Ca[1];Ha=Da[0];Ia=Da[1];T=0;for(Ea=I.length;T<Ea;++T)if(ga=I[T],A.b(Fa[ga],Ga[ga],y),256<ga)A.b(I[++T],I[++T],y),ra=I[++T],A.b(Ha[ra],Ia[ra],y),A.b(I[++T],I[++T],y);else if(256===ga)break;this.c=A.finish();this.e=this.c.length;break;default:throw\"invalid compression type\";}return this.c};\nfunction wa(e,b){this.length=e;this.n=b}\nvar xa=function(){function e(a){switch(y){case 3===a:return[257,a-3,0];case 4===a:return[258,a-4,0];case 5===a:return[259,a-5,0];case 6===a:return[260,a-6,0];case 7===a:return[261,a-7,0];case 8===a:return[262,a-8,0];case 9===a:return[263,a-9,0];case 10===a:return[264,a-10,0];case 12>=a:return[265,a-11,1];case 14>=a:return[266,a-13,1];case 16>=a:return[267,a-15,1];case 18>=a:return[268,a-17,1];case 22>=a:return[269,a-19,2];case 26>=a:return[270,a-23,2];case 30>=a:return[271,a-27,2];case 34>=a:return[272,\na-31,2];case 42>=a:return[273,a-35,3];case 50>=a:return[274,a-43,3];case 58>=a:return[275,a-51,3];case 66>=a:return[276,a-59,3];case 82>=a:return[277,a-67,4];case 98>=a:return[278,a-83,4];case 114>=a:return[279,a-99,4];case 130>=a:return[280,a-115,4];case 162>=a:return[281,a-131,5];case 194>=a:return[282,a-163,5];case 226>=a:return[283,a-195,5];case 257>=a:return[284,a-227,5];case 258===a:return[285,a-258,0];default:throw\"invalid length: \"+a;}}var b=[],a,d;for(a=3;258>=a;a++)d=e(a),b[a]=d[2]<<24|\nd[1]<<16|d[0];return b}(),Ja=H?new Uint32Array(xa):xa;\nfunction ta(e,b){function a(a,c){var b=a.n,d=[],e=0,f;f=Ja[a.length];d[e++]=f&65535;d[e++]=f>>16&255;d[e++]=f>>24;var g;switch(y){case 1===b:g=[0,b-1,0];break;case 2===b:g=[1,b-2,0];break;case 3===b:g=[2,b-3,0];break;case 4===b:g=[3,b-4,0];break;case 6>=b:g=[4,b-5,1];break;case 8>=b:g=[5,b-7,1];break;case 12>=b:g=[6,b-9,2];break;case 16>=b:g=[7,b-13,2];break;case 24>=b:g=[8,b-17,3];break;case 32>=b:g=[9,b-25,3];break;case 48>=b:g=[10,b-33,4];break;case 64>=b:g=[11,b-49,4];break;case 96>=b:g=[12,b-\n65,5];break;case 128>=b:g=[13,b-97,5];break;case 192>=b:g=[14,b-129,6];break;case 256>=b:g=[15,b-193,6];break;case 384>=b:g=[16,b-257,7];break;case 512>=b:g=[17,b-385,7];break;case 768>=b:g=[18,b-513,8];break;case 1024>=b:g=[19,b-769,8];break;case 1536>=b:g=[20,b-1025,9];break;case 2048>=b:g=[21,b-1537,9];break;case 3072>=b:g=[22,b-2049,10];break;case 4096>=b:g=[23,b-3073,10];break;case 6144>=b:g=[24,b-4097,11];break;case 8192>=b:g=[25,b-6145,11];break;case 12288>=b:g=[26,b-8193,12];break;case 16384>=\nb:g=[27,b-12289,12];break;case 24576>=b:g=[28,b-16385,13];break;case 32768>=b:g=[29,b-24577,13];break;default:throw\"invalid distance\";}f=g;d[e++]=f[0];d[e++]=f[1];d[e++]=f[2];var k,l;k=0;for(l=d.length;k<l;++k)m[h++]=d[k];t[d[0]]++;r[d[3]]++;s=a.length+c-1;u=null}var d,c,f,l,p,k={},q,w,u,m=H?new Uint16Array(2*b.length):[],h=0,s=0,t=new (H?Uint32Array:Array)(286),r=new (H?Uint32Array:Array)(30),Q=e.l,z;if(!H){for(f=0;285>=f;)t[f++]=0;for(f=0;29>=f;)r[f++]=0}t[256]=1;d=0;for(c=b.length;d<c;++d){f=p=\n0;for(l=3;f<l&&d+f!==c;++f)p=p<<8|b[d+f];k[p]===n&&(k[p]=[]);q=k[p];if(!(0<s--)){for(;0<q.length&&32768<d-q[0];)q.shift();if(d+3>=c){u&&a(u,-1);f=0;for(l=c-d;f<l;++f)z=b[d+f],m[h++]=z,++t[z];break}0<q.length?(w=Ka(b,d,q),u?u.length<w.length?(z=b[d-1],m[h++]=z,++t[z],a(w,0)):a(u,-1):w.length<Q?u=w:a(w,0)):u?a(u,-1):(z=b[d],m[h++]=z,++t[z])}q.push(d)}m[h++]=256;t[256]++;e.p=t;e.o=r;return H?m.subarray(0,h):m}\nfunction Ka(e,b,a){var d,c,f=0,l,p,k,q,w=e.length;p=0;q=a.length;a:for(;p<q;p++){d=a[q-p-1];l=3;if(3<f){for(k=f;3<k;k--)if(e[d+k-1]!==e[b+k-1])continue a;l=f}for(;258>l&&b+l<w&&e[d+l]===e[b+l];)++l;l>f&&(c=d,f=l);if(258===l)break}return new wa(f,b-c)}\nfunction ua(e,b){var a=e.length,d=new na(572),c=new (H?Uint8Array:Array)(a),f,l,p,k,q;if(!H)for(k=0;k<a;k++)c[k]=0;for(k=0;k<a;++k)0<e[k]&&d.push(k,e[k]);f=Array(d.length/2);l=new (H?Uint32Array:Array)(d.length/2);if(1===f.length)return c[d.pop().index]=1,c;k=0;for(q=d.length/2;k<q;++k)f[k]=d.pop(),l[k]=f[k].value;p=La(l,l.length,b);k=0;for(q=f.length;k<q;++k)c[f[k].index]=p[k];return c}\nfunction La(e,b,a){function d(a){var c=k[a][q[a]];c===b?(d(a+1),d(a+1)):--l[c];++q[a]}var c=new (H?Uint16Array:Array)(a),f=new (H?Uint8Array:Array)(a),l=new (H?Uint8Array:Array)(b),p=Array(a),k=Array(a),q=Array(a),w=(1<<a)-b,u=1<<a-1,m,h,s,t,r;c[a-1]=b;for(h=0;h<a;++h)w<u?f[h]=0:(f[h]=1,w-=u),w<<=1,c[a-2-h]=(c[a-1-h]/2|0)+b;c[0]=f[0];p[0]=Array(c[0]);k[0]=Array(c[0]);for(h=1;h<a;++h)c[h]>2*c[h-1]+f[h]&&(c[h]=2*c[h-1]+f[h]),p[h]=Array(c[h]),k[h]=Array(c[h]);for(m=0;m<b;++m)l[m]=a;for(s=0;s<c[a-1];++s)p[a-\n1][s]=e[s],k[a-1][s]=s;for(m=0;m<a;++m)q[m]=0;1===f[a-1]&&(--l[0],++q[a-1]);for(h=a-2;0<=h;--h){t=m=0;r=q[h+1];for(s=0;s<c[h];s++)t=p[h+1][r]+p[h+1][r+1],t>e[m]?(p[h][s]=t,k[h][s]=b,r+=2):(p[h][s]=e[m],k[h][s]=m,++m);q[h]=0;1===f[h]&&d(h)}return l}\nfunction va(e){var b=new (H?Uint16Array:Array)(e.length),a=[],d=[],c=0,f,l,p,k;f=0;for(l=e.length;f<l;f++)a[e[f]]=(a[e[f]]|0)+1;f=1;for(l=16;f<=l;f++)d[f]=c,c+=a[f]|0,c<<=1;f=0;for(l=e.length;f<l;f++){c=d[e[f]];d[e[f]]+=1;p=b[f]=0;for(k=e[f];p<k;p++)b[f]=b[f]<<1|c&1,c>>>=1}return b};function $(e){e=e||{};this.files=[];this.d=e.comment}var Ma=[80,75,1,2],Na=[80,75,3,4],Oa=[80,75,5,6];$.prototype.m=function(e,b){b=b||{};var a,d=e.length,c=0;H&&e instanceof Array&&(e=new Uint8Array(e));\"number\"!==typeof b.compressionMethod&&(b.compressionMethod=8);if(b.compress)switch(b.compressionMethod){case 0:break;case 8:c=la(e);e=(new pa(e,b.deflateOption)).g();a=y;break;default:throw Error(\"unknown compression method:\"+b.compressionMethod);}this.files.push({buffer:e,a:b,j:a,r:!1,size:d,h:c})};\n$.prototype.q=function(e){this.i=e};\n$.prototype.g=function(){var e=this.files,b,a,d,c,f,l=0,p=0,k,q,w,u,m,h,s,t,r,Q,z,A,F,I,N,B,C,g,J;B=0;for(C=e.length;B<C;++B){b=e[B];t=b.a.filename?b.a.filename.length:0;r=b.a.comment?b.a.comment.length:0;if(!b.j)switch(b.h=la(b.buffer),b.a.compressionMethod){case 0:break;case 8:b.buffer=(new pa(b.buffer,b.a.deflateOption)).g();b.j=y;break;default:throw Error(\"unknown compression method:\"+b.a.compressionMethod);}if(b.a.password!==n||this.i!==n){var ea=b.a.password||this.i,O=[305419896,591751049,878082192],\nW=n,X=n;H&&(O=new Uint32Array(O));W=0;for(X=ea.length;W<X;++W)Pa(O,ea[W]&255);N=O;F=b.buffer;H?(I=new Uint8Array(F.length+12),I.set(F,12),F=I):F.unshift(0,0,0,0,0,0,0,0,0,0,0,0);for(g=0;12>g;++g)F[g]=Qa(N,11===B?b.h&255:256*Math.random()|0);for(J=F.length;g<J;++g)F[g]=Qa(N,F[g]);b.buffer=F}l+=30+t+b.buffer.length;p+=46+t+r}a=new (H?Uint8Array:Array)(l+p+(22+(this.d?this.d.length:0)));d=0;c=l;f=c+p;B=0;for(C=e.length;B<C;++B){b=e[B];t=b.a.filename?b.a.filename.length:0;r=b.a.comment?b.a.comment.length:\n0;k=d;a[d++]=Na[0];a[d++]=Na[1];a[d++]=Na[2];a[d++]=Na[3];a[c++]=Ma[0];a[c++]=Ma[1];a[c++]=Ma[2];a[c++]=Ma[3];a[c++]=20;a[c++]=b.a.os||0;a[d++]=a[c++]=20;q=a[d++]=a[c++]=0;if(b.a.password||this.i)q|=1;a[d++]=a[c++]=q&255;a[d++]=a[c++]=q>>8&255;w=b.a.compressionMethod;a[d++]=a[c++]=w&255;a[d++]=a[c++]=w>>8&255;u=b.a.date||new Date;a[d++]=a[c++]=(u.getMinutes()&7)<<5|u.getSeconds()/2|0;a[d++]=a[c++]=u.getHours()<<3|u.getMinutes()>>3;a[d++]=a[c++]=(u.getMonth()+1&7)<<5|u.getDate();a[d++]=a[c++]=(u.getFullYear()-\n1980&127)<<1|u.getMonth()+1>>3;m=b.h;a[d++]=a[c++]=m&255;a[d++]=a[c++]=m>>8&255;a[d++]=a[c++]=m>>16&255;a[d++]=a[c++]=m>>24&255;h=b.buffer.length;a[d++]=a[c++]=h&255;a[d++]=a[c++]=h>>8&255;a[d++]=a[c++]=h>>16&255;a[d++]=a[c++]=h>>24&255;s=b.size;a[d++]=a[c++]=s&255;a[d++]=a[c++]=s>>8&255;a[d++]=a[c++]=s>>16&255;a[d++]=a[c++]=s>>24&255;a[d++]=a[c++]=t&255;a[d++]=a[c++]=t>>8&255;a[d++]=a[c++]=0;a[d++]=a[c++]=0;a[c++]=r&255;a[c++]=r>>8&255;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=\n0;a[c++]=0;a[c++]=k&255;a[c++]=k>>8&255;a[c++]=k>>16&255;a[c++]=k>>24&255;if(Q=b.a.filename)if(H)a.set(Q,d),a.set(Q,c),d+=t,c+=t;else for(g=0;g<t;++g)a[d++]=a[c++]=Q[g];if(z=b.a.extraField)if(H)a.set(z,d),a.set(z,c),d+=0,c+=0;else for(g=0;g<r;++g)a[d++]=a[c++]=z[g];if(A=b.a.comment)if(H)a.set(A,c),c+=r;else for(g=0;g<r;++g)a[c++]=A[g];if(H)a.set(b.buffer,d),d+=b.buffer.length;else{g=0;for(J=b.buffer.length;g<J;++g)a[d++]=b.buffer[g]}}a[f++]=Oa[0];a[f++]=Oa[1];a[f++]=Oa[2];a[f++]=Oa[3];a[f++]=0;a[f++]=\n0;a[f++]=0;a[f++]=0;a[f++]=C&255;a[f++]=C>>8&255;a[f++]=C&255;a[f++]=C>>8&255;a[f++]=p&255;a[f++]=p>>8&255;a[f++]=p>>16&255;a[f++]=p>>24&255;a[f++]=l&255;a[f++]=l>>8&255;a[f++]=l>>16&255;a[f++]=l>>24&255;r=this.d?this.d.length:0;a[f++]=r&255;a[f++]=r>>8&255;if(this.d)if(H)a.set(this.d,f);else{g=0;for(J=r;g<J;++g)a[f++]=this.d[g]}return a};function Qa(e,b){var a,d=e[2]&65535|2;a=d*(d^1)>>8&255;Pa(e,b);return a^b}\nfunction Pa(e,b){e[0]=(V[(e[0]^b)&255]^e[0]>>>8)>>>0;e[1]=(6681*(20173*(e[1]+(e[0]&255))>>>0)>>>0)+1>>>0;e[2]=(V[(e[2]^e[1]>>>24)&255]^e[2]>>>8)>>>0};function Ra(e,b){var a,d,c,f;if(Object.keys)a=Object.keys(b);else for(d in a=[],c=0,b)a[c++]=d;c=0;for(f=a.length;c<f;++c)d=a[c],G(e+\".\"+d,b[d])};G(\"Zlib.Zip\",$);G(\"Zlib.Zip.prototype.addFile\",$.prototype.m);G(\"Zlib.Zip.prototype.compress\",$.prototype.g);G(\"Zlib.Zip.prototype.setPassword\",$.prototype.q);Ra(\"Zlib.Zip.CompressionMethod\",{STORE:0,DEFLATE:8});Ra(\"Zlib.Zip.OperatingSystem\",{MSDOS:0,UNIX:3,MACINTOSH:7});}).call(this);\n","\nvar content = require(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\", function() {\n\t\tvar newContent = require(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body {\\n  min-height: 100%;\\n  width: 100%;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\ndiv {\\n  box-sizing: border-box;\\n}\\n\\ndiv.frame {\\n  min-height: 99%;\\n  width: 100%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin: 0;\\n  border: solid 1px blue;\\n}\\n\\ndiv.footer {\\n  min-height: 100%;\\n  width: 100%;\\n  border: solid 1px red;\\n  padding: 0.5em;\\n}\\n\\ndiv.copyright {\\n  width: 100%;\\n  padding: 0.5em;\\n  text-align: center;\\n}\\n\\ndiv.header {\\n  min-height: 100%;\\n  width: 100%;\\n  border: solid 1px green;\\n  padding: 0.2em;\\n}\\n\\ndiv.title {\\n  font-size: 2em;\\n  font-weight: bold;\\n  background-color: #c23cc1;\\n  padding: 0.5em;\\n}\\n\\ndiv.FileUploadArea input {\\n  position: absolute;\\n  left: -100;\\n}\\n\\ndiv.FileUploadArea {\\n  display: block;\\n  min-height: 100%;\\n  width: 100%;\\n  border: dotted 1px black;\\n  background-color: #a8bae0;\\n  padding-top: 5em;\\n  padding-bottom: 5em;\\n  text-align: center;\\n  font-size: 2em;\\n}\\n\\ninput.FileUploadFile {\\n  position: absolute;\\n  top: -10em;\\n  left: 10em;\\n  visibility: hidden;\\n}\\n\\ndiv.FilesArea {\\n  min-height: 100%;\\n  width: 100%;\\n  border: dotted 1px black;\\n  background-color: rgb(124, 110, 241);\\n  padding-top: 1em;\\n  padding-bottom: 1em;\\n  text-align: center;\\n  font-size: 2em;\\n}\\n\\nspan.imageDataLine {\\n  display: inline-block;\\n  font-size: 50%;\\n  padding: 0.2em;\\n}\\n\\ndiv.delButton {\\n  display: inline-block;\\n  font-size: 50%;\\n  width: 3em;\\n  padding: 0.2em;\\n  line-height: 1em;\\n  text-align: center;\\n  cursor: pointer;\\n  background-color: #675275;\\n}\\n\\ndiv.delButton:active {\\n  color: red;\\n}\\n\\ndiv.delButton:hover {\\n  color: #d48a60;\\n  background-color: #7b4f99;\\n}\\n\\ncanvas.hidden {\\n  position: absolute;\\n  top: -10000px;\\n}\\n\\n[draggable] {\\n  user-select: none;\\n}\\n\\n.column {\\n  height: 150px;\\n  width: 150px;\\n  float: left;\\n  border: 2px solid #666666;\\n  background-color: #ccc;\\n  margin-right: 5px;\\n  border-radius: 10px;\\n  box-shadow: inset 0 0 3px #000;\\n  text-align: center;\\n  cursor: move;\\n}\\n\\n.column.over {\\n  border: 2px dashed #000;\\n}\\n\\n.column header {\\n  color: #fff;\\n  text-shadow: #000 0 1px;\\n  box-shadow: 5px;\\n  border-bottom: 1px solid #ddd;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n}\\n\\n.FilesArea>div {\\n  width: 100%;\\n  min-width: 630px;\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-direction: row;\\n}\\n\\n.FilesArea>div>div {\\n  display: flex;\\n  min-width: 160px;\\n  overflow: hidden;\\n}\\n\\n.FilesArea>div>div.PageImages {\\n  min-width: 320px;\\n  max-width: 50%;\\n}\\n\\n.FilesArea>div>div.ImageDetail {\\n  min-width: 160px;\\n  max-width: 25%;\\n}\\n\\n.ImageDetail .ImageDetailTitle {\\n  position: relative;\\n  z-index: 1000;\\n  font-size: 12px;\\n  background-color: rgb(227, 169, 159);\\n  text-align: left;\\n  padding: 10px;\\n}\\n\\n.Thumnails {\\n  flex-direction: column;\\n  background-color: rgba(200, 200, 200, 1);\\n}\\n.Thumnails .thumbnails_block {\\n  background-color: rgba(220, 220, 220, 1);\\n  border: 0px dotted #dfd;\\n  height:100%;\\n}\\n.Thumnails .thumbnails_block.over {\\n  background-color: rgba(190, 190, 190, 0.8);\\n  border: 2px dotted #dfd;\\n}\\n\\n.thumbnail_block {\\n  display: flex;\\n  flex-direction: column;\\n  background-color: green;\\n  border: 1px solid #fdd;\\n  width: 150px;\\n  cursor: pointer;\\n  background-repeat:no-repeat;\\n  background-size:contain;\\n  background-position:center;\\n}\\n\\n.thumbnail_block.over {\\n  background-color: rgba(24, 129, 12, 0.8);\\n  width: 148px;\\n  border: 2px dotted #dfd;\\n}\\n\\n.thumbnail_block div {\\n  display: flex;\\n  height: auto;\\n  margin: auto;\\n}\\n\\n.thumbnail_text {\\n  display: block;\\n  background-color: blue;\\n  border: 1px solid #fdd;\\n  font-size: 0.5em\\n}\\n\\n.image_detail_block {\\n  position: relative;\\n  top: -10px;\\n  left: -30px;\\n}\\n\\n.ProgressBar,.Preview {\\n  top: 0;\\n  left: 0;\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(118, 118, 118, 0.80);\\n  z-index: 1001;\\n  display: none;\\n}\\n\\n.ProgressBar>div{\\n  position: fixed;\\n  top: 50%;\\n  left: 5%;\\n  margin: 0 auto;\\n  width: 90%;\\n  height: 5em;\\n  background-color: rgba(238, 118, 238, 1);\\n  z-index: 1000;\\n  padding: 10px\\n}\\n\\n.ProgressBar>div .progeressFrame {\\n  margin: 0 auto;\\n  width: 95%;\\n  height: 3em;\\n  background-color: rgb(193, 165, 200);\\n  z-index: 1000;\\n  padding: 0px\\n}\\n\\n.progeress {\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  height: 3em;\\n  background-color: rgb(120, 231, 194);\\n}\\n.Preview>div {\\n  position: fixed;\\n  top: 2%;\\n  left: 2%;\\n  margin: 0 auto;\\n  width: 96%;\\n  height: 96%;\\n  background-color: rgb(197, 206, 213);\\n  z-index: 1000;\\n  padding: 0px\\n}\\n.Preview>div img{\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n.Preview>div .previewLeft,.Preview>div .previewRight{\\n  cursor: pointer;\\n  padding: 10px;\\n  background-color: rgba(95, 161, 212, 0.58);\\n\\n}\\n.Preview>div .previewInfo{\\n  font-size: 60%;\\n  padding: 10px;\\n  color: rgb(43, 176, 218)\\n}\\n\\n.Preview>div .preview_dual {\\n  display: flex;\\n}\\n.Preview>div .preview_dual .previewImageFrame{\\n  width:50%;\\n}\\n.Preview>div .preview_dual .previewImageFrame.dummy{\\n  background-color: rgb(174, 181, 184);\\n}\\n.TitleSettings {\\n  background-color: rgb(159, 117, 242);\\n  padding: 0.1em;\\n  margin: 0.1em 0;\\n}\\n\\n.TitleSettingsTitle {\\n  padding: 0.3em;\\n  margin-bottom: 0.3em;\\n  font-weight: bold;\\n  font-size: 110%;\\n  width: 100%;\\n  text-align: center;\\n  background-color: rgb(139, 87, 242);\\n}\\n\\n.TitleSettingsFrame {\\n  display: flex;\\n}\\n\\n.TitleSettingsFrame>div {\\n  width: 50%;\\n}\\n\\n.TitleSettingsRow>span, .TitleSettingsRow>input {\\n  display: inline-flex;\\n  width: 40%;\\n}\\n\\n.TitleSettingsUpdate {\\n  width: 70%;\\n  background-color: rgb(3, 21, 186);\\n  color: white;\\n  font-weight: bold;\\n  text-align: center;\\n  margin: 0.5em auto;\\n  padding: 0.5em;\\n  border-radius: 1em;\\n  cursor: pointer;\\n}\\n\\n.previewFrame {\\n  display: flex;\\n}\\n\\n.previewCallButton {\\n  width: 150px;\\n  background-color: rgb(156, 111, 146);\\n  font-size: 50%;\\n  padding: 10px;\\n  margin: 1px;\\n  cursor: pointer;\\n  border-radius: 5px;\\n}\\n\\n.pageFrameHeader {\\n  font-size: 60%;\\n  background-color: rgb(59, 2, 62);\\n  color: white;\\n  padding: 5px;\\n}\\n\\n.pageFrameHeaderLeft {\\n  text-align: left;\\n}\\n\\n.pageFrameHeaderRight {\\n  text-align: right;\\n}\\n\\n.PageFrame {\\n  display: inline-block;\\n  display: flex;\\n  background-color: rgb(166, 121, 191);\\n  width: 300px;\\n  height: 150px;\\n  font-size: 1em;\\n  margin: 0.1em auto;\\n  padding: 0.25em 1em;\\n}\\n\\n.PageFrame .Page {\\n  width: 110px;\\n  border: 2px solid rgb(126, 100, 113);\\n  background-color: rgb(172, 148, 185);\\n  height: 140px;\\n  margin: 0.0em auto;\\n}\\n\\n.PageFrame .Dummy {\\n  background-color: rgb(106, 91, 115);\\n}\\n\\n.PageFrame .Page .thumbnail_block {\\n  height: 104px;\\n  width: 106px;\\n  margin: 0.0em auto;\\n  background-color: rgb(227, 209, 238);\\n}\\n.thumbnail_block .image_block{\\n  height: 104px;\\n  width: 106px;\\n  margin: 0.0em auto;\\n  background-color: rgb(227, 209, 238);\\n  cursor: pointer;\\n  background-repeat:no-repeat;\\n  background-size:contain;\\n  background-position:center;\\n}\\n.MenuFrame {\\n  display: flex;\\n}\\n\\n.MenuFrame div {\\n  width: 20%;\\n  cursor: pointer;\\n  padding: 5px 10px;\\n  margin: 2px 1px 0 1px;\\n  border: 1px solid rgb(83, 122, 134);\\n  border-bottom-width: 0;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: rgb(170, 185, 210);\\n  color: rgb(222, 240, 222)\\n}\\n.ExportArea .ExportArea{\\n  background-color: rgb(195, 240, 204);\\n  border:1px solid rgb(87, 158, 17);\\n  padding: 10px;\\n}\\n.ExportOrdrList .ExportOrdersListTitle{\\n    background-color: rgb(162, 233, 176);\\n    padding:10px;\\n    margin-bottom: 0.3em;\\n}\\n.ExportOrdrList .ExportOrdrs{\\n    background-color: rgb(222, 232, 219);\\n    padding:15px;\\n    border:1px solid rgb(87, 158, 17);\\n    margin-bottom: 0.5em;\\n}\\n.ExportButtons{\\n  display: flex;\\n  flex-direction: row;\\n}\\n.ExportButtons>div{\\n  display: flex;\\n  width:200px;\\n  padding:15px;\\n  margin:2px;\\n  border:1px solid rgb(87, 158, 17);\\n  cursor: pointer;\\n  border-radius: 3px;\\n      background-color: rgb(141, 233, 159);\\n}\\n.display_none{\\n  display:none;\\n}\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.array = Array.isArray;\nfunction primitive(s) {\n    return typeof s === 'string' || typeof s === 'number';\n}\nexports.primitive = primitive;\n//# sourceMappingURL=is.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createElement(tagName) {\n    return document.createElement(tagName);\n}\nfunction createElementNS(namespaceURI, qualifiedName) {\n    return document.createElementNS(namespaceURI, qualifiedName);\n}\nfunction createTextNode(text) {\n    return document.createTextNode(text);\n}\nfunction createComment(text) {\n    return document.createComment(text);\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n    parentNode.insertBefore(newNode, referenceNode);\n}\nfunction removeChild(node, child) {\n    node.removeChild(child);\n}\nfunction appendChild(node, child) {\n    node.appendChild(child);\n}\nfunction parentNode(node) {\n    return node.parentNode;\n}\nfunction nextSibling(node) {\n    return node.nextSibling;\n}\nfunction tagName(elm) {\n    return elm.tagName;\n}\nfunction setTextContent(node, text) {\n    node.textContent = text;\n}\nfunction getTextContent(node) {\n    return node.textContent;\n}\nfunction isElement(node) {\n    return node.nodeType === 1;\n}\nfunction isText(node) {\n    return node.nodeType === 3;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nexports.htmlDomApi = {\n    createElement: createElement,\n    createElementNS: createElementNS,\n    createTextNode: createTextNode,\n    createComment: createComment,\n    insertBefore: insertBefore,\n    removeChild: removeChild,\n    appendChild: appendChild,\n    parentNode: parentNode,\n    nextSibling: nextSibling,\n    tagName: tagName,\n    setTextContent: setTextContent,\n    getTextContent: getTextContent,\n    isElement: isElement,\n    isText: isText,\n    isComment: isComment,\n};\nexports.default = exports.htmlDomApi;\n//# sourceMappingURL=htmldomapi.js.map","export default class ViewUtil {\n  constructor() {}\n  static create(id, clasｓName, text) {\n    return ViewUtil.ce(\"div\", id, clasｓName, text);\n  }\n  static createInput(id, clasｓName, text) {\n    return ViewUtil.ce(\"input\", id, clasｓName, text);\n  }\n  static createText(id, clasｓName, text) {\n    return ViewUtil.ce(\"text\", id, clasｓName, text);\n  }\n  static createFile(id, clasｓName, text) {\n    return ViewUtil.ce(\"input\", id, clasｓName, text, \"file\");\n  }\n  static createCanvas(id, clasｓName, text) {\n    return ViewUtil.ce(\"canvas\", id, clasｓName, text);\n  }\n  static createImage(id, clasｓName, text) {\n    return ViewUtil.ce(\"img\", id, clasｓName, text);\n  }\n  static createUl(id, clasｓName, text) {\n    return ViewUtil.ce(\"ul\", id, clasｓName, text);\n  }\n  static createLabel(id, clasｓName, text, forId) {\n    const elm = ViewUtil.ce(\"label\", id, clasｓName, text);\n    elm.setAttribute(\"for\", forId);\n    return elm;\n  }\n  static createLi(id, clasｓName, text) {\n    return ViewUtil.ce(\"li\", id, clasｓName, text);\n  }\n  static createSpan(id, clasｓName, text) {\n    return ViewUtil.ce(\"span\", id, clasｓName, text);\n  }\n  static createStrong(id, clasｓName, text) {\n    return ViewUtil.ce(\"strong\", id, clasｓName, text);\n  }\n  static createA(id, clasｓName, text) {\n    return ViewUtil.ce(\"a\", id, clasｓName, text);\n  }\n  static ce(tagName, id, clasｓName, text, type) {\n    const elm = document.createElement(tagName);\n    elm.className = clasｓName;\n    if (id) {\n      elm.id = id;\n    }\n    if (tagName === \"input\" && text) {\n      elm.setAttribute(\"value\", text);\n      if (type) {\n        elm.setAttribute(\"type\", type);\n      }\n    } else if (text) {\n      elm.textContent = text;\n    }\n    return elm;\n  }\n  static on(elm, eventType, eventHandler) {\n    elm.addEventListener(eventType, eventHandler, false);\n  }\n  static off(elm, eventType, eventHandler) {\n    elm.removeEventListener(eventType, eventHandler, false);\n  }\n\n  static append(parent, child) {\n    parent.appendChild(child);\n  }\n\n  static insertFirst(parent, child) {\n    if (parent.hasChildNodes()) {\n      parent.insertBefore(child, parent.childNodes[0]);\n    } else {\n      parent.appendChild(child);\n    }\n  }\n  static getBodyElm() {\n    return document.getElementsByTagName(\"body\")[0];\n  }\n  static attachBody(elm) {\n    document.getElementsByTagName(\"body\")[0].appendChild(elm);\n  }\n  static detacthBodyById(id) {\n    const child = documet.getElementById(id);\n    document.getElementsByTagName(\"body\")[0].removeChild(child);\n  }\n  static removeChild(child) {\n    child.parentNode.removeChild(child);\n  }\n  static remove(id) {\n    const child = documet.getElementById(id);\n    if (child.parentNode) {\n      child.parentNode.removeChild(child);\n    }\n  }\n  static removeChildren(id) {\n    const elm = documet.getElementById(id);\n    while (elm.firstChild) {\n      elm.removeChild(elm.firstChild);\n    }\n  }\n  static setStyles(elm, styleObj) {\n    for(let name in styleObj){\n      elm.style[name] = styleObj[name];\n    }\n  }\n  static text(elm, text) {\n    elm.textContent = text;\n  }\n  static emit(elm, eventType, isBubbling = true, isCancelable = true) {\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(eventType, isBubbling, isCancelable);\n    return elm.dispatchEvent(event);\n  }\n}\n","import snabbdomClass from 'snabbdom/modules/class'\nimport snabbdomStyle from 'snabbdom/modules/style'\nimport snabbdomProps from 'snabbdom/modules/props'\nimport snabbdomAttrs from 'snabbdom/modules/attributes'\nimport snabbdomDataset from 'snabbdom/modules/dataset'\nimport snabbdomEventlisteners from 'snabbdom/modules/eventlisteners'\nimport hz from 'snabbdom/h'\nimport toVNodez from 'snabbdom/tovnode'\nlet snabbdom = require('snabbdom');\nconsole.log(snabbdom);\nexport const h = hz;\nexport const toVNode = toVNodez;\nexport const patch = snabbdom.init([snabbdomClass, snabbdomStyle, snabbdomProps,snabbdomAttrs, snabbdomDataset,snabbdomEventlisteners])\n","const baseClasses = [];\nexport class ObjectUtil {\n  static addBaseCLassese(baseClassesList) {\n    if (baseClassesList) {\n      if (Array.isArray(baseClassesList)) {\n        for (let baseClass of baseClassesList) {\n          baseClasses.push(baseClass);\n        }\n      } else {\n        baseClasses.push(baseClassesList);\n      }\n    }\n  }\n  static deepClone(obj) {\n    const channel = new MessageChannel();\n    const inPort = channel.port1;\n    const outPort = channel.port2;\n\n    return new Promise(resolve => {\n      inPort.onmessage = data => {\n        resolve(data.data);\n      }\n      outPort.postMessage(obj);\n    });\n  }\n  static simpleDeepCloneSerialized(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n  static simpleDeepClone(obj, newObj) {\n    const output = newObj\n      ? newObj\n      : Array.isArray(obj)\n        ? []\n        : {};\n    for (let key in obj) {\n      const value = obj[key];\n      if (value && typeof value === \"object\" && !value.byteLength) {\n        let baseType = null;\n        for (let baseClass of baseClasses) {\n          if (value instanceof baseClass) {\n            baseType = new baseClass();\n            break;\n          }\n        }\n        output[key] = ObjectUtil.simpleDeepClone(value, baseType);\n      } else {\n        try {\n          output[key] = value;\n        } catch (e) {\n          console.log(e);\n          console.log(output);\n          throw e;\n        }\n      }\n    }\n    return output;\n  }\n  static singleDeepClone(obj) {\n    const retObj = {};\n    for (let key in obj) {\n      let value = obj[key];\n      retObj[key] = value;\n    }\n    return retObj;\n  }\n  static singleDeepCloneWithoutFuncs(obj) {\n    const retObj = {};\n    for (let key in obj) {\n      let value = obj[key];\n      if (typeof value === 'function') {\n        continue;\n      }\n      retObj[key] = value;\n    }\n    return retObj;\n  }\n  static deepVnodeClone(target) {\n    if (!target) {\n      return target;\n    }\n    const obj = {\n      sel: target.sel,\n      data: ObjectUtil.simpleDeepClone(target.data),\n      children: undefined,\n      text: target.text,\n      elm: target.elm,\n      key: target.key\n    };\n    for (let key in target.data) {\n      if (target.data[key]) {\n        obj.data[key] = target.data[key];\n      }\n    }\n    if (target.children && target.children.length > 0) {\n      obj.children = [];\n      for (let childTarget of target.children) {\n        obj.children.push(ObjectUtil.deepVnodeClone(childTarget));\n      }\n    }\n    return obj;\n  }\n}\n","import {patch, h} from './base/preLoader'\nimport {ObjectUtil} from '../objectUtil'\nexport class ElementSelector {\n  constructor() {\n    this.selectorMap = new Map()\n  }\n  getElementById(vnode, id) {\n    let result = this.getElements(vnode, \"#\" + id);\n    return result.length < 1\n      ? null\n      : result[0];\n  }\n  getElementsByClass(vnode, className) {\n    return this.getElements(vnode, \".\" + className);\n  }\n  patch(vnode, selector, newNode) {\n    // console.log('patch00 START of Patch newNode:' + newNode);\n\n    if (!newNode && typeof selector===\"string\") {\n      console.log('patch00a ★ERROR★ of Patch newNode:' + newNode+\"/selector:\"+selector);\n      return vnode;\n    }\n    if (!newNode ) {\n      // console.log('patch01a of Patch newNode:' + newNode);\n      this.isValidNode(vnode, \"vnode\");\n      const re = patch(vnode, selector);\n      return selector;\n    }\n    if (!selector ) {\n      // console.log('patch01b of Patch newNode:' + newNode);\n      this.isValidNode(vnode, \"vnode\");\n      const re = patch(vnode, newNode);\n      return newNode;\n    }\n    const cloneNode = this.prePatch(vnode, selector, newNode);\n    const re = patch(vnode, cloneNode);\n    const nodes = this.getElements(cloneNode, selector, false, new Map(), null);\n    // console.log('patch02 END of Patch ====' + \"/node:\" + newNode.elm + \"/parent:\" + (\n      // newNode.elm\n      // ? newNode.elm.parentNode\n      // : null) + \"/count:\" + nodes.length + \"/\" + (\n      // nodes.length > 0\n      // ? nodes[0].elm.parentNode\n      // : null));\n    this.isValidNode(cloneNode, \"cloneNode\");\n    return cloneNode;\n  }\n\n  isValidNode(vnode, name, parentNode, index) {\n    if (!vnode) {\n      console.log(\"★★null node!\" + name + \"/parentNode:\" + parentNode);\n      return;\n    }\n    if (vnode.elm && !vnode.elm.parentNode) {\n      // console.log(vnode.elm);\n      if (parentNode) {\n        const length = parentNode.childNodes.length;\n        if (length > index) {\n          vnode.elm = parentNode.childNodes[index];\n        } else {\n          parentNode.appendChild(vnode.elm);\n        }\n      }\n      // console.log(\"★★★invalid node!\" + name);\n    } else if (!vnode.elm) {\n      if (parentNode) {\n        const length = parentNode.childNodes.length;\n        if (length > index) {\n          vnode.elm = parentNode.childNodes[index];\n        } else {\n          console.log(\"★★★invalid parent index!\" + index + \"/length:\" + length + \"/vnode.sel:\" + vnode.sel);\n        }\n      }\n    }\n    if (vnode.children) {\n      for (let indexA in vnode.children) {\n        let child = vnode.children[indexA];\n        if (!child) {\n          continue;\n        }\n        this.isValidNode(child, name + \"_c_\", (\n          vnode.elm\n          ? vnode.elm.parentNode\n          : null), indexA)\n      }\n    }\n  }\n  // Not cloneNode\n  prePatch(vnode, selector, newNode) {\n    const cloneNode = ObjectUtil.deepVnodeClone(vnode);\n    const parentMap = new Map();\n    // console.log('prepatch01aa:' + JSON.stringify(vnode));\n    const nodes = this.getElements(cloneNode, selector, false, parentMap, null);\n    let isShouldPatch = false;\n    for (let node of nodes) {\n      // console.log('prepatch01a');\n      let newOne = ObjectUtil.deepVnodeClone(newNode);\n      // console.log('prepatch01b');\n\n      for (let [key, parentNode] of parentMap) {\n        if (key === node) {\n          let children = parentNode.children;\n          for (let index in children) {\n            let target = children[index];\n            if (target === node) {\n              children[index] = newOne;\n              //newOne.text = newOne.text+\"/\"+Date.now();\n              isShouldPatch = true;\n              // console.log('★patch01c AS REPLACE! children.length:' + children.length + \"/index:\" + index + \"/target.sel:\" + target.sel + \"/newOne.sel:\" + newOne.sel + \"/text:\" + newOne.text);\n              break;\n            } else {\n              // console.log('-patch01d ! children.length:' + children.length + \"/index:\" + index + \"/target.sel:\" + target.sel);\n            }\n          }\n          break;\n        }\n      }\n    }\n    // console.log('patch02 END of prePatch');\n    return isShouldPatch\n      ? cloneNode\n      : vnode;\n  }\n  getElements(vnode, selector, isEnd = false, parentMap = new Map(), parentVnode) {\n    let result = [];\n    if (!selector || typeof selector !== 'string') {\n      // console.log('getElements selector:'+selector);\n      return result;\n    }\n    let selectors = selector.split(/ |>/);\n    let nextSelector = selector;\n    if (selectors.length >= 1) {\n      let firstOne = selectors.shift();\n      if (!firstOne) {\n        return result;\n      }\n      if (this.isMatch(vnode.sel, firstOne)) {\n        if (selectors.length < 1) {\n          result.push(vnode);\n          if (parentVnode) {\n            parentMap.set(vnode, parentVnode);\n          }\n          return result;\n        }\n        nextSelector = selector.substring(firstOne.length + 1, selector.length);\n      } else if (isEnd) {\n        return result;\n      } else {\n        nextSelector = selector;\n      }\n\n      if (!vnode.children) {\n        return result;\n      }\n      let delimiter = selector.substring(firstOne.length, firstOne.length + 1);\n      let isNextEnd = delimiter === '>';\n\n      for (let child of vnode.children) {\n        result = result.concat(this.getElements(child, nextSelector, isNextEnd, parentMap, vnode));\n      }\n    }\n    return result;\n  }\n\n  getSelectorMap(selector) {\n    let map = this.selectorMap.get(selector);\n    if (map) {\n      return map;\n    }\n    map = new Map();\n    if (!selector) {\n      return map;\n    }\n    const tokens = selector.split(/\\.|#/g);\n    const selectorId = selector.indexOf(\"#\" )>=0 ? selector.split(/#/g)[1].split(/\\./g)[0]:\"\";\n    const classes = [];\n    let id = \"\";\n    let tag = \"\";\n    for (let token of tokens) {\n      if (selectorId===token) {\n        id = token;\n      } else if (selector.indexOf(\".\" + token) >= 0) {\n        classes.push(token);\n      } else {\n        tag = token;\n      }\n    }\n    map.set(\"id\", id);\n    map.set(\"class\", classes);\n    map.set(\"tag\", tag);\n    this.selectorMap.set(selector, map);\n    return map;\n  }\n  isMatch(sel, selector) {\n    // console.log(\"sel:\" + sel + \"/selector:\" + selector);\n    const mapA = this.getSelectorMap(sel);\n    const mapB = this.getSelectorMap(selector);\n    const tagName = mapB.get(\"tag\");\n    const id = mapB.get(\"id\");\n    if (tagName !== \"\" && mapA.get(\"tag\") !== tagName) {\n    // console.log(\"false:01 sel:\" + sel + \"/selector:\" + selector);\n      return false;\n    }\n    if (id !== \"\" && mapA.get(\"id\") !== id) {\n    // console.log(\"false:02 sel:\" + mapA.get(\"id\") + \"/selector:\" + id);\n      return false;\n    }\n\n    const classesA = mapA.get(\"class\");\n    const classesB = mapB.get(\"class\");\n    for (let classB of classesB) {\n      let isMatched = false;\n      for (let classA of classesA) {\n        if (classB === classA) {\n          isMatched = true;\n        }\n      }\n      if (isMatched === false) {\n      // console.log(\"false:03 sel:\" + sel + \"/selector:\" + selector);\n        return false;\n      }\n    }\n    if (selector === \"\") {\n    // console.log(\"false:04 sel:\" + sel + \"/selector:\" + selector);\n      return false;\n    }\n    // console.log(\"sel:\" + sel + \"/selector:\" + selector);\n    return true;\n  }\n}\n","const baseActions = [\"Attach\"];\nexport class ActionCreator {\n  constructor() {}\n  static getBaseActions() {\n    return baseActions;\n  }\n  static createAction(key, data, storeKey = null) {\n    return {type: key, data: data, storeKey: storeKey};\n  }\n  static createBaseAction(type, targetView,data, storeKey = null){\n    const addData = data && typeof data === \"object\"\n      ? data\n      : {};\n    addData.targetView = targetView;\n    addData.selector = targetView?targetView.id:null;\n    addData.storeKey = storeKey;\n    return {type:type , data: addData};\n  }\n  static creatAttachAction(parentView, newView, data, storeKey = null) {\n    // console.log(\"creatAttachAction\");\n    // console.log(newView);\n    const addData = data && typeof data === \"object\"\n      ? data\n      : {};\n    //alert(newView);\n    addData.parentView = parentView;\n    addData.selector = newView.id;\n    addData.storeKey = storeKey;\n    return {type: \"Attach\", data: addData};\n  }\n  static createShowViewAction(key, oldVnode, selector, data, storeKey = null) {\n    return ActionCreator.createGoOtherViewAction(key, null, oldVnode, selector, data, storeKey);\n  }\n  static createGoOtherViewAction(key, view, oldVnode, selector, data, storeKey = null) {\n    let addData = data;\n    if (!view && !oldVnode) {\n      console.log('createGoOtherViewAction is null!');\n      return {type: key, data: addData, storeKey: storeKey};\n    }\n    if (!data) {\n      addData = {};\n    }\n    addData.view = view;\n    addData.oldVnode = oldVnode;\n    addData.selector = selector;\n    return {type: key, data: addData, storeKey: storeKey};\n  }\n  static isEquals(a, b) {\n    if (a && b && a.type === b.type) {\n      return true;\n    }\n    return false;\n  }\n}\n","const avtiveViews = {};\nconst activeViewList = [];\nexport class ViewAttachQueue {\n  constructor() {\n    this.queue = [];\n  }\n  addActiveView(parentView, view, lastTree) {\n    const parentId = parentView.id;\n    const currentId = view.id;\n    // console.log(\"addActiveView currentId:\" + currentId);\n    const resultParent = this.findActivViews(avtiveViews, parentId);\n\n    // console.log(\"addActiveView resultParent:\" + resultParent);\n    if (resultParent && resultParent.primaryView) {\n      const currentTree = resultParent[currentId];\n      if (currentTree && currentTree.primaryView) {\n        currentTree.primaryView = view;\n        currentTree.parent = resultParent;\n      } else {\n        if (lastTree) {\n          lastTree.parent = resultParent;\n          resultParent[currentId] = lastTree;\n        } else {\n          resultParent[currentId] = {\n            primaryView: view,\n            parent: resultParent\n          };\n        }\n      }\n    } else {\n      avtiveViews[currentId] = lastTree\n        ? lastTree\n        : {\n          primaryView: view,\n          parent: avtiveViews\n        };\n    }\n    this.loadAllActiveViews();\n  }\n  changeActiveView(currentView, nextView, nextViewTree) {\n    const currentId = currentView.id;\n    // console.log(\"changeActiveView currentId:\" + currentId);\n    const resultCurrent = this.findActivViews(avtiveViews, currentId);\n    if (!resultCurrent) {\n      return;\n    }\n    const parent = resultCurrent.parent;\n    delete parent[currentId];\n    const nextId = nextView.id;\n    if (nextViewTree && nextViewTree.primaryView) {\n      parent[nextId] = nextViewTree;\n      nextViewTree.primaryView = nextView;\n      nextViewTree.parent = parent;\n    } else {\n      parent[nextId] = {\n        primaryView: nextView,\n        parent: parent\n      };\n    }\n    this.loadAllActiveViews();\n    return resultCurrent;\n  }\n  removeActiveView(view) {\n    const currentId = view.id;\n    // console.log(\"removeActiveView currentId:\" + currentId);\n    const resultCurrent = this.findActivViews(avtiveViews, currentId);\n    if (!resultCurrent) {\n      return;\n    }\n    const parent = resultCurrent.parent;\n    delete parent[currentId];\n\n    this.loadAllActiveViews();\n    return resultCurrent;\n  }\n\n  findActivViews(activeViewsTree, id, callback, count) {\n    let retView = null;\n    const next = count\n      ? count + 1\n      : 1;\n    if (next > 5) {\n      return null;\n    }\n    if (activeViewsTree) {\n      for (let viewId in activeViewsTree) {\n        if (viewId === undefined || viewId === 'undefined' || viewId === 'parent' || viewId === 'primaryView') {\n          continue;\n        }\n        const current = activeViewsTree[viewId];\n        if (!current.primaryView || !current.parent) {\n          continue;\n        }\n        if (callback) {\n          callback(current);\n        }\n        if (viewId === id) {\n          retView = current;\n        } else if (current && viewId !== 'view' && viewId !== '0') {\n          retView = this.findActivViews(current, id, callback, next);\n        }\n      }\n    }\n    return retView;\n  }\n  loadAllActiveViews() {\n    const resultList = [];\n    this.findActivViews(avtiveViews, 'all', (current) => {\n      resultList.push(current)\n    });\n    const currentLength = activeViewList.length;\n    for (let i = 0; i < currentLength; i++) {\n      activeViewList.pop();\n    }\n    for (let result of resultList) {\n      if (!result.primaryView || !result.parent) {\n        continue;\n      }\n      activeViewList.push(result.primaryView);\n    }\n    return activeViewList;\n  }\n  getActiveViewList() {\n    return activeViewList;\n  }\n}\n","import {ObjectUtil} from '../objectUtil';\n\nconst mainHolder = new Map();\nconst mainKey = 'aaa';\nexport class Store {\n  constructor(service) {\n  }\n  static getStore(key) {\n    const newKey = key ? key : mainKey;\n    const store = mainHolder.has(newKey) ? mainHolder.get(newKey) : null;\n    const clonedStore = store ? ObjectUtil.simpleDeepClone(store) : {};\n    clonedStore['oldVnode'] = store ?store['oldVnode']: null;\n    return clonedStore;\n  }\n  static setStore(store, key) {\n    const newKey = key ? key : mainKey;\n    const clonedStore = store ? ObjectUtil.simpleDeepClone(store) : {};\n    clonedStore['oldVnode'] = store ?store['oldVnode']:null;\n    mainHolder.set(newKey, clonedStore);\n  }\n}\n","import {Store} from './store';\nimport {ViewAttachQueue} from './viewAttachQueue';\nimport {ActionDispatcher} from './actionDispatcher'\nconst viewAttachQueue = new ViewAttachQueue();\nconst actionMap = new Map();\nexport class ActionDispatcherImple {\n  constructor(view) {\n    this.view = view;\n    this.updateMap = new Map();\n    this.updateQueue = [];\n  }\n  static add(action, reducer) {\n    // console.log('ActionDispatcherImple add00:' + action);\n    if (!action) {\n      return false;\n    }\n    // console.log('ActionDispatcherImple add01:' + action.type);\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      if (!reducers.includes(reducer)) {\n        reducers.push(reducer);\n      } else {\n        return false;\n      }\n    } else {\n      actionMap.set(type, [reducer]);\n    }\n    return true;\n  }\n  static remove(action) {\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      if (!reducers.includes(reducer)) {\n        const index = reducers.indexof(reducer);\n        reducers.splice(index, 1)\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n  async dispatch(action) {\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    const data = action.data;\n    const storeKey = action.storeKey;\n    let store = Store.getStore(storeKey);\n    let targetView = this.view;\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      for (let reducer of reducers) {\n        //console.log(\"A01 dispatch type:\"+type+\"/reducer.reduce:\"+reducer.reduce)\n        await reducer.preReduce(store, action).catch((e)=>{console.log(e)});\n        await reducer.reduce(store, action).catch((e)=>{console.log(e)});\n        await reducer.postReduce(store, action).catch((e)=>{console.log(e)});\n      }\n      //console.log(\"A01 dispatch type:\"+type+\"/\"+reducers[0])\n      //console.log(reducers[0])\n      Store.setStore(store);\n    }\n\n    let storeB = Store.getStore(storeKey);\n    //console.log(\"A01 dispatch \")\n    //console.log(storeB)\n    // console.log('dispatch02');\n    if (store.isOrverride && action.data.view) {\n      targetView = action.data.views;\n      if (this.view.onViewHide(targetView, data) === false) {\n        return;\n      }\n      this.callUpdate(targetView, data, storeKey);\n      this.view.onViewHidden(targetView, data);\n    } else {\n      this.callUpdate(targetView, data, storeKey);\n    }\n    //store = Store.getStore(storeKey);\n    return true;\n  }\n  callUpdate(targetView, actionData, storeKey) {\n    const activViews = viewAttachQueue.getActiveViewList();\n    for (let activeView of activViews) {\n      const store = Store.getStore(storeKey);\n      if (targetView === activeView) {\n        //console.log('A0 callUpdate update id:' + activeView.id);\n        const promise = targetView.updateReactiveTheTargetView(store, actionData);\n        if(promise){\n          if(!promise.then){\n            alert(\"your view has override method name 'updateReactiveTheTargetView'! activeView.id):\"+activeView.id);\n            return ;\n          }\n          promise.then(()=>{},(e)=>{console.log(e)});\n        }else{\n          console.log(activeView);\n        }\n      } else {\n         //console.log('A0 callUpdate updateReactive id:' + activeView.id);\n        const promise = activeView.updateReactive(store, actionData);\n        if(promise){\n          if(!promise.then){\n            alert(\"your view has override method name 'updateReactive'! activeView.id):\"+activeView.id);\n            return ;\n          }\n          promise.then(()=>{},(e)=>{console.log(e)});\n        }else{\n          //console.log(activeView);\n        }\n      }\n    }\n    // console.log('callUpdate END----------------');\n  }\n}\n","import {ActionDispatcherImple} from './actionDispatcherImple'\nexport class ActionDispatcher {\n  constructor() {\n  }\n  static create(view){\n    return new ActionDispatcherImple(view);\n  }\n  static createStandAlone(){\n    return new ActionDispatcherImple(false);\n  }\n}\n","import {patch, h} from './preLoader'\nexport class V {\n  static div() {}\n}\nconst setProps = (data, inputs) => {\n  let newData = {};\n  if (data && typeof data === \"object\") {\n    if (!data.props) {\n      data.props = {};\n    }\n    newData = data;\n  } else {\n    newData = {\n      props: {}\n    };\n  }\n  for (let key in inputs) {\n    newData.props[key] = inputs[key];\n  }\n  return newData;\n}\nconst vtags = (tagName, id, classNames, data = {}, children, text) => {\n  const id1 = tagName + (\n    id && typeof id === \"string\"\n    ? \"#\"+id\n    : \"\");\n  const id2 = id1 + (\n    classNames\n    ? (Array.isArray(classNames) && classNames.length > 0 && typeof classNames[0] === \"string\")\n      ? \".\" + classNames.join(\".\")\n      : (\n        (Array.isArray(id) && id.length > 0 && typeof id[0] === \"string\")\n        ? \".\" + id.join(\".\")\n        : '')\n    : \"\");\n  const childrenArray = children && Array.isArray(children)\n    ? children\n    : (\n      data && Array.isArray(data)\n      ? data\n      : (\n        Array.isArray(classNames) && classNames.length > 0 && typeof classNames[0] === \"object\"\n        ? classNames\n        : []));\n  const currentText = text\n    ? text\n    : (\n      children && typeof children === \"string\"\n      ? children\n      : data && typeof data === \"string\"\n        ? data\n\n        : classNames && typeof classNames === \"string\"\n          ? classNames\n        : \"\");\n  let currentData = typeof data === \"string\" || Array.isArray(data)\n    ? {}\n    : data;\n  if (children !== undefined && text === undefined && classNames && !Array.isArray(classNames) && typeof classNames === \"object\") {\n    currentData = classNames;\n  } else if (children === undefined && text === undefined && id && !Array.isArray(id) && typeof id === \"object\") {\n    currentData = id;\n  }\n  const toString = Object.prototype.toString\n  //console.log(\"●id2:\" + id2 + \"/\" + typeof currentData + \"/currentData:\" + currentData + \"/toString:\" + toString.call(currentData)+\"/children:\"+childrenArray+\"/\"+Array.isArray(childrenArray)+\"/text:\"+currentText);\n  const childNode = childrenArray.length > 0\n    ? childrenArray\n    : currentText;\n  const newVnode = h(id2, currentData, childNode);\n  //console.log(newVnode);\n  return newVnode;\n}\n//a div span img ul li input label\nexport const a = (id, classNames, href, data, children) => {\n  return vtags(\"a\", id, classNames, setProps(data, {href: href}), children, null);\n}\nexport const div = (id, classNames, data, children, text) => {\n  return vtags(\"div\", id, classNames, data, children, text);\n}\n\nexport const span = (id, classNames, data, children, text) => {\n  return vtags(\"span\", id, classNames, data, children, text);\n}\n\nexport const img = (id, classNames, alt, src, data) => {\n  return vtags(\"img\", id, classNames, setProps(data, {\n    alt: alt,\n    src: src\n  }), null, null);\n}\n\nexport const ul = (id, classNames, data, children, text) => {\n  return vtags(\"ul\", id, classNames, data, children, text);\n}\n\nexport const li = (id, classNames, data, children, text) => {\n  return vtags(\"li\", id, classNames, data, children, text);\n}\n\nexport const file = (id, classNames, data, value, text) => {\n  return vtags(\"input\", id, classNames, setProps(data, {type: \"file\"}), null, text);\n}\nexport const input = (id, classNames, data, type, text) => {\n  return vtags(\"input\", id, classNames, setProps(data, {\n    type: type,\n    value: text\n  }), null, text);\n}\nexport const label = (id, classNames, data, children, text) => {\n  return vtags(\"label\", id, classNames, data, children, text);\n}\nexport const select = (id, classNames, data, children, text) => {\n  return vtags(\"select\", id, classNames, data, children, text);\n}\nexport const option = (id, classNames, data, children, text) => {\n  return vtags(\"option\", id, classNames, data, children, text);\n}\n\nexport const createSelectVnode = (id, classes, name, optionsData, selectedValue, suffix = \"\") => {\n  const options = [];\n  const isArray = Array.isArray(optionsData);\n  for (let key in optionsData) {\n    const text = optionsData[key];\n    // alert(\"selectedValue:\" + selectedValue + \"/key:\" + key + \"/\" + (        selectedValue === key))\n    if ((!isArray && key === selectedValue) || (isArray && text+\"\" === selectedValue+\"\")) {\n      //console.log(\"★　matched　selectedValue:\"+selectedValue+\"/text:\"+text)\n      const optionSelected = option(\"\", [\"\"], {\n        attrs: {\n          value: isArray\n            ? text\n            : key,\n          selected: \"true\"\n        }\n      }, text + suffix);\n      options.push(optionSelected);\n    } else {\n      const optionNode = option(\"\", [\"\"], {\n        attrs: {\n          value: isArray\n            ? text\n            : key\n        }\n      }, text + suffix);\n      options.push(optionNode);\n    }\n  }\n  return select(id, classes, {\n    props: {\n      name: name\n    }\n  }, options);\n}\n","import {ActionCreator} from './actionCreator'\nexport class ViewBaseActions {\n  constructor() {\n  }\n  static getGotoAnotherViewAction(view, selector, data){\n    if(!view){\n      console.log('getGotoAnotherViewAction view:'+view);\n    }\n    return ActionCreator.createGoOtherViewAction('GotoAnotherView',view,null, selector, data);\n  }\n  static getShowViewAction(oldVnode, selector, data){\n    if(!oldVnode){\n      console.log('getShowViewAction oldVnode:'+oldVnode);\n    }\n    return ActionCreator.createShowViewAction('ShowView',oldVnode, selector, data);\n  }\n}\n","import {ActionCreator} from './actionCreator'\nimport {ActionDispatcherImple} from './actionDispatcherImple'\nexport class BaseReducer {\n  constructor(isBaseUse) {\n    this.isBaseUse = isBaseUse;\n    // console.log('BaseReducer constructor:' + isBaseUse);\n    if (isBaseUse) {\n      const baseActions = ActionCreator.getBaseActions();\n      for (let index in baseActions) {\n        const type = baseActions[index];\n        this.atatch({type: type});\n      }\n    }\n  }\n  atatch(action) {\n    // console.log('A0 BaseReducer atatch action:' + action);\n    // console.log(this);\n    ActionDispatcherImple.add(action, this);\n  }\n  detach(action) {\n    ActionDispatcherImple.delete(action, this);\n  }\n  async preReduce(store, action) {\n    // console.log('A0 BaseReducer preReduce:' + action);\n    store.isOrverride = false;\n    return store;\n  }\n  async reduce(store, action) {\n    // console.log('A0 BaseReducer reduce:' + action);\n    store.isOrverride = true;\n\n    store.oldVnode = action.data.oldVnode;\n    store.selector = \"#\" + action.data.selector;\n    //alert(store);\n    return store;\n  }\n  async postReduce(store, action) {\n    // console.log('A0 BaseReducer postReduce:' + action);\n    return store;\n  }\n}\nnew BaseReducer(true);\n","import {ViewBaseActions} from './viewBaseActions'\nimport {ActionCreator} from './actionCreator'\nimport {BaseReducer} from './baseReducer'\nexport class ViewBaseReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.atatch(ViewBaseActions.getGotoAnotherViewAction());\n    this.atatch(ViewBaseActions.getShowViewAction());\n  }\n  async reduce(store, action) {\n    //console.log('reduce! action:'+action);\n    //console.log('reduce! oldVnode:'+action.data.oldVnode);\n    if (ActionCreator.isEquals(ViewBaseActions.getGotoAnotherViewAction(), action)) {\n      // todo update menue\n      //console.log('getGotoAnotherViewAction!');\n    } else if (ActionCreator.isEquals(ViewBaseActions.getShowViewAction(), action)) {\n      store.isOrverride = true;\n\n      store.oldVnode = action.data.oldVnode;\n      store.selector = \"#\" + action.data.selector;\n    }\n    //console.log('reduced...');\n    return store;\n  }\n}\nconst viewBaseReducer = new ViewBaseReducer();\n","import vu from \"../viewUtil\";\nimport {patch} from './base/preLoader'\nimport {ElementSelector} from './elementSelector'\nimport {ActionCreator} from './actionCreator'\nimport {ViewAttachQueue} from './viewAttachQueue'\nimport {ActionDispatcher} from './actionDispatcher'\nimport {Store} from './store'\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"./base/vtags\";\nimport {ViewBaseReducer} from './viewBaseReducer'\nconst viewAttachQueue = new ViewAttachQueue();\nconst nodeFrame = {\n  rootVnode: null,\n  ms: null\n};\nexport class BaseView {\n  constructor(id, className, isNotRenderWrap = false) {\n    this.dispatcher = ActionDispatcher.create(this);\n    this.id = id;\n    this.className = className;\n    this.isNotRenderWrap = isNotRenderWrap;\n    this.ms = nodeFrame.ms;\n    this.es = new ElementSelector();\n    const store = Store.getStore();\n    this.onViewLoad(store)\n    //this.preRender(id, className);\n    this.currentVnode = null;\n    this.onViewLoaded(store)\n    this.updateReactiveCallCount = 0;\n    this.updateReactiveCallTimer = null;\n    this.updateCount = 0;\n  }\n  static setRootVnode(rootVnode) {\n    nodeFrame.rootVnode = rootVnode;\n  }\n  static setMainService(ms) {\n    if (ms) {\n      nodeFrame.ms = ms;\n    }\n  }\n  patch(selector, newVnode) {\n    return this.patchFromOtherVnode(nodeFrame.rootVnode, selector, newVnode);\n  }\n  initialPatch() {\n    let elements = document.getElementsByTagName(\"body\");\n    elements[0].innerHTML = '<div id=\"rootNodeA\"><p>ｘ</p></div>';\n    let currentVnode = document.getElementById('rootNodeA');\n    if (this.updateCount < 1) {\n      this.patchFromOtherVnode(currentVnode, null, this.render());\n      this.updateReactiveTheTargetView({oldVnode: this.currentVnode, selector: null, isOrverride: true}).catch((e) => {\n        console.log(e)\n      });\n    }\n  }\n  patchFromOtherVnode(currentVnode, selector, newVnode) {\n    let currentRootNode = selector !== null\n      ? //for firstTime\n      nodeFrame.rootVnode\n      : currentVnode;\n    const result = this.es.patch(currentRootNode, selector, newVnode);\n    result.data['name'] = this.name + Date.now();\n    nodeFrame.rootVnode = result;\n    // console.error(this.currentVnode);\n    this.currentVnode = this.es.getElements(result, '#' + this.id)[0];\n    // console.error(newVnode);\n    // console.warn(\"-----------patchFromOtherVnode:\"+selector+'/#' + this.id+\"/this.currentVnode:\"+this.currentVnode);\n    //  console.log(nodeFrame.rootVnode);\n    // console.log('C01 this.id:' + this.id);\n    // console.log('C01 --baseView.patchFromOtherVnode currentVnode;' + currentVnode + '/selector:' + selector + '/currentSelector:' + currentSelector + '/this:' + this.currentVnode + '/' + this.es.getElements(result, selector));\n    return result;\n  }\n  prePatch(selector, newVnode) {\n    if (!this.currentVnode) {\n      this.currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n    }\n    if (!this.currentVnode) {\n      console.log('!!!!prePatch nodeFrame.rootVnode: ' + JSON.stringify(nodeFrame.rootVnode));\n    }\n    //console.log('!!A!!prePatch ' +  JSON.stringify(this.currentVnode) + '/this.id:' + this.id+\"/selector:\"+selector+\"/\"+this.es.getElements(this.currentVnode , selector)[0]);\n    this.currentVnode.data['name'] = this.name + Date.now();\n    // console.log('!!B!!prePatch ' + this.currentVnode + '/this.id:' + this.id);\n    this.currentVnode = this.es.prePatch(this.currentVnode, selector, newVnode);\n    return this.currentVnode;\n  }\n  async updateReactiveTheTargetView(store, actionData) {\n    const oldVnode = store.oldVnode;\n    const selector = store.selector;\n    const isOrverride = store.isOrverride;\n    console.log('A00 update --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/this.currentVnode:' + this.currentVnode + \"/\" + typeof this.currentVnode);\n    if (isOrverride) {\n      // console.warn(\"isOrverride:\"+isOrverride+\"/this.currentVnode:\"+this.currentVnode+\"/selector:\"+selector);\n      this.onPreViewBuild(oldVnode, store);\n      this.currentVnode = !this.currentVnode\n        ? this.renderWrap(store)\n        : this.currentVnode;\n      // console.warn(this.currentVnode);\n    } else {\n      this.currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n    }\n    // console.log(\"XXXXXXXXXXXX01 selector:\"+selector+\"/this.updateCount:\"+this.updateCount);\n    await this.onViewShow(store, actionData).catch((e) => {\n      console.log(e)\n    });\n    // console.log(\"XXXXXXXXXXXX02 selector:\"+selector+\"/isOrverride:\"+isOrverride+\"/oldVnode:\"+oldVnode);\n    if (isOrverride) {\n      if (oldVnode) {\n        // console.warn(\"patchFromOtherVnode\");\n        this.patchFromOtherVnode(oldVnode, selector, this.currentVnode);\n      } else {\n        // console.warn(\"patchFromOtherVnode selector:\"+selector+\"/\"+ this.id+\"/isOrverride:\"+isOrverride+\"/oldVnode:\"+oldVnode);\n        this.patchFromOtherVnode(null, '#' + this.id, this.currentVnode);\n      }\n    } else {\n      this.patch('#' + this.id, this.currentVnode);\n    }\n    this.updateCount++;\n    // console.log(\"XXXXXXXXXXXX04 this.id:\" + this.id+\"/this.updateCount:\"+this.updateCount);\n    if (this.updateCount <= 2) {\n      this.updateCount++;\n      this.onAfterAttachWrap(store, actionData);\n    } else {\n      setTimeout(() => {\n        this.updateCount = 0\n      },2000);\n    }\n    await this.onViewShown(store, actionData).catch((e) => {\n      console.log(e)\n    });\n  }\n  async updateReactive(store, actionData) {\n    // this.updateReactiveCallCount++;\n    if (this.updateReactiveCallTimer) {\n      clearTimeout(this.updateReactiveCallTimer);\n    }\n    this.updateReactiveCallTimer = setTimeout(async () => {\n      const oldVnode = store.oldVnode;\n      const selector = store.selector;\n      const isOrverride = store.isOrverride;\n      this.currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n      // console.log(nodeFrame.rootVnode);\n      // console.error(this.currentVnode);\n      console.log('A0101 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/id:' + this.id);\n      await this.onViewShow(store, actionData).catch((e) => {\n        console.log(e)\n      });\n      // console.log('A102 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n      this.patch(\"#\" + this.id, this.currentVnode);\n      // console.log('A103 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n      //this.onAfterAttach(store);\n      // console.log('A104 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n      await this.onViewShown(store, actionData).catch((e) => {\n        console.log(e)\n      });\n      // console.log('A105 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n    });\n  }\n  init() {}\n  // attache to\n  attach(parentView = this.parentView, selector, data) {\n    this.parentView = parentView;\n    let taregetSelecotor = selector;\n    if (!selector) {\n      console.warn(\"★attach selector is null :\" + selector + \"/this.id:\" + this.id);\n      taregetSelecotor = this.id;\n    }\n    if (this.isAttached()) {\n      alert('attached!!!');\n      return;\n    }\n    //\n    const store = Store.getStore();\n    this.onPreViewBuild(store)\n    this.activeViewTree = viewAttachQueue.addActiveView(parentView, this, this.activeViewTree);\n    console.log('A08---attach ==selector:' + taregetSelecotor + '/parentView:' + parentView.id + \"/this.id:\" + this.id);\n    const action = ActionCreator.creatAttachAction(parentView, this, data);\n    this.dispatch(action);\n  }\n  isAttached() {\n    const currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n    if (currentVnode === this.currentVnode) {\n      return true;\n    }\n    return false;\n  }\n  dispatch(action) {\n    this.dispatcher.dispatch(action);\n    // console.log(\"dispatchered /this.id:\" + this.id);\n  }\n  getElementById(id) {\n    const elements = this.es.getElements(this.currentVnode, '#' + id);\n    return elements && elements.length > 0\n      ? elements[0]\n      : null;\n  }\n  onAfterAttachWrap(store, actionData) {\n    if (this.updateCount > 2) {\n      return;\n    }\n    // console.log(\"XXXXXXXXXXXX03 id:\"+this.id+\"/this.updateCount:\"+this.updateCount);\n    // console.log(nodeFrame.rootVnode);\n    // console.error(this.currentVnode);\n    this.onAfterAttach(store, actionData);\n  }\n  onAfterAttach(store, actionData) {\n    const currentVnode = this.currentVnode;\n    // while (viewAttachQueue.hasItem()) {\n    //   let item = viewAttachQueue.poll();\n    //   item.view.currentVnode = this.es.getElements(currentVnode, item.selector);\n    // }\n  }\n  changeAnotherView(parentView, selector, nextView) {\n    this.onViewHide(nextView, store, actionData);\n    const action = ActionCreator.creatAttachAction(parentView, this, data);\n    this.dispatch(action);\n    this.onViewHidden(nextView, store, actionData);\n  }\n  // Event listener\n  onViewLoad(store, actionData) {\n    console.log('m001 baseView.onViewLoad name:' + name + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n  }\n  onViewLoaded(store, actionData) {\n    console.log('m002 baseView.onViewLoaded name:' + name + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n  }\n  onPreViewBuild(store, actionData) {\n    console.log('m003a baseView.onPreViewBuild store:' + store + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n  }\n  async onViewShow(store, actionData) {\n    console.log('m003-- baseView.onViewShow newNode:' + '/store:' + store+\"/this.id:\"+ this.id);\n  }\n  async onViewShown(store, actionData) {\n    console.log('m004-- baseView.onViewShown newNode:' + '/store:' + store+\"/this.id:\"+ this.id);\n    //console.log(JSON.stringify(this.currentVnode));\n  }\n  async onViewHide(nextView, store, actionData) {\n    console.log('m005 baseView.onViewHide nextView:' + nextView + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n    //console.log(JSON.stringify(this.currentVnode));\n    return true;\n  }\n  async onViewHidden(nextView, store, actionData) {\n    console.log('m006 baseView.onViewHidden nextView:' + nextView + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n  }\n  render() {\n    const elm = vu.create(\"BaseView\", \"BaseView\");\n    return elm;\n  }\n  renderWrap(store, data) {\n    // console.log('renderWrap'+\" id:\"+this.id+\"/this.isNotRenderWrap:\"+this.isNotRenderWrap);\n\n    const newVnode = this.isNotRenderWrap\n      ? this.render(store, data)\n      : div(this.id, [this.className], {}, [this.render(store, data)]);\n    // console.log(newVnode)\n    return newVnode;\n  }\n  getAnker() {\n    return this.elm;\n  }\n}\n","import vu from \"../util/viewUtil\";\nimport {\n  BaseView\n} from \"../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../util/reactive/base/vtags\";\nexport class Header extends BaseView {\n  constructor(titleText) {\n    super(\"header\", \"header\");\n    this.titleText = titleText;\n  }\n  render() {\n    const newVnode = div(\"aaa\",{\n      style: {\n        color: '#000'\n      }\n    }, [div(\"title\", [\"title\"], this.titleText)]);\n    return newVnode;\n  }\n}\n","import vu from \"../util/viewUtil\";\nimport {BaseView} from \"../util/reactive/baseView\";\nimport {a,div,li,ul,img,span,input,label} from \"../util/reactive/base/vtags\";\nexport class Menu  extends BaseView {\n  constructor() {\n    super(\"menu\", \"Menu\");\n    this.text=\"Menu\";\n    this.menuButtonClass=\"MenuButton\";\n    this.selected =\"\";\n    this.idOfStep0 ='step0'\n    this.idOfStep1 ='step1'\n    this.idOfStep2 ='step2'\n    this.idOfStep3 ='step3'\n    this.idOfStep4 ='step4'\n  }\n  render() {\n    return div(this.id+'Frame', [\"MenuFrame\"], this.createButtons());\n  }\n\n  onClick(id){\n    return (event)=>{\n      alert(\"onClick id:\"+id);\n    }\n  }\n  createButtons(){\n    const menuTabs = [];\n    menuTabs.push(div('',[this.menuButtonClass],{on:{click:this.onClick(this.idOfStep0)}},'Step0 Select or New'))\n    menuTabs.push(div('',[this.menuButtonClass],{on:{click:this.onClick(this.idOfStep1)}},'Step1 Work Setting'))\n    menuTabs.push(div('',[this.menuButtonClass],{on:{click:this.onClick(this.idOfStep2)}},'Step2 Select Files'))\n    menuTabs.push(div('',[this.menuButtonClass],{on:{click:this.onClick(this.idOfStep3)}},'Step3 Export'))\n    menuTabs.push(div('',[this.menuButtonClass],{on:{click:this.onClick(this.idOfStep4)}},'Step4 Pref'))\n    return menuTabs;\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class ProgressActionCreator {\n  constructor() {}\n  static creatAddAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addProgressBar\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeProgressBar\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateProgressBar\", targetView, data, storeKey);\n  }\n  static creatCompleatAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"compleatProgressBar\", targetView, data, storeKey);\n  }\n}\n","const ua = navigator.userAgent.replace(/[\\.0-9]+/g,\"x\");\nconst domain = window.location;\nexport default {\n  dbName:\"CopiBon\",\n  ua:ua,\n  domain:domain\n}\n","export default class IdbUtil {\n  static currentTables(table,tabels){\n    return tabels?tabels:[table];\n  }\n  // static async getTransaction(db,tables,mode,reject,reject){\n  //   let transaction = db.transaction(tables, mode);\n  //   transaction.oncomplete = (event) => {\n  //     db.close();\n  //     resolve();\n  //   };\n  //   transaction.onerror = (event) => {\n  //     db.close();\n  //     reject();\n  //   };\n  // }\n\n  //private\n  static isMutch(value, condetions) {\n    if (condetions === undefined || condetions === null) {\n      return false;\n    }\n    if (Array.isArray(condetions)) {\n      for (let condition of condetions) {\n        if (IdbUtil.isMutch(value, condition)) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      for (let key in condetions) {\n        let condition = condetions[key];\n        if (typeof condition === 'object') {\n          if (IdbUtil.isMutch(value, condition)) {\n            return true;\n          }\n        } else {\n          let target = value[key];\n          if (target !== condition) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  };\n  static makeKeyRange(start, end, isNotEqualStart, isNotEqualEnd) {\n    return (isNotEqualStart === undefined && isNotEqualEnd === undefined)\n      ? IDBKeyRange.bound(start, end, false, false)\n      : IDBKeyRange.bound(start, end, isNotEqualStart, isNotEqualEnd);\n  }\n  static makeKeyRangeUpper(start, isNotEqualStart) {\n    return (isNotEqualStart !== true)\n      ? IDBKeyRange.upperBound(start)\n      : IDBKeyRange.upperBound(start, isNotEqualStart);\n  }\n  static makeKeyRangeLower(end, isNotEqualEnd) {\n    return (isNotEqualStart !== true)\n      ? KeyRange.lowerBound(end)\n      : IDBKeyRange.lowerBound(end, isNotEqualEnd);\n  }\n  static makeKeyRangeOnly(only) {\n    return (isNotEqualStart !== true)\n      ? IDBKeyRange.only(only)\n      : IDBKeyRange.lowerBound(end, isNotEqualEnd);\n  }\n  //IDを生成\n  static buildKeyPath(key1, key2, key3, key4, key5) {\n    let array = [];\n    if (key1 !== undefined) {\n      array.push((key1 + \"\").split(\"&\").join(\"&amp;\").split(\".\").join(\"&#046;\"));\n    }\n    if (key2 !== undefined) {\n      array.push((key2 + \"\").split(\"&\").join(\"&amp;\").split(\".\").join(\"&#046;\"));\n    }\n    if (key3 !== undefined) {\n      array.push((key3 + \"\").split(\"&\").join(\"&amp;\").split(\".\").join(\"&#046;\"));\n    }\n    if (key4 !== undefined) {\n      array.push((key4 + \"\").split(\"&\").join(\"&amp;\").split(\".\").join(\"&#046;\"));\n    }\n    if (key5 !== undefined) {\n      array.push((key5 + \"\").split(\"&\").join(\"&amp;\").split(\".\").join(\"&#046;\"));\n    }\n    return array.join(\"\");\n  };\n}\n","import IdbUtil from './idbUtil'\nconst MODE_R = \"readonly\";\nconst MODE_RW = \"readwrite\";\nexport default class IndexeddbHelper {\n  constructor(dbName) {\n    this.IDBKeyRange = window.IDBKeyRange;\n    this.indexedDB = window.indexedDB;\n    this.dbName = dbName;\n    this.keyPathMap = {};\n  }\n\n  getOpenDB(newVersion) {\n    return new Promise((resolve, reject) => {\n      // TODO instance\n      let request = this.indexedDB.open(this.dbName, newVersion);\n      request.onsuccess = (event) => {\n        resolve(event.target.result);\n      };\n      request.onupgradeneeded = (event) => {\n        resolve(event.target.result);\n      };\n      request.onabort = (e) => {\n        resolve(e);\n      };\n      request.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n\n  getObjectStore(db, tableName, tables, mode) {\n    let transaction = db.transaction(tables, mode);\n    transaction.oncomplete = (event) => {\n      db.close();\n    };\n    transaction.onerror = (event) => {\n      db.close();\n    };\n    return transaction.objectStore(tableName);\n  }\n  throwNewError(callerName) {\n    return(e) => {\n      if (e.stack) {\n        console.log(e.stack);\n      } else {\n        console.log(e.message, e);\n      }\n      console.error(\n        callerName\n        ? callerName\n        : \"\" + \"/\" + e);\n      throw new Error(e);\n    }\n  }\n  getKeyPathByMap(tableName) {\n    return this.keyPathMap[tableName];\n  }\n  async getKeyPath(tableName) {\n    let keyPathName = this.keyPathMap[tableName];\n    if (keyPathName !== undefined && keyPathName !== null) {\n      return keyPathName;\n    }\n    const db = await this.getOpenDB().catch(this.throwNewError(\"getKeyPath->getOpenDB\"));\n    let objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n    db.close();\n    let keyPathNameCurrent = objectStore.keyPath;\n    this.keyPathMap[tableName] = keyPathNameCurrent;\n    return keyPathNameCurrent;\n  }\n  //private\n  async getCurrentVersion() {\n    let db = await this.getOpenDB().catch(this.throwNewError(\"getCurrentVersion->getOpenDB\"));\n    const version = db.version;\n    db.close();\n    return version;\n  };\n  //public\n  async selectAll(payload) {\n    let {tableName, range, condetions} = payload;\n    return await this._selectAll(tableName, range, condetions);\n  }\n  //Select In-line-Keyで返す。\n  async _selectAll(tableName, range, direction) {\n    const db = await this.getOpenDB().catch(this.throwNewError(\"_selectAll->getOpenDB tableName:\" + tableName));\n    let objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n    return await this._selectAllExecute(objectStore, range);\n  };\n  _selectAllExecute(objectStore, range, isGetFirstOne) {\n    return new Promise((resolve, reject) => {\n      const list = [];\n      let req = range === undefined\n        ? objectStore.openCursor()\n        : objectStore.openCursor(range);\n      req.onsuccess = (event) => {\n        let cursor = event.target.result;\n        if (cursor) {\n          list.push(cursor.value);\n          if (isGetFirstOne) {\n            resolve(list[0]);\n            return;\n          }\n          cursor.continue();\n        } else {\n          resolve(list);\n        }\n      };\n      req.onerror = (e) => {\n        reject(e);\n      };\n    });\n\n  }\n  //public\n  async selectByKey(payload) {\n    let {tableName, key} = payload;\n    return await this._selectByKey(tableName, key);\n  }\n  //Select In-line-return promise;Keyで返す。\n  async _selectByKey(tableName, key) {\n    const db = await this.getOpenDB().catch(this.throwNewError(\"_selectByKey->getOpenDB tableName:\" + tableName));\n    console.log(\"_selectByKey tableName:\" + tableName + \"/pk:\" + key);\n    console.log(key);\n    return await this._selectByKeyOnTran(db, tableName, key).catch(this.throwNewError(\"_selectByKey->_selectByKeyOnTran tableName:\" + tableName));\n  }\n  _selectByKeyOnTran(db, tableName, key, tables) {\n    return new Promise((resolve, reject) => {\n      let objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n      let request = objectStore.get(key); //keyはsonomama\n      request.onsuccess = (event) => {\n        resolve(request.result);\n      };\n      request.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n  //public\n  async selectFirstOne(payload) {\n    let {tableName, range, direction} = payload;\n    return await this._selectFirstOne(tableName, range, direction);\n  }\n  //Select FirstOnek\n  async _selectFirstOne(tableName, range, direction) {\n    const db = await this.getOpenDB().catch(this.throwNewError(\"_selectFirstOne->getOpenDB tableName:\" + tableName));\n    let objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n    return await this._selectAllExecute(objectStore, range, true);\n  };\n\n  //InsertUpdate\n  async insertUpdate(payload) {\n    let {tableName, data, callback} = payload;\n    const keyPathName = this.getKeyPathByMap();\n    return await this._insertUpdate(tableName, keyPathName, data, callback).catch(this.throwNewError(\"insertUpdate->_insertUpdate tableName:\" + tableName));\n  }\n  //private\n  async _insertUpdate(tableName, keyPathName, data, callback) {\n    const key = data[keyPathName];\n    const db = await this.getOpenDB().catch(this.throwNewError(\"_insertUpdate->getOpenDB tableName:\" + tableName));\n    const tables = IdbUtil.currentTables(tableName);\n    const value = await this._selectByKeyOnTran(db, tableName, key, tables).catch(this.throwNewError(\"_insertUpdate->_selectByKeyOnTran tableName:\" + tableName));\n    if (callback) {\n      callback(value, data);\n    }\n    if (value === undefined) {\n      return await this._insertExecute(db, tableName, key, data, tables).catch(this.throwNewError(\"_insertUpdate->_insertExecute tableName:\" + tableName));\n    } else {\n      return await this._updateExecute(db, tableName, key, data, tables).catch(this.throwNewError(\"_insertUpdate->_updateExecute tableName:\" + tableName));\n\n    }\n  }\n  _insertExecute(db, tableName, key, data, tables) {\n    let objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n    return new Promise((resolve, reject) => {\n      let objectStoreRequest = objectStore.add(data); //,keyPath\n      objectStoreRequest.onsuccess = (event) => {\n        resolve({data, key});\n      };\n      objectStoreRequest.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n  _updateExecute(db, tableName, key, data, tables) {\n    return new Promise((resolve, reject) => {\n      let objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n      let request = objectStore.put(data); //,keyPathValue\n      request.onsuccess = (event) => {\n        resolve({data, key});\n      };\n      request.onerror = (e) => {\n        resolve(e);\n      };\n    });\n  };\n  //public\n  async deleteWithRange(payload) {\n    let {tableName, range, condetions} = payload;\n    return await this._deleteWithRange(tableName, range, condetions);\n  }\n  //Delete\n  async _deleteWithRange(tableName, range, condetions) {\n    const db = await this.getOpenDB().catch(this.throwNewError(\"_deleteWithRange->getOpenDB tableName:\" + tableName));\n    const tables = IdbUtil.currentTables(tableName);\n    return await this._deleteWithRangeExecute(db, tableName, range, condetions, tables);\n  };\n  _deleteWithRangeExecute(db, tableName, range, condetions, tables) {\n    return new Promise((resolve, reject) => {\n      let objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n      let request = objectStore.openCursor(range);\n      request.onsuccess = (event) => {\n        let cursor = event.target.result;\n        let list = [];\n        if (cursor) {\n          let value = cursor.value;\n          if (IdbUtil.isMutch(value, condetions)) {\n            let or = objectStore.delete(cursor.key);\n            or.onsuccess = (event) => {\n              list.push(value);\n            }\n            or.onerror = (e) => {\n              //momiee\n            };\n          }\n          cursor.continue();\n        } else {\n          resolve(list);\n        }\n      };\n      request.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n  //public\n  async delete(payload) {\n    let {tableName, key} = payload;\n    return await this._delete(tableName, key);\n  }\n  //Delete\n  async _delete(tableName, keyPathValue) {\n    const db = await this.getOpenDB().catch(this.throwNewError(\"_delete->getOpenDB tableName:\" + tableName));\n    const tables = IdbUtil.currentTables(tableName);\n    return await this._deleteOnTran(db, tableName, keyPathValue, tables);\n  };\n  _deleteOnTran(db, tableName, key, tables) {\n    return new Promise((resolve, reject) => {\n      let objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n      let request = objectStore.delete(key + \"\");\n      request.onsuccess = (event) => {\n        resolve({tableName, key});\n      }\n      request.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n  //public\n  async truncate(payload) {\n    let {tableName} = payload;\n    return await this._truncate(tableName);\n  }\n  //truncate\n  async _truncate(tableName) {\n    const db = await this.getOpenDB().catch(this.throwNewError(\"_truncate->getOpenDB tableName:\" + tableName));\n    const tables = IdbUtil.currentTables(tableName);\n    return await this._truncateExecute(db, tableName, tables);\n  };\n  //truncate\n  _truncateExecute(db, tableName, tables) {\n    return new Promise((resolve, reject) => {\n      let objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n      let request = objectStore.clear();\n      request.onsuccess = (event) => {\n        resolve();\n      };\n      request.onerror = (e) => {\n        reject(e);\n      };\n    });\n  };\n  async getObjectStoreNames() {\n    const db = await this.getOpenDB().catch(this.throwNewError(\"getObjectStoreNames->getOpenDB\"));\n    const names = db.objectStoreNames;\n    db.close();\n    return names;\n  }\n  async isExistsObjectStore(tableName) {\n    const db = await this.getOpenDB().catch(this.throwNewError(\"isExistsObjectStore->getOpenDB tableName:\" + tableName));\n    let isExist = false;\n    for (let name of db.objectStoreNames) {\n      if (name === tableName) {\n        isExist = true;\n        break;\n      }\n    }\n    db.close();\n    return isExist;\n  }\n  //public\n  async createStore(payload) {\n    let {tableName, keyPathName, isAutoIncrement} = payload;\n    return await this._createStore(tableName, keyPathName, isAutoIncrement);\n  }\n  //createStore\n  async _createStore(tableName, keyPathName, isAutoIncrement) {\n    const isExistsObjectStore = await this.isExistsObjectStore();\n    if (isExistsObjectStore === false) {\n      const newVersion = (await this.getCurrentVersion()) + 1;\n      const db = await this.getOpenDB(newVersion).catch(this.throwNewError(\"_createStore->getOpenDB tableName:\" + tableName));\n      let isExist = false;\n      for (let name of db.objectStoreNames) {\n        if (name === tableName) {\n          isExist = true;\n          break;\n        }\n      }\n      if (isExist === false) {\n        let objectStore = db.createObjectStore(tableName, {keyPath: keyPathName});\n      }\n      db.close();\n    };\n  };\n  //public\n  async dropStore(payload) {\n    let {tableName} = payload;\n    return await this._dropStore(tableName);\n  }\n  //DropStore\n  async _dropStore(tableName) {\n    const newVersion = (await this.getCurrentVersion()) + 1;\n    const db = await this.getOpenDB(newVersion).catch(this.throwNewError(\"_dropStore->getOpenDB tableName:\" + tableName));\n    db.deleteObjectStore(tableName);\n    db.close();\n    return;\n  };\n}\n","import constant from './constant'\nimport idbh from './indexeddbHelper'\nconst initQueue = [];\nexport default class IdbRapper {\n\n  constructor(objectStoreName, keypathName = \"pk\") {\n    if (constant.idbh === undefined) {\n      constant.idbh = new idbh(constant.dbName);\n    }\n    this.idbh = constant.idbh;\n    this.keyPathName = keypathName;\n    this.objectStoreName = objectStoreName;\n    //tableName, keyPathName\n  }\n  init() {\n    return new Promise((reslve, reject) => {\n      this.idbh._createStore(this.objectStoreName, this.keyPathName).then(() => {\n        reslve(true)\n      }, (e) => {\n        reject(e);\n        throw e;\n      });\n    });\n  }\n  isFished() {\n    return new Promise((reslve, reject) => {\n      this.firstPromise.then(() => {\n        reslve(true);\n      }, (e) => {\n        throw e;\n      })\n    });\n  }\n  async saveDataDefault(key, data, callback) {\n    let record = {\n      pk: key,\n      data: data\n    };\n    //console.log(\"saveDataDefault 001:\" + key + \"/\" + data);\n    await this.saveData(record, undefined, callback);\n    //console.log(\"saveDataDefault 002:\" + key + \"/\" + data);\n  }\n  async saveData(dataObj, key, callback) {\n    //console.log(\"saveData 001:\" + key + \"/\" + JSON.stringify(dataObj)+\"/dataObj.data:\"+dataObj.data);\n    let storeData = dataObj;\n    //console.log(\"saveData 002:\" + key + \"/\" + dataObj[this.keyPathName]);\n    if (dataObj[this.keyPathName] === undefined) {\n      storeData = {\n        data: dataObj\n      };\n      storeData[this.keyPathName] = key;\n    } else if (key !== undefined) {}\n    //console.log(\"saveData 003:\" + key + \"/\" + dataObj +\"/this.objectStoreName:\"+this.objectStoreName);\n    let value = await this.idbh._insertUpdate(this.objectStoreName, this.keyPathName, storeData, callback);\n    //console.log(\"saveData 004:\" + key + \"/\" + dataObj+\"/\"+JSON.stringify(value)+\"/\"+value.data.data);\n  }\n  async loadData(key) {\n    if (key !== undefined) {\n      let recordAsLoadedData = await this.idbh._selectByKey(this.objectStoreName, key);\n      //alert(recordAsLoadedData.data);\n      return recordAsLoadedData;\n    }\n    return null;\n  }\n  async loadDataDefault(key) {\n    let recordAsDefaultLoad = await this.loadData(key);\n    return recordAsDefaultLoad === undefined || recordAsDefaultLoad === null\n      ? null\n      : recordAsDefaultLoad.data;\n  }\n  async loadAllData() {\n    return await this.idbh._selectAll(this.objectStoreName);\n  }\n  async deleteData(key) {\n    if (key !== undefined) {\n      return await this.idbh._delete(this.objectStoreName, key);\n    }\n    return null;\n  }\n  async getOsNames() {\n    return await this.idbh.getObjectStoreNames();\n  }\n}\n","import idb from \"../../util/idb/idbRapper\";\nconst USER_ID = \"default\";\nconst PK_INCREMENT_STORE = \"pk_increment\";\nconst idbAccessors = new Map();\nexport class StorageService {\n  constructor(entityClass) {\n    this.entityClass = entityClass;\n    this.targetObj = typeof entityClass === \"string\" ? entityClass: new entityClass();\n    this.idbAccessor = null;\n    this.entityName = this.targetObj.getEntityName\n      ? this.targetObj.getEntityName()\n      : entityClass;\n  }\n  getStoreNameKey(userId = USER_ID) {\n    return userId + \"_\" + this.targetObj.getEntityName();\n  }\n  async createStore(userId = USER_ID) {\n    const storeNameKey = this.getStoreNameKey(userId);\n    return await this.createStoreByName(storeNameKey, userId);\n  }\n  async createStoreByName(storeNameKey, userId = USER_ID) {\n    const idbAccessor = idbAccessors.has(storeNameKey)\n      ? idbAccessors.get(storeNameKey)\n      : new idb(storeNameKey);\n    await idbAccessor.init().catch((e) => {\n      console.log(e)\n    });\n    idbAccessors.set(storeNameKey, idbAccessor);\n    this.idbAccessor = idbAccessor;\n    return idbAccessor;\n  }\n  async setStore(userId = USER_ID) {\n    this.idbAccessor = await this.createStore(userId);\n    return;\n  }\n  async save(pk, data) {\n    let saveData = data;\n    if (data.toObj) {\n      saveData = data.toObj();\n    }\n    // console.log(saveData);\n    await this.idbAccessor.saveDataDefault(pk, saveData);\n    return data; //\n  }\n  async loadAll() {\n    const list = await this.idbAccessor.loadAllData();\n    const retList = [];\n    for (let row of list) {\n      const cloned = this.getEntity(row);\n      retList.push(cloned);\n    }\n    return retList;\n  }\n  async get(key) {\n    const pk = key && key.pk\n      ? key.pk\n      : key;\n    const record = await this.idbAccessor.loadData(pk);\n    return this.getEntity(record);\n  }\n  getEntity(record) {\n    if (!record || !record.data) {\n      return record;\n    }\n    if (record.data && !this.targetObj.getEntityName) {\n      return record.data;\n    }\n    const targetObj = new this.entityClass();\n    targetObj.load(record.data);\n    return targetObj;\n  }\n  async delete(key) {\n    return await this.idbAccessor.deleteData(key);\n  }\n}\n","import {ObjectUtil} from \"../../util/objectUtil\";\nexport class BaseEntity {\n  constructor(entitiyName = \"BaseEntity\", pk = \"oid\") {\n    this.pk = pk;\n    this.entitiyName = entitiyName;\n    this.refs = [];\n  }\n  isEntitiy() {\n    return true;\n  }\n  getEntityName() {\n    return this.entitiyName; // this.constructor.name;\n  }\n  create() {}\n  update() {}\n  setPk(pkValue) {\n    return this[this.pk] = pkValue;\n  }\n  getPk() {\n    return this[this.pk];\n  }\n  include(obj) {\n    console.log(\"!=======BaseEntity.include====================!!\");\n    // console.log(obj);\n  }\n  exclude(obj) {\n    console.log(\"!=======BaseEntity.exclude====================!!\");\n    // console.log(obj);\n  }\n  async deepClone() {\n    return await ObjectUtil.deepClone(this);\n  }\n  load(obj) {\n    for (let key in obj) {\n      this[key] = obj[key];\n    }\n  }\n  toObj() {\n    let cloned = ObjectUtil.singleDeepCloneWithoutFuncs(this);\n    delete cloned.pk;\n    delete cloned.refs;\n    this.exclude(cloned);\n    return cloned;\n  }\n}\n","import {BaseEntity} from \"./baseEntity\";\nexport class Binary extends BaseEntity {\n  constructor(arrayBuffer) {\n    super(\"Binary\");\n    this._ab = arrayBuffer;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n  }\n  set ab(_ab){\n    if(buffer && !buffer.byteLength){\n      alert(\"not arrayBuffer!\");\n    }\n    this._ab=_ab;\n  }\n  get ab(){\n    return this._ab;\n  }\n\n  load(obj) {\n    super.load(obj)\n    this._ab =new Uint8Array(this._ab).buffer\n  }\n  create() {\n    return new Binary();\n  }\n}\n","import {BaseEntity} from \"./baseEntity\";\nconst DELIMITER = \"-\";\nexport class PrimaryKey {\n  constructor(pk) {\n    this.pk = pk;\n  }\n\n  static getDelimiter() {\n    return \"-\";\n  }\n\n  static assemblePK(entity, number) {\n    return entity.getEntityName() + DELIMITER + number;\n  }\n  static isPrimaryKey(value){\n    return value && typeof value ===\"string\" && value.split(DELIMITER).length === 2;\n  }\n\n  static getPrimaryKey(value){\n    if(value){\n      if(PrimaryKey.isPrimaryKey(value)){\n        return value;\n      }else if(value.getEntityName && value.getPk){\n        return value.getPk();\n      }else if(value.oid){\n        return value.oid;\n      }else if(value.pk){\n        return value.pk;\n      }\n      return null;\n    }else{\n      return value;\n    }\n  }\n  static getEntityName(pk){\n    return PrimaryKey.getPrimaryKey(pk).split(DELIMITER)[0];\n  }\n}\n","export default class BinaryConverter {\n  static binaryString2ArrayBuffer(binaryString) {\n    return BinaryConverter.binaryString2Uint8Array(binaryString).buffer;\n  }\n  static arrayBuffer2BinaryString(buffer) {\n    return BinaryConverter.uint8Array2BinaryString(new Uint8Array(buffer));\n  }\n  static arrayBuffer2base64(buffer) {\n    return btoa(BinaryConverter.uint8Array2BinaryString(new Uint8Array(buffer)));\n  }\n  static arrayBuffer2DataURI(buffer, type = \"application/octet-stream\") {\n    const base64 = btoa(BinaryConverter.arrayBuffer2BinaryString(buffer));\n    return \"data:\" + type + \";base64,\" + base64;\n  }\n\n  static binaryString2Uint8Array(binaryString) {\n    const list = binaryString.split(\"\");\n    const rawLength = binaryString.length;\n    const array = new Uint8Array(new ArrayBuffer(rawLength));\n    for (let i = 0; i < rawLength; i++) {\n      array[i] = binaryString.charCodeAt(i);\n    }\n    return array;\n  }\n\n  static uint8Array2BinaryString(u8a) {\n    let retList = [];\n    for (let e of u8a) {\n      retList.push(String.fromCharCode(e));\n    }\n    return retList.join(\"\");\n  }\n\n  static binaryString2DataURI(binaryString, type = \"application/octet-stream\") {\n    return \"data:\" + type + \";base64,\" + btoa(binaryString);\n  }\n  static base642DataURI(base64, type = \"application/octet-stream\") {\n    return \"data:\" + type + \";base64,\" + base64;\n  }\n  static base642binaryString(base64) {\n    return atob(base64);\n  }\n  static base642ArrayBuffer(base64) {\n    return BinaryConverter.binaryString2ArrayBuffer(atob(base64));\n  }\n\n  static dataURI2BinaryString(dataURI) {\n    return atob(dataURI.split(\",\")[1]);\n  }\n  static dataURI2ArrayBuffer(dataURI) {\n    return BinaryConverter.binaryString2Uint8Array(atob(dataURI.split(\",\")[1])).buffer;\n  }\n\n  static uintArray2ArrayBuffer(uintArray) {\n    return uintArray.buffer;\n  }\n\n  static arrayBuffer2Uint8Array(arrayBuffer) {\n    return new Uint8Array(arrayBuffer);\n  }\n\n  static arrayBuffer2Uint16Array(arrayBuffer) {\n    return new Uint16Array(arrayBuffer);\n  }\n  static arrayBuffer2Uint32Array(arrayBuffer) {\n    return new Uint32Array(arrayBuffer)\n  }\n\n  static ArrayBuffer2Blob(val, type = \"application/octet-stream\") {\n    return new Blob([val], {type: type});\n  }\n  static readBlob(blob) {\n    const reader = new FileReader();\n    const promise = new Promise((resolve, reject) => {\n      reader.onload = eve => {\n        resolve(reader.result);\n      }\n      reader.onerror = eve => {\n        reject(reader.error);\n      }\n    })\n\n    return {\n      asArrayBuffer() {\n        reader.readAsArrayBuffer(blob);\n        return promise;\n      },\n      asBinaryString() {\n        reader.readAsBinaryString(blob);\n        return promise;\n      },\n      asDataURL() {\n        reader.readAsDataURL(blob);\n        return promise;\n      },\n      asText() {\n        reader.readAsText(blob);\n        return promise;\n      }\n    }\n  }\n}\n","import bc from \"../../util/binaryConverter\"\nimport {StorageService} from \"./storageService\"\nconst USER_ID = \"default\";\nconst PK_INCREMENT_STORE = \"pk_increment\";\nconst PK_ROW = \"pk_row\";\nexport class PrimaryKeyAutoIncrementService {\n  constructor(userid) {\n    this.ss = new StorageService(userid + \"_\" + PK_INCREMENT_STORE);\n  }\n  async acquirePKNo(userid = USER_ID, targetObj, rowKey = PK_ROW) {\n    const entityName = targetObj.getEntityName();\n    let currentObjectStore = await this.ss.createStoreByName(userid + \"_\" + PK_INCREMENT_STORE, userid);\n    let record = await this.ss.get(rowKey);\n    let nextCountAB = this.countUpUint32(\n      record\n      ? record.data\n      : 0);\n    if (!record) {\n      record = {\n        data: nextCountAB\n      };\n    }\n    let {data, keyPath} = await this.ss.save(rowKey, record, (result, record) => {\n      let nextCountAB = this.countUpUint32(record.data);\n      result.data = nextCountAB;\n    });\n    return bc.arrayBuffer2base64(data);\n  }\n  countUpUint32(arrayBuffer) {\n    let currentCount = arrayBuffer;\n    if (!currentCount) {\n      currentCount = new ArrayBuffer(4);\n    }\n    if (currentCount.data) {\n      currentCount = currentCount.data;\n    } else {}\n    //alert(JSON.stringify(currentCount));\n    let dataview = new DataView(currentCount);\n    let count = dataview.getUint32(0) | 0; // 0\n    count++;\n    dataview.setInt32(0, count >>> 0);\n    return dataview.buffer;\n  }\n}\n","import {StorageService} from \"./storageService\"\nimport {Binary} from \"./binary\";\nimport {PrimaryKey} from \"./primaryKey\";\nimport {PrimaryKeyAutoIncrementService} from \"./primaryKeyAutoIncrementService\";\nconst title = \"CopiBon\";\nconst USER_ID = \"default\";\nconst titlePrefix = \"title_\";\nconst BINALY_PK_ROW = \"BINALY_PK_ROW\";\nconst entityManagerImpls = {};\nconst binaryEntity = new Binary();\nexport class EntityManagerImpl {\n  constructor(entityManager, entityClass, userId = USER_ID) {\n    this.userId = userId;\n    this.entityClass = entityClass;\n    this.entity = new entityClass();\n    this.entityName = this.entity.getEntityName();\n    this.ss = new StorageService(entityClass);\n    this.pkais = new PrimaryKeyAutoIncrementService(userId);\n    this.em = entityManager;\n  }\n\n  async init() {\n    //console.log(\"init! \"+this.entityName);\n    return await this.ss.setStore(this.userId);\n  }\n  async save(data) {\n    return await this.saveExecute(data,false);\n  }\n  async saveWithBinary(data) {\n    return await this.saveExecute(data,true);\n  }\n  async saveExecute(data,isWithBinary) {\n    //console.log(\"EntityManagerImpl save!!A!! data:\" + data+\"/isWithBinary:\"+isWithBinary);\n    if (!data || !data.getEntityName || !data.getPk || data.getEntityName() !== this.entityName) {\n      console.log(\"EntityManagerImpl save!!Z!! data:\" + data.getEntityName() + \"/this.entityName:\" + this.entityName + \"/data.getPk:\" + data.getPk);\n      return;\n    }\n    let currentPK = data.getPk();\n    if (!currentPK) {\n      currentPK = PrimaryKey.assemblePK(this.entity, await this.pkais.acquirePKNo(this.userId, this.entity));\n    }\n    if(!isWithBinary){\n      await this.saveArrayBufferCols(data);\n    }else{\n      console.log(\"EntityManagerImpl saveBinary!!A!! data:\" + data+\"/isWithBinary:\"+isWithBinary);\n      console.log(data);\n      console.log(\"EntityManagerImpl saveBinary!!B!! data:\" + data+\"/isWithBinary:\"+isWithBinary);\n    }\n    data.setPk(currentPK);\n    console.log(data);\n    const savedData = await this.ss.save(currentPK, data);\n    console.log(\"EntityManagerImpl save!!B!! savedData:\" + savedData);\n    return savedData;\n  }\n  async saveArrayBufferCols(data) {\n    if (binaryEntity.getEntityName() === data.getEntityName()) {\n      return;\n    }\n    console.log(\"saveArrayBufferCols save!!A!! data:\" + data);\n    console.log(data);\n    console.log(\"saveArrayBufferCols save!!B!! data:\" + data);\n    for (let key in data) {\n      const column = data[key];\n      if (!column) {\n        continue;\n      }\n      if (Array.isArray(column)) {\n        for (let index of column) {\n          const item = column[index];\n          if (!item || item.byteLength) {\n            continue;\n          }\n          const pk = await this.saveArrayBufferData(item);\n          column[index] = new PrimaryKey(pk);\n        }\n      } else if (column.byteLength) {\n        const pk = await this.saveArrayBufferData(column);\n        data[key] = new PrimaryKey(pk);\n      }\n    }\n  }\n  async saveArrayBufferData(item) {\n    console.log(\"saveArrayBufferData save!!A!! item:\" + item);\n    console.log(item);\n    console.log(\"saveArrayBufferData save!!B!! item:\" + item);\n    if (!item.getEntityName && item.byteLength) {\n      const data = new Binary(item);\n      const newPK = await this.getBinaryPK();\n      data.setPk(newPK);\n        console.log(\"saveArrayBufferData save!!C!! data:\" + data);\n        console.log(data);\n      await this.em.Binary.saveWithBinary(data);\n      return newPK;\n    } else if (item.getEntityName && item.getEntityName() === \"PrimaryKey\") {\n      return item;\n    } else if (item.getEntityName && item.getEntityName() === \"Binary\") {\n      const currentPK = item.getPk();\n      if (currentPK) {\n        item.setPk(currentPK);\n          console.log(\"saveArrayBufferData save!!D!! item:\" + item);\n        await this.em.Binary.saveWithBinary(item);\n        return currentPK;\n      } else {\n        console.log(\"saveArrayBufferData save!!E!! item:\" + item);\n        const newPK = await this.getBinaryPK();\n        item.setPk(newPK);\n        await this.em.Binary.saveWithBinary(item);\n        return newPK;\n      }\n    }\n  }\n  async getBinaryPK() {\n    const newNumber = await this.pkais.acquirePKNo(this.userId, binaryEntity, BINALY_PK_ROW);\n    return PrimaryKey.assemblePK(binaryEntity, newNumber);\n  }\n  async loadAll() {\n    return await this.ss.loadAll(this.entity);\n  }\n  async get(pk) {\n    // console.log(\"get this.entityName:\" + this.entityName + \"/pk:\" + pk);\n    return await this.ss.get(pk, this.entity);\n  }\n  async delete(pk) {\n    return await this.ss.delete(pk);\n  }\n\n}\n","import {StorageService} from \"./storageService\"\nimport {EntityManagerImpl} from \"./entityManagerImpl\"\nimport {Binary} from \"./binary\";\nimport {ObjectUtil} from '../../util/objectUtil';\nimport {PrimaryKey} from \"./primaryKey\";\nconst USER_ID = \"default\";\nexport class EntityManager {\n  constructor() {}\n  async initAsNewUser(entities, userId = USER_ID) {\n    const promises = [];\n    for (let entityClass of entities) {\n      await this.initParEntity(entityClass, userId);\n    }\n    await this.initParEntity(Binary, userId);\n  }\n  async initParEntity(entityClass, userId) {\n    ObjectUtil.addBaseCLassese(entityClass);\n    const entity = new entityClass();\n    const entityName = entity.getEntityName();\n    this[entityName] = new EntityManagerImpl(this, entityClass, userId);\n    await this[entityName].init();\n  }\n  isPrimaryKey(item) {\n    if (item && item.getEntityName() === 'PrimaryKey') {\n      return true;\n    }\n    return false;\n  }\n  async get(pk) {\n    if(!pk){\n      alert(\"pk:\"+pk);\n      return null;\n    }\n    const truePk = PrimaryKey.getPrimaryKey(pk);\n    if(!PrimaryKey.isPrimaryKey(truePk)){\n        console.log(truePk);\n        return null;\n    }\n    const entityName = PrimaryKey.getEntityName(truePk);\n    // console.log(\"★get entityName:\"+entityName+truePk);\n    return await this[entityName].get(truePk);\n  }\n  async delete(pk) {\n    if(!pk){\n      alert(pk);\n      return null;\n    }\n    const entityName = PrimaryKey.getEntityName(pk);\n    // console.log(\"★remove entityName:\"+entityName);\n    return await this[entityName].delete(pk);\n  }\n}\n","import {ProgressBar} from \"../view/parts/progressBar\"\nexport class ViewPartsLoader {\n    constructor(){\n    }\n    getIndigator(parent){\n      if(!!this.pb===false){\n        this.pb = new ProgressBar(parent);\n      }\n      return this.pb;\n    }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Title extends BaseEntity {\n  constructor(titleId, titlePrefix, name) {\n    super(\"Title\");\n    //console.log(\"!=!titleId:\"+titleId+\"!=!titleId:\"+titleId+\"!=!name:\"+name+\"!=!\"+Date.now());\n    this.id = titleId;\n    this.prefix = titlePrefix;\n    this.name = name;\n    this.target = \"\";\n    this.no = \"\";\n    this.date = \"\";\n    this.pageNo = 0;\n    this.setting = null;\n    this.series = null;\n    this.pageNum = -1;\n    this.images = [];\n    this.pages = [];\n    this.outputsPars = [];\n    this.exports = [];\n    this.direction = \"r2l\";\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n    //console.log(this);\n  }\n\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Images extends BaseEntity {\n  constructor() {\n    super(\"Images\");\n    this.name = null;\n    this.binary = null;\n    this.type = null;\n    this.thumbnail = null;\n    this.modifyDate=null;\n    this.width = null;\n    this.height = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Thumbnales extends BaseEntity{\n  constructor() {\n    super(\"Thumbnales\");\n    this.name = null;\n    this.binary = null;\n    this.type = null;\n    this.width = null;\n    this.height = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Series extends BaseEntity{\n  constructor(name) {\n    super(\"Series\");\n    this.name=name;\n    this.target=null;\n    this.no=\"\";\n    this.date=\"\";\n    this.pageNo=0;\n  }\n}\n","const order = {\n  'number': 1,\n  'string': 2,\n  'boolean': 3,\n  'object': 4,\n  'function': 5,\n  'symbol': 6,\n  'undefined': 7\n};\n\nexport class Sorter {\n  constructor() {}\n  static asc(list, colName) {\n    const func = Sorter.execute([\n      {\n        colName: colName,\n        isDESC: false\n      }\n    ]);\n    list.sort(func);\n  }\n  static desc(list, colName) {\n    const func = Sorter.execute([\n      {\n        colName: colName,\n        isDESC: true\n      }\n    ]);\n    list.sort(func);\n  }\n  static orderBy(list, orders) {\n    const func = Sorter.execute(orders);\n    list.sort(func);\n  }\n  static execute(orders) {\n    return(objA, objB) => {\n      for (let order of orders) {\n        const {colName, isDESC} = order;\n        if(objA === objB){\n          return 0;\n        }\n        if(!objA){\n          return isDESC\n            ? 1\n            : -1;\n        }\n        if(!objB){\n          return isDESC\n            ? -1\n            : 1;\n        }\n        let a = objA[colName];\n        let b = objB[colName];\n        //console.log(\"a:\"+a+\"/b:\"+b);\n        if (a < b) {\n          return isDESC\n            ? 1\n            : -1;\n        } else if (a > b) {\n          return isDESC\n            ? -1\n            : 1;\n        }\n      }\n      return 0;\n    };\n  }\n  static thinningNullData(array) {\n    const thinninged = [];\n    for (let index in array) {\n      const element = array[index];\n      if (element === null || element === undefined) {\n        continue;\n      }\n      thinninged.push(element);\n    }\n    const length = array.length;\n    for (let i = 0; i < length; i++) {\n      array.pop();\n    }\n    for (let index in thinninged) {\n      const element = thinninged[index];\n      array.push(element);\n    }\n  }\n  static typeof() {}\n}\n","import {MainService} from \"./mainService\";\nimport {ProgressActionCreator} from \"../reduxy/action/progressActionCreator\";\nimport {ActionDispatcher} from \"../util/reactive/actionDispatcher\";\nexport class FileUploadExecuter {\n  constructor() {\n    this.actionDispatcher = ActionDispatcher.createStandAlone();\n    this.name = \"FileUploader\";\n    this.ms = MainService.getInstance();\n  }\n  async readAsArrayBuffer(file) {\n    return await this.read(file, \"ArrayBuffer\");\n  }\n  async readAsBinaryString(file) {\n    return await this.read(file, \"BinaryString\");\n  }\n  async readAsDataURL(file) {\n    return await this.read(file, \"DataURL\");\n  }\n  async readAsText(file) {\n    return await this.read(file, \"text\");\n  }\n  read(file, type = \"binaryString\") {\n    return new Promise((resolve, reject) => {\n      this.reader = new FileReader();\n      //this.progress.init();\n      this.reader.onerror = (event) => {\n        reject(this.errorHandler(event));\n      };\n      this.reader.onprogress = (event) => {\n        this.updateProgress(event);\n      };\n      this.reader.onabort = (e) => {\n        alert('File read cancelled');\n      };\n\n      this.reader.onloadstart = (event) => {\n        this.onLoadStart(event)\n      };\n      this.reader.onload = (event) => {\n        resolve(this.onload(event));\n      };\n      if (type === \"ArrayBuffer\") {\n        this.reader.readAsArrayBuffer(file);\n      } else if (type === \"BinaryString\") {\n        this.reader.readAsBinaryString(file);\n      } else if (type === \"DataURL\") {\n        this.reader.readAsDataURL(file);\n      } else {\n        this.reader.readAsText(file);\n      }\n    })\n  }\n  abortRead() {\n    if (this.reader) {\n      this.reader.abort();\n    }\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatRemoveAction());\n  }\n  errorHandler(event) {\n    switch (event.target.error.code) {\n      case event.target.error.NOT_FOUND_ERR:\n        alert('File Not Found!');\n        break;\n      case event.target.error.NOT_READABLE_ERR:\n        alert('File is not readable');\n        break;\n      case event.target.error.ABORT_ERR:\n        break; // noop\n      default:\n        alert('An error occurred reading this file.');\n    };\n  }\n\n  updateProgress(event) {\n    const percentLoaded = Math.round((event.loaded / event.total) * 100);\n    if (percentLoaded < 100) {\n      //this.progress.progress(percentLoaded);\n      this.actionDispatcher.dispatch(ProgressActionCreator.creatUpdateAction(null,{progress:percentLoaded}));\n\n    }\n  }\n  onload(event) {\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatCompleatAction());\n    return this.reader.result;\n  }\n  onLoadStart() {\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatAddAction());\n    //this.progress.start();\n  }\n}\n","import {Title} from \"../../entity/title\";\nimport {Images} from \"../../entity/images\";\nimport {Thumbnales} from \"../../entity/thumbnales\";\nimport {Series} from \"../../entity/series\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nimport {Sorter} from \"../../util/sorter\";\nimport {MainService} from \"../../service/mainService\";\nimport {FileUploadExecuter} from \"../../service/fileUploadExecuter\";\n\nconst TITLE_STORE_NAME = \"CopiBonTitles\";\nconst defaultTitle = \"CopiBon\";\nconst defaultName = \"DefaultName\";\nconst defaultTitlePrefix = \"title_\";\nexport class TitleManager {\n  constructor(entityManager, titleId) {\n    this.em = entityManager;\n    this.ms = MainService.getInstance();\n    this.ip = this.ms.ip;\n    this.im = this.ms.im;\n    this.tbm = this.ms.tbm;\n    this.sm = this.ms.sm;\n    console.log(\"title is new!!\" + this.tbm);\n    //this.load(titleId).then((title)=>{this.currentTitle=title;console.log(\"title is new!\")});\n  }\n  async loadCurrent() {\n    return this.currentTitle;\n  }\n  async load(titleId = defaultTitle) {\n    if (this.currentTitle && this.currentTitle.getPk() === titleId) {\n      return this.currentTitle;\n    }\n    let title = await this.em.Title.get(titleId);\n    if (!title) {\n      title = await this.createTitle(titleId);\n    }\n    this.currentTitle = title;\n    return title;\n  }\n\n  async createTitle(titleId = defaultTitle, titlePrefix = defaultTitlePrefix, name = defaultName) {\n    const title = new Title(titleId, titlePrefix, name);\n    title.setPk(titleId);\n    title.setting = titleId;\n    await this.sm.createDefault(titleId);\n    await this.em.Title.save(title);\n    return title;\n  }\n\n  async changeTitle(newTitleId) {\n    this.currentTitle = await this.loadTitle(newTitleId);\n    if (!this.currentTitle) {\n      this.currentTitle = await this.createTitle(defaultTitle, defaultTitlePrefix, defaultName);\n    }\n  }\n  async loadTitleList() {\n    return await this.em.Title.loadAllData();;\n  }\n  async saveTitle(title) {\n    if (title) {\n      title.updateDate = Date.now();\n      const images = title.images;\n      Sorter.thinningNullData(images);\n      for (let index in images) {\n        const image = images[index];\n        if (!PrimaryKey.isPrimaryKey(image)) {\n          images[index] = PrimaryKey.getPrimaryKey(image);\n        }\n      }\n      this.currentTitle = await this.em.Title.save(title);\n    }\n  }\n  async deleteTitleCascade() {\n    const titelId = this.titelId;\n    const titelPrefix = this.titelPrefix;\n  }\n  async addImageFiles(files) {\n    const title = await this.loadCurrent();\n    const images = title.images;\n    Sorter.thinningNullData(images);\n    const iamageEntitis = [];\n    let count = images.length;\n    for (let file of files) {\n      let {imagePk, imageEntity} = await this.im.saveImageFile(file, count);\n      count++;\n      images.push(imagePk);\n      iamageEntitis.push(imageEntity);\n    }\n    //console.log(images);\n    await this.saveTitle(title);\n    return iamageEntitis;\n  }\n  async addImage(name, dataURI) {}\n  async removeImage(pk) {\n    const title = await this.load();\n    const images = title.images;\n    for (let index in images) {\n      const imageEntityPk = images[index];\n      if (PrimaryKey.getPrimaryKey(imageEntityPk) === pk) {\n        await this.im.remove(pk);\n        delete images[index];\n      };\n    }\n    // console.log(images);\n    await this.saveTitle(title);\n  }\n  async getExports() {\n    const title = await this.loadCurrent();\n    if(title && title.exports && Array.isArray(title.exports)){\n      return title.exports;\n    }else{\n      title.exports = [];\n      await this.saveTitle(title);\n      return title.exports;\n    }\n  }\n  async getCurrentTitleName() {\n    const title = await this.loadCurrent();\n    return title.name;\n  }\n  async saveCurrent() {\n    const title = await this.loadCurrent();\n    await this.saveTitle(title);\n  }\n\n  async loadSettings() {\n    const title = await this.loadCurrent();\n    const pk = title.getPk();\n    const settingEntityLoad = await this.sm.loadByPk(pk);\n    if(!settingEntityLoad){\n      const settingEntity =  await this.sm.createDefault(pk);\n      return settingEntity;\n    }\n    return settingEntityLoad;\n  }\n  async loadThumbnails() {\n    const title = await this.loadCurrent();\n    return await this.im.loadThumbnails(title.images);\n  }\n  async updateImagesListing(newList) {\n    const title = await this.loadCurrent();\n    return await this.im.updateImagesListing(title.images,newList);\n  }\n  async exportPDF() {}\n  async exportZip() {}\n}\n","import {Binary} from \"../entity/binary\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class BinaryManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Binary.get(binaryPk);\n  }\n  async remove(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Binary.delete(binaryPk);\n  }\n  async save(pk, name, ab) {\n    // console.log(\"BinaryManager save!!A!! pk:\" + pk);\n    // console.log(binary);\n    // console.log(\"BinaryManager save!!B!! name:\" + name);\n    let binEntity = null;\n    if (pk) {\n      binEntity = await this.em.Binary.get(pk);\n    }\n    // console.log(binary);\n    //alert(binary);\n    // let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!binEntity) {\n      binEntity = new Binary(ab);\n    } else {\n      binEntity.updateDate = Date.now();\n      binEntity._ab = ab;\n    }\n    const binaryEntitySaved = await this.em.Binary.save(binEntity)\n    return PrimaryKey.getPrimaryKey(binaryEntitySaved);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Pages extends BaseEntity{\n  constructor() {\n    super(\"Pages\");\n    this.previewThumbnail = null;\n    this.outputImage = null;\n    this.outputExpandImage = null;\n    this.outputDualImage = null;\n    this.thumbnail = null;\n    this.baseImage = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n}\n","import {Pages} from \"../../entity/pages\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class PagesManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  setTitleManager(tm){\n    this.tm = tm;\n  }\n  async loadFromImagePk(pk) {\n    const pagePk = PrimaryKey.getPrimaryKey(pk);\n    const pageEntity = await this.em.get(pagePk);\n    if (!pageEntity || !pageEntity.thumbnail) {\n      return null;\n    }\n    const thumbnailPk = PrimaryKey.getPrimaryKey(pageEntity.thumbnail);\n    const thumbnailEntity = await this.em.get(thumbnailPk);\n    thumbnailEntity.parentPk = pagePk;\n    return thumbnailEntity\n  }\n  async remove(pk) {\n    const target = await this.em.Pages.get(pk);\n    if (target) {\n      if (target.previewThumbnail) {\n        await this.em.Binary.delete(target.previewThumbnail);\n      }\n      if (target.outputImage) {\n        await this.em.Binary.delete(target.outputImage);\n      }\n      await this.em.Pages.delete(pk);\n    }\n  }\n  async removeImage(pk) {\n    const target = await this.em.Pages.get(pk);\n    if (target) {\n      if (target.previewThumbnail) {\n        await this.em.Binary.delete(target.previewThumbnail);\n      }\n      if (target.outputImage) {\n        await this.em.Binary.delete(target.outputImage);\n      }\n      target.baseImage = null;\n      target.thumbnail = null;\n      await this.em.Pages.save(target);\n    }\n  }\n\n  async addPage(imagePk,pagePk) {\n    const title = await this.tm.load();\n    const pages = title.pages;\n    const pageEntitis = [];\n    for (let index in pages) {\n      const pk = pages[index];\n      if (!pk) {\n        continue;\n      }\n      const pageEntity = await this.em.get(pk);\n      if(pk === pagePk){\n        const imageEntity = await this.em.get(imagePk);\n        const thumbnailEntity = await this.em.get(imageEntity.thumbnail);\n        const binaryEntity = await this.em.get(thumbnailEntity.binary);\n        pageEntity.thumbnail = imageEntity.thumbnail;\n        pageEntity.baseImage = imagePk;\n        await this.em.Pages.save(pageEntity);\n        //alert(\"pagePk:\"+pagePk+\"/imagePｋ:\"+imagePk+JSON.stringify(pageEntity));\n      }\n      pageEntitis.push(pageEntity);\n    }\n    return pageEntitis;\n  }\n  async move(fromPk, toPk) {\n    const targetFrom = await this.em.Pages.get(fromPk);\n    const targetTo = await this.em.Pages.get(toPk);\n    const previewThumbnailFrom = targetFrom.previewThumbnail;\n    const previewThumbnailTo = targetTo.previewThumbnail;\n    const outputImageFrom = targetFrom.outputImage;\n    const outputImageTo = targetTo.outputImage;\n    const thumbnailFrom = targetFrom.thumbnail;\n    const thumbnailTo = targetTo.thumbnail;\n    const baseImageFrom = targetFrom.baseImage;\n    const baseImageTo = targetTo.baseImage;\n    targetFrom.previewThumbnail= previewThumbnailTo;\n    targetTo.previewThumbnail= previewThumbnailFrom;\n    targetFrom.outputImage= outputImageTo;\n    targetTo.outputImage= outputImageFrom;\n    targetFrom.thumbnail= thumbnailTo;\n    targetTo.thumbnail= thumbnailFrom;\n    targetFrom.baseImage= baseImageTo;\n    targetTo.baseImage= baseImageFrom;\n    await this.em.Pages.save(targetFrom);\n    await this.em.Pages.save(targetTo);\n  }\n  async loadAll() {\n    const retList = [];\n    const pages = this.em.Pages.loadAll();\n    for (let page of pages) {\n      retList.push(page);\n    }\n    return retList;\n  }\n  async load(pk) {\n    return await this.em.Pages.get(pk);\n  }\n  /*\n  */\n  async save(pk, previewThumbnail=null, outputImage=null,thumbnail=null,baseImage=null, listing = 0,binary = null) {\n    let page = null;\n    if (pk) {\n      page = await this.em.Pages.get(pk);\n    }\n    let binaryPk = binary?PrimaryKey.getPrimaryKey(binary):null;\n    if (!page) {\n      page = new Pages();\n    } else {\n      page.updateDate = Date.now();\n    }\n    page.previewThumbnail = previewThumbnail || previewThumbnail === null\n      ? previewThumbnail\n      : page.previewThumbnail;\n    page.outputImage = binaryPk\n      ? binaryPk\n      : binary;\n    page.outputImage = outputImage || outputImage === null\n      ? outputImage\n      : page.outputImage;\n    page.thumbnail = thumbnail || thumbnail === null\n      ? thumbnail\n      : page.thumbnail;\n    page.baseImage = baseImage || baseImage === null\n      ? baseImage\n      : page.baseImage;\n    page.listing = listing || listing === null\n      ? listing\n      : page.listing;\n    return await this.em.Pages.save(page);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Settings extends BaseEntity{\n  constructor() {\n    super(\"Settings\");\n    this.name = \"\";\n    this.pageNum = 0;\n    this.startPage = \"l\";\n    this.pageDelection = 0;\n    this.outputProfile = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n}\n","import {Settings} from \"../../entity/settings\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class SettingsManager {\n  constructor(entityManager, opm) {\n    this.em = entityManager;\n    this.opm = opm;\n  }\n  async loadByPk(titilePk) {\n    const settingEntity = await this.em.Settings.get(titilePk);\n    return settingEntity;\n  }\n\n  async loadAll() {\n    const retList = [];\n    const settings = this.em.Pages.loadAll();\n    for (let setting of settings) {\n      retList.push(setting);\n    }\n    return retList;\n  }\n  async createDefault(titilePk) {\n    const setting = new Settings();\n    setting.setPk(titilePk);\n    setting.pageNum = 8;\n    setting.startPage = \"l\";\n    setting.pageDelection = \"r2l\";\n    setting.outputProfile = this.opm.getDefaultPk();\n    setting.listing = 0;\n    const saved = await this.em.Settings.save(setting);\n    return saved;\n  }\n  async save(pk, name, pageNum, startPage, pageDirection,outputProfile, listing = 0) {\n    let settings = null;\n    if (pk) {\n      settings = await this.em.Settings.get(pk);\n    }\n    if (!settings) {\n      settings = new Settings();\n    } else {\n      settings.updateDate = Date.now();\n    }\n    settings.name = name || name === null\n      ? name\n      : settings.name;\n    settings.pageNum = pageNum\n      ? pageNum\n      : 8;\n    settings.startPage = startPage || startPage === null\n      ? startPage\n      : settings.startPage;\n    settings.pageDirection = pageDirection || pageDirection === null\n      ? pageDirection\n      : settings.pageDirection;\n    settings.outputProfile = outputProfile || outputProfile === null\n      ? outputProfile\n      : settings.outputProfile;\n    settings.listing = listing || listing === null\n      ? listing\n      : settings.listing;\n    return await this.em.Settings.save(settings);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class OutputProfiles extends BaseEntity {\n  constructor(id, prefix, name) {\n    super(\"OutputProfiles\");\n    //console.log(\"!=!titleId:\"+titleId+\"!=!titleId:\"+titleId+\"!=!name:\"+name+\"!=!\"+Date.now());\n    this.id = id;\n    this.prefix = prefix;\n    this.pageSize = \"A5\";\n    this.direction = \"r2l\";\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n    //console.log(this);\n  }\n\n}\n","import {OutputProfiles} from \"../../entity/outputProfiles\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nconst defaultPk = 'copibondefa'\nexport class OutputProfilesManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n    this.createDefault();\n  }\n  getDefaultPk() {\n    return defaultPk;\n  }\n  async loadAll() {\n    const retList = [];\n    const outputProfiles = await this.em.OutputProfiles.loadAll();\n    for (let outputProfile of outputProfiles) {\n      retList.push(outputProfile);\n    }\n    if (retList.length < 1) {\n      retList.push(await this.createDefault());\n    }\n    return retList;\n  }\n  async loadByPk(pk) {\n    const outputProfilePK = PrimaryKey.getPrimaryKey(pk);\n    if (!outputProfilePK) {\n      const outputProfileEntity = await this.em.OutputProfiles.get(pk);\n      return outputProfileEntity;\n    } else {\n      const outputProfileEntity = await this.em.OutputProfiles.get(outputProfilePK);\n      return outputProfileEntity;\n    }\n  }\n  async createDefault() {\n    const savedOne = await this.loadByPk(defaultPk);\n    if (savedOne) {\n      return savedOne;\n    }\n    const outputProfiles = new OutputProfiles();\n    outputProfiles.setPk(defaultPk);\n    const saved = await this.em.OutputProfiles.save(outputProfiles);\n    return saved;\n  }\n  async save(pk, name, binary, type, width, height, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.OutputProfiles.get(pk);\n    }\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Setting();\n    } else {\n      image.updateDate = Date.now();\n    }\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    return await this.em.Thumbnales.save(image);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class ImageOutputs extends BaseEntity {\n  constructor() {\n    super(\"ImageOutputs\");\n    this.name = null;\n    this.binary = null;\n    this.type = null; // zip or pdf\n    this.thumbnail = null; // thumnails of firstPage\n    this.orderName = \"\";\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n}\n","import {ImageOutputs} from \"../../entity/imageOutputs\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class ImageOutputsManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.ImageOutputs.get(binaryPk);\n  }\n  async remove(pk) {\n    const target = await this.em.ImageOutputs.get(pk);\n    if (target) {\n      if (target.binary) {\n        await this.em.Binary.delete(target.binary);\n      }\n      await this.em.ImageOutputs.delete(pk);\n    }\n  }\n  async save(pk, name, binary, type, orderName, listing = 0) {\n    let imageOutputs = null;\n    if (pk) {\n      imageOutputs = await this.em.ImageOutputs.get(pk);\n    }\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!imageOutputs) {\n      imageOutputs = new ImageOutputs();\n    } else {\n      imageOutputs.updateDate = Date.now();\n    }\n    imageOutputs.name = name || name === null\n      ? name\n      : imageOutputs.name;\n    imageOutputs.binary = binaryPk\n      ? binaryPk\n      : binary;\n    imageOutputs.type = type || type === null\n      ? type\n      : imageOutputs.type;\n    imageOutputs.orderName = orderName || orderName === null\n      ? orderName\n      : imageOutputs.orderName;\n    imageOutputs.listing = listing || listing === null\n      ? listing\n      : imageOutputs.listing;\n    const imageEntitySaved =  await this.em.ImageOutputs.save(imageOutputs);\n    return PrimaryKey.getPrimaryKey(imageEntitySaved);\n  }\n}\n","import {Images} from \"../../entity/images\";\nimport {MainService} from \"../../service/mainService\";\nimport bc from \"../../util/binaryConverter\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nimport {Sorter} from \"../../util/sorter\";\nimport {FileUploadExecuter} from \"../fileUploadExecuter\";\n\nconst loadedImageMap = new Map();\nexport class ImageManager {\n  constructor(entityManager) {\n    this.ms = MainService.getInstance();\n    this.em = entityManager;\n    this.ip = this.ms.ip;\n    this.tbm = this.ms.tbm;\n  }\n  setTitleManager(tm){\n    this.tm = tm;\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (typeof pk!==\"string\") {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Images.get(binaryPk);\n  }\n  async reloadLoadedImages() {\n    return await this.createRetList(this.getEntitisAsList());\n  }\n  async loadImages() {\n    const title = await this.tm.load();\n    const images = title.images;\n    const imageEntitis = [];\n    for (let index in images) {\n      const pk = images[index];\n      if (!pk) {\n        continue;\n      }\n      const imageEntity = await this.em.get(pk);\n      imageEntitis.push(imageEntity);\n    }\n    return await this.createRetList(imageEntitis);\n  }\n  async remove(pk) {\n    const imageEntity = await this.em.get(pk);\n    console.log(\"removeImage imageEntity.thumbnail:\" + imageEntity.thumbnail);\n    const binaryPk = PrimaryKey.getPrimaryKey(imageEntity.binary);\n    console.log(\"removeImage binaryPk:\" + binaryPk);\n    const thumbnailPk = PrimaryKey.getPrimaryKey(imageEntity.thumbnail);\n    console.log(\"removeImage thumbnailPk:\" + thumbnailPk);\n    if (thumbnailPk) {\n      const thumbnailEntity = await this.em.get(thumbnailPk);\n      console.log(\"removeImage thumbnailEntity:\" + thumbnailEntity);\n      const thumbnailBinaryPk = PrimaryKey.getPrimaryKey(thumbnailEntity.binary);\n      console.log(\"removeImage thumbnailBinaryPk:\" + thumbnailBinaryPk);\n      await this.em.delete(thumbnailBinaryPk);\n      await this.em.delete(thumbnailPk);\n    }\n    await this.em.delete(binaryPk);\n    await this.em.delete(pk);\n  }\n  async saveImageFile(file, count = 0) {\n    const fue = new FileUploadExecuter();\n    const arrayBuffer = await fue.readAsArrayBuffer(file);\n    const data = {\n      name: file.name,\n      ab: arrayBuffer,\n      type: file.type\n    };\n    const imgElm = await this.ip.createImageNodeByData(data);\n    const dataURI = await this.ip.createThumbnail(arrayBuffer, 100, 100, file.type);\n    const arrayBufferThumbnail = bc.dataURI2ArrayBuffer(dataURI);\n    const imgElmThumb = await this.ip.createImageNodeByData({name: file.name, ab: arrayBufferThumbnail, type: file.type});\n    const thumbnailEntity = await this.tbm.save(null, file.name, arrayBufferThumbnail, file.type, imgElmThumb.width, imgElmThumb.height, 0);\n    console.log(\"addImageFiles thumbnailEntity:\" + thumbnailEntity);\n    const thumbnailPk = PrimaryKey.getPrimaryKey(thumbnailEntity);\n    console.log(\"addImageFiles thumbnailPk:\" + thumbnailPk);\n    const imageEntity = await this.save(null, file.name, arrayBuffer, file.type, imgElm.width, imgElm.height, thumbnailPk, count);\n    console.log(\"addImageFiles imageEntity:\" + imageEntity);\n    const imagePk = imageEntity.getPk();\n    return {imagePk: imagePk, imageEntity: imageEntity};\n  }\n  async save(pk, name, binary, type, width, height, thumbnail, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.Images.get(pk);\n    }\n        console.log(\"ImageManager save!!9!! binary:\" + binary);\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Images();\n    } else {\n      image.updateDate = Date.now();\n    }\n\n    console.log(\"ImageManager save!!A!! image:\" + image);\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.thumbnail = thumbnail || thumbnail === null\n      ? thumbnail\n      : PrimaryKey.getPrimaryKey(image.thumbnail);\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    const savedData = await this.em.Images.save(image);\n    console.log(\"ImageManager save!!B!! image:\" + savedData);\n    return savedData;\n  }\n\n  async loadThumbnails(images) {\n    const retList = [];\n    const imageList = [];\n    for (let image of images) {\n      const imagePk = PrimaryKey.getPrimaryKey(image);\n      const imageEntity = await this.load(imagePk);\n      imageList.push(imageEntity);\n    }\n    Sorter.orderBy( imageList,[{colName:\"listing\", isDESC:false}]);\n    for (let imageEntity of imageList) {\n      const imagePk = PrimaryKey.getPrimaryKey(imageEntity);\n      const thumbnailEntity = await this.tbm.loadFromImagePk(imagePk);\n      retList.push(thumbnailEntity);\n    }\n    return retList;\n  }\n  async createRetList(imageEntitis) {\n    Sorter.orderBy(imageEntitis, [\n      {\n        colName: \"listing\",\n        isDESC: false\n      }, {\n        colName: \"updateDate\",\n        isDESC: true\n      }\n    ]);\n    //console.log(\"=★=showFilesInit imageEntitis:\" + imageEntitis.length);\n    const retList = [];\n    for (let imageEntity of imageEntitis) {\n      const pk = imageEntity.getPk();\n      if (loadedImageMap.has(pk)) {\n        const retObj = loadedImageMap.get(pk);\n        retList.push(retObj);\n      } else {\n        const retObj = await this.processParImage(imageEntity);\n        loadedImageMap.set(pk, retObj);\n        retList.push(retObj);\n      }\n    }\n    return retList;\n  }\n  async processParImage(imageEntity) {\n    const imagePk = imageEntity.getPk();\n    const thumbnailEntity = await this.em.get(imageEntity.thumbnail);\n    const binaryEntity = await this.em.get(thumbnailEntity.binary);\n    const imgElm = await this.ip.createImageNodeByData({name: imageEntity.name, ab: binaryEntity.ab, type: imageEntity.type});\n    const size = (\n      binaryEntity.ab\n      ? (new Uint8Array(binaryEntity.ab)).length\n      : 0);\n    const imageText = escape(imageEntity.name) + ' (' + (\n    imageEntity.type || 'n/a') + ') - ' + size + 'bytes, last modified: ' + imageEntity.modifyDate + ' size:' + imageEntity.width + 'x' + imageEntity.height\n\n    const retObj = {\n      imageEntity: imageEntity,\n      binaryEntity: binaryEntity,\n      size: size,\n      imageText: imageText,\n      isOnPage:false\n    };\n    return retObj;\n  }\n  removeLoaded(pk){\n    loadedImageMap.delete(pk);\n  }\n  getRetObjsAsList() {\n    const retList = [];\n    for (let [key, retObj] of loadedImageMap.entries()) {\n      retList.push(retObj);\n    }\n    return retList;\n  }\n  getEntitisAsList() {\n    const retList = [];\n    for (let [key, retObj] of loadedImageMap.entries()) {\n      retList.push(retObj.imageEntity);\n    }\n    return retList;\n  }\n  getFromLoaded(pk){\n    return loadedImageMap.get(pk);\n  }\n}\n","import {Thumbnales} from \"../../entity/thumbnales\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class ThumbnaleManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  async loadFromImagePk(pk) {\n    const imagePk = PrimaryKey.getPrimaryKey(pk);\n    const imageEntity = await this.em.get(imagePk);\n    if(!imageEntity || !imageEntity.thumbnail){\n      return null;\n    }\n    const thumbnailPk  = PrimaryKey.getPrimaryKey(imageEntity.thumbnail);\n    const thumbnailEntity = await this.em.get(thumbnailPk);\n    thumbnailEntity.parentPk = imagePk;\n    return thumbnailEntity\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Thumbnales.get(binaryPk);\n  }\n  async save(pk, name, binary, type, width, height, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.Thumbnales.get(pk);\n    }\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Thumbnales();\n    } else {\n      image.updateDate = Date.now();\n    }\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    return await this.em.Thumbnales.save(image);\n  }\n}\n","const ua = navigator.userAgent.replace(/[\\.0-9]+/g, \"x\");\nconst domain = window.location;\nconst A5 = {};\nexport default {\n  A5: A5\n}\nexport const SettingData = {\n  pageStart: {\n    l: \"fromLeft\",\n    r: \"fromRight\"\n  },\n  pageDirection: {\n    l2r: \"LeftToRight\",\n    r2l: \"RightToLeft\"\n  },\n  pageNums: [1, 2, 4, 6, 8, 10, 12, 16]\n}\nexport const PrefareceData = {\n  previewSizeSingle: {\n    w400: 400,\n    w500: 500,\n    w800: 800,\n    w1000: 1000\n  },\n  e: {\n    w400: 400,\n    w500: 500,\n    w800: 800,\n    w1000: 1000\n  }\n}\nexport const dpis = {\n  dpi72: 72,\n  dpi150: 150,\n  dpi300: 300,\n  dpi350: 350,\n  dpi600: 600,\n  dpi1200: 1200,\n  same: 0\n}\nexport const printMargin = {\n  none: 0,\n  conbini: 5\n}\nexport const basePaper = {\n  A5: {\n    target: \"A5\",\n    frame: \"A5\",\n    multiple: 1\n  },\n  B5: {\n    target: \"B5\",\n    frame: \"B5\",\n    multiple: 1\n  },\n  A4: {\n    target: \"A4\",\n    frame: \"A4\",\n    multiple: 1\n  },\n  mangaPaperB5: {\n    target: \"A5\",\n    frame: \"B5\",\n    multiple: 1\n  },\n  mangaPaperA4: {\n    target: \"B5\",\n    frame: \"A4\",\n    multiple: 1\n  },\n  mangaPaperA4ExpandTatikiri: {\n    target: \"B5\",\n    frame: \"A4\",\n    multiple: (274 / 257)\n  },\n  mangaPaperB4: {\n    target: \"A4\",\n    frame: \"B4\",\n    multiple: 1\n  },\n  mangaPaperA3: {\n    target: \"B4\",\n    frame: \"A3\",\n    multiple: 1\n  },\n  pure_fit: {\n    target: \"same\",\n    frame: \"same\",\n    multiple: 1\n  }\n}\nexport const paperSizeSet = {\n  A6: {\n    x: 105,\n    y: 148\n  },\n  B6: {\n    x: 128,\n    y: 182\n  },\n  A5: {\n    x: 148,\n    y: 210\n  },\n  B5: {\n    x: 182,\n    y: 257\n  },\n  A4: {\n    x: 210,\n    y: 297\n  },\n  B4: {\n    x: 257,\n    y: 364\n  },\n  A3: {\n    x: 297,\n    y: 420\n  }\n}\n\nexport const ExportOrders = [ //\n  {\n    orderName: \"B5Expand600\",\n    basePaper: \"B5\",\n    dpiName: \"dpi600\"\n  },\n  {\n    orderName: \"B5Expand350\",\n    basePaper: \"B5\",\n    dpiName: \"dpi350\"\n  },\n  {\n    orderName: \"B5Expand300\",\n    basePaper: \"B5\",\n    dpiName: \"dpi300\"\n  },\n  {\n    orderName: \"B5ExpandTatikiri72\",\n    basePaper: \"B5\",\n    dpiName: \"dpi72\"\n  },\n  {\n    orderName: \"MangaPaperA4ExpandTatikiri600\",\n    basePaper: \"mangaPaperA4ExpandTatikiri\",\n    dpiName: \"dpi600\"\n  },\n  {\n    orderName: \"MangaPaperA4ExpandTatikiri350\",\n    basePaper: \"mangaPaperA4ExpandTatikiri\",\n    dpiName: \"dpi350\"\n  },\n  {\n    orderName: \"MangaPaperA4ExpandTatikiri300\",\n    basePaper: \"mangaPaperA4ExpandTatikiri\",\n    dpiName: \"dpi300\"\n  },\n  {\n    orderName: \"MangaPaperA4ExpandTatikiri72\",\n    basePaper: \"mangaPaperA4ExpandTatikiri\",\n    dpiName: \"dpi72\"\n  }\n];\n","import {dpis, printMargin, paperSizeSet, basePaper} from \"../../settings/exportSettings\";\nexport class Paper {\n  constructor() {\n    //\n    this.paparSize = {}\n  }\n  calcClopOffsetPixcel(basePaperSet,dpi){\n    const cropSizeMm = this.calcClopOffsetMm(basePaperSet);\n    //const size = this.getTargetPaperSizeMm(basePaperSet);\n    return {x:this.calcPixcel(dpi,cropSizeMm.x)*-1,y:this.calcPixcel(dpi,cropSizeMm.y)*-1};\n  }\n  calcClopOffsetMm(basePaperSet){\n    const targetPaper = basePaper[basePaperSet];\n\n    const offset = {x:0,y:0};\n    if(!targetPaper || targetPaper.target ===\"same\"){\n      //\n      return offset;\n    }\n    const targetSize = this.getPaperSizeMm(targetPaper.target);\n    const frameSize = this.getPaperSizeMm(targetPaper.frame);\n    const targetX = targetSize.x*targetPaper.multiple;\n    const targetY = targetSize.y*targetPaper.multiple;\n    offset.x = (frameSize.x - targetX)/2;\n    offset.y = (frameSize.y - targetY)/2;\n    return offset;\n  }\n  getTargetPaperSizeMm(basePaperSet){\n    const size = {x:0,y:0};\n    if(!basePaperSet){\n      //\n      return size;\n    }\n    const targetSize = this.getPaperSizeMm(basePaperSet);\n    return targetSize;\n  }\n  getTargetPaperSize(basePaperSet,dpiName){\n    const targetPaper = basePaper[basePaperSet];\n    const size = {x:0,y:0};\n    if(!targetPaper || targetPaper.target ===\"same\"){\n      //\n      return size;\n    }\n    const targetSize = this.getTargetPaperSizeMm(targetPaper.target);\n    const dpi = this.getDpi(dpiName);\n    size.x = this.calcPixcel(targetSize.x,dpi);\n    size.y = this.calcPixcel(targetSize.y,dpi);\n    return size;\n  }\n  calcPixcel(dpi,mm){\n    return Math.floor(mm*dpi/25.4);\n  }\n\n  calcDpi(pixcel,mm){\n    return pixcel/mm*25.4;\n  }\n  getPaperFrameSizeMm(basePaperSet) {\n    const targetPaper = basePaper[basePaperSet];\n    return paperSizeSet[targetPaper.frame];\n  }\n  getPaperSizeMm(paperSize) {\n    return paperSizeSet[paperSize];\n  }\n  getPrintMargin(marginSetting) {\n    return printMargin[marginSetting];\n  }\n  getDpi(dpiName) {\n    return dpis[dpiName];\n  }\n  getOffset(dpiName,marginSetting){\n    const margin = this.getPrintMargin(marginSetting);\n    const dpi = this.getDpi(dpiName);\n    const mpi = dpi / 25.4;\n    return Math.floor(mpi * margin);\n  }\n  getPixcelSizeBySelected(paperSize, dpiName, marginSetting = \"none\") {\n    const size = this.getPaperSizeMm(paperSize);\n    const margin = this.getPrintMargin(marginSetting);\n    const dpi = this.getDpi(dpiName);\n    return this.getPixcelSizeWithMargin(dpi, size.x, size.y, margin);\n  }\n  getPixcelSize(dpi, mmWidth, mmHeight) {\n    const mpi = dpi / 25.4;\n    return {\n      width: Math.floor(mpi * mmWidth),\n      height: Math.floor(mpi * mmHeight)\n    }\n  }\n  getPixcelSizeWithMargin(dpi, mmWidth, mmHeight, mmMargin) {\n    const mmMarginDual = mmMargin * 2;\n    return this.getPixcelSize(dpi, mmWidth - mmMarginDual, mmHeight - mmMarginDual)\n  }\n}\n","export class ImageMerger {\n  trimByte(byteX) {\n    const x = Math.floor(byteX);\n    const maxByte = x > 255 ?\n      255 :\n      x;\n    const minByte = maxByte < 0 ?\n      0 :\n      maxByte;\n    return minByte;\n  }\n  maegeReplace(imageDataBase, images, isBaseWhite) {\n    this.beWhiteImage(imageDataBase, isBaseWhite);\n    this.mergeImages(imageDataBase, images, this.replace());\n  }\n  maegeLinninr(imageDataBase, images, isBaseWhite) {\n    this.beWhiteImage(imageDataBase, isBaseWhite);\n    this.mergeImages(imageDataBase, images, this.linier());\n  }\n  maegeMultiplication(imageDataBase, images, isBaseWhite) {\n    this.beWhiteImage(imageDataBase, isBaseWhite);\n    this.mergeImages(imageDataBase, images, this.multiplication());\n  }\n  beWhiteImage(imageDataBase, isBaseWhite) {\n    if (isBaseWhite) {\n      const length = imageDataBase.data.length;\n      for (let i = 0; i < length; i++) {\n        imageDataBase.data[i] = 255;\n      }\n    }\n  }\n  mergeImages(imageDataBase, images, func) {\n    const {\n      data,\n      width,\n      height\n    } = imageDataBase;\n    for (let imageData of images) {\n      const addData = imageData.data;\n      const addWidth = imageData.width;\n      const addHeight = imageData.height;\n      //console.log(width+\"*\"+height+\"*4=\"+data.length+\"/\"+width+\"*\"+height+\"*4=\"+data.length)\n      const offsetY = imageData.offsetY && imageData.offsetY > 0 && imageData.offsetY < height ?\n        imageData.offsetY :\n        !imageData.offsetY || imageData.offsetY < height ? 0 : height;\n      const offsetX = imageData.offsetX && imageData.offsetX > 0 && imageData.offsetX < width ?\n        imageData.offsetX :\n        !imageData.offsetX || imageData.offsetX < width ? 0 : width;\n      const addOffsetY = offsetY + addHeight;\n      const endY = addOffsetY > height ?\n        height :\n        addOffsetY;\n      const addOffsetX = offsetX + addWidth;\n      const endX = addOffsetX > width ?\n        width :\n        addOffsetX;\n      let maxY = 0;\n      let maxX = 0;\n      let count = 0;\n      for (let iy = offsetY; iy < endY; iy++) {\n        const addPixcelIndexY = iy - offsetY;\n        maxY = addPixcelIndexY;\n        for (let ix = offsetX; ix < endX; ix++) {\n          const addPixcelIndexX = ix - offsetX;\n          const basePixcelIndex = iy * width + ix;\n          const addPixcelIndex = addPixcelIndexY * addWidth + addPixcelIndexX;\n          count++;\n          func(data, basePixcelIndex, addData, addPixcelIndex);\n          maxX = addPixcelIndexX;\n        }\n      }\n      //console.log(\"count:\"+count+\"/maxX:\"+maxX+\"/maxY:\"+maxY+\"/w:\"+addWidth+\"/h:\"+addHeight+\"/offsetX:\"+offsetX+\"/offsetY:\"+offsetY+\"/endX:\"+endX+\"/endY:\"+endY+\"/width:\"+width+\"/height:\"+height)\n    }\n  }\n\n  replace() {\n    return (base, basePixcelIndex, addOne, addPixcelIndex) => {\n      const index = basePixcelIndex * 4;\n      const indexAdd = addPixcelIndex * 4;\n      base[index] = addOne[indexAdd]\n      base[index + 1] = addOne[indexAdd + 1]\n      base[index + 2] = addOne[indexAdd + 2]\n      base[index + 3] = 255 //addOne[addPixcelIndex + 2]\n    }\n  }\n  linier() {\n    return (base, basePixcelIndex, addOne, addPixcelIndex) => {\n      const index = basePixcelIndex * 4;\n      const indexAdd = addPixcelIndex * 4;\n      base[index] = base[index] + addOaddOffsetXne[indexAdd]\n      base[index + 1] = base[index + 1] + addOne[indexAdd + 1]\n      base[index + 2] = base[index + 2] + addOne[indexAdd + 2]\n    }\n  }\n  multiplication() {\n    return (base, basePixcelIndex, addOne, addPixcelIndex) => {\n      const index = basePixcelIndex * 4;\n      const indexAdd = addPixcelIndex * 4;\n      base[index] = this.trimByte(base[index] * addOne[indexAdd] / 255);\n      base[index + 1] = this.trimByte(base[index + 1] * addOne[indexAdd + 1] / 255);\n      base[index + 2] = this.trimByte(base[index + 2] * addOne[indexAdd + 2] / 255);\n    }\n  }\n}\n","export class ImageResizer {\n  trimByte(byteX) {\n    const x = Math.floor(byteX);\n    const maxByte = x > 255 ?\n      255 :\n      x;\n    const minByte = maxByte < 0 ?\n      0 :\n      maxByte;\n    return minByte;\n  }\n  culcWeightByCubic(alpha) {\n    return (x) => {\n      let result = 0;\n      if (x <= 1) {\n        result = ((alpha + 2.0) * x * x * x) - ((alpha + 3.0) * x * x) + 1;\n      } else if (x <= 2) {\n        result = (alpha * x * x * x) - (5.0 * alpha * x * x) + (8.0 * alpha * x) - (4.0 * alpha);\n      }\n      return result;\n    }\n  }\n  sincLanczos(x) {\n    return Math.sin(x * Math.PI) / (x * Math.PI);\n  }\n\n  lanczosWeight(n = 3) {\n    return (d) => {\n      return d === 0 ?\n        1 :\n        (\n          Math.abs(d) < n ?\n          this.sincLanczos(d) * this.sincLanczos(d / n) :\n          0);\n    }\n  }\n  resizeAsByCubic(iamegData, distImage) {\n    const {\n      data,\n      width,\n      height\n    } = iamegData;\n    const distBitmap = distImage.data;\n    const newWidth = distImage.width;\n    const newHeight = distImage.height;\n    const newData = new Uint8ClampedArray(this.resizeByCubic(data, width, height, newWidth, newHeight, distBitmap));\n    return distImage\n  }\n  resize(iamegData, newWidth, newHeight, distImage) {\n    const {\n      data,\n      width,\n      height\n    } = iamegData;\n    const distBitmap = distImage.data;\n    const newData = new Uint8ClampedArray(this.resizeByCubic(data, width, height, newWidth, newHeight, distBitmap));\n    return distImage\n  }\n  resizeLanczos(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, distBitmap) {\n    return this.resizeExecute(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, this.lanczosWeight(3), 6, distBitmap);\n  }\n  resizeByCubic(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, distBitmap) {\n    return this.resizeExecute(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, this.culcWeightByCubic(-1.0), 4, distBitmap);\n  }\n  // TODO run with maltiThead\n  resizeExecute(originBitmap, sourceWidth, sourceHeight, newWidthF, newHeightF, weightFunc, size, distBitmap) {\n    const newWidth = Math.floor(newWidthF);\n    const newHeight = Math.floor(newHeightF);\n    const sw = Math.floor(sourceWidth);\n    const sw4 = sw * 4;\n    const swLimit = sw - 1;\n    const sh = Math.floor(sourceHeight);\n    const sh4 = sh * 4;\n    const shLimit = sh - 1;\n    const wf = sw / newWidth;\n    const hf = sh / newHeight;\n    const src = originBitmap;\n    const dist = distBitmap ?\n      distBitmap :\n      new Uint8Array(newWidth * newHeight * 4);\n    const sizeHalf = size / 2;\n    const sizeHalfm1 = sizeHalf - 1;\n    const xMap = {};\n    for (let iy = 0; iy < newHeight; iy++) {\n      const wfy = hf * iy;\n      const y = Math.floor(wfy);\n      const startY = y - sizeHalfm1;\n      const endY = y + sizeHalf;\n      const y32bitOffsetDist = iy * 4 * newWidth;\n      for (let ix = 0; ix < newWidth; ix++) {\n        const wfx = wf * ix;\n        const x = Math.floor(wfx);\n        let r = 0;\n        let g = 0;\n        let b = 0;\n        const startX = x - sizeHalfm1;\n        const endX = x + sizeHalf;\n        for (let jy = startY; jy <= endY; jy++) {\n          const weightY = weightFunc(Math.abs(wfy - jy));\n          const sy = (jy < 0 || jy > shLimit) ?\n            y :\n            jy;\n          const y32bitOffset = sw4 * sy;\n          for (let jx = startX; jx <= endX; jx++) {\n            const w = weightFunc(Math.abs(wfx - jx)) * weightY;\n            if (w === 0) {\n              continue;\n            }\n            const sx = (jx < 0 || jx > swLimit) ?\n              x :\n              jx;\n            const offset32bit = y32bitOffset + sx * 4;\n            r += src[offset32bit] * w;\n            g += src[offset32bit + 1] * w;\n            b += src[offset32bit + 2] * w;\n          }\n        }\n        // console.log(\"newHeight y32bitOffsetDist:\"+y32bitOffsetDist);\n        const offset32bitDist = y32bitOffsetDist + ix * 4;\n        dist[offset32bitDist] = this.trimByte(r);\n        dist[offset32bitDist + 1] = this.trimByte(g);\n        dist[offset32bitDist + 2] = this.trimByte(b);\n        dist[offset32bitDist + 3] = 255;\n      }\n    }\n    // console.log(\"newHeight:\" + dist.buffer);\n    // console.log(dist.buffer);\n    return dist.buffer;\n  }\n}\n","import vu from \"./viewUtil\";\nimport bc from \"./binaryConverter\";\nimport {Paper} from \"./image/paper\";\nimport {ImageMerger} from \"./image/imageMerger\";\nimport {ImageResizer} from \"./image/imageResizer\";\nconst imgRe = /^image\\/.+|application\\/octet-stream/;\nexport class ImageProcessor {\n  constructor() {\n    this.canvas = vu.createCanvas(null, \"hidden\");\n\n    this.ctx = this.canvas.getContext('2d');\n    this.paper = new Paper();\n    this.imageMerger = new ImageMerger();\n    this.imageResizer = new ImageResizer();\n    window.onload = () => {\n      document.body.appendChild(this.canvas);\n    };\n  }\n  setDataURI(dataURI) {\n    this.dataURI = dataURI;\n  }\n  async resize(ab, maxWidth, maxHeight) {\n    const origin = await this.getImageDataFromArrayBuffer(ab);\n    return this.resizeInMaxSize(origin, maxWidth, maxHeight);\n  }\n  async resizeAsPaper(ab, paperSize, dpiName, marginSetting) {\n    const origin = await this.getImageDataFromArrayBuffer(ab);\n    const sizeOfPaper = this.paper.getPixcelSizeBySelected(paperSize, dpiName);\n    let newPaperData = this.ctx.createImageData(sizeOfPaper.width, sizeOfPaper.height);\n    const sizeOfImage = this.paper.getPixcelSizeBySelected(paperSize, dpiName, marginSetting);\n    const newData = this.resizeInMaxSize(origin, sizeOfImage.width, sizeOfImage.height);\n    const marginMM = this.paper.getOffset(dpiName, marginSetting);\n    const data = {\n      offsetY: marginMM,\n      offsetX: marginMM,\n      data: newData.data,\n      width: newData.width,\n      height: newData.height\n    }\n    const len = newData.data.length\n    for (let i = 0; i < len; i++) {\n      newPaperData.data[i] = newData.data[i];\n    }\n    this.canvas.width = newPaperData.width;\n    this.canvas.height = newPaperData.height;\n    this.imageMerger.maegeReplace(newPaperData, [data], true);\n    // console.log(\"newData---------------------------------------------------width:\" + sizeOfImage.width + \"/height:\" + sizeOfImage.height)\n    // console.log(newData)\n    // console.log(data)\n    // console.log(newPaperData.data)\n    this.ctx.putImageData(newPaperData, 0, 0);\n    newPaperData = undefined;\n    let dataUri = this.canvas.toDataURL();\n    console.time('resize copy');\n    const abResized = bc.dataURI2ArrayBuffer(dataUri);\n    dataUri = undefined;\n    console.timeEnd('resize copy');\n    return abResized;\n  }\n\n  resizeInMaxSize(iamegData, maxWidth, maxHeight) {\n    const {data, width, height} = iamegData;\n    const retioOuter = maxWidth / maxHeight;\n    const retioInner = width / height;\n    const isWidthGreater = retioInner >= retioOuter;\n    const retio = isWidthGreater\n      ? maxWidth / width\n      : maxHeight / height;\n    const newWidth = isWidthGreater\n      ? maxWidth\n      : width * retio;\n    const newHeight = isWidthGreater\n      ? height * retio\n      : maxHeight;\n    // console.log(\"resizeInMaxSize---------------------------------------------------newWidth:\" + newWidth + \"/newHeight:\" + newHeight)\n    return this.resizeExecute(iamegData, newWidth, newHeight);\n  }\n  resizeExecute(iamegData, newWidth, newHeight) {\n    console.time('resize');\n    const newImageData = this.ctx.createImageData(newWidth, newHeight);\n    this.imageResizer.resize(iamegData, newWidth, newHeight, newImageData);\n    console.timeEnd('resize');\n    return newImageData;\n  }\n  getImageDataFromArrayBuffer(ab) {\n    console.time('resize getImageDataFromArrayBuffer');\n    return new Promise((resolve, reject) => {\n      let dataUri = bc.arrayBuffer2DataURI(ab);\n      ab = null;\n      const img = new Image();\n      img.src = dataUri;\n      img.onload = () => {\n        dataUri = null\n        const width = img.width;\n        const height = img.height;\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.ctx.drawImage(img, 0, 0);\n        const imageData = this.ctx.getImageData(0, 0, width, height);\n        resolve(imageData);\n        console.timeEnd('resize getImageDataFromArrayBuffer');\n      }\n      img.onerror = (e) => {\n        reject(e);\n      }\n    });\n  }\n  getArrayBufferFromImageBitmapDataAsJpg(iamgeBitmapData,quority) {\n    const option ={\n      type:'image/jpeg',\n      quority:quority\n    };\n    return this.getArrayBufferFromImageBitmapData(iamgeBitmapData,option);\n  }\n  getArrayBufferFromImageBitmapDataAsPng(iamgeBitmapData) {\n    return this.getArrayBufferFromImageBitmapData(iamgeBitmapData);\n  }\n  getArrayBufferFromImageBitmapData(iamgeBitmapData,option) {\n    console.time('resize getArrayBufferFromImageBitmapData');\n    this.canvas.width = Math.floor(iamgeBitmapData.width);\n    this.canvas.height = Math.floor(iamgeBitmapData.height);\n    let newPaperData = this.ctx.createImageData(iamgeBitmapData.width, iamgeBitmapData.height);\n    const len = iamgeBitmapData.data.length\n    for (let i = 0; i < len; i++) {\n      newPaperData.data[i] = iamgeBitmapData.data[i];\n    }\n    this.ctx.putImageData(newPaperData, 0, 0);\n    let dataUri = option? this.canvas.toDataURL(option.type,option.quority):this.canvas.toDataURL();\n    const abResized = bc.dataURI2ArrayBuffer(dataUri);\n    // console.log('iamgeBitmapData.data.length:'+iamgeBitmapData.data.length+'/w:'+iamgeBitmapData.width+'/h:'+iamgeBitmapData.height);\n    // console.log('dataUri:'+dataUri);\n    // console.log(abResized);\n    newPaperData = undefined;\n    console.timeEnd('resize getArrayBufferFromImageBitmapData');\n    return abResized;\n  }\n  create(arrayBuffer, width, height, type) {\n    return new Promise((resolve, reject) => {\n      const imgElm = new Image();\n      imgElm.src = bc.arrayBuffer2DataURI(arrayBuffer, type);\n      imgElm.onload = () => {\n        const widthScale = width / imgElm.width;\n        const heightScale = height / imgElm.height;\n        const scale = widthScale <= heightScale\n          ? widthScale\n          : heightScale;\n        this.canvas.height = Math.floor(imgElm.height * scale);\n        this.canvas.width = Math.floor(imgElm.width * scale);\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.scale(scale, scale);\n        this.ctx.drawImage(imgElm, 0, 0);\n        resolve(this.exportPng());\n      };\n      imgElm.onerror = (e) => {\n        console.log('失敗');\n        console.log(e);\n        reject(null);\n      };\n    });\n  }\n  exportPng() {\n    return this.canvas.toDataURL();\n  }\n  exportJpeg(quority = 1.0) {\n    return this.canvas.toDataURL('image/jpeg', quority);\n  }\n\n  createImageNodeByData(data) {\n    return new Promise((resolve, reject) => {\n      let {name, ab, type} = data;\n      let imgElm = vu.createImage();\n      imgElm.alt = escape(name);\n\n      if (!type) {\n        type = \"application/octet-stream\";\n      }\n      if (type && type.match(imgRe)) {\n        imgElm.src = bc.arrayBuffer2DataURI(ab, type);\n        imgElm.onload = () => {\n          data.height = imgElm.height;\n          data.width = imgElm.width;\n          resolve(imgElm);\n        }\n        imgElm.onerror = (e) => {\n          console.log('失敗');\n          console.log(e);\n          reject(e);\n        };\n        return\n      } else {\n        resolve(imgElm);\n      }\n\n    });\n  }\n}\n","import {ImageProcessor} from \"../util/imageProcessor\";\nexport class ImageProcessService {\n  constructor() {\n    this.ip = new ImageProcessor();\n  }\n  async createThumbnail(arrayBuffer,type){\n    const retURI = await this.ip.create(arrayBuffer,100,100,type);\n    console.log(retURI);\n    return retURI;\n  }\n\n  async createImageNodeByData(data) {\n    return await this.ip.createImageNodeByData(data);\n  }\n\n  async resize(ab, newWidth, newHeight) {\n    return await this.ip.resize(ab, newWidth, newHeight);\n  }\n  async resizeAsPaperB5_72(ab) {\n    return await this.ip.resizeAsPaper(ab,\"B5\", \"dpi72\", \"conbini\");\n  }\n  async getImageDataFromArrayBuffer(ab){\n    return await this.ip.getImageDataFromArrayBuffer(ab);\n  }\n  getArrayBufferFromImageBitmapData(imageBitmapData,option){\n    return this.ip.getArrayBufferFromImageBitmapData(imageBitmapData,option);\n  }\n  getArrayBufferFromImageBitmapDataAsJpg(imageBitmapData,quority) {\n    return this.ip.getArrayBufferFromImageBitmapDataAsJpg(imageBitmapData,quority);\n  }\n  getArrayBufferFromImageBitmapDataAsPng(imageBitmapData) {\n    return this.ip.getArrayBufferFromImageBitmapDataAsPng(imageBitmapData);\n  }\n}\n","import {MainServiceImpl} from \"./mainServiceImpl\"\nimport {Thread} from \"../util/thread/thread\"\nconst mainServiceImpl = new MainServiceImpl();\nconst currentSiries = \"\";\nconst currentTitle = \"\";\nexport class MainService {\n  static getInstance(){\n    const thread = new Thread();\n    thread.postMessage(\"WASMcaller\",\"\");\n    return mainServiceImpl;\n  }\n  async init(){\n    await mainServiceImpl.init();\n  }\n}\n","import {EntityManager} from \"./entity/entityManager\";\nimport {ViewPartsLoader} from \"./viewPartsLoader\";\nimport {TitleManager} from \"./manager/titleManager\";\nimport {BinaryManager} from \"./manager/binaryManager\";\nimport {PagesManager} from \"./manager/pagesManager\";\nimport {SettingsManager} from \"./manager/settingsManager\";\nimport {OutputProfilesManager} from \"./manager/outputProfilesManager\";\nimport {ImageOutputsManager} from \"./manager/imageOutputsManager\";\nimport {ImageManager} from \"./manager/imageManager\";\nimport {ThumbnaleManager} from \"./manager/thumbnailManager\";\nimport {Images} from \"../entity/images\";\nimport {Series} from \"../entity/series\";\nimport {Thumbnales} from \"../entity/thumbnales\";\nimport {Title} from \"../entity/title\";\nimport {Pages} from \"../entity/pages\";\nimport {Settings} from \"../entity/settings\";\nimport {OutputProfiles} from \"../entity/outputProfiles\";\nimport {ImageOutputs} from \"../entity/imageOutputs\";\nimport {ImageProcessService} from \"./imageProcessService\"\n\nconst title = \"CopiBon\";\nconst titlePrefix = \"title_\";\nexport class MainServiceImpl {\n  constructor() {\n    this.vpl = new ViewPartsLoader();\n    this.em = new EntityManager();\n    this.ip = new ImageProcessService();\n  }\n  async init() {\n    await this.em.initAsNewUser([Images, Series, Thumbnales, Title, Pages, Settings, OutputProfiles,ImageOutputs]);\n    this.ip = new ImageProcessService();\n    this.bm = new BinaryManager(this.em);\n    this.tbm = new ThumbnaleManager(this.em);\n    this.pb = new ThumbnaleManager(this.em);\n    this.tbm = new ThumbnaleManager(this.em);\n    this.im = new ImageManager(this.em);\n    this.pm = new PagesManager(this.em);\n    this.opm = new OutputProfilesManager(this.em);\n    this.iom = new ImageOutputsManager(this.em);\n    this.sm = new SettingsManager(this.em,this.opm );\n    this.tm = new TitleManager(this.em);\n    this.im.setTitleManager(this.tm);\n    this.pm.setTitleManager(this.tm);\n    await this.tm.load();\n  }\n\n  getViewPartsLoader() {\n    return this.vpl;\n  }\n}\n","import {\n  ProgressActionCreator\n} from '../action/progressActionCreator'\nimport {\n  MainService\n} from \"../../service/mainService\"\nimport {\n  BaseReducer\n} from '../../util/reactive/baseReducer'\nlet progressViewReducer = null;\nexport class ProgressViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.progressBarAddAction = ProgressActionCreator.creatAddAction();\n    this.progressBarRemoveAction = ProgressActionCreator.creatRemoveAction();\n    this.progressBarUpdateAction = ProgressActionCreator.creatUpdateAction();\n    this.progressBarCompleatSortAction = ProgressActionCreator.creatCompleatAction();\n    this.atatch(this.progressBarAddAction);\n    this.atatch(this.progressBarRemoveAction);\n    this.atatch(this.progressBarUpdateAction);\n    this.atatch(this.progressBarCompleatSortAction);\n    this.storeKey = \"progress\";\n  }\n  static register() {\n    if (!progressViewReducer) {\n      progressViewReducer = new ProgressViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.progressBarAddAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, 0, false);\n    } else if (this.progressBarRemoveAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(false, 0, false);\n    } else if (this.progressBarUpdateAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, action.data.progress, false);\n    } else if (this.progressBarCompleatSortAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, 100, true);\n    }\n    return store;\n  }\n  createProgress(isVisible, progress, isComple) {\n    return {\n      isVisible: isVisible,\n      progress: progress,\n      isComple: isComple\n    }\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {\n  ProgressViewReducer\n} from '../../reduxy/reducer/progressViewReducer'\nexport class ProgressBar extends BaseView {\n  constructor() {\n    super(\"ProgressBar\", \"ProgressBar\");\n    this.storeKey = \"progress\";\n    this.initPoint = '0%';\n  }\n\n  onAfterAttach(store, data) {\n    ProgressViewReducer.register();\n  }\n  render() {\n    return div(\"\" [\"ProgressBarView\"], {\n      style: {\n        display: \"none\"\n      }\n    }, [\n      div('', ['progeressFrame'], [div('', ['progeress'], {\n          style: {\n            width: this.initPoint\n          }\n        })]),\n      div('', ['progeressPoints'], this.initPoint)\n    ]);\n  }\n  async onViewShow(store, actionData) {\n    if (store.progress) {\n      await this.showProgress(store.progress);\n      //console.log(\"ProgressBar onViewShow\");\n    }\n  }\n  showProgress(data) {\n    const {isVisible, progress, isComple} = data;\n    if (isVisible) {\n      this.currentVnode.elm.style.display = 'block';\n      this.prePatch(\".progeress\", div(\"\", [\"progeress\"], {\n        style: {\n          width: progress + \"%\"\n        }\n      },));\n      this.prePatch(\".progeressPoints\", div(\"\", [\"progeressPoints\"], {}, progress + \"%\"));\n      if (isComple) {\n        setTimeout(() => {\n          this.currentVnode.elm.style.display = 'none';\n        }, 1000)\n      }\n    } else {\n      this.currentVnode.elm.style.display = 'none';\n      this.prePatch(\".progeress\", div(\"\", [\"progeress\"], {\n        style: {\n          width: \"0%\"\n        }\n      }));\n      this.prePatch(\".progeressPoints\", div(\"\", [\"progeressPoints\"], {}, this.initPoint));\n    }\n  }\n}\n","\nexport class BaseEventHandler {\n  constructor() {\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nconst baseActions = [\"addImage\", \"removeImage\", \"sortImages\", 'loadImages'];\nexport class ImageActionCreator {\n  constructor() {}\n  static creatAddAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addImage\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeImage\", targetView, data, storeKey);\n  }\n  static creatLoadImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadImages\", targetView, data, storeKey);\n  }\n  static creatSortImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"sortImages\", targetView, data, storeKey);\n  }\n  static creatChangeTitleImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"changeTitle\", targetView, data, storeKey);\n  }\n  static creatDetailAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"detail\", targetView, data, storeKey);\n  }\n  static getStoreImagesKey(){\n    return \"imagesData\";\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nconst baseActions = [\"addImage\", \"removeImage\", \"sortImages\", 'loadImages'];\nexport class PageActionCreator {\n  constructor() {}\n  static creatAddPageAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addPage\", targetView, data, storeKey);\n  }\n  static creatRemovePageAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removePage\", targetView, data, storeKey);\n  }\n  static creatResetPagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"resetPages\", targetView, data, storeKey);\n  }\n  static creatSortPagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"sortPages\", targetView, data, storeKey);\n  }\n  static getStorePagesKey(){\n    return \"pagesData\";\n  }\n}\n","import {Sorter} from \"../../util/sorter\";\nimport {MainService} from \"../../service/mainService\"\nexport class PageProcessor {\n  constructor() {\n    this.ms = MainService.getInstance();\n    this.em = this.ms.em;\n    this.pm = this.ms.pm;\n    this.tm = this.ms.tm;\n  }\n\n  async resetPagesFull() {\n    const setting = await this.tm.loadSettings();\n    const pageNum = setting.pageNum;\n    return await this.resetPages(pageNum);\n  }\n  async resetPages(pageNum) {\n    const title = await this.tm.load();\n    const pages = title.pages;\n    const pageEntitis = [];\n    const delPages = [];\n    const addPageAsNew = {};\n    if (pages.length > pageNum) {\n      for (let index in pages) {\n        const pk = pages[index];\n        if (!pk || typeof pk !== \"string\") {\n          addPageAsNew[index] = true;\n          continue;\n        }\n        const pageEntity = await this.em.get(pk);\n        if (!pageEntity) {\n          addPageAsNew[index] = true;\n          continue;\n        }\n        pageEntitis.push(pageEntity);\n        if (index >= pageNum) {\n          delPages.push(pk);\n        }\n      }\n      for (let index in delPages) {\n        const delTarget = delPages[index];\n        for (let i in pages) {\n          const current = pages[i];\n          if (delTarget === current) {\n            delete pages[i];\n            this.pm.remove(delTarget);\n            break;\n          }\n        }\n      }\n      for(let keyIndex in addPageAsNew){\n        const index = keyIndex*1;\n        if (index < pageNum) {\n          const addOne = await this.pm.save(null, null, null,null,null, index);\n          pages[index] = addOne.getPk();\n        }\n      }\n    } else {\n      const addCount = pageNum - pages.length;\n      for (let index = pages.length; index < pageNum; index++) {\n        const addOne = await this.pm.save(null, null, null,null,null, index);\n        pages.push(addOne.getPk());\n      }\n    }\n    await this.tm.saveTitle(title);\n  }\n  async loadPages() {\n    const title = await this.tm.load();\n    const pages = title.pages;\n    const pageEntitis = [];\n    for (let index in pages) {\n      const pk = pages[index];\n      if (!pk) {\n        continue;\n      }\n      const pageEntity = await this.em.get(pk);\n      pageEntitis.push(pageEntity);\n    }\n    return pageEntitis;\n  }\n  async move(fromPk,toPk){\n    await this.pm.move(fromPk,toPk)\n  }\n  async add(imagePk,pagePk){\n    await this.pm.addPage(imagePk,pagePk);\n  }\n  async remove(pagePk) {\n    await this.pm.removeImage(pagePk);\n  }\n}\n","import {ImageActionCreator} from '../action/imageActionCreator'\nimport {PageActionCreator} from '../action/pageActionCreator'\nimport {Sorter} from \"../../util/sorter\";\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nimport {PageProcessor} from '../processor/pageProcessor'\nlet imageViewReducer = null;\nexport class ImageViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.em = this.ms.em;\n    this.im = this.ms.im;\n    this.tm = this.ms.tm;\n    this.imagAddAction = ImageActionCreator.creatAddAction();\n    this.imageRemoveAction = ImageActionCreator.creatRemoveAction();\n    this.imagesLoadAction = ImageActionCreator.creatLoadImagesAction();\n    this.imagesSortAction = ImageActionCreator.creatSortImagesAction();\n    this.imagesChangeTitleAction = ImageActionCreator.creatChangeTitleImagesAction();\n    this.imagesDetailAction = ImageActionCreator.creatDetailAction();\n    this.atatch(this.imagAddAction);\n    this.atatch(this.imageRemoveAction);\n    this.atatch(this.imagesLoadAction);\n    this.atatch(this.imagesSortAction);\n    this.atatch(this.imagesChangeTitleAction);\n    this.atatch(this.imagesDetailAction);\n    this.pp = new PageProcessor();\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n    this.storePagesKey = PageActionCreator.getStorePagesKey();\n  }\n  static register() {\n    if (!imageViewReducer) {\n      imageViewReducer = new ImageViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    let isCalled = false;\n    if (this.imagAddAction.type === action.type) {\n      store[this.storeImagesKey] = await this.saveFiles(action.data.files);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imageRemoveAction.type === action.type) {\n      store[this.storeImagesKey] = await this.remove(action.data.imagePKforDelete);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesLoadAction.type === action.type) {\n      store[this.storeImagesKey] = await this.loadImages();\n      store[this.storePagesKey] = await this.loadPages();\n      //alert(store[this.storePagesKey]);\n    } else if (this.imagesSortAction.type === action.type) {\n      store[this.storeImagesKey] = await this.sort(action.data.imagePKmove, action.data.imagePKdrop);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesChangeTitleAction.type === action.type) {\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesDetailAction.type === action.type) {\n      store[\"imagesDetailData\"] = await this.loadAImage(action.data.imagePK);\n    }\n    return store;\n  }\n  async loadPages(){\n    return await this.pp.loadPages();\n  }\n  async saveFiles(files) {\n    const imageEntitis = await this.tm.addImageFiles(files);\n    const retList = this.im.getEntitisAsList();\n    for (let imageEntity of imageEntitis) {\n      retList.unshift(imageEntity);\n    }\n    return await this.im.createRetList(retList);\n  }\n\n  async sort(movePk, dropPk) {\n    //console.log('sort movePk:' + movePk + '/dropPk:' + dropPk+\"/this.em.save:\"+this.em)\n      // console.log(this.em)\n    const imageEntitis = this.im.getEntitisAsList();\n\n    for (let index in imageEntitis) {\n      const imageEntity = imageEntitis[index];\n      const pk = imageEntity.getPk();\n      imageEntity.listing = index;\n      //console.log('sort pk:' + pk + '/index:' + index + '/imageEntity.listing:' + imageEntity.listing)\n    }\n    Sorter.orderBy(imageEntitis, [\n      {\n        colName: \"listing\",\n        isDESC: false\n      }, {\n        colName: \"updateDate\",\n        isDESC: true\n      }\n    ]);\n    const converterMap = {};\n    converterMap[movePk] = dropPk;\n    converterMap[dropPk] = movePk;\n    for (let index in imageEntitis) {\n      const imageEntity = imageEntitis[index];\n      const pk = imageEntity.getPk();\n      console.log('sort pk:' + pk + '/index:' + index + '/imageEntity.listing:' + imageEntity.listing)\n      const convertedPk = converterMap[pk]\n        ? converterMap[pk]\n        : pk;\n      if (convertedPk !== pk) {\n        const imageEntityConverted = this.im.getFromLoaded(convertedPk).imageEntity;\n        imageEntityConverted.listing = index;\n        imageEntityConverted.updateDate = Date.now();\n        await this.em.Images.save(imageEntityConverted);\n      } else {\n        imageEntity.listing = index;\n      }\n    }\n    return await this.im.createRetList(imageEntitis);\n  }\n\n  async loadAImage(pk) {\n    if(!pk){\n      return\n    }\n    const imageEntity = await this.em.get(pk);\n    const binaryEntity = await this.em.get(imageEntity.binary);\n    const size = binaryEntity._ab.byteLength;\n    const imageText = escape(imageEntity.name) + ' (' + (\n    imageEntity.type || 'n/a') + ') - ' + size + 'bytes, last modified: ' + imageEntity.modifyDate + ' size:' + imageEntity.width + 'x' + imageEntity.height\n\n    return {imageEntity:imageEntity,binaryEntity:binaryEntity,imageText:imageText}\n  }\n  async loadImages() {\n    const a = await this.pp.resetPagesFull();\n    return await this.im.loadImages();\n  }\n\n  async remove(pk) {\n    await this.tm.removeImage(pk);\n    this.im.removeLoaded(pk);\n    return this.im.getRetObjsAsList();\n  }\n}\n// setTimeout(ImageViewReducer.register,1);\n","import {ProgressBar} from \"../view/parts/progressBar\";\nimport {BaseEventHandler} from \"./baseEventHandler\";\nimport {ImageActionCreator} from '../reduxy/action/imageActionCreator'\nimport {ImageViewReducer} from '../reduxy/reducer/imageViewReducer'\nexport class FileUploader extends BaseEventHandler {\n  constructor(fileProcessor) {\n    super();\n    // this.fileProcessor = fileProcessor;\n    this.name = \"FileUploader\";\n    ImageViewReducer.register();\n  }\n  handleFileSelect(view) {\n    return (event)=>{\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const files = event.target.files; // FileList object\n      this.handleFiles(view,files);\n    }\n  }\n\n  handleDrop(view){\n    return (event)=>{\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const files = event.dataTransfer.files;\n      this.handleFiles(view,files);\n    }\n  }\n  handleFiles(view,files){\n    const actin = ImageActionCreator.creatAddAction(view,{files:files});\n    view.dispatch(actin);\n    //this.fileProcessor.processFiles(files);\n  }\n  async areadParFile(file){\n    return await areadParFile(file);\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  file\n} from \"../../util/reactive/base/vtags\";\nimport {FileUploader} from \"../../eventHandler/fileUploader\";\nconst text = \"ここにファイルをアップロードしてください。\";\nexport class FileUploadArea extends BaseView {\n  constructor() {\n    super(\"fuaPArent\", \"FileUploadArea\",true);\n    this.fu = new FileUploader();\n  }\n  render() {\n    this.FileUploadFile = file(\"FileUploadFile\", [\"FileUploadFile\"],{on:{\n      'change':this.fu.handleFileSelect(this)\n    }});\n    this.fileUploadArea = div(\"FileUploadArea\", [\"FileUploadAreaA\"],text);\n\n    return div(this.id, [\"FileUploadArea\"], {\n      on: {\n        'dragover': this.fu.handleDrop(this),\n        'drop': this.fu.handleDrop(this),\n        'click': (e) => {\n          const fileInput = this.getElementById(\"FileUploadFile\");\n          fileInput.elm.click();\n        }\n      }\n    }, [this.fileUploadArea, this.FileUploadFile]);\n  }\n  onAfterAttach(store, data) {\n\n    //alert('FileUploadArea onAfterAttach')\n    //this.addEventListeners();\n\n  }\n}\n","const re_yyyy = /yyyy/;\nconst re_MM = /MM/;\nconst re_dd = /dd/;\nconst re_hh = /hh/;\nconst re_mm = /mm/;\nconst re_ss = /ss/;\n\nexport const unixTimeToDateFormat = (unixtime, format = \"yyyy-MM-dd hh:mm:ss\") => {\n  const d = new Date(unixtime);\n  const year = d.getFullYear();\n  const month = d.getMonth() + 1;\n  const day = d.getDate();\n  const hour = ('0' + d.getHours()).slice(-2);\n  const min = ('0' + d.getMinutes()).slice(-2);\n  const sec = ('0' + d.getSeconds()).slice(-2);\n  return format.replace(re_yyyy, year).replace(re_MM,month).replace(re_dd,day).replace(re_hh,hour).replace(re_mm,min).replace(re_ss,sec);\n}\nexport const getNowUnixtime = () => {\n  new Date().getTime();\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class SettingActionCreator {\n  constructor() {}\n  static creatAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"creatSetting\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeSetting\", targetView, data, storeKey);\n  }\n  static creatLoadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadSetting\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateSetting\", targetView, data, storeKey);\n  }\n  static getStoreKey(){\n    return \"settings\";\n  }\n  static getStoreKeyOpm(){\n    return \"settingsOpm\";\n  }\n}\n","import {\n  SettingActionCreator\n} from '../action/settingActionCreator'\n\nimport {\n  Sorter\n} from \"../../util/sorter\";\nimport {\n  MainService\n} from \"../../service/mainService\"\nimport {\n  BaseReducer\n} from '../../util/reactive/baseReducer'\nlet settingViewReducer = null;\nexport class SettingViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.tm = this.ms.tm;\n    this.sm = this.ms.sm;\n    this.opm = this.ms.opm;\n    this.creatAction = SettingActionCreator.creatAction();\n    this.creatRemoveAction = SettingActionCreator.creatRemoveAction();\n    this.creatLoadAction = SettingActionCreator.creatLoadAction();\n    this.creatUpdateAction = SettingActionCreator.creatUpdateAction();\n    this.atatch(this.creatAction);\n    this.atatch(this.creatRemoveAction);\n    this.atatch(this.creatLoadAction);\n    this.atatch(this.creatUpdateAction);\n    this.storeKey = SettingActionCreator.getStoreKey();\n    this.storeKeyOpm = SettingActionCreator.getStoreKeyOpm();\n  }\n  static register() {\n    if (!settingViewReducer) {\n      settingViewReducer = new SettingViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.creatAction.type === action.type) {\n      store[this.storeKey] = await this.load().catch((e)=>{console.log(e)}) ;\n      store[this.storeKeyOpm] = await this.opm.loadAll() ;\n    } else if (this.creatRemoveAction.type === action.type) {\n      store[this.storeKey] = await this.reset(action.data).catch((e)=>{console.log(e)});\n      store[this.storeKeyOpm] = await this.opm.loadAll() ;\n    } else if (this.creatLoadAction.type === action.type) {\n      store[this.storeKey] = await this.load().catch((e)=>{console.log(e)}) ;\n      store[this.storeKeyOpm] = await this.opm.loadAll() ;\n    } else if (this.creatUpdateAction.type === action.type) {\n      store[this.storeKey] = await this.update(action.data).catch((e)=>{console.log(e)});\n      store[this.storeKeyOpm] = await this.opm.loadAll() ;\n    }\n  }\n  async update(data) {\n    const title = await this.tm.load();\n    const pk = title.getPk();\n    this.sm.save(pk, data.name, data.pageNum, data.startPage, data.pageDirection, data.outputProfile, data.listing);\n    const settingEntityLoad = await this.sm.loadByPk(pk);\n    if(!settingEntityLoad){\n      const settingEntity =  await this.sm.createDefault(pk);\n      return settingEntity;\n    }\n    return settingEntityLoad;\n  }\n  async reset() {\n    const title = await this.tm.load();\n    const pk = title.getPk();\n    const settingEntity =  await this.sm.createDefault(pk);\n    return settingEntity;\n  }\n  async load() {\n    return this.tm.loadSettings();\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {unixTimeToDateFormat} from \"../../util/timeUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label,\n  select,\n  option,\n  createSelectVnode\n} from \"../../util/reactive/base/vtags\";\nimport {SettingViewReducer} from '../../reduxy/reducer/settingViewReducer'\nimport {SettingData} from '../../settings/exportSettings'\nimport {SettingActionCreator} from '../../reduxy/action/settingActionCreator'\nexport class TitleSettings extends BaseView {\n  constructor() {\n    super(\"TitleSettings\", \"TitleSettings\");\n    this.text = \"TitleSettingsAAA\";\n    this.bodyId = this.id + \"Child\";\n    this.storeKey = SettingActionCreator.getStoreKey();\n    this.getStoreKeyOpm = SettingActionCreator.getStoreKeyOpm();\n  }\n  render() {\n    return div(this.bodyId, [\"TitleSettings\"], this.text);\n  }\n  onAfterAttach(store, data) {\n    SettingViewReducer.register();\n    const action = SettingActionCreator.creatLoadAction(this, {});\n    this.dispatch(action);\n  }\n  async onViewShow(store, actionData) {\n    console.log(\"TitleSettings onViewShow 01 this.storeKey:\" + this.storeKey + '/' + store[this.storeKey]);\n    if (store[this.storeKey]) {\n      await this.showSettings(store[this.storeKey], store[this.getStoreKeyOpm]);\n    }\n  }\n  update() {\n    return(event) => {\n      const nameInput = document.getElementById(this.id + \"NameInput\").value;\n      const pageNumInput = document.getElementById(this.id + \"PageNumInput\").value;\n      const startPageInput = document.getElementById(this.id + \"StartPageInput\").value;\n      const pageDirectionInput = document.getElementById(this.id + \"PageDirectionInput\").value;\n      const outputProfileInput = document.getElementById(this.id + \"OutputProfileInput\").value;\n      //alert(\"update NameInput:\" + nameInput + \"/\" + pageNumInput + \"/\" + startPageInput + \"/\" + pageDirectionInput + \"/\" + outputProfileInput)\n      //data.name, data.pageNum, data.startPage,, data.startPage, data.outputProfile, data.listing);\n      const action = SettingActionCreator.creatUpdateAction(this, {\n        name: nameInput,\n        pageNum: pageNumInput,\n        startPage: startPageInput,\n        pageDirection: pageDirectionInput,\n        outputProfile: outputProfileInput,\n        listing: 0\n      });\n\n      this.dispatch(action);\n    }\n  }\n  async showSettings(setting, outputProfiles) {\n    console.log(setting);\n    console.log(outputProfiles);\n    const labelClass = this.id + \"Label\";\n    const inputClass = this.id + \"Input\";\n    const title = div(\"\", [this.id + \"Title\"], \"Setting for Output\");\n    const nameLabel = span(\"\", [labelClass], 'name:');\n    const nameInput = input(this.id + \"NameInput\", [this.id + \"NameInput\"], {\n      props: {\n        name: this.id + \"NameInput\"\n      }\n    }, \"text\", setting.name);\n    const nameRow = div(\"\", [this.id + \"Row\"], [nameLabel, nameInput]);\n    const pageNumLabel = span(\"\", [labelClass], 'pageNum:');\n    const idpageNumInput = this.id + \"PageNumInput\";\n    const pageNumInput = createSelectVnode(idpageNumInput, [\n      inputClass, idpageNumInput\n    ], idpageNumInput, SettingData.pageNums, setting.pageNum);\n    const pageNumRow = div(\"\", [this.id + \"Row\"], [pageNumLabel, pageNumInput]);\n\n    const startPageLabel = span(\"\", [labelClass], 'startPage:');\n    const idStartPageInput = this.id + \"StartPageInput\";\n    const startPageInput = createSelectVnode(idStartPageInput, [\n      inputClass, idStartPageInput\n    ], idStartPageInput, SettingData.pageStart, setting.startPage);\n    const startPageRow = div(\"\", [this.id + \"Row\"], [startPageLabel, startPageInput]);\n\n    const pageDirectionLabel = span(\"\", [labelClass], 'pageDirection:');\n    const idPageDirectionInput = this.id + \"PageDirectionInput\";\n    const pageDirectionInput = createSelectVnode(idPageDirectionInput, [\n      inputClass, idPageDirectionInput\n    ], idPageDirectionInput, SettingData.pageDirection, setting.pageDirection);\n    const pageDirectionRow = div(\"\", [this.id + \"Row\"], [pageDirectionLabel, pageDirectionInput]);\n\n    const outputProfileLabel = span(\"\", [labelClass], 'outputProfile:');\n    const idOutputProfileInput = this.id + \"OutputProfileInput\";\n    const outputProfileInput = input(idOutputProfileInput, [\n      inputClass, idOutputProfileInput\n    ], {\n      props: {\n        name: idOutputProfileInput\n      }\n    }, \"text\", setting.outputProfile);\n    const outputProfileRow = div(\"\", [this.id + \"Row\"], [outputProfileLabel, outputProfileInput]);\n    const frameL = div(\"\", [this.id + \"FrameL\"], [nameRow, pageNumRow]);\n    const frameR = div(\"\", [this.id + \"FrameR\"], [startPageRow, pageDirectionRow, outputProfileRow]);\n    const frame = div(\"\", [this.id + \"Frame\"], [frameL, frameR]);\n    const button = div(\"\", [this.id + \"Update\"], {\n      on: {\n        click: this.update()\n      }\n    }, \"Save! LastUpdae:\" + unixTimeToDateFormat(setting.updateDate));\n    const childlen = [title, frame, button];\n    this.prePatch(\"#\" + this.bodyId, div(this.bodyId, [\"TitleSettings\"], childlen));\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class ExportActionCreator {\n  constructor() {}\n  static createExecuteAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"executeExport\", targetView, data, storeKey);\n  }\n  static creatExecuteAllAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"executeExportAll\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeExported\", targetView, data, storeKey);\n  }\n  static creatLoadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadExported\", targetView, data, storeKey);\n  }\n  static createDownloadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"downloadExport\", targetView, data, storeKey);\n  }\n  static createExecutePdfAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"executePdfExport\", targetView, data, storeKey);\n  }\n  static createDownloadPdfAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"downloadPdfExport\", targetView, data, storeKey);\n  }\n  static createSelectOrderAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"selectOrderExport\", targetView, data, storeKey);\n  }\n  static getStoreKey(){\n    return \"exports\";\n  }\n  static getStorePdfDLKey(){\n    return \"exportPdfDL\";\n  }\n  static getStoreZipDLKey(){\n    return \"exportZipDL\";\n  }\n  static getStoreRemoveResultKey(){\n    return \"exportRemoveResult\";\n  }\n  static getStoreExportResultKey(){\n    return \"exportExportResult\";\n  }\n  static getStoreSelectedOrderKey(){\n    return \"exportSelectedOrder\";\n  }\n}\n","import {ImageMerger} from \"./imageMerger\";\nexport class ImageCropper {\n  constructor() {\n    this.imageMerger = new ImageMerger();\n  }\n\n  cropImage(imageData,newWidth,newHieght,offsetX,offsetY){\n    const retArray = new Uint8ClampedArray(newWidth*newHieght*4);\n    const imagaDataBase = {\n      data:retArray,\n      width:newWidth,\n      height:newHieght\n    };\n    imageData.offsetX = offsetX;\n    imageData.offsetY = offsetY;\n    this.imageMerger.maegeReplace(imagaDataBase, [imageData], false)\n    return imagaDataBase;\n  }\n  corpImageToData(imageData,distData,offset){\n    imageData.offsetX = offset.x;\n    imageData.offsetY = offset.y;\n    this.imageMerger.maegeReplace(distData, [imageData], false);\n  }\n}\n","export class UnicodeEncoder {\n  static surrogatePairToCodePoint(charCode1, charCode2) {\n    return ((charCode1 & 0x3FF) << 10) + (charCode2 & 0x3FF) + 0x10000;\n  }\n\n  static stringToCodePointArray(str) {\n    const codePoints = [];\n    const len = str.length;\n    for (let i = 0; i < len; i++) {\n      const charCode = str.charCodeAt(i);\n      if ((charCode & 0xF800) === 0xD800) {\n        codePoints.push(UnicodeEncoder.surrogatePairToCodePoint(charCode, str.charCodeAt(++i)));\n      } else {\n        codePoints.push(charCode);\n      }\n    }\n    console.log(codePoints)\n    return codePoints;\n  }\n\n  static codePointArrayToString(codePoints) {\n    let stringParts = \"\";\n    const len = codePoints.length\n    for (let i = 0; i < len; ++i) {\n      let codePointCharCodes = null;\n      const codePoint = codePoints[i];\n      if (codePoint > 0xFFFF) {\n        const offset = codePoint - 0x10000;\n        codePointCharCodes = [\n          0xD800 + (offset >> 10),\n          0xDC00 + (offset & 0x3FF)\n        ];\n      } else {\n        codePointCharCodes = [codePoint];\n      }\n      stringParts += (String.fromCharCode.apply(String, codePointCharCodes));\n    }\n    return stringParts;\n  }\n  static encodeUTF8(str) {\n    const codes = UnicodeEncoder.stringToCodePointArray(str);\n    const len = codes.length;\n    const array = [];\n    for (let i = 0; i < len; i++) {\n      const c = codes[i];\n      if (c <= 0x7f) { //1byte\n        array.push(c);\n      } else if (c <= 0x7ff) { //2byte\n        array.push(0xc0 | c >>> 6, 0x80 | c & 0xbf);\n      } else if (c <= 0xffff) { //3byte\n        array.push(0xe0 | c >>> 12, 0x80 | c >>> 6 & 0xbf, 0x80 | c & 0xbf);\n      } else if (c <= 0x1ffff) { //4byte\n        array.push(0xf0 | c >>> 18, 0x80 | c >>> 12 & 0xbf, 0x80 | c >>> 6 & 0xbf, 0x80 | c & 0xbf);\n      }\n    }\n    return new Uint8Array(array);\n  }\n  static encodeUTF16(str, endian) {\n    const codes = UnicodeEncoder.stringToCodePointArray(str);\n    const len = codes.length;\n    const array = endian\n      ? endian === 'LE'\n        ? [0xff, 0xfe]\n        : [0xfe, 0xff]\n      : []; //BOM\n    for (let i = 0; i < len; i++) {\n      const c = codes[i];\n      if (endian === 'LE') {\n        array.push(c & 0xff, c >>> 8 & 0xff);\n      } else {\n        array.push(c >>> 8 & 0xff, c & 0xff);\n      }\n    }\n    return new Uint8Array(array);\n  }\n  decodeUTF8(array) {\n    let str = \"\";\n    const len = array.length;\n    for (let i = 0; i < len; i++) {\n      const c = array[i];\n      if (c <= 0x7f) {\n        str += String.fromCharCode(c);\n      } else if (c <= 0xdf && c >= 0xc2) {\n        str += String.fromCharCode((c & 31) << 6 | array[++i] & 63);\n      } else if (c <= 0xef && c >= 0xe0) {\n        str += String.fromCharCode((c & 15) << 12 | (array[++i] & 63) << 6 | array[++i] & 63);\n      } else if (c <= 0xf7 && c >= 0xf0) {\n        //utf8   11110uuu  10uuxxxx  10xxxxxx  10xxxxxx\n        //utf16  110110wwwwxxxxxx  110111xxxxxxxxxx (wwww = uuuuu-1)\n        str += String.fromCharCode(0xd800 | ((c & 7) << 8 | (array[++i] & 63) << 2 | array[++i] >>> 4 & 3) - 64, 0xdc00 | (array[i++] & 15) << 6 | array[i] & 63);\n      } else {\n        str += String.fromCharCode(0xfffd);\n      }\n    }\n    return str;\n  }\n  decodeUTF16(array) {\n    let endian = 'BE';\n    let i = 0;\n    const len = array.length;\n    let str = \"\";\n    if (array[0] * array[1] === 0xff * 0xfe) { // remove BOM\n      endian = array[0] === 0xff\n        ? 'LE'\n        : 'BE';\n      i = 2;\n    }\n    for (; i < len; i += 2) {\n      str += String.fromCharCode(\n        endian === 'LE'\n        ? (array[i + 1] << 8 | array[i])\n        : (array[i] << 8 | array[i + 1]));\n    }\n    return str;\n  }\n  static stringToByteArray(str) {\n    const len = str.length;\n    const array = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      array[i] = str.charCodeAt(i) & 0xff;\n    }\n    return array;\n  }\n}\n","import {Sorter} from \"../../util/sorter\";\nimport {MainService} from \"../../service/mainService\"\nexport class PreviewProcessor {\n  constructor() {\n    this.ms = MainService.getInstance();\n    this.em = this.ms.em;\n    this.tm = this.ms.tm;\n    this.ip = this.ms.ip;\n    this.previewMaxWidth = 1000;\n    this.previewMaxHeight = 1000;\n  }\n\n  async loadPreviews() {\n    const title = await this.tm.load();\n    const pages = title.pages;\n    const retPreviews = [];\n    for (let pagePk of pages) {\n      const pageEnitity = await this.em.get(pagePk);\n      const previewThumbnail = pageEnitity.previewThumbnail;\n      const baseImage = pageEnitity.baseImage;\n      if (baseImage) {\n        if (previewThumbnail) {\n          const binaryEntity = await this.em.get(previewThumbnail);\n          retPreviews.push(binaryEntity);\n        } else {\n          const imageEntity = await this.em.get(baseImage);\n          const binaryEntity = await this.em.get(imageEntity.binary);\n          //TODO mk previews\n          //binaryEntity._ab = await this.ip.resize(binaryEntity._ab,this.previewMaxWidth,this.previewMaxHeight);\n          binaryEntity._ab = await this.ip.resizeAsPaperB5_72(binaryEntity._ab);\n           // console.log(newData.data);\n           // console.log(binaryEntity._ab);\n           // alert(binaryEntity._ab);\n          retPreviews.push(binaryEntity);\n        }\n      } else {\n        retPreviews.push(null);\n      }\n    }\n    return retPreviews;\n  }\n  shapeListBySets(previews, isSingle, setting) {\n    const cratePageData = PreviewProcessor.getCratePageDataFunc();\n    if (isSingle) {\n      const retSetLis = [];\n      for (let index in previews) {\n        retSetLis.push(cratePageData(index*1+1, false, false, previews, this.dummyClass));\n      }\n      return retSetLis;\n    } else {\n      const pageNum = setting.pageNum * 1; //SettingData.pageNums[setting.pageNum-1]*1;\n      this.pageNum = pageNum;\n      return PreviewProcessor.buildPageFrames(setting, previews, cratePageData, this.dummyClass);\n    }\n  }\n  // \n  static getCratePageDataFunc(){\n    return (pageNo, className, isRight, binaries, dummyClass)=>{\n      return {\n        pageNo: pageNo,\n        isDummy: className === dummyClass,\n        isRight: isRight,\n        binary: binaries[pageNo - 1]\n      }\n    }\n  }\n  static buildPageFrames(setting, binaries, cratePageData, dummyClass) {\n    const retFrames = [];\n    const startPage = setting.startPage;\n    const pageNum = setting.pageNum * 1; //SettingData.pageNums[setting.pageNum-1]*1;\n    const pageDirection = setting.pageDirection;\n    const isPageDirectionR2L = pageDirection === \"r2l\";\n    const isPageStartR = startPage === \"r\";\n    const frameNum = Math.ceil(pageNum / 2);\n    const isOdd = (pageNum % 2 === 1);\n    const isMatchPageStartSide = (pageDirection.indexOf(startPage) === 0);\n    const addPageNum = isOdd\n      ? 1\n      : isMatchPageStartSide\n        ? 0\n        : 1;\n    const totalPageFrame = frameNum * 1 + addPageNum * 1;\n    const pageClass = \"Page\";\n    const isStartFull = (isPageDirectionR2L && isPageStartR) || (!isPageDirectionR2L && !isPageStartR)\n    const leftStartDummyClass = !isPageStartR || isStartFull\n      ? \"\"\n      : dummyClass;\n    const rightStartDummyClass = isPageStartR || isStartFull\n      ? \"\"\n      : dummyClass;\n    const leftEndDummyClass = (isOdd && (!isStartFull || (isStartFull && !isPageDirectionR2L))) || (!isOdd && (!isPageDirectionR2L || isStartFull))\n      ? \"\"\n      : dummyClass;\n    const rightEndDummyClass = (isOdd && (!isStartFull || (isStartFull && isPageDirectionR2L))) || (!isOdd && (isPageDirectionR2L || isStartFull))\n      ? \"\"\n      : dummyClass;\n    const lastIndex = totalPageFrame - 1;\n    let pagNo = 0;\n    let pageOffset = 0;\n    //console.log(\"★lastIndex:\"+lastIndex+\"/pageNum:\"+pageNum+\"/setting.pageNum:\"+setting.pageNum);\n    for (let index = 0; index < totalPageFrame; index++) {\n      const leftPageNo = (\n        isPageDirectionR2L\n        ? 1\n        : 0) + pageOffset + pagNo;\n      const rightPageNo = (\n        isPageDirectionR2L\n        ? 0\n        : 1) + pageOffset + pagNo;\n      const pagePair = [];\n      retFrames.push(pagePair);\n      //////////////////////////////////\n      if (index === 0) { //LR\n        const leftPageNoFirst = isPageDirectionR2L && isStartFull\n          ? 2\n          : isPageDirectionR2L\n            ? 1\n            : isStartFull\n              ? 1\n              : 0\n        const rightPageNoFirst = isPageDirectionR2L && isStartFull\n          ? 1\n          : isPageDirectionR2L\n            ? 0\n            : isStartFull\n              ? 2\n              : 1\n        pagePair.push(cratePageData(leftPageNoFirst, leftStartDummyClass, false, binaries, dummyClass));\n        pagePair.push(cratePageData(rightPageNoFirst, rightStartDummyClass, true, binaries, dummyClass));\n        pageOffset = 1;\n        pagNo += isStartFull\n          ? 2\n          : 1;\n      } else if (index === lastIndex) {\n        pagePair.push(cratePageData(leftPageNo, leftEndDummyClass, false, binaries, dummyClass));\n        pagePair.push(cratePageData(rightPageNo, rightEndDummyClass, true, binaries, dummyClass));\n      } else {\n        pagePair.push(cratePageData(leftPageNo, \"\", false, binaries, dummyClass));\n        pagePair.push(cratePageData(rightPageNo, \"\", true, binaries, dummyClass));\n        pagNo += 2;\n      }\n    }\n    return retFrames;\n  }\n}\n","import {Sorter} from \"../../util/sorter\";\nimport {getNowUnixtime, unixTimeToDateFormat} from \"../../util/timeUtil\";\nimport {Paper} from \"../../util/image/paper\";\nimport {ImageMerger} from \"../../util/image/imageMerger\";\nimport {ImageResizer} from \"../../util/image/imageResizer\";\nimport {ImageCropper} from \"../../util/image/imageCropper\";\nimport {UnicodeEncoder} from \"../../util/unicodeEncoder\";\nimport {MainService} from \"../../service/mainService\"\nimport {PreviewProcessor} from \"./previewProcessor\"\n// import {Zlib, Zip, Raw, PKZIP} from \"zlibjs/bin/zlib_and_gzip.min\"\nimport {Zlib} from \"zlibjs/bin/zip.min\"\n\nconst order = {\n  orderName: \"MangaPaperA4ExpandTatikiri\",\n  basePaper: \"mangaPaperA4ExpandTatikiri\",\n  dpiName: \"dpi600\"\n};\nexport class ExportImageProcesser {\n  constructor(pp) {\n    this.pp = pp;\n    this.ms = MainService.getInstance();\n    this.em = this.ms.em;\n    this.sm = this.ms.sm;\n    this.bm = this.ms.bm;\n    this.im = this.ms.im;\n    this.iom = this.ms.iom;\n    this.ip = this.ms.ip;\n    this.tm = this.ms.tm;\n    this.paper = new Paper();\n    this.imageMerger = new ImageMerger();\n    this.imageResizer = new ImageResizer();\n    this.imageCropper = new ImageCropper();\n  }\n  async exportExecute(exportOrders = [order]) {\n    // 0 load Title & pages ExecutePerPage\n    alert(\"exportExecute exportOrders:\" + exportOrders);\n    const setting = await this.tm.loadSettings().catch((e) => {\n      console.log(e)\n    });\n    const pages = await this.pp.loadPages().catch((e) => {\n      console.log(e)\n    });\n    return await this.executeParOrder(setting, pages, exportOrders[0]);\n  }\n  async executeParOrder(setting, pages, order) {\n    //-1 order consts calc\n    const targetDpi = this.paper.getDpi(order.dpiName);\n    const targetSize = this.paper.getTargetPaperSize(order.basePaper, order.dpiName);\n    const clopOffset = this.paper.calcClopOffsetPixcel(order.basePaper, targetDpi);\n    const frameSizeMm = this.paper.getPaperFrameSizeMm(order.basePaper);\n    const frameSize = {\n      x: this.paper.calcPixcel(targetDpi, frameSizeMm.x),\n      y: this.paper.calcPixcel(targetDpi, frameSizeMm.y)\n    };\n    await this.expandAndCropSize(targetSize, frameSizeMm, frameSize, clopOffset, pages);\n    console.log(pages)\n    console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa5a-/\")\n    const isPageDirectionR2L = setting.pageDirection === \"r2l\";\n    const isRightStart = setting.startPage === \"r\";\n    const isSideSynced = (isPageDirectionR2L && isRightStart) || (!isPageDirectionR2L && !isRightStart);\n    const isOdd = pages.length % 2 > 0;\n    const hasAddSet = (isSideSynced && isOdd) || (!isSideSynced && !isOdd);\n    await this.exportDualImage4Print(targetSize, setting, pages, hasAddSet, isSideSynced, isOdd, isPageDirectionR2L);\n\n    console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa5b-/\")\n    //10 load images and add tozip\n    // const ab = this.ip.getArrayBufferFromImageBitmapData(cropedPaper);\n    // console.log(\"cropedPaper getArrayBufferFromImageBitmapData ab:\"+cropedPaper.width+\"/\"+cropedPaper.height);\n    // console.log(ab);\n    // plainData1\n    //11 save zip\n    const compressed = await this.exoprtAsZip(pages);\n    const exports = await this.tm.getExports();\n    let exportImagePk = null;\n    let outputOld = null;\n    for (let exportPk of exports) {\n      const imageOutput = await this.iom.load(exportPk);\n      if (imageOutput.type === \"zip\") {\n        exportImagePk = exportPk;\n        outputOld = imageOutput.binary;\n        break;\n      }\n    }\n    const outputNew = await this.bm.save(outputOld, \"expandPage\", compressed);\n    console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa8b-/\" + outputNew + \"/\" + outputOld);\n    const now = (new Date().getTime());\n    const yyyyMMddThhmmss = unixTimeToDateFormat(now, \"yyyyMMddThhmmss\");\n    const exportImageNewPk = await this.iom.save(exportImagePk, (await this.tm.getCurrentTitleName()) + yyyyMMddThhmmss + \".zip\", outputNew, \"zip\", order.orderName);\n    // console.log(compressed);\n    if (exportImageNewPk) {\n      exports.push(exportImageNewPk);\n      await this.tm.saveCurrent();\n    }\n    // return pk list PK!PK!\n    return exports;\n  }\n  async expandAndCropSize(targetSize, frameSizeMm, frameSize, clopOffset, pages) {\n    console.log(\"--targetSize--\")\n    console.log(targetSize)\n    const expandedPaper = {\n      data: new Uint8ClampedArray(frameSize.x * frameSize.y * 4),\n      width: frameSize.x,\n      height: frameSize.y\n    };\n    const cropedPaper = {\n      data: new Uint8ClampedArray(targetSize.x * targetSize.y * 4),\n      width: targetSize.x,\n      height: targetSize.y\n    };\n    const cropedPaperForSave = {\n      data: new Uint8ClampedArray(targetSize.x * targetSize.y * 4),\n      width: targetSize.x,\n      height: targetSize.y\n    };\n    const targetRetio = targetSize.x / targetSize.y;\n    const isBaseWhite = true;\n    let currentDataAb = null\n    for (let pageEntity of pages) {\n      if (pageEntity && pageEntity.baseImage) {\n        // console.log(pageEntity)\n        //1 Expand\n        const baseImageEntity = await this.em.get(pageEntity.baseImage);\n        const width = baseImageEntity.width;\n        const height = baseImageEntity.height;\n        const baseBinaryEntity = await this.em.get(baseImageEntity.binary);\n        // console.log(baseImageEntity)\n        // console.log(baseBinaryEntity)\n        console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa0a\")\n        // TODO convert flate bitmap data\n        currentDataAb = baseBinaryEntity._ab;\n        const origin = await this.ip.getImageDataFromArrayBuffer(baseBinaryEntity._ab);\n        console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa0a w:\" + origin.width + '/h:' + origin.height)\n        const retio = width / height;\n        const isWider = retio > targetRetio;\n        const longPixcel = isWider\n          ? width\n          : height;\n        const longMm = isWider\n          ? frameSizeMm.x\n          : frameSizeMm.y;\n        const dpi = this.paper.calcDpi(longPixcel, longMm);\n        //paper size nomalize\n        const sizeWhitePaperWidth = isWider\n          ? width\n          : Math.floor(height * targetRetio);\n        const sizeWhitePaperHeight = isWider\n          ? Math.floor(width / targetRetio)\n          : height;\n        const offsetX = isWider\n          ? 0\n          : Math.floor((sizeWhitePaperWidth - width) / 2);\n        const offsetY = isWider\n          ? Math.floor((sizeWhitePaperHeight - height) / 2)\n          : 0;\n        const whitePaper = {\n          data: new Uint8ClampedArray(sizeWhitePaperWidth * sizeWhitePaperHeight * 4),\n          width: sizeWhitePaperWidth,\n          height: sizeWhitePaperHeight\n        };\n        origin.offsetX = offsetX;\n        origin.offsetY = offsetY;\n        console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa1a/\" + whitePaper.data.length + '/w:' + sizeWhitePaperWidth + '/h:' + sizeWhitePaperHeight)\n        this.imageMerger.maegeReplace(whitePaper, [origin], isBaseWhite);\n        console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa2a/\" + expandedPaper.data.length)\n        this.imageResizer.resizeAsByCubic(whitePaper, expandedPaper);\n        console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa3a/\" + cropedPaper.data.length)\n        this.imageCropper.corpImageToData(expandedPaper, cropedPaper, clopOffset);\n        currentDataAb = this.ip.getArrayBufferFromImageBitmapData(cropedPaper);\n        const plain = cropedPaper.data;\n        //console.log(Zlib);\n        console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa4a-/\")\n        console.time('RawDeflate');\n        // const deflate = new Raw.RawDeflate(plain);\n        // console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa5a\")\n        // const compressed = deflate.compress();\n        // console.timeEnd('RawDeflate');\n        // console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa6a\")\n        // cropedPaperForSave.data = compressed;\n\n        // console.log(compressed)\n        // alert(frameSizeMm);\n        //expand\n        //2 Save to page\n        const outputOld = pageEntity.outputExpandImage;\n        const outputNew = await this.bm.save(outputOld, \"expandPage\", currentDataAb);\n        pageEntity.outputExpandImage = outputNew;\n        await this.em.Pages.save(pageEntity);\n        //3 CropPage\n        //4 saveImage\n        //5 Save to page\n        //break;\n      }\n    }\n  }\n  async exoprtAsZip(pages) {\n    const zip = new Zlib.Zip();\n    let pageNum = 0;\n    let lastOne = null;\n    for (let pageEntity of pages) {\n      pageNum++;\n      if (pageEntity && pageEntity.outputDualImage) {\n        if (pageEntity.outputDualImage === lastOne) {\n          pageEntity.outputDualImage = null;\n          continue;\n        }\n        lastOne = pageEntity.outputDualImage;\n        const outputBinaryEntity = await this.em.get(lastOne);\n        console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa7a pageNum:\" + pageNum + \"/outputBinaryEntity:\" + outputBinaryEntity + \"/lastOne:\" + lastOne);\n        if (outputBinaryEntity) {\n          zip.addFile(new Uint8Array(outputBinaryEntity._ab), {\n            filename: UnicodeEncoder.stringToByteArray('page' + pageNum + \"-\" + pageNum + '.jpg')\n          });\n          await this.bm.remove(lastOne);\n        }\n\n      }\n    }\n    return zip.compress();\n  }\n  async exportDualImage4Print(targetSize, setting, pages, isSideSynced, isOdd, isPageDirectionR2L) {\n    //6 new WhiteImageCreate\n    //7 load2PageImage\n    //8 merge\n    //9 save\n    const cropedPaperDual = {\n      data: new Uint8ClampedArray(targetSize.x * targetSize.y * 8),\n      width: targetSize.x * 2,\n      height: targetSize.y\n    };\n    console.log(setting);\n    const cratePageData = PreviewProcessor.getCratePageDataFunc();\n    const dummyClass = \"dummy\";\n    // const shapedList = PreviewProcessor.buildPageFrames(setting, pages, cratePageData, dummyClass);\n    const pairPages = {\n      right: null,\n      left: null,\n      rightBin: null,\n      leftBin: null\n    };\n    let isSkeped = isSideSynced !== true;\n    const printPages = [];\n    const printPairs = [];\n    let indexA = 0;\n    for (let page of pages) {\n      indexA++;\n      const data = {\n        pageNo: indexA,\n        isDummy: false,\n        isRight: indexA % 2 > 0 && isSideSynced,\n        binary: page\n      }\n      printPages.push(data);\n    }\n\n    for (let index = 0; index < printPages.length; index++) {\n      const newPair = [null, null];\n      newPair[0] = printPages[index];\n      index++;\n      if (index < printPages.length) {\n        newPair[1] = printPages[index];\n      }\n      printPairs.push(newPair);\n    }\n    for (let printPagePair of printPairs) {\n      await this.buildDualImage(targetSize, cropedPaperDual, pairPages, printPagePair, isPageDirectionR2L);\n    }\n  }\n  async buildDualImage(targetSize, cropedPaperDual, pairPages, shapedPagePair, isPageDirectionR2L) {\n    console.log(shapedPagePair);\n    const one = shapedPagePair[0];\n    const two = shapedPagePair[1];\n    // reverse side!\n    const right = isPageDirectionR2L\n      ? two\n      : one;\n    const left = isPageDirectionR2L\n      ? one\n      : two;\n    pairPages.right = right === null || right.isDummy\n      ? null\n      : right.binary;\n    pairPages.left = left === null || left.isDummy\n      ? null\n      : left.binary;\n    pairPages.rightBin = null;\n    pairPages.leftBin = null;\n    console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa6a shapedPagePair:\" + shapedPagePair + \"/left:\" + pairPages.left + \"/right:\" + pairPages.right);\n\n    let pageEntity = null;\n    if (pairPages.right && pairPages.right.outputExpandImage) {\n      pairPages.rightBin = await this.em.get(pairPages.right.outputExpandImage);\n      pageEntity = pairPages.right;\n    }\n    if (pairPages.left && pairPages.left.outputExpandImage) {\n      pairPages.leftBin = await this.em.get(pairPages.left.outputExpandImage);\n      pageEntity = pairPages.left;\n    }\n    if (!pageEntity) {\n      return;\n    }\n    this.imageMerger.beWhiteImage(cropedPaperDual, true);\n    console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa6a left:\" + pairPages.left + \"/right:\" + pairPages.right);\n    if (pairPages.leftBin) {\n      const origin = await this.ip.getImageDataFromArrayBuffer(pairPages.leftBin._ab);\n      origin.offsetX = 0;\n      origin.offsetY = 0;\n      this.imageMerger.maegeReplace(cropedPaperDual, [origin], false);\n    }\n    if (pairPages.rightBin) {\n      const origin = await this.ip.getImageDataFromArrayBuffer(pairPages.rightBin._ab);\n      origin.offsetX = targetSize.x;\n      origin.offsetY = 0;\n      this.imageMerger.maegeReplace(cropedPaperDual, [origin], false);\n    }\n    //ping?\n    const cropedPaperDualAb = this.ip.getArrayBufferFromImageBitmapDataAsJpg(cropedPaperDual, 1.0);\n    const outputOld = pageEntity.outputDualImage;\n    const outputNew = await this.bm.save(outputOld, \"expandDualPage\", cropedPaperDualAb);\n    if (pairPages.right && pairPages.right.outputExpandImage) {\n      pairPages.right.outputDualImage = outputNew;\n      await this.em.Pages.save(pairPages.right);\n      await this.em.delete(pairPages.rightBin);\n    }\n    if (pairPages.left && pairPages.left.outputExpandImage) {\n      pairPages.left.outputDualImage = outputNew;\n      await this.em.Pages.save(pairPages.left);\n      await this.em.delete(pairPages.leftBin);\n    }\n  }\n  exportPdfExecute(exportOrders) {\n    alert('ExportImageProcesser exportPdfExecute');\n  }\n}\n","import {Sorter} from \"../../util/sorter\";\nimport {getNowUnixtime} from \"../../util/timeUtil\";\nimport {UnicodeEncoder} from \"../../util/unicodeEncoder\";\nimport {MainService} from \"../../service/mainService\"\nimport {PreviewProcessor} from \"./previewProcessor\"\n\nconst order = {\n  orderName:\"MangaPaperA4ExpandTatikiri\",\n  basePaper: \"mangaPaperA4ExpandTatikiri\",\n  dpiName: \"dpi600\"\n};\nexport class ExportUtilProcesser {\n  constructor() {\n    this.ms = MainService.getInstance();\n    this.em = this.ms.em;\n    this.bm = this.ms.bm;\n    this.im = this.ms.im;\n    this.iom = this.ms.iom;\n    this.tm = this.ms.tm;\n  }\n  async load() {\n    const exportPks = await this.tm.getExports();\n    return await this.getZipPdfPair(exportPks);\n  }\n  async remove(exportPk = -1) {\n    const exportPks = await this.tm.getExports();\n    if(exportPks){\n      for(let exportｓIndex in exportPks){\n        const current = exportPks[exportｓIndex];\n        delete exportPks[exportｓIndex];\n        await this.iom.remove(current);\n      }\n      await this.tm.saveCurrent();\n    }\n    alert('ExportImageProcesser remove');\n  }\n  async loadZip(exportPk) {\n    if(exportPk){\n      alert('ExportImageProcesser loadZip');\n    }else{\n      const imageOutpus = await this.load();\n      const zip = imageOutpus.zip;\n      if(zip && zip.binary){\n        alert(zip.binary);\n        const binaryEntity = await this.bm.load(zip.binary);\n        zip.ab = binaryEntity._ab;\n        console.error(zip.ab)\n      }\n      return zip;\n    }\n    return null;\n  }\n  async loadPdf(exportPk) {\n    if(exportPk){\n      alert('ExportImageProcesser loadPdf');\n    }else{\n      const imageOutpus = await this.load();\n      const pdf = imageOutpus.pdf;\n      if(pdf && pdf.binary){\n        const binaryEntity = await this.bm.load(pdf.binary);\n        pdf.ab = binaryEntity._ab;\n      }\n      return pdf;\n    }\n    return null;\n  }\n\n  async getZipPdfPair(exportPks){\n    const imageOutpus = {pdf:null,zip:null};\n    if(!!exportPks===false){\n      return imageOutpus;\n    }\n    for(let exportPk of exportPks){\n      const imageOutput = await this.iom.load(exportPk);\n      if(imageOutput && imageOutput.type===\"zip\"){\n        imageOutpus.zip = imageOutput;\n      }\n      if(imageOutput && imageOutput.type===\"pdf\"){\n        imageOutpus.pdf = imageOutput;\n      }\n    }\n    return imageOutpus;\n  }\n}\n","import {ExportActionCreator} from '../action/exportActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nimport {ExportImageProcesser} from '../processor/exportImageProcesser'\nimport {ExportUtilProcesser} from '../processor/exportUtilProcesser'\nimport {PageProcessor} from '../processor/pageProcessor'\nimport {ImageActionCreator} from '../action/imageActionCreator'\nlet exportReducer = null;\nexport class ExportReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.im = this.ms.im;\n    this.bm = this.ms.bm;\n    this.iom = this.ms.iom;\n    this.tm = this.ms.tm;\n    this.exportExecuteAction = ExportActionCreator.createExecuteAction();\n    this.exportExecuteAllAction = ExportActionCreator.creatExecuteAllAction();\n    this.exportRemoveAction = ExportActionCreator.creatRemoveAction();\n    this.exportsLoadAction = ExportActionCreator.creatLoadAction();\n    this.exportDownloadAction = ExportActionCreator.createDownloadAction();\n    this.exportExecutePdfAction = ExportActionCreator.createExecutePdfAction();\n    this.exportDownloadPdfAction = ExportActionCreator.createDownloadPdfAction();\n    this.selectOrderAction = createSelectOrderAction.createDownloadPdfAction();\n    this.atatch(this.exportExecuteAction);\n    this.atatch(this.exportExecuteAllAction);\n    this.atatch(this.exportRemoveAction);\n    this.atatch(this.exportsLoadAction);\n    this.atatch(this.exportDownloadAction);\n    this.atatch(this.exportExecutePdfAction);\n    this.atatch(this.exportDownloadPdfAction);\n    this.atatch(this.selectOrderAction);\n\n    this.pp = new PageProcessor();\n    this.eip = new ExportImageProcesser(this.pp);\n    this.eup = new ExportUtilProcesser(this.pp);\n    this.storeKey = ExportActionCreator.getStoreKey();\n    this.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n    this.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n    this.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n    this.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n    this.storeSelectedOrderKey = ExportActionCreator.getStoreSelectedOrderKey();\n  }\n  static register() {\n    if (!exportReducer) {\n      exportReducer = new ExportReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.exportExecuteAction.type === action.type) {\n      const loadPks = await this.exportExecute(action.data.exportOrders);\n      store[this.storeKey] = loadPks;\n      store[this.storeExportResultKey] =loadPks;\n      store[this.storeRemoveResultKey] =null;\n    } else if (this.exportExecuteAllAction.type === action.type) {\n      store[this.storeExportResultKey] = await this.exportExecute(action.data.exportOrders);\n      store[this.storeExportResultKey] = await this.exportPdfExecute(action.data.exportOrders);\n      store[this.storeRemoveResultKey] =null;\n    } else if (this.exportRemoveAction.type === action.type) {\n      const loadPks = await this.remove(action.data.exportPk);\n      store[this.storeRemoveResultKey] = loadPks;\n      store[this.storeKey] = loadPks;\n    } else if (this.exportsLoadAction.type === action.type) {\n      store[this.storeKey] = await this.load();\n      store[this.storeExportResultKey] =null;\n    } else if (this.exportDownloadAction.type === action.type) {\n      store[this.storeZipDLKey] = await this.loadZip(action.data.exportPk);\n      store[this.storeExportResultKey] =null;\n    } else if (this.exportExecutePdfAction.type === action.type) {\n      const loadPks = await this.exportPdfExecute(action.data.exportOrders);\n      store[this.storeKey] = loadPks;\n      store[this.storeExportResultKey] =loadPks;\n      store[this.storeRemoveResultKey] =null;\n    } else if (this.exportDownloadPdfAction.type === action.type) {\n      store[this.storePdfDLKey] = await this.loadPdf(action.data.exportPk);\n      store[this.storeExportResultKey] =null;\n    } else if (this.selectOrderAction.type === action.type) {\n      store[this.storeSelectedOrderKey] = await this.loadPdf(action.data.exportPk);\n    }\n    return store;\n  }\n  async exportExecute(exportOrders) {\n    const exportPks = await this.eip.exportExecute(exportOrders);\n    return await this.eup.getZipPdfPair(exportPks);\n  }\n  async exportPdfExecute(exportOrders) {\n    return await this.eip.exportPdfExecute(exportOrders);\n  }\n  // whh save single data ? the data is too Big for indexeddb !\n  async loadZip(exportPk) {\n    return await this.eup.loadZip(exportPk);\n  }\n  // whh save single data ? the data is too Big for indexeddb !\n  async loadPdf(exportPk) {\n    return await this.eup.loadPdf(exportPk);\n  }\n  async remove(exportPk) {\n    //\n    await this.eup.remove(exportPk);\n    return await this.eup.load();\n  }\n  async load() {\n    return await this.eup.load();\n  }\n}\n","import {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {ExportActionCreator} from '../../../reduxy/action/exportActionCreator'\nexport class ExportAllButton extends BaseView {\n  constructor() {\n    super(\"ExportAllButton\", \"ExportAllButton\", true);\n    this.storeKey = ExportActionCreator.getStoreKey();\n    this.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n    this.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n    this.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n    this.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n  }\n\n  render(store, actionData) {\n    return div(this.id, [this.id + \"Frame\"], {\n      on: {\n        click: this.click()\n      }\n    }, [div(\"\", [\"button\"], \"make zip and pdf!\")]);\n  }\n  onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {\n    if (store[this.storeKey]) {\n      const result = store[this.storeKey];\n      if (result.pdf && result.zip) {\n        alert(\"OK All Exported!\");\n      }\n    }\n  }\n  click() {\n    return(event) => {\n      const action = ExportActionCreator.creatExecuteAllAction();\n      this.dispatch(action);\n      event.stopPropagation();\n      return false;\n    }\n  }\n}\n","export class FileDownloader {\n  static download(fileName, content, mimeType = \"text/plain\") {\n    const blob = new Blob([content], {\"type\": mimeType});\n    const ancker = document.createElement(\"a\");\n    ancker.style.display=\"none\";\n    ancker.download = fileName;\n    ancker.href = window.URL.createObjectURL(blob);\n    ancker.dataset.downloadurl = [mimeType, fileName, ancker.href].join(\":\");\n    document.body.appendChild(ancker);\n    ancker.click();\n    setTimeout(()=>{document.body.removeChild(ancker) });\n  }\n}\n","import {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\n\nimport {unixTimeToDateFormat} from \"../../../util/timeUtil\";\nimport {ExportActionCreator} from '../../../reduxy/action/exportActionCreator'\nimport {FileDownloader} from \"../../../util/fileDownloader\";\nexport class ExportImgZipButton extends BaseView {\n  constructor() {\n    super(\"ExportImgZipButton\", \"ExportImgZipButton\", true);\n    this.storeKey = ExportActionCreator.getStoreKey();\n    this.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n    this.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n    this.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n    this.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n    this.stateId = \"exportedStateZip\";\n    this.isExported = false;\n  }\n\n  render(store, actionData) {\n    const buttonName = div(\"\", [\"buttonName\"], \"make zip!\");\n    const exportedState = div(this.stateId, [\"exportedStateNone\"], \"no export\");\n    return div(this.id, [this.id + \"Frame\"], {\n      on: {\n        click: this.click()\n      }\n    }, [div(\"\", [\"button\"], [buttonName, exportedState])]);\n  }\n  onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {\n    if (store[this.storeExportResultKey]) {\n      const isSuccess = this.buildButton(store[this.storeExportResultKey]);\n      if (isSuccess) {\n        alert(\"OK download zip file!:\" + JSON.stringify(store[this.storeExportResultKey]) + \"/this.isExported:\" + this.isExported);\n      }\n    } else if (store[this.storeKey]) {\n      //alert(JSON.stringify(store[this.storeKey]));\n      this.buildButton(store[this.storeKey]);\n    }\n  }\n  buildButton(exports) {\n    if (exports && exports.zip) {\n      const zip = exports.zip\n      const exportString = zip.name + \" / \" + zip.orderName + \" / \" + unixTimeToDateFormat(zip.updateDate);\n      this.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedState\"], exportString));\n      this.isExported = true;\n      return true;\n      // console.log(data);\n      //alert(\"OK download zip file!:\" + JSON.stringify(exports) + \"/this.isExported:\" + this.isExported);\n\n    } else {\n      this.isExported = false;\n      this.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedStateNone\"], \"no export\"));\n      return false;\n      // console.log(data);\n      //alert(\"OK download zip file!:\" + JSON.stringify(exports) + \"/this.isExported:\" + this.isExported);\n    }\n  }\n\n  click() {\n    return(event) => {\n      if (!this.isExported || this.isExported && window.confirm(\"is export orverride ok?\")) {\n        const action = ExportActionCreator.createExecuteAction();\n        this.dispatch(action);\n      }\n      event.stopPropagation();\n      return false;\n    }\n  }\n}\n","import {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {ExportActionCreator} from '../../../reduxy/action/exportActionCreator'\nexport class ExportPdfButton extends BaseView {\n  constructor() {\n    super(\"ExportPdfButton\", \"ExportPdfButton\", true);\n    this.storeKey = ExportActionCreator.getStoreKey();\n    this.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n    this.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n    this.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n    this.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n    this.stateId = \"exportedStatePdf\";\n    this.isExported = false;\n  }\n\n  render(store, actionData) {\n    const buttonName = div(\"\", [\"buttonName\"], \"make pdf!\");\n    const exportedState = div(this.stateId, [\"exportedStateNone\"], \"no export\");\n    return div(this.id, [this.id + \"Frame\"], {\n      on: {\n        click: this.click()\n      }\n    }, [div(\"\", [\"button\"], [buttonName, exportedState])]);\n  }\n  onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {\n    if (store[this.storeKey]) {\n      const data = store[this.storeKey];\n      const pdf = data.pdf;\n      if (pdf) {\n        const exportString = pdf.name + \" / \" + pdf.orderName + \" / \" + unixTimeToDateFormat(pdf.updateDate);\n        this.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedState\"], exportString));\n        this.isExported = true;\n      } else {\n        this.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedStateNone\"], \"no export\"));\n        this.isExported = false;;\n      }\n    } else if (store[this.storeExportResultKey]) {\n      // console.log(data);\n      alert(\"OK download zip file!\");\n    }\n  }\n\n  click() {\n    return(event) => {\n      if (!this.isExported || this.isExported && window.confirm(\"is export orverride ok?\")) {\n        const action = ExportActionCreator.createExecutePdfAction();\n        this.dispatch(action);\n      }\n      event.stopPropagation();\n      return false;\n    }\n  }\n}\n","import {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {unixTimeToDateFormat} from \"../../../util/timeUtil\";\nimport {ExportActionCreator} from '../../../reduxy/action/exportActionCreator'\nimport {FileDownloader} from \"../../../util/fileDownloader\";\nexport class DownloadLastExportZipButton extends BaseView {\n  constructor() {\n    super(\"DownloadLastExportZipButton\", \"DownloadLastExportZipButton\", true);\n    this.storeKey = ExportActionCreator.getStoreKey();\n    this.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n    this.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n    this.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n    this.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n    this.stateId = this.id + \"Button\";\n    this.isExported = false;\n  }\n\n  render(store, actionData) {\n    const text = div(this.stateId, [\"button\"], \"-no export Zip-\");\n    return div(this.id, [this.id + \"Frame\"], {\n      on: {\n        click: this.click()\n      }\n    }, [text]);\n  }\n  onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {\n    if (store[this.storeZipDLKey]) {\n      const output = store[this.storeZipDLKey];\n      if (output.ab) {\n        FileDownloader.download(output.name, output.ab, \"application/zip\");\n      } else {\n        alert(\"not exported!\");\n      }\n    } else if (store[this.storeKey]) {\n      const data = store[this.storeKey];\n      const zip = data.zip;\n      if (zip) {\n        const exportString = zip.name + \" / \" + zip.orderName + \" / \" + unixTimeToDateFormat(zip.updateDate);\n        this.prePatch(\"#\" + this.stateId, div(this.stateId, [\n          \"button\", \"enable\"\n        ], \"download Zip!\"));\n        this.isExported = true;\n      } else {\n        this.prePatch(\"#\" + this.stateId, div(this.stateId, [\n          \"button\", \"disable\"\n        ], \"no export Zip\"));\n        this.isExported = false;\n      }\n    }\n  }\n  click() {\n    return(event) => {\n      if (this.isExported) {\n        const action = ExportActionCreator.createDownloadAction(); //createDownloadPdfAction\n        this.dispatch(action);\n      }\n      event.stopPropagation();\n      return false;\n    }\n  }\n}\n","import {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {unixTimeToDateFormat} from \"../../../util/timeUtil\";\nimport {ExportActionCreator} from '../../../reduxy/action/exportActionCreator'\nimport {FileDownloader} from \"../../../util/fileDownloader\";\nexport class DownloadLastExportPdfButton extends BaseView {\n  constructor() {\n    super(\"DownloadLastExportPdfButton\", \"DownloadLastExportPdfButton\", true);\n    this.storeKey = ExportActionCreator.getStoreKey();\n    this.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n    this.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n    this.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n    this.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n    this.stateId = this.id+\"Button\";\n    this.isExported = false;\n  }\n\n  render(store, actionData) {\n    const text = div(this.stateId , [\"button\"], \"-no export PDF-\");\n    const result = div(this.id, [this.id + \"Frame\"], {\n      on: {\n        click: this.click()\n      }\n    }, [text]);\n    return result;\n  }\n  onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {\n    if (store[this.storePdfDLKey]) {\n      const output = store[this.storePdfDLKey];\n      if (output.ab) {\n        FileDownloader.download(output.name, output.ab, \"application/pdf\");\n      } else {\n        alert(\"not exported!\");\n      }\n    } else if (store[this.storeKey]) {\n      const data = store[this.storeKey];\n      const pdf = data.pdf;\n      if (pdf) {\n        const exportString = pdf.name + \" / \" + pdf.orderName + \" / \" + unixTimeToDateFormat(pdf.updateDate);\n        this.prePatch(\"#\" + this.stateId, div(this.stateId, [\"button\",\"enable\"], \"download PDF!\"));\n        this.isExported = true;\n      } else {\n        this.prePatch(\"#\" + this.stateId, div(this.stateId, [\"button\",\"disable\"], \"no export PDF\"));\n        this.isExported = false;\n      }\n    }\n  }\n  click() {\n    return(event) => {\n      if (this.isExported) {\n        const action = ExportActionCreator.createDownloadPdfAction(); //createDownloadPdfAction\n        this.dispatch(action);\n      }\n      event.stopPropagation();\n      return false;\n    }\n  }\n}\n","import {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {ExportActionCreator} from '../../../reduxy/action/exportActionCreator'\nexport class DeleteExportOneButton extends BaseView {\n  constructor() {\n    super(\"DeleteExportOneButton\", \"DeleteExportOneButton\", true);\n    this.storeKey = ExportActionCreator.getStoreKey();\n    this.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n    this.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n    this.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n    this.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n  }\n\n  render(store, actionData) {\n    return div(this.id, [this.id + \"Frame\"], {\n      on: {\n        click: this.click()\n      }\n    }, [div(\"\", [\"button\"], \"delete Exports!\")]);\n  }\n  onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {\n    if (store[this.storeRemoveResultKey]) {\n      alert(\"delete exports!\");\n      store[this.storeRemoveResultKey] = null;\n    }\n  }\n  click() {\n    return(event) => {\n      const action = ExportActionCreator.creatRemoveAction();\n      this.dispatch(action);\n      event.stopPropagation();\n      return false;\n    }\n  }\n}\n","import {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\"; //\nimport {ExportActionCreator} from '../../../reduxy/action/exportActionCreator'\nimport {ExportReducer} from '../../../reduxy/reducer/exportReducer'\nimport {ExportAllButton} from './exportAllButton'\nimport {ExportImgZipButton} from \"./exportImgZipButton\";\nimport {ExportPdfButton} from './exportPdfButton'\nimport {DownloadLastExportZipButton} from './downloadLastExportZipButton'\nimport {DownloadLastExportPdfButton} from './downloadLastExportPdfButton'\nimport {DeleteExportOneButton} from './deleteExportOneButton'\nexport class ExportButton extends BaseView {\n  constructor() {\n    super(\"ExportButton\", \"ExportButtonFrame\");\n    this.storeKey = ExportActionCreator.getStoreKey();\n    this.exportAllButton = new ExportAllButton();\n    this.exportImgZipButton = new ExportImgZipButton();\n    this.exportPdfButton = new ExportPdfButton();\n    this.downloadLastExportZipButton = new DownloadLastExportZipButton();\n    this.downloadLastExportPdfButton = new DownloadLastExportPdfButton();\n    this.deleteExportOneButton = new DeleteExportOneButton();\n  }\n  onAfterAttach(store, data) {\n    this.exportAllButton.attach(this);\n    this.exportImgZipButton.attach(this);\n    this.exportPdfButton.attach(this);\n    this.downloadLastExportZipButton.attach(this);\n    this.downloadLastExportPdfButton.attach(this);\n    this.deleteExportOneButton.attach(this);\n    ExportReducer.register();\n    const action = ExportActionCreator.creatLoadAction(this);\n    this.dispatch(action);\n  }\n\n  async onViewShow(store, actionData) {\n    if (store[this.storeKey]) {\n      //alert(\"OK\");\n    }\n  }\n\n  render(store, actionData) {\n    return div(\"\", [\"ExportButtons\"], [\n      div(this.exportAllButton.id),\n      div(this.exportImgZipButton.id),\n      div(this.exportPdfButton.id),\n      div(this.downloadLastExportZipButton.id),\n      div(this.downloadLastExportPdfButton.id),\n      div(this.deleteExportOneButton.id)\n    ]);\n  }\n}\n","\nimport {\n  BaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {dpis, ExportOrders} from \"../../../settings/exportSettings\";\nexport class ExportOrderRow extends BaseView {\n  constructor() {\n    super(\"ExportOrderRow\", \"ExportOrderRow\");\n    this.selectOrder = null;\n    this.ordersMap = {};\n  }\n\n  render(store, actionData) {\n    const name = div(\"\", [\"TitleName\"], \"TitleName\");\n    return div(\"\", [this.id + \"Frame\"], [name, div(this.imageAreaID, [\"ImageDetailA\"], this.id + \"aaaaa\")]);\n  }\n  onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {}\n  getCurrentSelected(){\n    return this.ordersMap[this.selectOrder];\n  }\n  selectOrder(name){\n    return (event)=>{\n      this.selectOrder = name;\n\n    }\n  }\n\n  buildRows(){\n    const retList = [];\n    const ordersList = ExportOrders;\n    for(let order of ordersList){\n      const name=order.orderName;\n      this.ordersMap[name]= order;\n      const id = \"ExportOrderRow-\"+name;\n      const row = div(id,[name],{\n        on:{click:this.selectOrder(name)}\n      },span(\"\",[],[name]));\n      retList.push(row);\n    }\n    return retList;\n  }\n}\n","\nimport {\n  BaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {\n  ExportOrderRow\n} from './exportOrderRow'\nexport class ExportOrderList extends BaseView {\n  constructor() {\n    super(\"ExportOrdrList\", \"ExportOrdrList\");\n    this.exportOrderRow = new ExportOrderRow();\n  }\n\n  render(store, actionData) {\n    const name = div(\"\", [\"ExportOrdersListTitle\"], \"Export Orders List\");\n    const list = this.buildRows()\n    return div(\"\", [this.id + \"Frame\"], [name, div(this.imageAreaID, [\"ExportOrdrs\"], this.id + \"aaaaa\")]);\n  }\n  onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {}\n\n  buildRows(){\n    return this.exportOrderRow.buildRows()\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {\n  BaseView\n} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {\n  ExportButton\n} from '../parts/export/exportButton'\nimport {\n  ExportOrderList\n} from '../parts/export/exportOrderList'\n\nimport {\n  ExportActionCreator\n} from '../../reduxy/action/exportActionCreator'\nexport class ExportArea extends BaseView {\n  constructor() {\n    super(\"ExportArea\", \"ExportArea\");\n    this.text = \"ExportArea\";\n    this.exportButton = new ExportButton();\n    this.exportOrderList = new ExportOrderList();\n  }\n\n  onAfterAttach(store, data) {\n    this.exportOrderList.attach(this);\n    this.exportButton.attach(this);\n    const action = ExportActionCreator.creatLoadAction();\n    this.dispatch(action);\n  }\n  render() {\n    return div(this.id, [\"ExportArea\"], [\n      div('', [''], this.text),\n      div(this.exportOrderList.id),\n      div(this.exportButton.id)\n    ]);\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport bc from \"../../util/binaryConverter\";\n\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nexport class ImageDetail extends BaseView {\n  constructor() {\n    super(\"ImageDetail\", \"ImageDetail\");\n    this.imageAreaID = this.id + \"child\";\n    this.isOnScroll = false;\n    this.startX = 0;\n    this.startY = 0;\n  }\n  render(store, actionData) {\n    return div(\"\",[\"\"],[div(\"\", [\"ImageDetailTitle\"],\"ImageDetailTitle\"),div(this.imageAreaID, [\"ImageDetailA\"], this.id + \"aaaaa\")]);\n  }\n  async onViewShow(store, actionData) {\n    if (store.imagesDetailData) {\n      await this.showImage(store.imagesDetailData);\n      this.startX = 0;\n      this.startY = 0;\n      this.offsetX = 0;\n      this.offsetY = 0;\n      this.isOnScroll = false;\n    }\n  }\n\n  async showImage(imageData) {\n    const {imageEntity, binaryEntity, imageText} = imageData;\n    const pk = imageEntity.getPk();\n    const dataUri = bc.arrayBuffer2DataURI(binaryEntity._ab);\n    const imgVnode = img(pk + \"_image\", imageEntity.name, imageEntity.name, dataUri, {});\n    const textVnode = span(pk + \"_text\", [\"thumbnail_text\"], imageData.imageText);\n    const image = [\n      div(\"\", [\"\"], [imgVnode]),\n      div(\"\", [textVnode])\n    ]\n    this.prePatch(\"#\" + this.imageAreaID, div(this.imageAreaID, [\"image_detail_block\"], {\n      on: {\n        mousedown: this.onMouseOn(),\n        mousemove: this.onMouseMove()\n      },\n      style:{top:0,left:0}\n    }, image));\n  }\n  click() {\n    return(event) => {\n      alert(\"click\");\n    }\n  }\n  onMouseOn() {\n    return(event) => {\n      // alert(\"onMouseOn\");\n      this.startX = this.offsetX\n        ? event.clientX+this.offsetX*0-this.offsetX１\n        : event.clientX;\n      this.startY = this.offsetY\n        ? event.clientY+this.offsetY*0-this.offsetY１\n        : event.clientY;\n      const elm = event.target;\n      this.isOnScroll = this.isOnScroll?false:true;\n    }\n  }\n  onMouseOff() {\n    return(event) => {\n      // alert(\"onMouseOff\");\n      const elm = event.target;\n      this.isOnScroll = false;\n    }\n  }\n  onMouseMove() {\n    return(event) => {\n      const elm = event.target;\n      if (this.isOnScroll) {\n        const currentX = event.clientX;\n        const currentY = event.clientY;\n        const offsetX = currentX - this.startX;\n        const offsetY = currentY - this.startY;\n        const targetNode = elm.parentNode.parentNode;\n        // console.log(\"elm.tagName:\" + elm.tagName + \"/(offsetX:\" + offsetX + \"/offsetY:\" + offsetY\n        // + \")/(currentX:\" + currentX + \"/currentY:\" + currentY\n        // + \")/(this.startX:\" + this.startX + \"/this.startY:\" + this.startY);\n        targetNode.style.top = offsetY + \"px\";\n        targetNode.style.left = offsetX + \"px\";\n        this.offsetX = this.startX;\n        this.offsetY = this.startY;\n        this.offsetX１ = offsetX;\n        this.offsetY１ = offsetY;\n      }\n    }\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport bc from \"../../util/binaryConverter\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {PageActionCreator} from '../../reduxy/action/pageActionCreator'\nimport {ImageActionCreator} from '../../reduxy/action/imageActionCreator'\nexport class PageImage extends BaseView {\n  constructor(parent, listing,draggableArea) {\n    super(\"PageImage\" + listing, \"PageImage\");\n    this.ip = this.ms.ip;\n    this.parent = parent;\n    this.draggableArea = draggableArea;\n    this.listing = listing;\n    this.thumbnail = null;\n    this.thumbnail_block = \"thumbnail_block\";\n  }\n  render() {\n    this.button = div(this.id + \"child\", \"PageImageA\", this.id);\n    return div([this.button]);\n  }\n  async setPageData(pageData, imageData) {\n    this.pageData = pageData;\n    this.imageData = imageData;\n    if (!pageData) {\n      return;\n    }\n    this.pk = pageData.getPk();\n    const binaryEntity = this.imageData\n      ? this.imageData.binaryEntity\n      : null;\n    if (binaryEntity) {\n      const data = {\n        name: \"page_\" + this.listing,\n        ab: binaryEntity._ab,\n        type: binaryEntity.type\n      }\n      this.thumbnail = await this.ip.createImageNodeByData(data).catch((e) => {\n        console.log(e);\n        throw e\n      });\n      // console.log(this.thumbnail)\n    }else{\n      this.thumbnail = null;\n    }\n  }\n  render(store, actionData) {\n    return div('', \"\");\n  }\n  remove(pk) {\n    return(event) => {\n      if (window.confirm(\"delete ok?\")) {\n        const action = PageActionCreator.creatRemoveAction(this, {imagePKforDelete: pk});\n        this.dispatch(action);\n      }\n    }\n  }\n  handleDragStart(dragImageSrc) {\n    return(event) => {\n      const elm = event.target;\n      this.parent.dropElm = null;\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      elm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n      this.draggableArea.nowSelectedElm = elm;\n      event.dataTransfer.effectAllowed = 'move';\n      event.dataTransfer.setData('text/html', elm.innerHTML);\n      let dragIcon = document.createElement('img');\n      dragIcon.src = dragImageSrc;\n      dragIcon.width = 100;\n      event.dataTransfer.setDragImage(dragIcon, -10, -10);\n    }\n  }\n  handleDragOver() {\n    return(event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      event.preventDefault(); // Necessary. Allows us to drop.\n      event.dataTransfer.dropEffect = 'move'; // See the section on the DataTransfer object.\n      return false;\n    }\n  }\n  handleDragEnter() {\n    return(event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      elm.classList.add('over');\n    }\n  }\n  handleDragLeave() {\n    return(event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      elm.classList.remove('over'); // this / event.target is previous target element.\n    }\n  }\n  handleDrop(event) {\n    return(event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      this.parent.dropElm = elm;\n      const nowSelectedElm = this.draggableArea.nowSelectedElm;\n      if (nowSelectedElm && nowSelectedElm.dataset.pk && nowSelectedElm !== elm) {\n        const selectedPk = nowSelectedElm.dataset.pk;\n        const targetPk = elm.dataset.pk;\n        if(selectedPk && nowSelectedElm.dataset.is_image){\n          //console.log('sort handleDrop imagePKmove:' + nowSelectedElm+ \"/elm.dataset.pk:\" + elm.dataset.pk+\"/targetPk:\"+targetPk)\n          const action = PageActionCreator.creatAddPageAction(this, {\n            imagePk: selectedPk,\n            pagePk: targetPk\n          });\n          this.dispatch(action);\n        }else if(selectedPk && nowSelectedElm.dataset.is_page){\n          //console.log('sort handleDrop imagePKmove:' + nowSelectedElm + \"/elm.dataset.pk:\" + elm.dataset.pk+\"/targetPk:\"+targetPk)\n          const action = PageActionCreator.creatSortPagesAction(this, {\n            formPk: selectedPk,\n            toPk: targetPk\n          });\n          //alert(\"creatSortPagesAction :\"+nowSelectedElm.dataset.is_image+\"/pk:\"+nowSelectedElm.dataset.pk+\"/\"+elm.dataset.pk+\"/\"+elm.dataset.is_page);\n          this.dispatch(action);\n        }\n      }\n      const childNodes = elm.parentNode.childNodes;\n      for (let i = 0; i < childNodes.length; i++) {\n        const col = childNodes[i];\n        col.classList.remove('over');\n      }\n      return false;\n    }\n  }\n  handleDragEnd(event) {\n    return(event) => {\n      const elm = event.target;\n      const targetPk = elm.dataset.pk;\n      console.log('sort handleDrop imagePKmove:' + this.draggableArea.nowSelectedElm + \"/elm.dataset.pk:\" + elm.dataset.pk+\"/targetPk:\"+targetPk)\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      this.draggableArea.nowSelectedElm = null;\n      elm.style.opacity = '1';\n      const childNodes = elm.parentNode.childNodes;\n      for (let i = 0; i < childNodes.length; i++) {\n        const col = childNodes[i];\n        col.classList.remove('over');\n      }\n      if (this.draggableArea.cancelPageArea!==null) {\n        const action = PageActionCreator.creatRemovePageAction(this, {\n          pagePk: targetPk\n        });\n        this.dispatch(action);\n      }\n    }\n  }\n  selectImage(event) {\n    return(event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n      console.log('sort selecImage imagePKmove:/elm.dataset.pk:' + elm.dataset.pk+\"/\"+this.pageData)\n      if (this.pageData && this.pageData.baseImage) {\n        const action = ImageActionCreator.creatDetailAction(this, {imagePK: this.pageData.baseImage});\n        this.dispatch(action);\n      }\n      return false;\n    }\n  }\n  renderVnode(parent) {\n    const pageEntity = this.pageData;\n    if (!pageEntity) {\n      return div(this.id, [\"aaaaaaa\" + this.listing], \"null\" + this.listing);\n    }\n    const src = this.thumbnail\n      ? this.thumbnail.src\n      : \"aaaaaaaaaaaaaaaaaaa\";\n    const imageBg = !src?{}:{\n      \"background-image\":\"url(\"+src+\")\"\n    };\n    //console.log(\"★A binaryEntity 01\"+this.id+\"/src:\"+src)\n    //const imgVnode = img(this.pk + \"_page\", [\"\"], \"\", src, {});\n    const rowVnode = div(this.id, [\"thumbnail_block\"], {\n      on: {\n        dragstart: this.handleDragStart(src),\n        dragover: this.handleDragOver(),\n        dragenter: this.handleDragEnter(),\n        dragleave: this.handleDragLeave(),\n        drop: this.handleDrop(),\n        dragend: this.handleDragEnd(),\n        click: this.selectImage()\n      },\n      dataset: {\n        pk: this.pk,\n        is_page:true\n      },\n      style:imageBg,\n      props: {\n        \"draggable\": \"true\"\n      }\n    }, [div(\"\", [\"page_block\"], [])]);\n    parent.prePatch(\"#\" + this.id, rowVnode);\n    return rowVnode;\n  }\n  createVnode() {}\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class PreviewActionCreator {\n  constructor() {}\n  static creatOpenAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"openPreview\", targetView, data, storeKey);\n  }\n  static creatCloseAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"closePreview\", targetView, data, storeKey);\n  }\n  static creatNextAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"nextPreview\", targetView, data, storeKey);\n  }\n  static creatBackAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"backPreview\", targetView, data, storeKey);\n  }\n  static getStorePreviewKey(){\n    return \"previewCommand\";\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {SettingData} from '../../settings/exportSettings'\nimport {SettingActionCreator} from '../../reduxy/action/settingActionCreator'\nimport {PageImage} from './pageImage'\nimport {PageProcessor} from '../../reduxy/processor/pageProcessor'\nimport {ImageActionCreator} from '../../reduxy/action/imageActionCreator'\nimport {PageActionCreator} from '../../reduxy/action/pageActionCreator'\nimport {PreviewActionCreator} from '../../reduxy/action/previewActionCreator'\nexport class PageImages extends BaseView {\n  constructor(draggableArea) {\n    super(\"PageImages\", \"PageImages\");\n    this.storeKey = SettingActionCreator.getStoreKey();\n    this.childId = this.id + \"child\";\n    this.thumbnails = {};\n    this.dummyClass = \"Dummy\";\n    this.pages = [];\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n    this.storePagesKey = PageActionCreator.getStorePagesKey();\n    for (let index = 0; index < 32; index++) {\n      this.pages.push(new PageImage(this, index, draggableArea))\n    }\n    this.dropElm = null;\n    this.lastSettingOne = null;\n    this.lastPagesData = null;\n    this.lastImagesData = null;\n  }\n  render() {\n    this.setting = div(this.id + \"child\", [\"PageImagesA\"], this.id);\n    return div(this.id, \"PageImages\", [this.setting]);\n  }\n  async onViewShow(store, actionData) {\n    const pagesData = store[this.storePagesKey];\n    const imagesData = store[this.storeImagesKey];\n    const pagesDataJson = JSON.stringify(pagesData);\n    const imagesDataJson = JSON.stringify(imagesData);\n    if (imagesData && pagesData && (this.lastPagesData !== pagesDataJson || this.lastImagesData !== imagesDataJson)) {\n      //alert(\"onViewShow\"+imagesData.length+\"/\"+pagesData.length+\"/\");\n      await this.showPages(pagesData, imagesData);\n      this.lastPagesData = pagesDataJson;\n      this.lastImagesData = imagesDataJson;\n      //console.log(\"Pages onViewShow\");\n      // alert(\"imagesData:\"+imagesData);\n    }\n    if (store[this.storeKey]) {\n      const settings = store[this.storeKey];\n      const settingsJson = JSON.stringify(settings);\n      if (settingsJson === this.lastSettingOne) {\n        return;\n      }\n      // alert(\"store[this.storeKey]:\"+store[this.storeKey]+\"/\"+(JSON.stringify(settings)===this.lastSettingOne));\n      const pageFrames = this.buildPageFrames(settings);\n      this.prePatch(\"#\" + this.childId, div(this.childId, pageFrames));\n      this.lastSettingOne = settingsJson;\n    } else {\n      return;\n    }\n  }\n  addPage(imagesPk, pagePk) {\n    const action = PageActionCreator.creatAddPageAction(this, {\n      imagePk: imagesPk,\n      pagePk: pagePk\n    });\n    this.dispatch(action);\n  }\n  async showPages(pagesData, imagesData) {\n    const imageMap = {};\n    for (let imageData of imagesData) {\n      const imageEntity = imageData.imageEntity;\n      const imagePk = imageEntity.getPk();\n      imageMap[imagePk] = imageData;\n    }\n    let index = 0;\n    for (let pageEntity of pagesData) {\n      const page = this.pages[index];\n      index++;\n      if (!pageEntity) {\n        continue;\n      }\n      const pk = pageEntity.getPk();\n      const imagePk = pageEntity.baseImage;\n      const imageData = imageMap[imagePk];\n      //alert(\"id:\"+imageData+\"/imagePk:\"+imagePk)\n      await page.setPageData(pageEntity, imageData);\n      page.renderVnode(this);\n    }\n  }\n  creatPageFrame(pageNo, dummyClass, isRight) {\n    const frameParts = [];\n    if (dummyClass === this.dummyClass) {\n      return frameParts;\n    }\n    const sideClass = \"pageFrameHeader\" + (\n      isRight\n      ? \"Right\"\n      : \"Left\");\n    frameParts.push(div(\"\", [\n      \"pageFrameHeader\", sideClass\n    ], pageNo + \"\"))\n    const pageIndex = pageNo - 1;\n    const page = this.pages[pageIndex].renderVnode(this);\n    frameParts.push(page)\n    return frameParts;\n  }\n  showPreviewSingle() {\n    return(event) => {\n      //alert(\"showPreviewSingle\");\n      const action = PreviewActionCreator.creatOpenAction(this, {isSingle: true});\n      this.dispatch(action);\n    }\n  }\n  showPreviewDual() {\n    return(event) => {\n      //alert(\"showPreviewDual\");\n      const action = PreviewActionCreator.creatOpenAction(this, {isSingle: false});\n      this.dispatch(action);\n    }\n  }\n  buildPreviewButtons() {\n    const previewSingle = div(\"\", [\"previewCallButton\"], {\n      on: {\n        click: this.showPreviewSingle()\n      }\n    }, \"Preview Single\");\n    const previewDouble = div(\"\", [\"previewCallButton\"], {\n      on: {\n        click: this.showPreviewDual()\n      }\n    }, \"Preview Dual\");\n    return div(\"\", [\"previewFrame\"], [previewSingle, previewDouble]);\n  }\n  buildPageFrames(setting) {\n    const frames = [];\n    frames.push(this.buildPreviewButtons());\n    const startPage = setting.startPage;\n    const pageNum = setting.pageNum * 1; //SettingData.pageNums[setting.pageNum-1]*1;\n    this.pageNum = pageNum;\n    const pageDirection = setting.pageDirection;\n    const isPageDirectionR2L = pageDirection === \"r2l\";\n    const isPageStartR = startPage === \"r\";\n    const frameNum = Math.ceil(pageNum / 2);\n    const isOdd = (pageNum % 2 === 1);\n    const isMatchPageStartSide = (pageDirection.indexOf(startPage) === 0);\n    const addPageNum = isOdd\n      ? 1\n      : isMatchPageStartSide\n        ? 0\n        : 1;\n    const totalPageFrame = frameNum * 1 + addPageNum * 1;\n    const dummyClass = this.dummyClass;\n    const pageClass = \"Page\";\n    const isStartFull = (isPageDirectionR2L && isPageStartR) || (!isPageDirectionR2L && !isPageStartR)\n    const leftStartDummyClass = !isPageStartR || isStartFull\n      ? \"\"\n      : dummyClass;\n    const rightStartDummyClass = isPageStartR || isStartFull\n      ? \"\"\n      : dummyClass;\n    const leftEndDummyClass = (isOdd && (!isStartFull || (isStartFull && !isPageDirectionR2L))) || (!isOdd && (!isPageDirectionR2L || isStartFull))\n      ? \"\"\n      : dummyClass;\n    const rightEndDummyClass = (isOdd && (!isStartFull || (isStartFull && isPageDirectionR2L))) || (!isOdd && (isPageDirectionR2L || isStartFull))\n      ? \"\"\n      : dummyClass;\n    const lastIndex = totalPageFrame - 1;\n    let pagNo = 0;\n    let pageOffset = 0;\n    //console.log(\"★lastIndex:\"+lastIndex+\"/pageNum:\"+pageNum+\"/setting.pageNum:\"+setting.pageNum);\n    for (let index = 0; index < totalPageFrame; index++) {\n      const leftPageNo = (\n        isPageDirectionR2L\n        ? 1\n        : 0) + pageOffset + pagNo;\n      const rightPageNo = (\n        isPageDirectionR2L\n        ? 0\n        : 1) + pageOffset + pagNo;\n      const pagePair = [];\n      //////////////////////////////////\n      if (index === 0) { //LR\n        const leftPageNoFirst = isPageDirectionR2L && isStartFull\n          ? 2\n          : isPageDirectionR2L\n            ? 1\n            : isStartFull\n              ? 1\n              : 0\n        const rightPageNoFirst = isPageDirectionR2L && isStartFull\n          ? 1\n          : isPageDirectionR2L\n            ? 0\n            : isStartFull\n              ? 2\n              : 1\n        pagePair.push(div(\"\", [\n          pageClass, leftStartDummyClass\n        ], this.creatPageFrame(leftPageNoFirst, leftStartDummyClass, false), totalPageFrame + \"L\" + leftPageNoFirst + \" \" + isMatchPageStartSide));\n        pagePair.push(div(\"\", [\n          pageClass, rightStartDummyClass\n        ], this.creatPageFrame(rightPageNoFirst, rightStartDummyClass, true), frameNum + \"R\" + rightPageNoFirst + \" \" + isOdd));\n        pageOffset = 1;\n        pagNo += isStartFull\n          ? 2\n          : 1;\n      } else if (index === lastIndex) {\n        pagePair.push(div(\"\", [\n          pageClass, leftEndDummyClass\n        ], this.creatPageFrame(leftPageNo, leftEndDummyClass, false), \"L\" + leftPageNo));\n        pagePair.push(div(\"\", [\n          pageClass, rightEndDummyClass\n        ], this.creatPageFrame(rightPageNo, rightEndDummyClass, true), \"R\" + rightPageNo));\n      } else {\n        pagePair.push(div(\"\", [pageClass], this.creatPageFrame(leftPageNo, \"\", false), \"L\" + leftPageNo));\n        pagePair.push(div(\"\", [pageClass], this.creatPageFrame(rightPageNo, \"\", true), \"R\" + rightPageNo));\n        pagNo += 2;\n      }\n      frames.push(div(\"\", [\"PageFrame\"], pagePair, \"pageFrame index:\" + index))\n    }\n    return frames;\n  }\n}\n","import {PreviewActionCreator} from '../action/previewActionCreator'\nimport {SettingActionCreator} from '../action/settingActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nimport {PreviewProcessor} from '../processor/previewProcessor'\nlet previewReducer = null;\nexport class PreviewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.tm = this.ms.tm;\n    this.pvp = new PreviewProcessor();\n    this.previewOpenAction = PreviewActionCreator.creatOpenAction();\n    this.previewCloseAction = PreviewActionCreator.creatCloseAction();\n    this.previewNextAction = PreviewActionCreator.creatNextAction();\n    this.previewBackAction = PreviewActionCreator.creatBackAction();\n    this.atatch(this.previewOpenAction);\n    this.atatch(this.previewCloseAction);\n    this.atatch(this.previewNextAction);\n    this.atatch(this.previewBackAction);\n    this.storeKey = PreviewActionCreator.getStorePreviewKey();\n    this.storeSettingKey = SettingActionCreator.getStoreKey();\n  }\n  static register() {\n    if (!previewReducer) {\n      previewReducer = new PreviewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.previewOpenAction.type === action.type) {\n      const isSingle = action.data.isSingle;\n      const setting = await this.tm.loadSettings().catch((e) => {\n        console.log(e)\n      });\n      const list = await this.loadPreviews(setting, isSingle);\n      store[this.storeKey] = {\n        isSingle: isSingle,\n        list: list,\n        setting: setting\n      };\n    } else if (this.previewCloseAction.type === action.type) {\n      store[this.storeKey] = {\n        type: this.previewCloseAction.type\n      };\n    } else if (this.previewNextAction.type === action.type) {\n      store[this.storeKey] = {\n        isSingle: action.data.isSingle,\n        nowSetNum: action.data.pageNo,\n        type: this.previewNextAction.type\n      };\n    } else if (this.previewBackAction.type === action.type) {\n      store[this.storeKey] = {\n        isSingle: action.data.isSingle,\n        nowSetNum: action.data.pageNo,\n        type: this.previewBackAction.type\n      };\n    }\n    return store;\n  }\n  async loadPreviews(setting, isSingle) {\n    const binaries = await this.pvp.loadPreviews();\n    const list = this.pvp.shapeListBySets(binaries, isSingle, setting);\n    return list;\n  }\n}\n","import vu from \"../../../util/viewUtil\";\nimport bc from \"../../../util/binaryConverter\";\nimport {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {PreviewReducer} from '../../../reduxy/reducer/previewReducer'\nimport {PreviewActionCreator} from '../../../reduxy/action/previewActionCreator'\nexport class Preview extends BaseView {\n  constructor() {\n    super(\"Preview\", \"Preview\", true);\n    this.storeKey = PreviewActionCreator.getStorePreviewKey();\n    this.previewOpenAction = PreviewActionCreator.creatOpenAction();\n    this.previewCloseAction = PreviewActionCreator.creatCloseAction();\n    this.previewNextAction = PreviewActionCreator.creatNextAction();\n    this.previewBackAction = PreviewActionCreator.creatBackAction();\n    this.list = [];\n    this.currentSetNum = 0;\n    this.isSingle = true;\n    this.classNameRight = \"previeRight\";\n    this.classNameLeft = \"previeLeft\";\n    this.dummyClassName =\"dummy\";\n    this.closeActionType = this.previewCloseAction.type;\n  }\n  onAfterAttach(store, data) {\n    PreviewReducer.register();\n  }\n  render() {\n    const viewFrame = div('', ['previewFrame'], [\n      div('', ['previewLeft'], \"<\"),\n      div('', ['previewFrameA'], {\n        style: {\n          width: \"100%\"\n        }\n      }),\n      div('', ['previewRight'], \">\")\n    ])\n    return div(this.id, [\"Preview\"], {\n      style: {\n        display: \"none\"\n      },\n      on: {\n        click: this.beClose()\n      }\n    }, [viewFrame]);\n  }\n  async onViewShow(store, actionData) {\n    const data = store[this.storeKey];\n    if (data) {\n      const {isSingle, nowSetNum, list, type, setting} = data;\n      if (isSingle!== undefined) {\n        this.isSingle = isSingle;\n      }\n      if (setting) {\n        this.setting = setting;\n      }\n      if (list) {\n        this.list = list;\n      } else if (type === this.previewCloseAction.type) {\n        this.list = null;\n        // alert(\"onViewShow beClose\");\n        this.closePreview();\n        return;\n      }\n      this.currentVnode.elm.style.display = 'block';\n      const pageSetCount = this.list.length;\n      const isR2L = this.setting.pageDirection === \"r2l\";\n       // console.log(this.list)\n      // alert(this.list+\"/isR2L:\"+isR2L);\n        // alert(\"list:\"+this.list+\"/isSingle:\"+isSingle);\n      if (list) {\n        const pageNo = 1;\n        this.pageNo = pageNo;\n        this.showPreview(this.list, isSingle, this.pageNo, isR2L);\n      } else if (this.previewNextAction.type === type) {\n        if (pageSetCount > nowSetNum) {\n          const pageNo = nowSetNum * 1 + 1;\n          this.pageNo = pageNo;\n          this.showPreview(this.list, isSingle, this.pageNo, isR2L);\n        } else {\n          return;\n        }\n      } else if (this.previewBackAction.type === type) {\n        if (nowSetNum > 1) {\n          const pageNo = nowSetNum * 1 - 1;\n          this.pageNo = pageNo;\n          this.showPreview(this.list, isSingle, this.pageNo, isR2L);\n        } else {\n          return;\n        }\n      }\n      //console.log(\"Preview onViewShow\");\n    }\n  }\n  showPreview(list, isSingle, pageNo, isR2L) {\n    const pageSet = list[pageNo - 1];\n    let mainView = null;\n    const left = div('', ['previewLeft'], {\n      on: {\n        click: (\n          isR2L\n          ? this.goNext()\n          : this.goBack())\n      }\n    }, \"<\");\n    const right = div('', ['previewRight'], {\n      on: {\n        click: (\n          isR2L\n          ? this.goBack()\n          : this.goNext())\n      }\n    }, \">\");\n    if (isSingle) {\n      // console.log(pageSet)\n      // alert(pageSet+\"/pageNo:\"+pageNo);\n      const binary = pageSet.binary;\n      const imgVnode = this.buildImageArea(binary,pageNo,null);\n      //alert(\"isSingle:\"+isSingle+\"/pageNo:\"+pageNo+\"/dataUri:\"+dataUri);\n      mainView = div('', ['preview_single'], {\n        style: {\n          width: \"100%\"\n        },\n        on: {\n          click: this.doNothing()\n        }\n      }, [imgVnode]);\n    } else {\n      // console.log(list);\n      // alert(\"AAAlist:\"+list+\"/isSingle:\"+isSingle);\n      const lNo = (pageNo-1) * 2 + (\n        isR2L\n        ? 1\n        : 0);\n      const rNo = (pageNo-1) * 2 + (\n        isR2L\n        ? 0\n        : 1);\n      const imgVnodeL = this.buildImageArea(pageSet[0].binary,lNo,false);\n      const imgVnodeR = this.buildImageArea(pageSet[1].binary,rNo,true);\n      mainView = div('', ['preview_dual'], {\n        style: {\n          width: \"100%\"\n        },\n        on: {\n          click: this.doNothing()\n        }\n      }, [imgVnodeL, imgVnodeR]);\n    }\n    this.prePatch(\".previewFrame\", div(\"\", [\"previewFrame\"], {\n      style: {}\n    }, [left, mainView, right]));\n  }\n  buildImageArea(binalyEnitiy, pageNo, isRight) {\n    const currentClass = isRight === null\n      ? \"\"\n      : (\n        isRight\n        ? this.classNameRight\n        : this.classNameLeft);\n    if(binalyEnitiy){\n      const dataUri = bc.arrayBuffer2DataURI(binalyEnitiy._ab);\n      // console.log(dataUri);\n      const imgVnode = img(binalyEnitiy.pk + \"_preview\", \"preview_\" + pageNo, \"\", dataUri, {});\n      const info = div('', ['previewInfo'], {}, \"pageNo:\" + pageNo);\n      return div('', ['previewImageFrame'], {}, [info, imgVnode]);\n    }else{\n      const isDummy =  binalyEnitiy === undefined;\n      const noimageMsg =isDummy ?\"no Page\":\"no image set\";\n      const dummyClass = isDummy? this.dummyClassName :\"\";\n      const pageNoString = isDummy? \"----\":\"pageNo:\" + pageNo;\n      const imgVnode = div('', ['previewInfo'], {}, noimageMsg);\n      const info = div('', ['previewInfo'], {},pageNoString );\n      return div('', ['previewImageFrame',dummyClass], {}, [info, imgVnode]);\n    }\n  }\n  beClose() {\n    return(event) => {\n      const action = PreviewActionCreator.creatCloseAction(this, {isSingle: this.isSingle});\n      // alert(\"beClose\");\n      this.dispatch(action);\n      event.stopPropagation();\n      return false;\n    }\n  }\n  doNothing() {\n    return(event) => {\n      event.stopPropagation();\n      return false;\n    }\n  }\n  goNext() {\n    return(event) => {\n      const action = PreviewActionCreator.creatNextAction(this, {\n        isSingle: this.isSingle,\n        pageNo: this.pageNo\n      });\n      this.dispatch(action);\n      // alert(\"goNext\");\n      event.stopPropagation();\n      return false;\n    }\n  }\n  goBack() {\n    return(event) => {\n      const action = PreviewActionCreator.creatBackAction(this, {\n        isSingle: this.isSingle,\n        pageNo: this.pageNo\n      });\n      this.dispatch(action);\n      // alert(\"goBack\");\n      event.stopPropagation();\n      return false;\n    }\n  }\n  closePreview() {\n    // alert(\"beClose\");\n    this.currentVnode.elm.style.display = 'none';\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {\n  BaseView\n} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {\n  ImageActionCreator\n} from '../../reduxy/action/imageActionCreator'\nimport {PageActionCreator} from '../../reduxy/action/pageActionCreator'\nexport class Thumbnail extends BaseView {\n  constructor(parent,draggableArea) {\n    super(\"Thumnail\" + parent.id, \"Thumnail\");\n    this.parent = parent;\n    this.draggableArea = draggableArea;\n    this.ip = this.ms.ip;\n    this.draggableArea.nowSelectedElm = null;\n    this.thumbnail_block = \"thumbnail_block\";\n    this.displayNone = \"display_none\";\n  }\n  setImageData(imageData) {\n    this.imageData = imageData;\n  }\n  render(store, actionData) {\n    return div('', \"\");\n  }\n  remove(pk) {\n    return (event) => {\n      if (window.confirm(\"delete ok?\")) {\n        const action = ImageActionCreator.creatRemoveAction(this, {\n          imagePKforDelete: pk\n        });\n        this.dispatch(action);\n      }\n    }\n  }\n  handleDragStart(dragImageSrc) {\n    return (event) => {\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      elm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n      this.draggableArea.nowSelectedElm = elm;\n      event.dataTransfer.effectAllowed = 'move';\n      event.dataTransfer.setData('text/html', elm.innerHTML);\n      let dragIcon = document.createElement('img');\n      dragIcon.src = dragImageSrc;\n      dragIcon.width = 100;\n      event.dataTransfer.setDragImage(dragIcon, -10, -10);\n    }\n  }\n  handleDragOver() {\n    return (event) => {\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      event.preventDefault(); // Necessary. Allows us to drop.\n      event.dataTransfer.dropEffect = 'move'; // See the section on the DataTransfer object.\n      return false;\n    }\n  }\n  handleDragEnter() {\n    return (event) => {\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      elm.classList.add('over');\n    }\n  }\n  handleDragLeave() {\n    return (event) => {\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      elm.classList.remove('over'); // this / event.target is previous target element.\n    }\n  }\n  handleDrop(event) {\n    return (event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      const nowSelectedElm = this.draggableArea.nowSelectedElm;\n      if(nowSelectedElm && nowSelectedElm.dataset.pk  && nowSelectedElm !== elm){\n        const selectedPk = nowSelectedElm.dataset.pk;\n        if (nowSelectedElm.dataset.is_image) {\n          //console.log('sort handleDrop imagePKmove:'+selectedPk+\"/elm.dataset.pk:\"+elm.dataset.pk)\n          const action = ImageActionCreator.creatSortImagesAction(this, {\n            imagePKmove: selectedPk,\n            imagePKdrop:elm.dataset.pk\n          });\n          this.dispatch(action);\n        }else if (nowSelectedElm.dataset.is_page) {\n          //console.log('sort handleDrop imagePKmove:'+selectedPk+\"/elm.dataset.pk:\"+elm.dataset.pk)\n          const action = PageActionCreator.creatRemovePageAction(this, {\n            pagePk: selectedPk\n          });\n          this.dispatch(action);\n        }\n        this.draggableArea.nowSelectedElm = null;\n      }\n      const childNodes = elm.parentNode.childNodes;\n      for (let i = 0; i < childNodes.length; i++) {\n        const col = childNodes[i];\n        col.classList.remove('over');\n      }\n      return false;\n    }\n  }\n  handleDragEnd(event) {\n    return (event) => {\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      const nowSelectedElm = this.draggableArea.nowSelectedElm;\n      console.log('handleDragEnd imagePKmove:'+(nowSelectedElm?nowSelectedElm.dataset.pk:nowSelectedElm)+\"/elm.dataset.pk:\"+elm.dataset.pk)\n      elm.style.opacity = '1';\n      const childNodes = elm.parentNode.childNodes;\n      for(let i = 0; i< childNodes.length ; i++) {\n        const col = childNodes[i];\n        col.classList.remove('over');\n      }\n    }\n  }\n  selectImage(event) {\n    return (event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n        console.log(' selecImage imagePKmove:/elm.dataset.pk:'+elm.dataset.pk)\n        const action = ImageActionCreator.creatDetailAction(this, {\n          imagePK: elm.dataset.pk\n        });\n        this.dispatch(action);\n      return false;\n    }\n  }\n  async crateDataLine(imageData,pagesMap ={}) {\n    const imageEntity = imageData.imageEntity;\n    const binaryEntity = imageData.binaryEntity;\n    //console.log(binaryEntity)\n    const data = {\n      name: imageEntity.name,\n      ab: binaryEntity._ab,\n      type: imageEntity.type\n    }\n    const imgElm = await this.ip.createImageNodeByData(data).catch((e) => {\n      console.log(e);\n      throw e\n    });\n    const pk = imageEntity.getPk();\n    // const imgVnode = img(pk + \"_image\", imageEntity.name, imageEntity.name, imgElm.src, {});\n    const textVnode = span(pk + \"_text\", [\"thumbnail_text\"], imageData.imageText);\n    const delButton = span(pk + \"_delButton\", [\"delButton\"], {\n      on: {\n        \"click\": this.remove(pk)\n      }\n    }, \"x\");\n    const imageVnode = div(\"\", [\"image_block\"], {\n      on: {\n        dragstart: this.handleDragStart(imgElm.src),\n        dragover: this.handleDragOver(),\n        dragenter: this.handleDragEnter(),\n        dragleave: this.handleDragLeave(),\n        drop: this.handleDrop(),\n        dragend:this.handleDragEnd(),\n        click:this.selectImage()\n      },\n      style:{\n        \"background-image\":\"url(\"+imgElm.src+\")\"\n      },\n      dataset:{pk:pk,is_image:true},\n      props:{ \"draggable\":\"true\"}\n    });\n    const classObj = {};\n    classObj[this.displayNone] = pagesMap[pk];\n    const rowVnode = div(\"\", [this.thumbnail_block],{\n      on: {\n        dragstart: this.handleDragStart(imgElm.src),\n        dragover: this.handleDragOver(),\n        dragenter: this.handleDragEnter(),\n        dragleave: this.handleDragLeave(),\n        drop: this.handleDrop(),\n        dragend:this.handleDragEnd(),\n        click:this.selectImage()\n      },\n      class:classObj,\n      dataset:{pk:pk,is_image:true},\n      props:{ \"draggable\":\"true\"}\n    }, [delButton,imageVnode , textVnode]);\n    return rowVnode;\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {\n  BaseView\n} from \"../../util/reactive/baseView\";\nimport {\n  Sorter\n} from \"../../util/sorter\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {\n  ImageActionCreator\n} from '../../reduxy/action/imageActionCreator'\nimport {\n  PageActionCreator\n} from '../../reduxy/action/pageActionCreator'\nimport {\n  Thumbnail\n} from './thumbnail'\nexport class Thumbnails extends BaseView {\n  constructor(draggableArea) {\n    super(\"Thumnails\", \"Thumnails\");\n    this.imageAreaID = \"thumnailsImageArea\";\n    this.thumbnail = new Thumbnail(this, draggableArea);\n    this.ip = this.ms.ip;\n    this.storePagesKey = PageActionCreator.getStorePagesKey();\n    this.pageMap = {}\n    this.thumbnails_block = 'thumbnails_block';\n    this.draggableArea = draggableArea;\n    this.draggableArea.cancelPageArea = null;\n  }\n  onAfterAttach(store, data) {\n    const action = ImageActionCreator.creatLoadImagesAction(this, {});\n    this.dispatch(action);\n  }\n  async onViewShow(store, actionData) {\n    const pagesData = store[this.storePagesKey];\n    if (store.imagesData && pagesData) {\n      this.updatePageMap(pagesData);\n      await this.showImages(store.imagesData);\n      // console.log(\"Thumnails onViewShow\");\n    }\n  }\n  render(store, actionData) {\n    return div(this.imageAreaID, \"Thumnails\");\n  }\n  updatePageMap(pagesData) {\n    for (let key in this.pageMap) {\n      delete this.pageMap[key];\n    }\n    for (let pageEntity of pagesData) {\n      const imagePk = pageEntity.baseImage;\n      if (imagePk) {\n        this.pageMap[imagePk] = true;\n      }\n    }\n  }\n  handleDragEnter() {\n    return (event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnails_block)) {\n        return\n      }\n      elm.classList.add('over');\n      this.draggableArea.cancelPageArea = elm;\n    }\n  }\n  handleDragLeave() {\n    return (event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnails_block)) {\n        return\n      }\n      elm.classList.remove('over'); // this / event.target is previous target element.\n      setTimeout(()=>{\n        this.draggableArea.cancelPageArea = null;\n      },100)\n    }\n  }\n  handleDrop(event) {\n    return (event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n      return false;\n    }\n  }\n\n  reset() {\n    return (event) => {\n      const elm = event.target;\n      //alert(\"reset!\")\n      }\n  }\n  async showImages(imageDatas) {\n    const images = [];\n    for (let imageData of imageDatas) {\n      if (!imageData) {\n        continue;\n      }\n      const imageEntity = imageData.imageEntity;\n      const pk = imageEntity.getPk();\n      const vnode = await this.thumbnail.crateDataLine(imageData, this.pageMap).catch((e) => {\n        console.log(e)\n      });\n      images.push(vnode);\n    }\n    const newVnode = div(this.imageAreaID,[this.thumbnails_block], {\n        on: {\n          dragover: this.handleDragEnter(),\n          dragstart: this.handleDragEnter(),\n          dragenter: this.handleDragEnter(),\n          dragleave: this.handleDragLeave(),\n          drop: this.handleDrop(),\n          dragend:this.handleDrop(),\n          click:this.reset()\n        },\n        props:{ \"draggable\":\"true\"}\n      },\n      images)\n    this.prePatch(\"#\" + this.imageAreaID, newVnode);\n  }\n}\n","import {\n  PageActionCreator\n} from '../action/pageActionCreator'\nimport {\n  MainService\n} from \"../../service/mainService\"\nimport {\n  BaseReducer\n} from '../../util/reactive/baseReducer'\nimport {PageProcessor} from '../processor/pageProcessor'\nimport {ImageActionCreator} from '../action/imageActionCreator'\nlet pagesViewReducer = null;\nexport class PagesViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.im = this.ms.im;\n    this.pageAddAction = PageActionCreator.creatAddPageAction();\n    this.pageRemoveAction = PageActionCreator.creatRemovePageAction();\n    this.pagesResetAction = PageActionCreator.creatResetPagesAction();\n    this.pagesSortAction = PageActionCreator.creatSortPagesAction();\n    this.atatch(this.dropImageToPageAction);\n    this.atatch(this.pageAddAction);\n    this.atatch(this.pageRemoveAction);\n    this.atatch(this.pagesResetAction);\n    this.atatch(this.pagesSortAction);\n\n    this.pp = new PageProcessor();\n    this.storeKey = PageActionCreator.getStorePagesKey();\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n  }\n  static register() {\n    if (!pagesViewReducer) {\n      pagesViewReducer = new PagesViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.pageAddAction.type === action.type) {\n      store[this.storeKey] = await this.add(action.data.imagePk,action.data.pagePk);\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pageRemoveAction.type === action.type) {\n      store[this.storeKey] = await this.remove(action.data.pagePk);\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pagesResetAction.type === action.type) {\n      store[this.storeKey] = await this.reset();\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pagesSortAction.type === action.type) {\n      store[this.storeKey] = await this.move(action.data.formPk,action.data.toPk);\n      store[this.storeImagesKey] = await this.loadImages();\n    }\n    return store;\n  }\n  async loadImages(){\n    return await this.im.loadImages();\n  }\n  async add(imagePk,pagePk){\n    //\n    await this.pp.add(imagePk,pagePk);\n    return await this.pp.loadPages();\n  }\n  async remove(pagePk){\n    //\n    await this.pp.remove(pagePk);\n    return await this.pp.loadPages();\n  }\n  async reset(){\n    //\n    return await this.pp.resetPagesFull();\n  }\n  async move(formPk,toPk){\n    //\n    await this.pp.move(formPk,toPk);\n    return await this.pp.loadPages();\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {ImageDetail} from \"../parts/imageDetail\";\nimport {PageImages} from \"../parts/pageImages\";\nimport {Preview} from '../parts/preview/preview'\nimport {Thumbnails} from \"../parts/thumbnails\";\nimport {ImageViewReducer} from '../../reduxy/reducer/imageViewReducer'\nimport {PagesViewReducer} from '../../reduxy/reducer/pagesViewReducer'\nexport class FilesArea extends BaseView {\n  constructor() {\n    super(\"FilesArea\", \"FilesArea\");\n    this.nowSelectedElm = null;\n    this.imageDetail = new ImageDetail();\n    this.pageImages = new PageImages(this);\n    this.thumbnails = new Thumbnails(this);\n    this.preview = new Preview();\n    ImageViewReducer.register();\n    PagesViewReducer.register();\n  }\n\n  onAfterAttach(store, data) {\n    this.imageDetail.attach(this);\n    this.pageImages.attach(this);\n    this.thumbnails.attach(this);\n    this.preview.attach(this);\n  }\n  render() {\n    return div(\"\", [\n      div(this.pageImages.id),\n      div(this.thumbnails.id),\n      div(this.imageDetail.id),\n      div(this.preview.id)\n    ])\n\n  }\n}\n","import vu from \"../util/viewUtil\";\nimport {BaseView} from \"../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../util/reactive/base/vtags\";\nimport {FileUploadArea} from \"./content/fileUploadArea\";\nimport {TitleSettings} from \"./content/titleSettings\";\nimport {ExportArea} from \"./content/exportArea\";\nimport {FilesArea} from \"./content/filesArea\";\nimport {ProgressBar} from \"./parts/progressBar\";\nexport class Container extends BaseView {\n  constructor() {\n    super(\"container\", \"container\");\n    this.fileUploadArea = new FileUploadArea();\n    this.titleSettings = new TitleSettings();\n    this.filesArea = new FilesArea();\n    this.exportArea = new ExportArea();\n    this.progressBar = new ProgressBar();\n  }\n\n  onAfterAttach(store, data) {\n    this.fileUploadArea.attach(this);\n    this.titleSettings.attach(this);\n    this.filesArea.attach(this);\n    this.exportArea.attach(this);\n    this.progressBar.attach(this);\n  }\n  render() {\n    const newVnode = div({\n      style: {\n        color: '#000'\n      }\n    }, [\n      div(this.fileUploadArea.id),\n      div(this.progressBar.id),\n      div(this.titleSettings.id),\n      div(this.filesArea.id),\n      div(this.exportArea.id)\n    ], \"container\");\n    // console.log('container!render!!!!!!!!!!!')s\n    return newVnode;\n  }\n}\n","import vu from \"../util/viewUtil\";\nimport {BaseView} from \"../util/reactive/baseView\";\nimport {a,div,li,ul,img,span,input,label} from \"../util/reactive/base/vtags\";\nexport class Footer extends BaseView {\n  constructor() {\n    super(\"footer\", \"footer\");\n    this.copyright = \"ryunosinfx\";\n  }\n  render() {\n    const newVnode = div({\n      style: {\n        color: '#000'\n      }\n    }, [div(\"copyright\", [\"copyright\"], this.copyright)]);\n    return newVnode;\n  }\n}\n","import vu from \"../util/viewUtil\";\nimport {Header} from \"./header\";\nimport {Menu} from \"./menu\";\nimport {Container} from \"./container\";\nimport {Footer} from \"./footer\";\nimport {BaseView} from \"../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../util/reactive/base/vtags\";\nexport class MainFrame extends BaseView {\n  constructor(ms,title) {\n    super(\"frame\", \"frame\");\n    this.ms = ms;\n    BaseView.setMainService(ms);\n    this.initialize(title);\n  }\n  initialize(title) {\n    this.header = new Header(title);\n    this.footer = new Footer();\n    this.container = new Container();\n    this.menu = new Menu();\n    this.baseFrame = null;\n    this.view = '';\n    this.initialPatch();\n  }\n  async onViewShow(store, data){\n    this.header.attach(this,'#header');\n    this.menu.attach(this,'#menu');\n    this.container.attach(this,'#container');\n    this.footer.attach(this,'#footer');\n  }\n  render(titleText) {\n    let newVnode = div('frame', ['frame'], {}, [\n      div('header', {\n        style: {\n          color: '#000'\n        }\n      }, 'hellow!!'),\n      div('menu', {\n        style: {\n          color: '#000'\n        }\n      }, 'menu!!'),\n      div('container', {\n        style: {\n          color: '#000'\n        }\n      }, [div('content', {\n          style: {\n            color: '#000'\n          }\n        },'content!!')], 'container!!'),\n      div('footer', {\n        style: {\n          color: '#000'\n        }\n      }, 'footer!!?')\n    ]);\n    return newVnode;\n  }\n}\n","import css from \"../index.css\";\nimport {MainFrame} from \"./view/mainFrame\"\nimport {MainService} from \"./service/mainService\"\nconst title = \"CopiBon\";\nexport default class CopiBonService {\n  constructor() {\n    this.mainService = MainService.getInstance();\n  }\n  async init() {\n    await this.mainService.init();\n    this.mf = new MainFrame(this.mainService,title);\n    //this.mf.initialize(title);\n    ///\n    // const sumModule = await import (\"./sum.wasm\");\n    // console.log(sumModule.sum(22, 2200));\n  }\n  static main() {\n    const self = new CopiBonService();\n    self.init();\n  }\n}\nCopiBonService.main();\n","export function vnode(sel, data, children, text, elm) {\n    var key = data === undefined ? undefined : data.key;\n    return { sel: sel, data: data, children: children,\n        text: text, elm: elm, key: key };\n}\nexport default vnode;\n//# sourceMappingURL=vnode.js.map","export var array = Array.isArray;\nexport function primitive(s) {\n    return typeof s === 'string' || typeof s === 'number';\n}\n//# sourceMappingURL=is.js.map","function createElement(tagName) {\n    return document.createElement(tagName);\n}\nfunction createElementNS(namespaceURI, qualifiedName) {\n    return document.createElementNS(namespaceURI, qualifiedName);\n}\nfunction createTextNode(text) {\n    return document.createTextNode(text);\n}\nfunction createComment(text) {\n    return document.createComment(text);\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n    parentNode.insertBefore(newNode, referenceNode);\n}\nfunction removeChild(node, child) {\n    node.removeChild(child);\n}\nfunction appendChild(node, child) {\n    node.appendChild(child);\n}\nfunction parentNode(node) {\n    return node.parentNode;\n}\nfunction nextSibling(node) {\n    return node.nextSibling;\n}\nfunction tagName(elm) {\n    return elm.tagName;\n}\nfunction setTextContent(node, text) {\n    node.textContent = text;\n}\nfunction getTextContent(node) {\n    return node.textContent;\n}\nfunction isElement(node) {\n    return node.nodeType === 1;\n}\nfunction isText(node) {\n    return node.nodeType === 3;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nexport var htmlDomApi = {\n    createElement: createElement,\n    createElementNS: createElementNS,\n    createTextNode: createTextNode,\n    createComment: createComment,\n    insertBefore: insertBefore,\n    removeChild: removeChild,\n    appendChild: appendChild,\n    parentNode: parentNode,\n    nextSibling: nextSibling,\n    tagName: tagName,\n    setTextContent: setTextContent,\n    getTextContent: getTextContent,\n    isElement: isElement,\n    isText: isText,\n    isComment: isComment,\n};\nexport default htmlDomApi;\n//# sourceMappingURL=htmldomapi.js.map","import { vnode } from './vnode';\nimport * as is from './is';\nfunction addNS(data, children, sel) {\n    data.ns = 'http://www.w3.org/2000/svg';\n    if (sel !== 'foreignObject' && children !== undefined) {\n        for (var i = 0; i < children.length; ++i) {\n            var childData = children[i].data;\n            if (childData !== undefined) {\n                addNS(childData, children[i].children, children[i].sel);\n            }\n        }\n    }\n}\nexport function h(sel, b, c) {\n    var data = {}, children, text, i;\n    if (c !== undefined) {\n        data = b;\n        if (is.array(c)) {\n            children = c;\n        }\n        else if (is.primitive(c)) {\n            text = c;\n        }\n        else if (c && c.sel) {\n            children = [c];\n        }\n    }\n    else if (b !== undefined) {\n        if (is.array(b)) {\n            children = b;\n        }\n        else if (is.primitive(b)) {\n            text = b;\n        }\n        else if (b && b.sel) {\n            children = [b];\n        }\n        else {\n            data = b;\n        }\n    }\n    if (is.array(children)) {\n        for (i = 0; i < children.length; ++i) {\n            if (is.primitive(children[i]))\n                children[i] = vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&\n        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {\n        addNS(data, children, sel);\n    }\n    return vnode(sel, data, children, text, undefined);\n}\n;\nexport default h;\n//# sourceMappingURL=h.js.map","import { h } from './h';\nfunction copyToThunk(vnode, thunk) {\n    thunk.elm = vnode.elm;\n    vnode.data.fn = thunk.data.fn;\n    vnode.data.args = thunk.data.args;\n    thunk.data = vnode.data;\n    thunk.children = vnode.children;\n    thunk.text = vnode.text;\n    thunk.elm = vnode.elm;\n}\nfunction init(thunk) {\n    var cur = thunk.data;\n    var vnode = cur.fn.apply(undefined, cur.args);\n    copyToThunk(vnode, thunk);\n}\nfunction prepatch(oldVnode, thunk) {\n    var i, old = oldVnode.data, cur = thunk.data;\n    var oldArgs = old.args, args = cur.args;\n    if (old.fn !== cur.fn || oldArgs.length !== args.length) {\n        copyToThunk(cur.fn.apply(undefined, args), thunk);\n        return;\n    }\n    for (i = 0; i < args.length; ++i) {\n        if (oldArgs[i] !== args[i]) {\n            copyToThunk(cur.fn.apply(undefined, args), thunk);\n            return;\n        }\n    }\n    copyToThunk(oldVnode, thunk);\n}\nexport var thunk = function thunk(sel, key, fn, args) {\n    if (args === undefined) {\n        args = fn;\n        fn = key;\n        key = undefined;\n    }\n    return h(sel, {\n        key: key,\n        hook: { init: init, prepatch: prepatch },\n        fn: fn,\n        args: args\n    });\n};\nexport default thunk;\n//# sourceMappingURL=thunk.js.map","import vnode from './vnode';\nimport * as is from './is';\nimport htmlDomApi from './htmldomapi';\nfunction isUndef(s) { return s === undefined; }\nfunction isDef(s) { return s !== undefined; }\nvar emptyNode = vnode('', {}, [], undefined, undefined);\nfunction sameVnode(vnode1, vnode2) {\n    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\nfunction isVnode(vnode) {\n    return vnode.sel !== undefined;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    var i, map = {}, key, ch;\n    for (i = beginIdx; i <= endIdx; ++i) {\n        ch = children[i];\n        if (ch != null) {\n            key = ch.key;\n            if (key !== undefined)\n                map[key] = i;\n        }\n    }\n    return map;\n}\nvar hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];\nexport { h } from './h';\nexport { thunk } from './thunk';\nexport function init(modules, domApi) {\n    var i, j, cbs = {};\n    var api = domApi !== undefined ? domApi : htmlDomApi;\n    for (i = 0; i < hooks.length; ++i) {\n        cbs[hooks[i]] = [];\n        for (j = 0; j < modules.length; ++j) {\n            var hook = modules[j][hooks[i]];\n            if (hook !== undefined) {\n                cbs[hooks[i]].push(hook);\n            }\n        }\n    }\n    function emptyNodeAt(elm) {\n        var id = elm.id ? '#' + elm.id : '';\n        var c = elm.className ? '.' + elm.className.split(' ').join('.') : '';\n        return vnode(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);\n    }\n    function createRmCb(childElm, listeners) {\n        return function rmCb() {\n            if (--listeners === 0) {\n                var parent_1 = api.parentNode(childElm);\n                api.removeChild(parent_1, childElm);\n            }\n        };\n    }\n    function createElm(vnode, insertedVnodeQueue) {\n        var i, data = vnode.data;\n        if (data !== undefined) {\n            if (isDef(i = data.hook) && isDef(i = i.init)) {\n                i(vnode);\n                data = vnode.data;\n            }\n        }\n        var children = vnode.children, sel = vnode.sel;\n        if (sel === '!') {\n            if (isUndef(vnode.text)) {\n                vnode.text = '';\n            }\n            vnode.elm = api.createComment(vnode.text);\n        }\n        else if (sel !== undefined) {\n            // Parse selector\n            var hashIdx = sel.indexOf('#');\n            var dotIdx = sel.indexOf('.', hashIdx);\n            var hash = hashIdx > 0 ? hashIdx : sel.length;\n            var dot = dotIdx > 0 ? dotIdx : sel.length;\n            var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;\n            var elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)\n                : api.createElement(tag);\n            if (hash < dot)\n                elm.setAttribute('id', sel.slice(hash + 1, dot));\n            if (dotIdx > 0)\n                elm.setAttribute('class', sel.slice(dot + 1).replace(/\\./g, ' '));\n            for (i = 0; i < cbs.create.length; ++i)\n                cbs.create[i](emptyNode, vnode);\n            if (is.array(children)) {\n                for (i = 0; i < children.length; ++i) {\n                    var ch = children[i];\n                    if (ch != null) {\n                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));\n                    }\n                }\n            }\n            else if (is.primitive(vnode.text)) {\n                api.appendChild(elm, api.createTextNode(vnode.text));\n            }\n            i = vnode.data.hook; // Reuse variable\n            if (isDef(i)) {\n                if (i.create)\n                    i.create(emptyNode, vnode);\n                if (i.insert)\n                    insertedVnodeQueue.push(vnode);\n            }\n        }\n        else {\n            vnode.elm = api.createTextNode(vnode.text);\n        }\n        return vnode.elm;\n    }\n    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            var ch = vnodes[startIdx];\n            if (ch != null) {\n                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);\n            }\n        }\n    }\n    function invokeDestroyHook(vnode) {\n        var i, j, data = vnode.data;\n        if (data !== undefined) {\n            if (isDef(i = data.hook) && isDef(i = i.destroy))\n                i(vnode);\n            for (i = 0; i < cbs.destroy.length; ++i)\n                cbs.destroy[i](vnode);\n            if (vnode.children !== undefined) {\n                for (j = 0; j < vnode.children.length; ++j) {\n                    i = vnode.children[j];\n                    if (i != null && typeof i !== \"string\") {\n                        invokeDestroyHook(i);\n                    }\n                }\n            }\n        }\n    }\n    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            var i_1 = void 0, listeners = void 0, rm = void 0, ch = vnodes[startIdx];\n            if (ch != null) {\n                if (isDef(ch.sel)) {\n                    invokeDestroyHook(ch);\n                    listeners = cbs.remove.length + 1;\n                    rm = createRmCb(ch.elm, listeners);\n                    for (i_1 = 0; i_1 < cbs.remove.length; ++i_1)\n                        cbs.remove[i_1](ch, rm);\n                    if (isDef(i_1 = ch.data) && isDef(i_1 = i_1.hook) && isDef(i_1 = i_1.remove)) {\n                        i_1(ch, rm);\n                    }\n                    else {\n                        rm();\n                    }\n                }\n                else {\n                    api.removeChild(parentElm, ch.elm);\n                }\n            }\n        }\n    }\n    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n        var oldStartIdx = 0, newStartIdx = 0;\n        var oldEndIdx = oldCh.length - 1;\n        var oldStartVnode = oldCh[0];\n        var oldEndVnode = oldCh[oldEndIdx];\n        var newEndIdx = newCh.length - 1;\n        var newStartVnode = newCh[0];\n        var newEndVnode = newCh[newEndIdx];\n        var oldKeyToIdx;\n        var idxInOld;\n        var elmToMove;\n        var before;\n        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n            if (oldStartVnode == null) {\n                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n            }\n            else if (oldEndVnode == null) {\n                oldEndVnode = oldCh[--oldEndIdx];\n            }\n            else if (newStartVnode == null) {\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (newEndVnode == null) {\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newStartVnode)) {\n                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n                oldStartVnode = oldCh[++oldStartIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (sameVnode(oldEndVnode, newEndVnode)) {\n                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newEndVnode)) {\n                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n                oldStartVnode = oldCh[++oldStartIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldEndVnode, newStartVnode)) {\n                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                if (oldKeyToIdx === undefined) {\n                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n                }\n                idxInOld = oldKeyToIdx[newStartVnode.key];\n                if (isUndef(idxInOld)) {\n                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    newStartVnode = newCh[++newStartIdx];\n                }\n                else {\n                    elmToMove = oldCh[idxInOld];\n                    if (elmToMove.sel !== newStartVnode.sel) {\n                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    }\n                    else {\n                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n                        oldCh[idxInOld] = undefined;\n                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n                    }\n                    newStartVnode = newCh[++newStartIdx];\n                }\n            }\n        }\n        if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n            if (oldStartIdx > oldEndIdx) {\n                before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n                addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n            }\n            else {\n                removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n            }\n        }\n    }\n    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\n        var i, hook;\n        if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {\n            i(oldVnode, vnode);\n        }\n        var elm = vnode.elm = oldVnode.elm;\n        var oldCh = oldVnode.children;\n        var ch = vnode.children;\n        if (oldVnode === vnode)\n            return;\n        if (vnode.data !== undefined) {\n            for (i = 0; i < cbs.update.length; ++i)\n                cbs.update[i](oldVnode, vnode);\n            i = vnode.data.hook;\n            if (isDef(i) && isDef(i = i.update))\n                i(oldVnode, vnode);\n        }\n        if (isUndef(vnode.text)) {\n            if (isDef(oldCh) && isDef(ch)) {\n                if (oldCh !== ch)\n                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n            }\n            else if (isDef(ch)) {\n                if (isDef(oldVnode.text))\n                    api.setTextContent(elm, '');\n                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n            }\n            else if (isDef(oldCh)) {\n                removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n            }\n            else if (isDef(oldVnode.text)) {\n                api.setTextContent(elm, '');\n            }\n        }\n        else if (oldVnode.text !== vnode.text) {\n            api.setTextContent(elm, vnode.text);\n        }\n        if (isDef(hook) && isDef(i = hook.postpatch)) {\n            i(oldVnode, vnode);\n        }\n    }\n    return function patch(oldVnode, vnode) {\n        var i, elm, parent;\n        var insertedVnodeQueue = [];\n        for (i = 0; i < cbs.pre.length; ++i)\n            cbs.pre[i]();\n        if (!isVnode(oldVnode)) {\n            oldVnode = emptyNodeAt(oldVnode);\n        }\n        if (sameVnode(oldVnode, vnode)) {\n            patchVnode(oldVnode, vnode, insertedVnodeQueue);\n        }\n        else {\n            elm = oldVnode.elm;\n            parent = api.parentNode(elm);\n            createElm(vnode, insertedVnodeQueue);\n            if (parent !== null) {\n                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));\n                removeVnodes(parent, [oldVnode], 0, 0);\n            }\n        }\n        for (i = 0; i < insertedVnodeQueue.length; ++i) {\n            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);\n        }\n        for (i = 0; i < cbs.post.length; ++i)\n            cbs.post[i]();\n        return vnode;\n    };\n}\n//# sourceMappingURL=snabbdom.js.map"],"sourceRoot":""}