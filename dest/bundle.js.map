{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/binaryConverter.js","webpack:///./src/util/image/byteUtil.js","webpack:///./src/util/thread/thread.js","webpack:///./src/util/image/imageMerger.js","webpack:///./src/util/image/imageCalcBase.js","webpack:///./src/util/image/imageResizer.js","webpack:///./node_modules/snabbdom/vnode.js","webpack:///./node_modules/snabbdom/modules/class.js","webpack:///./node_modules/snabbdom/modules/style.js","webpack:///./node_modules/snabbdom/modules/props.js","webpack:///./node_modules/snabbdom/modules/attributes.js","webpack:///./node_modules/snabbdom/modules/dataset.js","webpack:///./node_modules/snabbdom/modules/eventlisteners.js","webpack:///./node_modules/snabbdom/h.js","webpack:///./node_modules/snabbdom/tovnode.js","webpack:///./node_modules/zlibjs/bin/zip.min.js","webpack:///./index.css?bcd2","webpack:///./index.css","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/snabbdom/is.js","webpack:///./node_modules/snabbdom/htmldomapi.js","webpack:///./src/util/viewUtil.js","webpack:///./src/util/reactive/base/preLoader.js","webpack:///./src/util/objectUtil.js","webpack:///./src/util/reactive/elementSelector.js","webpack:///./src/util/reactive/actionCreator.js","webpack:///./src/util/reactive/viewAttachQueue.js","webpack:///./src/util/reactive/store.js","webpack:///./src/util/reactive/actionDispatcherImple.js","webpack:///./src/util/reactive/actionDispatcher.js","webpack:///./src/util/reactive/base/vtags.js","webpack:///./src/util/reactive/viewBaseActions.js","webpack:///./src/util/reactive/baseReducer.js","webpack:///./src/util/reactive/viewBaseReducer.js","webpack:///./src/util/reactive/baseView.js","webpack:///./src/view/header.js","webpack:///./src/reduxy/action/menuSelectActionCreator.js","webpack:///./src/util/idb/constant.js","webpack:///./src/util/idb/idbUtil.js","webpack:///./src/util/idb/indexeddbHelper.js","webpack:///./src/util/idb/idbRapper.js","webpack:///./src/service/entity/storageService.js","webpack:///./src/service/entity/baseEntity.js","webpack:///./src/service/entity/binary.js","webpack:///./src/service/entity/primaryKey.js","webpack:///./src/service/entity/primaryKeyAutoIncrementService.js","webpack:///./src/service/entity/entityManagerImpl.js","webpack:///./src/service/entity/entityManager.js","webpack:///./src/entity/title.js","webpack:///./src/entity/images.js","webpack:///./src/entity/thumbnales.js","webpack:///./src/entity/series.js","webpack:///./src/util/sorter.js","webpack:///./src/reduxy/action/progressActionCreator.js","webpack:///./src/service/fileUploadExecuter.js","webpack:///./src/service/manager/titleManager.js","webpack:///./src/service/manager/binaryManager.js","webpack:///./src/entity/pages.js","webpack:///./src/service/manager/pagesManager.js","webpack:///./src/entity/settings.js","webpack:///./src/service/manager/settingsManager.js","webpack:///./src/entity/outputProfiles.js","webpack:///./src/service/manager/outputProfilesManager.js","webpack:///./src/entity/imageOutputs.js","webpack:///./src/service/manager/imageOutputsManager.js","webpack:///./src/service/manager/imageManager.js","webpack:///./src/service/manager/thumbnailManager.js","webpack:///./src/settings/exportSettings.js","webpack:///./src/util/image/paper.js","webpack:///./src/util/imageProcessor.js","webpack:///./src/service/imageProcessService.js","webpack:///./src/service/mainService.js","webpack:///./src/service/mainServiceImpl.js","webpack:///./src/reduxy/reducer/menuSelectViewReducer.js","webpack:///./src/view/menu.js","webpack:///./src/eventHandler/baseEventHandler.js","webpack:///./src/reduxy/action/imageActionCreator.js","webpack:///./src/reduxy/action/pageActionCreator.js","webpack:///./src/reduxy/processor/pageProcessor.js","webpack:///./src/reduxy/reducer/imageViewReducer.js","webpack:///./src/eventHandler/fileUploader.js","webpack:///./src/view/content/fileUploadArea.js","webpack:///./src/util/timeUtil.js","webpack:///./src/reduxy/action/settingActionCreator.js","webpack:///./src/reduxy/reducer/settingViewReducer.js","webpack:///./src/view/content/titleSettings.js","webpack:///./src/reduxy/action/exportActionCreator.js","webpack:///./src/util/image/imageCropper.js","webpack:///./src/util/image/imageFilter.js","webpack:///./src/util/unicodeEncoder.js","webpack:///./src/reduxy/processor/progressBarProcessor.js","webpack:///./src/reduxy/processor/previewProcessor.js","webpack:///./src/util/pdf/util/binaryUtil.js","webpack:///./src/util/pdf/util/unicodeEncoder.js","webpack:///./src/util/pdf/constants/pdfConstants.js","webpack:///./src/util/pdf/base/refObject.js","webpack:///./src/util/pdf/base/header.js","webpack:///./src/util/pdf/objects/catalogObject.js","webpack:///./src/util/pdf/objects/imageContentsObject.js","webpack:///./src/util/pdf/objects/imageResourcesObject.js","webpack:///./src/util/pdf/objects/imageXObject.js","webpack:///./src/util/pdf/util/pdfTimeUtil.js","webpack:///./src/util/pdf/objects/infoObject.js","webpack:///./src/util/pdf/objects/pageObject.js","webpack:///./src/util/pdf/objects/pagesObject.js","webpack:///./src/util/pdf/objects/trailerObject.js","webpack:///./src/util/pdf/pdfDocument.js","webpack:///./src/util/pdf/pdfBuilder.js","webpack:///./src/reduxy/processor/exportPdfProcessor.js","webpack:///./src/reduxy/processor/exportImageProcessor.js","webpack:///./src/reduxy/processor/exportUtilProcessor.js","webpack:///./src/reduxy/reducer/exportReducer.js","webpack:///./src/view/parts/export/exportAllButton.js","webpack:///./src/reduxy/action/dialogActionCreator.js","webpack:///./src/reduxy/reducer/dialogViewReducer.js","webpack:///./src/view/parts/dialog/dialog.js","webpack:///./src/view/parts/export/exportImgZipButton.js","webpack:///./src/view/parts/export/exportPdfButton.js","webpack:///./src/util/fileDownloader.js","webpack:///./src/view/parts/export/downloadLastExportZipButton.js","webpack:///./src/view/parts/export/downloadLastExportPdfButton.js","webpack:///./src/view/parts/export/deleteExportOneButton.js","webpack:///./src/view/parts/export/exportButton.js","webpack:///./src/view/parts/export/exportOrderRow.js","webpack:///./src/view/parts/export/exportOrderList.js","webpack:///./src/view/content/exportArea.js","webpack:///./src/view/parts/imageDetail.js","webpack:///./src/view/parts/pageImage.js","webpack:///./src/reduxy/action/previewActionCreator.js","webpack:///./src/view/parts/pageImages.js","webpack:///./src/reduxy/reducer/previewReducer.js","webpack:///./src/view/parts/preview/preview.js","webpack:///./src/view/parts/thumbnail.js","webpack:///./src/view/parts/thumbnails.js","webpack:///./src/reduxy/reducer/pagesViewReducer.js","webpack:///./src/view/content/filesArea.js","webpack:///./src/reduxy/reducer/progressViewReducer.js","webpack:///./src/view/parts/progress/progressBar.js","webpack:///./src/reduxy/action/titleActionCreator.js","webpack:///./src/reduxy/action/splashActionCreator.js","webpack:///./src/view/parts/titleMng/storageMeter.js","webpack:///./src/view/parts/titleMng/titleRow.js","webpack:///./src/view/parts/titleMng/titleList.js","webpack:///./src/view/parts/titleMng/titleNewone.js","webpack:///./src/reduxy/processor/titleProcessor.js","webpack:///./src/reduxy/reducer/titleViewReducer.js","webpack:///./src/view/parts/titleMng/storageInitializer.js","webpack:///./src/view/content/titleMng.js","webpack:///./src/view/container.js","webpack:///./src/view/footer.js","webpack:///./src/reduxy/reducer/splashViewReducer.js","webpack:///./src/view/parts/splash/splash.js","webpack:///./src/view/mainFrame.js","webpack:///./src/main.js","webpack:///./node_modules/snabbdom/es/vnode.js","webpack:///./node_modules/snabbdom/es/is.js","webpack:///./node_modules/snabbdom/es/htmldomapi.js","webpack:///./node_modules/snabbdom/es/h.js","webpack:///./node_modules/snabbdom/es/thunk.js","webpack:///./node_modules/snabbdom/es/snabbdom.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","BinaryConverter","[object Object]","binaryString","binaryString2Uint8Array","buffer","uint8Array2BinaryString","Uint8Array","btoa","type","arrayBuffer2BinaryString","split","rawLength","length","array","ArrayBuffer","charCodeAt","u8a","retList","e","push","String","fromCharCode","join","base64","atob","binaryString2ArrayBuffer","dataURI","uintArray","arrayBuffer","Uint16Array","Uint32Array","val","Blob","blob","reader","FileReader","promise","Promise","resolve","reject","onload","eve","result","onerror","error","asArrayBuffer","readAsArrayBuffer","asBinaryString","readAsBinaryString","asDataURL","readAsDataURL","asText","readAsText","ByteUtil","byteX","x","Math","floor","maxByte","Thread","defaultWorker","workerJsPath","this","worker","Worker","dataMap","transObject","tranceArray","buildPostObj","postMessage","onmessage","event","returendData","data","console","log","currentTarget","returnValue","srcElement","target","eventPhase","timeStamp","message","lineno","stack","buildPostObjExec","Array","isArray","count","buildPostObjExecParValue","keys","objKey","undefined","currentKey","isNotObject","byteLength","ImageData","terminate","ImageMerger","_imageCalcBase__WEBPACK_IMPORTED_MODULE_0__","super","margeReplace","margeLinninr","margeMultiplication","imageDataBase","images","isBaseWhite","isOtherThread","margeExc","replace","linier","multiplication","func","isImageEmpty","threadImages","image","convertImageDataToObj","threadInit","execute","catch","beWhiteImage","mergeImages","width","height","imageData","addData","addWidth","addHeight","plainOffsetY","offsetY","plainOffsetX","offsetX","addOffsetY","endY","addOffsetX","endX","maxY","maxX","iy","addPixcelIndexY","ix","addPixcelIndexX","base","basePixcelIndex","addOne","addPixcelIndex","index","indexAdd","addOaddOffsetXne","trimByte","ImageCalcBase","_thread_thread__WEBPACK_IMPORTED_MODULE_0__","instances","wokerKey","workerKey","methodName","isCallFromWorker","arrayImageData","thread","resultData","className","ImageResizer","_byteUtil__WEBPACK_IMPORTED_MODULE_0__","_imageCalcBase__WEBPACK_IMPORTED_MODULE_1__","threadCount","resizeAsLanczos","resizeAsByCubic","alpha","sin","PI","abs","sincLanczos","iamegData","distImage","resizeExc","rowCount","resizeExcWithThread","resizeAsByCubicExe","resizeAsLanczosExe","distBitmap","newWidth","newHeight","currentBitmap","currentWidth","currentHeight","promises","total","parLength","limitHeight","newDistData","Uint8ClampedArray","currentImageLen","newIData","j","newImageData","all","then","values","startIndex","set","resizeLanczos","resizeByCubic","originBitmap","sourceWidth","sourceHeight","resizeExecute","lanczosWeight","culcWeightByCubic","newWidthF","newHeightF","weightFunc","size","sw","sw4","swLimit","sh","shLimit","wf","hf","src","dist","sizeHalf","sizeHalfm1","threadOffsetY","threadEnd","wfy","y","startY","y32bitOffsetDist","wfx","g","b","startX","jy","weightY","y32bitOffset","jx","w","offset32bit","offset32bitDist","vnode","sel","children","text","elm","default","updateClass","oldVnode","cur","oldClass","class","klass","classList","remove","classModule","update","raf","window","requestAnimationFrame","setTimeout","nextFrame","fn","reflowForced","setNextFrame","obj","prop","updateStyle","oldStyle","style","oldHasDel","removeProperty","delayed","name2","setProperty","styleModule","pre","destroy","rm","getComputedStyle","document","body","transform","amount","applied","props","indexOf","addEventListener","ev","updateProps","oldProps","propsModule","xlinkNS","xmlNS","colonChar","xChar","updateAttrs","oldAttrs","attrs","setAttribute","removeAttribute","setAttributeNS","attributesModule","CAPS_REGEX","updateDataset","oldDataset","dataset","toLowerCase","datasetModule","handleEvent","on","invokeHandler","handler","args","slice","apply","updateEventListeners","oldOn","oldListener","listener","oldElm","removeEventListener","eventListenersModule","vnode_1","is","h","primitive","addNS","childData","htmldomapi_1","toVNode","node","domApi","api","isElement","name_1","id","cn","getAttribute","tagName","elmAttrs","attributes","elmChildren","childNodes","nodeName","nodeValue","isText","getTextContent","isComment","aa","G","a","execScript","shift","H","DataView","ba","f","Error","ca","L","finish","subarray","ha","da","ja","U","ka","la","V","ma","na","pa","k","qa","input","lazy","compressionType","outputBuffer","outputIndex","getParent","pop","Y","sa","q","u","Q","z","ta","F","I","N","B","C","J","ea","O","W","X","ya","Z","ia","D","za","A","oa","va","ua","v","R","fa","K","E","Aa","Ba","P","M","S","T","Ea","ga","ra","Fa","Ga","Ha","Ia","Ca","Da","xa","Ja","Ka","La","$","files","comment","Ma","Na","Oa","Qa","Pa","Ra","compressionMethod","compress","deflateOption","filename","password","unshift","random","os","date","Date","getMinutes","getSeconds","getHours","getMonth","getDate","getFullYear","extraField","STORE","DEFLATE","MSDOS","UNIX","MACINTOSH","content","options","hmr","insertInto","locals","useSourceMap","list","toString","map","item","cssMapping","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","stylesInDom","isOldIE","memo","arguments","memoize","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","parts","addStyle","listToStyles","newStyles","part","css","media","insertStyleElement","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","splice","createStyleElement","createElement","addAttrs","el","forEach","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","replacement","filter","Boolean","cssNode","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","htmlDomApi","createElementNS","namespaceURI","qualifiedName","createComment","newNode","referenceNode","child","setTextContent","textContent","nodeType","ViewUtil","touches","ex","pageX","ey","pageY","wox","pageXOffset","woy","pageYOffset","elementFromPoint","opacity","clasｓName","ce","forId","eventType","eventHandler","parent","hasChildNodes","getElementsByTagName","documet","getElementById","styleObj","isBubbling","isCancelable","createEvent","initEvent","dispatchEvent","snabbdom","preLoader_h","h_default","patch","tovnode_default","init","class_default","style_default","props_default","attributes_default","dataset_default","eventlisteners_default","baseClasses","ObjectUtil","baseClassesList","baseClass","channel","MessageChannel","inPort","port1","outPort","port2","parse","newCount","output","baseType","simpleDeepClone","retObj","childTarget","deepVnodeClone","em","indexSize","delimiterSize","counter","continu","tempDerimiterSie","arrayValue","recalcSize","calcSize","binaryData","elementSelector_ElementSelector","selectorMap","Map","getElements","selector","isValidNode","cloneNode","prePatch","warn","indexA","msg","isShowLog","parentMap","nodes","isShouldPatch","newOne","isEnd","parentVnode","selectors","nextSelector","firstOne","isMatch","substring","isNextEnd","tokens","selectorId","classes","tag","token","mapA","getSelectorMap","mapB","classesA","classesB","classB","isMatched","classA","actionCreator_baseActions","ActionCreator","storeKey","targetView","parentView","newView","createGoOtherViewAction","view","avtiveViews","activeViewList","ViewAttachQueue","queue","lastTree","parentId","currentId","resultParent","findActivViews","primaryView","currentTree","loadAllActiveViews","currentView","nextView","nextViewTree","resultCurrent","nextId","activeViewsTree","callback","retView","next","viewId","current","resultList","currentLength","mainHolder","subHolder","mainKey","store_Store","service","store","action","newKey","has","actionClass","clonedStore","storeAtCurrent","inputValue","currentValue","viewAttachQueue","actionMap","actionDispatcherImple_ActionDispatcherImple","updateMap","updateQueue","reducer","reducers","includes","indexof","dispatchExecute","constructor","getStore","initializeStoreKeys","getInitializeKeys","initializeStoreKey","preReduce","reduce","postReduce","storeAsClones","cloneStore","isOrverride","views","onViewHide","callUpdate","onViewHidden","setStore","actionData","activViews","getActiveViewList","activeView","getTemp","updateReactiveTheTargetView","alert","updateReactive","actionDispatcher_ActionDispatcher","setProps","inputs","newData","vtags","classNames","id2","childrenArray","currentText","currentData","childNode","div","span","vtags_img","alt","vtags_file","vtags_checkbox","vtags_label","vtags_option","createSelectVnode","optionsData","selectedValue","suffix","optionSelected","selected","optionNode","vtags_select","viewBaseActions_ViewBaseActions","createShowViewAction","baseReducer_BaseReducer","isBaseUse","baseActions","getBaseActions","atatch","targetKey","add","delete","getGotoAnotherViewAction","getShowViewAction","isEquals","baseView_viewAttachQueue","nodeFrame","rootVnode","ms","baseView_BaseView","isNotRenderWrap","dispatcher","es","onViewLoad","currentVnode","onViewLoaded","updateReactiveCallCount","updateReactiveCallTimer","updateReactivePromise","updateCount","newVnode","patchFromOtherVnode","innerHTML","render","currentRootNode","now","onPreViewBuild","renderWrap","onViewShow","onAfterAttachWrap","onViewShown","clearTimer","clearTimeout","taregetSelecotor","isAttached","activeViewTree","addActiveView","creatAttachAction","dispatch","elements","onAfterAttach","display","header_Header","titleText","getAppTitle","Version","getAppVersion","title","version","color","menuSelectActionCreator_MenuSelectActionCreator","createBaseAction","constant","dbName","navigator","userAgent","domain","IdbUtil","table","tabels","condetions","condition","isMutch","start","end","isNotEqualStart","isNotEqualEnd","IDBKeyRange","bound","upperBound","KeyRange","lowerBound","only","key1","key2","key3","key4","key5","MODE_R","MODE_RW","indexeddbHelper_IndexeddbHelper","indexedDB","keyPathMap","db","lastVersion","isUpdateOpen","timer","isDBClosed","tableCache","newVersion","close","request","open","onsuccess","onupgradeneeded","onabort","tableName","tables","cacheClear","transaction","oncomplete","closeDB","objectStore","callerName","keyPathName","getOpenDB","throwNewError","getObjectStore","keyPathNameCurrent","keyPath","payload","range","_selectAll","direction","_selectAllExecute","isGetFirstOne","req","openCursor","cursor","continue","_selectByKey","_selectByKeyOnTran","cachekey","cache","getCache","setCache","_selectByKeys","_selectByKeysOnTran","retMap","_getByKeyFromeObjectStore","_selectFirstOne","getKeyPathByMap","_insertUpdate","currentTables","_insertExecute","_updateExecute","objectStoreRequest","put","_deleteWithRange","_deleteWithRangeExecute","or","_delete","keyPathValue","_deleteOnTran","_truncate","_truncateExecute","clear","names","objectStoreNames","isExist","isAutoIncrement","_createStore","isExistsObjectStore","getCurrentVersion","createObjectStore","_dropStore","deleteObjectStore","idbRapper_IdbRapper","objectStoreName","keypathName","idbh","reslve","firstPromise","record","pk","saveData","dataObj","storeData","recordAsDefaultLoad","loadData","getObjectStoreNames","USER_ID","idbAccessors","storageService_StorageService","entityClass","targetObj","idbAccessor","entityName","getEntityName","userId","storeNameKey","getStoreNameKey","createStoreByName","createStore","toObj","saveDataDefault","loadAllData","row","cloned","getEntity","pkList","recordMap","loadDataMap","load","deleteData","refcols","baseEntity_BaseEntity","entitiyName","pkValue","deepClone","singleDeepCloneWithoutFuncs","exclude","EnitiyName","binary_Binary","_ab","createDate","updateDate","ab","DELIMITER","PrimaryKey","entity","number","isPrimaryKey","getPk","oid","getPrimaryKey","primaryKeyAutoIncrementService_USER_ID","primaryKeyAutoIncrementService_PK_INCREMENT_STORE","PK_ROW","primaryKeyAutoIncrementService_PrimaryKeyAutoIncrementService","userid","ss","rowKey","nextCountAB","countUpUint32","save","binaryConverter","arrayBuffer2base64","currentCount","dataview","getUint32","setInt32","entityManagerImpl_USER_ID","BINALY_PK_ROW","binarySizeMap","entityManagerImpl_binaryEntity","entityManagerImpl_EntityManagerImpl","entityManager","isBinary","pkais","saveExecute","currentPK","isWithBinary","assemblePK","acquirePKNo","saveArrayBufferCols","setPk","column","saveArrayBufferData","newPK","getBinaryPK","Binary","saveWithBinary","newNumber","loadAll","getAsMap","isSizeOnly","time","timeEnd","entityManager_USER_ID","entityManager_EntityManager","entities","initParEntity","addBaseCLassese","truePk","title_refcols","title_Title","titleId","titlePrefix","prefix","no","pageNo","setting","series","pageNum","pages","outputsPars","listing","images_refcols","images_Images","binary","thumbnail","modifyDate","thumbnales_refcols","thumbnales_Thumbnales","series_refcols","series_Series","Sorter","colName","isDESC","sort","orders","objA","objB","order","thinninged","element","progressActionCreator_ProgressActionCreator","fileUploadExecuter_FileUploadExecuter","actionDispatcher","createStandAlone","mainService_MainService","getInstance","file","read","errorHandler","onprogress","updateProgress","onloadstart","onLoadStart","abort","creatRemoveAction","code","NOT_FOUND_ERR","NOT_READABLE_ERR","ABORT_ERR","percentLoaded","round","loaded","creatUpdateAction","progress","creatCompleatAction","creatAddAction","titleManager_defaultTitle","defaultName","defaultTitlePrefix","titleManager_TitleManager","ip","im","tbm","sm","currentTitle","Title","createTitle","createDefault","newTitleId","loadTitle","thinningNullData","titelId","titelPrefix","loadCurrent","iamageEntitis","imagePk","imageEntity","saveImageFile","saveTitle","imageEntityPk","settingEntityLoad","loadByPk","loadThumbnails","updateImagesListing","binaryManager_BinaryManager","binaryPk","addDataMap","binEntity","binaryEntitySaved","pages_refcols","pages_Pages","previewThumbnail","outputImage","outputExpandImage","outputDualImage","baseImage","isForceColor","isNoCropping","pagesManager_PagesManager","tm","pagePk","pageEntity","thumbnailPk","thumbnailEntity","parentPk","Pages","pageEntitis","fromPk","toPk","targetFrom","targetTo","previewThumbnailFrom","previewThumbnailTo","outputImageFrom","outputImageTo","thumbnailFrom","thumbnailTo","baseImageFrom","baseImageTo","page","settings_refcols","settings_Settings","startPage","pageDelection","outputProfile","settingsManager_SettingsManager","opm","titilePk","Settings","settings","getDefaultPk","pageDirection","outputProfiles_refcols","outputProfiles_OutputProfiles","pageSize","defaultPk","outputProfilesManager_OutputProfilesManager","outputProfiles","OutputProfiles","outputProfilePK","savedOne","Setting","Thumbnales","imageOutputs_refcols","imageOutputs_ImageOutputs","orderName","imageOutputsManager_ImageOutputsManager","ImageOutputs","imageOutputs","imageEntitySaved","loadedImageMap","imageManager_ImageManager","Images","createRetList","getEntitisAsList","imageEntitis","thumbnailBinaryPk","fue","imgElm","createImageNodeByData","createThumbnail","arrayBufferThumbnail","dataURI2ArrayBuffer","imgElmThumb","savedData","imageList","orderBy","loadFromImagePk","processParImage","binaryEntity","imageText","escape","isOnPage","entries","thumbnailManager_ThumbnaleManager","SettingData","pageStart","l2r","r2l","pageNums","dpis","dpi72","dpi150","dpi300","dpi350","dpi600","dpi1200","same","printMargin","none","conbini","basePaper","B6","frame","multiple","A5","B5","A4","B4","A3","mangaPaperB5","mangaPaperA4","mangaPaperA4ExpandTatikiri","mangaPaperB4","mangaPaperA3","pure_fit","paperSizeSet","A6","ExportOrders","paper_Paper","paparSize","basePaperSet","dpi","cropSizeMm","calcClopOffsetMm","calcPixcel","targetPaper","offset","targetSize","getPaperSizeMm","frameSize","targetX","targetY","dpiName","getTargetPaperSizeMm","getDpi","mm","pixcel","paperSize","marginSetting","margin","getPrintMargin","mpi","getPixcelSizeWithMargin","mmWidth","mmHeight","mmMargin","mmMarginDual","getPixcelSize","imgRe","imageProcessor_ImageProcessor","canvas","createCanvas","ctx","getContext","paper","imageMerger","imageResizer","maxWidth","maxHeight","origin","getImageDataFromArrayBuffer","resizeInMaxSize","sizeOfPaper","getPixcelSizeBySelected","newPaperData","createImageData","sizeOfImage","marginMM","getOffset","len","putImageData","dataUri","toDataURL","abResized","isWidthGreater","retio","resize","arrayBuffer2DataURI","img","Image","drawImage","getImageData","iamgeBitmapData","quority","option","getArrayBufferFromImageBitmapData","widthScale","heightScale","scale","clearRect","exportPng","createImage","match","imageProcessService_ImageProcessService","resizeAsPaper","imageBitmapData","getArrayBufferFromImageBitmapDataAsJpg","getArrayBufferFromImageBitmapDataAsPng","mainServiceImpl","appTitle","appVersion","initAsNewUser","bm","pb","pm","iom","setTitleManager","thread_thread","menuSelectViewReducer","menuSelectViewReducer_MenuSelectViewReducer","menuSelectAction","creatSelectAction","getStoreKey","addInitializeKey","menu_Menu","menuButtonClass","steps","ancker","label","targets","isSelectByManual","createButtons","register","hilightMenu","step","menuTabs","click","onClick","BaseEventHandler","imageActionCreator_ImageActionCreator","pageActionCreator_PageActionCreator","pageProcessor_PageProcessor","loadSettings","resetPages","delPages","addPageAsNew","pageEntitysMap","delTarget","keyIndex","move","addPage","removeImage","imageViewReducer","imageViewReducer_ImageViewReducer","imagAddAction","imageRemoveAction","imagesLoadAction","creatLoadImagesAction","imagesSortAction","creatSortImagesAction","imagesChangeTitleAction","creatChangeTitleImagesAction","imagesDetailAction","creatDetailAction","pp","storeImagesKey","getStoreImagesKey","storePagesKey","getStorePagesKey","saveFiles","loadPages","imagePKforDelete","loadImages","imagePKmove","imagePKdrop","loadAImage","imagePK","addImageFiles","movePk","dropPk","converterMap","convertedPk","imageEntityConverted","getFromLoaded","resetPagesFull","removeLoaded","getRetObjsAsList","fileUploader_FileUploader","fileProcessor","stopPropagation","preventDefault","handleFiles","dataTransfer","actin","areadParFile","fileUploadArea_text","fileUploadArea_FileUploadArea","fu","FileUploadFile","change","handleFileSelect","fileUploadArea","dragover","handleDrop","drop","re_yyyy","re_MM","re_dd","re_hh","re_mm","re_ss","unixTimeToDateFormat","unixtime","format","year","month","day","hour","min","sec","getNowUnixtime","getTime","settingActionCreator_SettingActionCreator","settingViewReducer","settingViewReducer_SettingViewReducer","creatAction","creatLoadAction","storeKeyOpm","getStoreKeyOpm","reset","saved","titleSettings_TitleSettings","bodyId","showSettings","updateExec","nameInput","pageNumInput","startPageInput","pageDirectionInput","outputProfileInput","labelClass","inputClass","nameLabel","nameRow","pageNumLabel","idpageNumInput","pageNumRow","startPageLabel","idStartPageInput","startPageRow","pageDirectionLabel","idPageDirectionInput","pageDirectionRow","outputProfileLabel","idOutputProfileInput","outputProfileRow","frameL","frameR","childlen","exportActionCreator_ExportActionCreator","imageCropper_ImageCropper","newHieght","imagaDataBase","distData","imageFilter_ImageFilter","gray","byteUtil","UnicodeEncoder","charCode1","charCode2","str","codePoints","charCode","surrogatePairToCodePoint","stringParts","codePointCharCodes","codePoint","codes","stringToCodePointArray","endian","progressBarProcessor_ProgressBarProcessor","percentProgress","percent","previewProcessor_PreviewProcessor","previewMaxWidth","previewMaxHeight","pbp","retPreviews","pegaNum","progressUnit","pageCount","pageStep","pageEnitity","resizeAsPaperB5_72","previews","isSingle","cratePageData","getCratePageDataFunc","retSetLis","dummyClass","comple","buildPageFrames","isRight","binaries","currentBinary","isDummy","retFrames","isPageDirectionR2L","isPageStartR","frameNum","ceil","isOdd","isMatchPageStartSide","totalPageFrame","isStartFull","leftStartDummyClass","rightStartDummyClass","leftEndDummyClass","rightEndDummyClass","lastIndex","pagNo","pageOffset","leftPageNo","rightPageNo","pagePair","leftPageNoFirst","rightPageNoFirst","BinaryUtil","u8as","u8aEdge","retU8a","edge","hexStr","retArrray","hexList","hex","Number","isNaN","parseInt","binStr","binLen","charList","encodedString","decodeURIComponent","retArray","binstr","p1","ch","escstr","toUpperCase","unicodeEncoder_UnicodeEncoder","KeyKeywords","Type","Subtype","BaseFont","PDF","ColorSpace","Filter","ProcSet","pdfConstants_paperSizeSet","pageSazeMap","refMap","refObject_NEWLINE","refList","refObject_RefObject","exportText","isBePlaneMap","afterRegsterRefMap","isRoot","isInfo","indexPrefix","registerRefMap","encodeUTF8","u8aStream","createStream","u8aStart","getRefNo","u8aMain","createMap","u8aEnd","joinU8as","keyword","retText","newArray","isRegisterd","NEW_LINE","getNewLine","base_header_Header","getText","binStrU8a","hexString2U8a","u8aNewLine","catalogObject_CatalogObject","pagesObj","setElm","registerAfterRefMap","imageContentsObject_ImageContentsObject","imageId","pageObj","pageWidth","pageHeight","NEWLINE","getAsU8a","imageResourcesObject_ImageResourcesObject","imageXObject","xObjectMap","setBePlaneMap","getImageId","imageXObject_ImageXObject","jpegU8a","pdfTimeUtil_re_yyyy","pdfTimeUtil_re_MM","pdfTimeUtil_re_dd","pdfTimeUtil_re_hh","pdfTimeUtil_re_mm","pdfTimeUtil_re_ss","getNow","pdfTimeUtil_unixTimeToDateFormat","infoObject_InfoObject","pageObject_PageObject","sizeName","paperSizePoint","resources","contents","setParentPage","fontName","pagesObject_PagesObject","setParent","CRLF","trailerObject_TrailerObject","rootObj","infoObj","startOffset","getRefList","results","currentBytes","refObje","createObject","trailerU8a","pdfDocument_PdfDocument","pageSizse","info","root","trailer","setRoot","setInfo","imageCount","u8aImage","ic","ir","binaryU8a","convertDataUri2U8a","imageXobj","setContents","setResources","setImageXObject","headerU8a","getU8a","createXref","pdfBuilder_PdfBuilder","pdfDoc","addDummyPage","addImagePage","createFile","exportPdfProcessor_ExportPdfProcessor","delList","isSaddleStitchingOrder","letList","pdfImage","loadBinaryWidCleanUp","pdfImageAb","reSortAsSaddleStitchingOrder","pdfBuilder","createImagesDoc","delOnList","tmpList","mod","outputLength","isFromFirst","setCount","switchFlag","offsetPageNum","one","two","three","four","exportImageProcessor_order","exportImageProcessor_ExportImageProcessor","imageCropper","imageFilter","epp","exportOrders","exportExecute","isZip","executeParOrder","targetDpi","getTargetPaperSize","clopOffset","calcClopOffsetPixcel","frameSizeMm","getPaperFrameSizeMm","isGrayscale","isMaxSize10M","isLanczose","expandAndCropSize","executeAsZip","executeAsPdf","isRightStart","isSideSynced","exportDualImage4Print","compressed","exoprtAsZip","commonEnd","getTragetPaper","pdf","createPdf","getExports","exportImagePk","outputOld","exportPk","imageOutput","outputNew","yyyyMMddThhmmss","defaultTitle","getCurrentTitleName","exportPrefix","exportImageNewPk","saveCurrent","expandedPaper","cropedPaper","targetRetio","currentDataAb","baseImageEntity","baseBinaryEntity","isWider","longPixcel","longMm","sizeWhitePaperWidth","calcDpi","sizeWhitePaperHeight","whitePaper","beGrascale","corpImageToData","zip","zip_min","Zip","lastOne","outputBinaryEntity","nextPageNo","currentPageNo","addFile","stringToByteArray","cropedPaperDual","pairPages","right","left","rightBin","leftBin","printPages","printPairs","newPair","printPagePair","buildDualImage","shapedPagePair","cropedPaperDualAb","ropedPaperDualAb","exportUtilProcessor_ExportUtilProcessor","exportPks","getZipPdfPair","exportｓIndex","imageOutpus","exportReducer","exportReducer_ExportReducer","exportExecuteAction","createExecuteAction","exportExecuteAllAction","creatExecuteAllAction","exportRemoveAction","exportsLoadAction","exportDownloadAction","createDownloadAction","exportExecutePdfAction","createExecutePdfAction","exportDownloadPdfAction","createDownloadPdfAction","selectOrderAction","createSelectOrderAction","eip","eup","storePdfDLKey","getStorePdfDLKey","storeZipDLKey","getStoreZipDLKey","storeRemoveResultKey","getStoreRemoveResultKey","storeExportResultKey","getStoreExportResultKey","storeSelectedOrderKey","getStoreSelectedOrderKey","loadPks","exportPdfExecute","loadZip","loadPdf","selectOrder","selectOptions","exportZipExecute","exportAllButton_ExportAllButton","dialogActionCreator_DialogActionCreator","dialogViewReducer","dialogViewReducer_DialogViewReducer","dialogOpenAction","creatOpenAction","dialogAlertAction","creatAlertAction","dialogConfirmAction","creatConfirmAction","dialogCloseAction","creatCloseAction","createDialog","nextActions","isVisible","dialogInstance","dialog_Dialog","ModalWindowClass","resolv","showAlertDialog","showConfirmDialog","initPoint","onOK","onCancel","showDialog","show","buttons","exportImgZipButton_ExportImgZipButton","stateId","isExported","exportOrderData","startTime","buttonName","exportedState","isSuccess","buildButton","duration","opneAlert","orderData","exportString","async","opneConfirm","exportPdfButton_ExportPdfButton","FileDownloader","fileName","mimeType","download","downloadurl","downloadLastExportZipButton_DownloadLastExportZipButton","downloadLastExportPdfButton_DownloadLastExportPdfButton","deleteExportOneButton_DeleteExportOneButton","exportButton_ExportButton","exportAllButton","exportImgZipButton","exportPdfButton","downloadLastExportZipButton","downloadLastExportPdfButton","deleteExportOneButton","attach","exportOrderRow_ExportOrderRow","ordersMap","orderOptions","activeClassName","imageAreaID","getCurrentOptions","ordersList","activeClass","getSelectOrder","exportOrderList_ExportOrderList","exportOrderRow","listFrameId","listId","checkboxIsGrascale","Id","selectBoxDpiName","checkboxIsMaxSize10M","checkboxIsLanczose","checkboxIsSaddleStitchingOrder","firstKey","exportOptions","buildRows","inputFrameClass","selectOrderData","checked","exportArea_ExportArea","exportButton","exportOrderList","PLANE","WINDOW","DOUBLE","HELF","QUAD","FULL","imageDetail_ImageDetail","isOnScroll","previewMode","toNativeSizeButton","toNativeSize","toWindowSizeButton","toWindowSize","toDoubleWindowSizeButton","toDoubleWindowSize","toQuadWindowSizeButton","toQuadWindowSize","toHelfWindowSizeButton","toHelfWindowSize","toFullWindowSizeButton","titleBar","imagesDetailData","showImage","setSelectStyle","imgVnode","textVnode","mousedown","onMouseOn","mousemove","onMouseMove","top","button","clientX","offsetX１","clientY","offsetY１","currentX","currentY","targetNode","pageImage_PageImage","draggableArea","thumbnail_block","toDropPage","doDrop","pageData","confirm","dragImageSrc","dropElm","contains","nowSelectedElm","effectAllowed","setData","dragIcon","setDragImage","dropEffect","selectedPk","targetPk","is_image","creatAddPageAction","is_page","creatSortPagesAction","formPk","clearSideElmClass","cancelPageArea","creatRemovePageAction","blockMenuHeaderScroll","pointedElm","getCurrentPointedElm","imageBg","background-image","pageBlock","checkNoCropping","checkForceColor","optionsBlock","rowVnode","dragstart","handleDragStart","handleDragOver","dragenter","handleDragEnter","dragleave","handleDragLeave","dragend","handleDragEnd","selectImage","touchstart","handleTouchStart","touchmove","handleTouchMove","touchend","handleTouchEnd","draggable","previewActionCreator_PreviewActionCreator","pageImages_PageImages","childId","thumbnails","lastSettingOne","lastPagesData","lastImagesData","pagesData","imagesData","pagesDataJson","imagesDataJson","settingsJson","pageFrames","showPages","imagesPk","imageMap","setPageData","renderVnode","frameParts","sideClass","pageIndex","previewSingle","showPreviewSingle","previewDouble","showPreviewDual","frames","buildPreviewButtons","creatPageFrame","previewReducer","previewReducer_PreviewReducer","pvp","previewOpenAction","previewCloseAction","previewNextAction","creatNextAction","previewBackAction","creatBackAction","previewUpdateAction","getStorePreviewKey","storeUpdateKey","getStoreUpdatePreviewKey","storeSettingKey","loadPreviews","nowSetNum","updatePage","shapeListBySets","preview_Preview","currentSetNum","classNameRight","classNameLeft","dummyClassName","closeActionType","viewFrame","beClose","dataUpdate","showPreview","isR2L","pageSetCount","pageSet","mainView","leftText","rightText","goNextOrBack","buildImageArea","doNothing","lNo","rNo","imgVnodeL","imgVnodeR","pageEnitiy","parentPkRight","parentPkLeft","binalyEnitiy","isForceColorClass","isNoCroppingClass","pageNoText","onCheckUpdate","pageSide","noimageMsg","pageNoString","actionReload","thumbnail_Thumbnail","displayNone","toDropTumnails","pagesMap","delButton","classObj","thumbnails_Thumbnails","pageMap","thumbnails_block","updatePageMap","showImages","imageDatas","crateDataLine","pagesViewReducer","pagesViewReducer_PagesViewReducer","pageAddAction","pageRemoveAction","pagesResetAction","creatResetPagesAction","pagesSortAction","dropImageToPageAction","filesArea_FilesArea","imageDetail","pageImages","preview","progressViewReducer","progressViewReducer_ProgressViewReducer","progressBarAddAction","progressBarRemoveAction","progressBarUpdateAction","progressBarCompleatSortAction","createProgress","isComple","progressBar_ProgressBar","showProgress","titleActionCreator_TitleActionCreator","splashActionCreator_SplashActionCreator","storageMeter_StorageMeter","storeCurrentKey","getStoreCurrentKey","unit","onReculc","dataFrame","totalSize","titleRow_TitleRow","titles","creatRow","updateButton","onUpdate","deleteButton","onDelete","titleList_TitleList","titleRow","listView","listRows","titleNewone_TitleNewone","idOfName","createInputRow","prefixRow","titleIdRow","ids","pattern","defaultValue","attr","titleProcessor_TitleProcessor","loadTitleList","titleSizeCache","getSizes","refCols","getRefCols","colValue","currentSize","isInteger","removeDescendant","removeExecute","changeTitle","titleViewReducer","titleViewReducer_TitleViewReducer","tp","titleCreatAction","titleRemoveAction","titleLoadAction","titleChangection","creatChangeAction","titleUpdateAction","titleClearAllAction","creatClearAllAction","changeTtitle","clearAll","storageInitializer_StorageInitializer","onClearAll","titleMng_TitleMng","storageMeter","titleList","titleNewone","storageInitializer","container_Container","titleSettings","filesArea","exportArea","progressBar","titleMng","dialog","contentsScrollTops","contentsScrollRanges","contentsIdMap","addScrollMap","buildFinish","onScroll","currentCheck","scrolltop","getBoundingClientRect","scrollTop","footer_Footer","copyright","splashViewReducer","splashViewReducer_SplashViewReducer","splashAddAction","splashRemoveAction","createSplash","splash_Splash","appVerion","loadingspans","chars","char","splashTitle","mainFrame_MainFrame","setMainService","initialize","header","footer","container","menu","baseFrame","splash","initialPatch","main_CopiBonService","main_appTitle","main_appVersion","mainService","mf","main","vnode_vnode","es_vnode","htmldomapi","copyToThunk","thunk","prepatch","old","oldArgs","thunk_thunk","hook","isUndef","isDef","snabbdom_init","emptyNode","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","hooks","cbs","createRmCb","childElm","listeners","parent_1","createElm","insertedVnodeQueue","hashIdx","dotIdx","hash","dot","insert","addVnodes","parentElm","vnodes","startIdx","invokeDestroyHook","removeVnodes","i_1","patchVnode","oldCh","newCh","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","updateChildren","postpatch","isVnode","emptyNodeAt","post"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dest/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","export default class BinaryConverter {\n  static binaryString2ArrayBuffer(binaryString) {\n    return BinaryConverter.binaryString2Uint8Array(binaryString).buffer;\n  }\n  static arrayBuffer2BinaryString(buffer) {\n    return BinaryConverter.uint8Array2BinaryString(new Uint8Array(buffer));\n  }\n  static arrayBuffer2base64(buffer) {\n    return btoa(BinaryConverter.uint8Array2BinaryString(new Uint8Array(buffer)));\n  }\n  static arrayBuffer2DataURI(buffer, type = \"application/octet-stream\") {\n    const base64 = btoa(BinaryConverter.arrayBuffer2BinaryString(buffer));\n    return \"data:\" + type + \";base64,\" + base64;\n  }\n\n  static binaryString2Uint8Array(binaryString) {\n    const list = binaryString.split(\"\");\n    const rawLength = binaryString.length;\n    const array = new Uint8Array(new ArrayBuffer(rawLength));\n    for (let i = 0; i < rawLength; i++) {\n      array[i] = binaryString.charCodeAt(i);\n    }\n    return array;\n  }\n\n  static uint8Array2BinaryString(u8a) {\n    let retList = [];\n    for (let e of u8a) {\n      retList.push(String.fromCharCode(e));\n    }\n    return retList.join(\"\");\n  }\n\n  static binaryString2DataURI(binaryString, type = \"application/octet-stream\") {\n    return \"data:\" + type + \";base64,\" + btoa(binaryString);\n  }\n  static base642DataURI(base64, type = \"application/octet-stream\") {\n    return \"data:\" + type + \";base64,\" + base64;\n  }\n  static base642binaryString(base64) {\n    return atob(base64);\n  }\n  static base642ArrayBuffer(base64) {\n    return BinaryConverter.binaryString2ArrayBuffer(atob(base64));\n  }\n\n  static dataURI2BinaryString(dataURI) {\n    return atob(dataURI.split(\",\")[1]);\n  }\n  static dataURI2ArrayBuffer(dataURI) {\n    return BinaryConverter.binaryString2Uint8Array(atob(dataURI.split(\",\")[1])).buffer;\n  }\n\n  static uintArray2ArrayBuffer(uintArray) {\n    return uintArray.buffer;\n  }\n\n  static arrayBuffer2Uint8Array(arrayBuffer) {\n    return new Uint8Array(arrayBuffer);\n  }\n\n  static arrayBuffer2Uint16Array(arrayBuffer) {\n    return new Uint16Array(arrayBuffer);\n  }\n  static arrayBuffer2Uint32Array(arrayBuffer) {\n    return new Uint32Array(arrayBuffer)\n  }\n\n  static ArrayBuffer2Blob(val, type = \"application/octet-stream\") {\n    return new Blob([val], {type: type});\n  }\n  static readBlob(blob) {\n    const reader = new FileReader();\n    const promise = new Promise((resolve, reject) => {\n      reader.onload = eve => {\n        resolve(reader.result);\n      }\n      reader.onerror = eve => {\n        reject(reader.error);\n      }\n    })\n\n    return {\n      asArrayBuffer() {\n        reader.readAsArrayBuffer(blob);\n        return promise;\n      },\n      asBinaryString() {\n        reader.readAsBinaryString(blob);\n        return promise;\n      },\n      asDataURL() {\n        reader.readAsDataURL(blob);\n        return promise;\n      },\n      asText() {\n        reader.readAsText(blob);\n        return promise;\n      }\n    }\n  }\n}\n","export class ByteUtil {\n\n  static trimByte(byteX) {\n    const x = Math.floor(byteX);\n    const maxByte = x > 255 ?\n      255 :\n      x;\n    const minByte = maxByte < 0 ?\n      0 :\n      maxByte;\n    return minByte;\n  }\n}\n","const defaultWorker = \"worker.js\";\nconst defaultWorkerFromWorker = \"./worker.js\";\nexport class Thread {\n\tconstructor(workerJsPath = defaultWorker) {\n\t\tthis.worker = new Worker(workerJsPath);\n\t}\n\n\tpostMessage(key, dataMap) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// console.warn(\"trance key:\" + key + \"/\" + dataMap);\n\t\t\t// console.warn(dataMap);\n\t\t\tconst { transObject, tranceArray } = Thread.buildPostObj(key, dataMap);\n\t\t\t// console.warn(\"trance！ー！＝！＝！＝！:\" + tranceArray.length);\n\t\t\t// for (let trance of tranceArray) {\n\t\t\t// \tconsole.warn(\"trance:\" + trance.length + \"/\" + trance.byteLength);\n\t\t\t// }\n\t\t\t// console.warn(\"trance！ー！＝！＝！＝！:-----\");\n\n\t\t\ttry {\n\t\t\t\tthis.worker.postMessage(transObject, tranceArray);\n\t\t\t\tthis.worker.onmessage = (event) => {\n\t\t\t\t\tconst returendData = event.data;\n\t\t\t\t\t// console.warn(returendData);\n\t\t\t\t\tresolve(returendData);\n\t\t\t\t}\n\t\t\t\tthis.worker.onerror = (event) => {\n\t\t\t\t\tconsole.log(event);\n\t\t\t\t\tconst e = event;\n\t\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\t\tconsole.error(e.target);\n\t\t\t\t\tconsole.error(e.type);\n\t\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\t\tconsole.error(e.message);\n\t\t\t\t\tconsole.error(e.lineno);\n\t\t\t\t\tconsole.error(e.error);\n\t\t\t\t\treject(event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.stack);\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic buildPostObj(key, dataMap) {\n\t\tconst tranceArray = [];\n\t\tif (dataMap && typeof dataMap === \"object\") {\n\t\t\tdataMap.key = key;\n\t\t} else {\n\t\t\tdataMap = {\n\t\t\t\tkey: key\n\t\t\t};\n\t\t}\n\n\t\t// console.log(\"trance--buildPostObj A dataMap:\" + dataMap);\n\t\tThread.buildPostObjExec(dataMap, tranceArray);\n\t\t// console.log(\"trance--buildPostObj B tranceArray:\" + tranceArray.length);\n\t\treturn { transObject: dataMap, tranceArray };\n\t}\n\n\tstatic buildPostObjExec(dataMap, tranceArray) {\n\t\t// console.log(\"trance buildPostObjExec A1 dataMap:\" + dataMap);\n\t\tif (!dataMap) {\n\t\t\t// console.log(\"trance--buildPostObjExec dataMap:\" + dataMap);\n\t\t\t// nothig todo\n\t\t\treturn\n\t\t}\n\t\t// console.log(\"trance buildPostObjExec A2 dataMap:\" + dataMap);\n\t\tif (Array.isArray(dataMap)) {\n\t\t\t// console.log(\"trance buildPostObjExec array:\" + dataMap);\n\t\t\tlet count = 0;\n\t\t\tfor (let value of dataMap) {\n\t\t\t\tThread.buildPostObjExecParValue(count, value, tranceArray);\n\t\t\t\tcount++;\n\t\t\t}\n\t\t} else if (typeof dataMap === 'object' && Object.keys(dataMap)\n\t\t\t.length > 0) {\n\t\t\t// console.log(\"trance buildPostObjExec object:\" + dataMap);\n\t\t\tfor (let objKey in dataMap) {\n\t\t\t\tconst value = dataMap[objKey];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tThread.buildPostObjExecParValue(objKey, value, tranceArray);\n\t\t\t}\n\t\t} else {\n\t\t\t// console.log(\"trance buildPostObjExec other:\" + dataMap);\n\t\t\tThread.buildPostObjExecParValue(null, dataMap, tranceArray);\n\t\t}\n\t}\n\tstatic buildPostObjExecParValue(currentKey, value, tranceArray) {\n\t\t//「このデバッグ出力を消すと落ちる」\n\t\tconsole.log(\"trance buildPostObjExecParValue currentKey:\" + currentKey + \"/\" + tranceArray.length);\n\t\t// console.log(tranceArray);\n\t\tconst type = typeof value;\n\t\tlet isNotObject = false;\n\t\tif (!value) {\n\t\t\tisNotObject = true;\n\t\t} else if (value.buffer) {\n\t\t\ttranceArray.push(value.buffer);\n\t\t\tisNotObject = true;\n\t\t\t// console.log(\"trance buildPostObjExecParValue0 buffer:\" + value);\n\t\t} else if (value.byteLength) {\n\t\t\ttranceArray.push(value);\n\t\t\tisNotObject = true;\n\t\t\t// console.log(\"trance buildPostObjExecParValueA byteLength:\" + value);\n\t\t} else if (value instanceof ImageData) {\n\t\t\ttranceArray.push(value.data.buffer);\n\t\t\tisNotObject = true;\n\t\t\t// console.log(\"trance buildPostObjExecParValueB ImageData:\" + value);\n\t\t} else if (type === \"boolean\" || type === \"number\" || type === \"string\") {\n\t\t\tisNotObject = true;\n\t\t\t// console.log(\"trance buildPostObjExecParValueC primitive:\" + value);\n\t\t\t// } else {\n\t\t\t// \tconsole.log(\"trance buildPostObjExecParValueD other:\" + value);\n\t\t}\n\t\tif (!isNotObject && currentKey) {\n\t\t\t// console.log(\"trance buildPostObjExecParValueE add:\" + currentKey);\n\t\t\tThread.buildPostObjExec(value, tranceArray)\n\t\t}\n\n\t}\n\tclose() {\n\t\tthis.worker.terminate();\n\t}\n}","import { ImageCalcBase } from \"./imageCalcBase\";\nexport class ImageMerger extends ImageCalcBase {\n\tconstructor() {\n\t\tsuper(\"ImageMerger\");\n\t\tthis[\"margeReplace\"] = this.margeReplace;\n\t\tthis[\"margeLinninr\"] = this.margeLinninr;\n\t\tthis[\"margeMultiplication\"] = this.margeMultiplication;\n\t}\n\ttrimByte(byteX) {\n\t\tconst x = Math.floor(byteX);\n\t\tconst maxByte = x > 255 ?\n\t\t\t255 :\n\t\t\tx;\n\t\tconst minByte = maxByte < 0 ?\n\t\t\t0 :\n\t\t\tmaxByte;\n\t\treturn minByte;\n\t}\n\tasync margeReplace(imageDataBase, images, isBaseWhite, isOtherThread) {\n\t\tawait this.margeExc(imageDataBase, images, isBaseWhite, isOtherThread, \"margeReplace\", this.replace());\n\t\t// console.warn(\"margeReplace-imageDataBase\")\n\t\t// console.warn(imageDataBase)\n\t}\n\tasync margeLinninr(imageDataBase, images, isBaseWhite, isOtherThread) {\n\t\tawait this.margeExc(imageDataBase, images, isBaseWhite, isOtherThread, \"margeLinninr\", this.linier());\n\t}\n\tasync margeMultiplication(imageDataBase, images, isBaseWhite, isOtherThread) {\n\t\tawait this.margeExc(imageDataBase, images, isBaseWhite, isOtherThread, \"margeMultiplication\", this.multiplication());\n\t}\n\tasync margeExc(imageDataBase, images, isBaseWhite, isOtherThread, name, func) {\n\t\tlet isImageEmpty = true;\n\t\tif (!images && !isOtherThread) {\n\t\t\timages = imageDataBase.images\n\t\t\tisBaseWhite = imageDataBase.isBaseWhite\n\t\t\timageDataBase = imageDataBase.imageDataBase\n\t\t}\n\t\tconst threadImages = [];\n\t\tif (images) {\n\t\t\tfor (let image of images) {\n\t\t\t\tif (image && image.data && image.data.length > 0) {\n\t\t\t\t\tisImageEmpty = false;\n\t\t\t\t\tthreadImages.push(this.convertImageDataToObj(image));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (isImageEmpty) {\n\t\t\treturn;\n\t\t}\n\t\tif (isOtherThread) {\n\t\t\t// this.thread.\n\t\t\tthis.threadInit();\n\t\t\tconst dataMap = { imageDataBase, images: threadImages, isBaseWhite };\n\t\t\tconst result = await this.execute(name, dataMap)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.log(e)\n\t\t\t\t\tconsole.error(e.stack);\n\t\t\t\t});\n\t\t\t// console.warn(\"margeExc-imageDataBase\")\n\t\t\t// console.warn(dataMap)\n\t\t\t// console.warn(imageDataBase)\n\t\t\treturn result;\n\t\t}\n\t\tthis.beWhiteImage(imageDataBase, isBaseWhite);\n\t\tthis.mergeImages(imageDataBase, images, func);\n\t}\n\tbeWhiteImage(imageDataBase, isBaseWhite) {\n\t\tif (isBaseWhite) {\n\t\t\tconst length = imageDataBase.data.length;\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\timageDataBase.data[i] = 255;\n\t\t\t}\n\t\t}\n\t}\n\tmergeImages(imageDataBase, images, func) {\n\t\tconst {\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight\n\t\t} = imageDataBase;\n\t\tfor (let imageData of images) {\n\t\t\tconst addData = imageData.data;\n\t\t\tconst addWidth = imageData.width;\n\t\t\tconst addHeight = imageData.height;\n\t\t\t//console.log(width+\"*\"+height+\"*4=\"+data.length+\"/\"+width+\"*\"+height+\"*4=\"+data.length)\n\t\t\tconst plainOffsetY = imageData.offsetY;\n\t\t\tconst plainOffsetX = imageData.offsetX;\n\t\t\tconst offsetY = imageData.offsetY && imageData.offsetY > 0 && imageData.offsetY < height ?\n\t\t\t\timageData.offsetY :\n\t\t\t\t!imageData.offsetY || imageData.offsetY < height ? 0 : height;\n\t\t\tconst offsetX = imageData.offsetX && imageData.offsetX > 0 && imageData.offsetX < width ?\n\t\t\t\timageData.offsetX :\n\t\t\t\t!imageData.offsetX || imageData.offsetX < width ? 0 : width;\n\t\t\tconst addOffsetY = offsetY + addHeight;\n\t\t\tconst endY = addOffsetY > height ?\n\t\t\t\theight :\n\t\t\t\taddOffsetY;\n\t\t\tconst addOffsetX = offsetX + addWidth;\n\t\t\tconst endX = addOffsetX > width ?\n\t\t\t\twidth :\n\t\t\t\taddOffsetX;\n\t\t\tlet maxY = 0;\n\t\t\tlet maxX = 0;\n\t\t\tlet count = 0;\n\t\t\t// console.error(\"offsetY:\"+offsetY+\"/offsetX:\"+offsetX);\n\t\t\tfor (let iy = offsetY; iy < endY; iy++) {\n\t\t\t\tconst addPixcelIndexY = iy - plainOffsetY;\n\t\t\t\tmaxY = addPixcelIndexY;\n\t\t\t\tfor (let ix = offsetX; ix < endX; ix++) {\n\t\t\t\t\tconst addPixcelIndexX = ix - plainOffsetX;\n\t\t\t\t\tconst basePixcelIndex = iy * width + ix;\n\t\t\t\t\tconst addPixcelIndex = addPixcelIndexY * addWidth + addPixcelIndexX;\n\t\t\t\t\tcount++;\n\t\t\t\t\tfunc(data, basePixcelIndex, addData, addPixcelIndex);\n\t\t\t\t\tmaxX = addPixcelIndexX;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//console.log(\"count:\"+count+\"/maxX:\"+maxX+\"/maxY:\"+maxY+\"/w:\"+addWidth+\"/h:\"+addHeight+\"/offsetX:\"+offsetX+\"/offsetY:\"+offsetY+\"/endX:\"+endX+\"/endY:\"+endY+\"/width:\"+width+\"/height:\"+height)\n\t\t}\n\t}\n\n\treplace() {\n\t\treturn (base, basePixcelIndex, addOne, addPixcelIndex) => {\n\t\t\tconst index = basePixcelIndex * 4;\n\t\t\tconst indexAdd = addPixcelIndex * 4;\n\t\t\tbase[index] = addOne[indexAdd]\n\t\t\tbase[index + 1] = addOne[indexAdd + 1]\n\t\t\tbase[index + 2] = addOne[indexAdd + 2]\n\t\t\tbase[index + 3] = 255 //addOne[addPixcelIndex + 2]\n\t\t}\n\t}\n\tlinier() {\n\t\treturn (base, basePixcelIndex, addOne, addPixcelIndex) => {\n\t\t\tconst index = basePixcelIndex * 4;\n\t\t\tconst indexAdd = addPixcelIndex * 4;\n\t\t\tbase[index] = base[index] + addOaddOffsetXne[indexAdd]\n\t\t\tbase[index + 1] = base[index + 1] + addOne[indexAdd + 1]\n\t\t\tbase[index + 2] = base[index + 2] + addOne[indexAdd + 2]\n\t\t}\n\t}\n\tmultiplication() {\n\t\treturn (base, basePixcelIndex, addOne, addPixcelIndex) => {\n\t\t\tconst index = basePixcelIndex * 4;\n\t\t\tconst indexAdd = addPixcelIndex * 4;\n\t\t\tbase[index] = this.trimByte(base[index] * addOne[indexAdd] / 255);\n\t\t\tbase[index + 1] = this.trimByte(base[index + 1] * addOne[indexAdd + 1] / 255);\n\t\t\tbase[index + 2] = this.trimByte(base[index + 2] * addOne[indexAdd + 2] / 255);\n\t\t}\n\t}\n}","import { Thread } from \"../thread/thread\";\n// import { ImageWorker } from \"../../worker/imageWorker\";\nconst instances = {};\nconst wokerKey = \"ImageWorker\";\nexport class ImageCalcBase {\n\tconstructor(key) {\n\t\tthis.key = key;\n\t\tinstances[key] = this;\n\t\tthis.workerKey\n\t\t// this.thread = null;\n\t}\n\tthreadInit() {\n\t\t// if (!this.thread) {\n\t\t// \tthis.thread = new Thread();\n\t\t// }\n\t}\n\tasync execute(methodName, dataMap, isCallFromWorker) {\n\t\t// console.log(\"resizeExcWithThread. execute A ImageCalcBase methodName:\" + methodName + \"/dataMap:\" + dataMap);\n\t\tdataMap[\"methodName\"] = methodName;\n\t\tdataMap[\"className\"] = this.key;\n\t\tconst arrayImageData = {};\n\t\tfor (let key in dataMap) {\n\t\t\tconst data = dataMap[key];\n\t\t\tif (data instanceof ImageData) {\n\t\t\t\tarrayImageData[key] = data;\n\t\t\t}\n\t\t\tdataMap[key] = this.convertImageDataToObj(data);\n\t\t}\n\t\t// console.log(\"resizeExcWithThread. execute B ImageCalcBase methodName:\" + methodName + \"/dataMap:\" + dataMap);\n\t\tconst thread = new Thread();\n\t\tconst result = await thread.postMessage(wokerKey, dataMap)\n\t\t\t.catch((e) => { console.error(e) });\n\t\tif (result) {\n\t\t\tfor (let key in dataMap) {\n\t\t\t\t// console.log(\"execute key:\" + key);\n\t\t\t\tconst resultData = result[key];\n\t\t\t\t// console.log(resultData)\n\t\t\t\tif (!resultData || !resultData.data || resultData.data.byteLength === undefined) {\n\t\t\t\t\t// console.log(\"execute continue1 key:\" + key);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst data = dataMap[key];\n\t\t\t\t// console.log(data)\n\t\t\t\tif (!data || !data.data || data.data.byteLength === undefined) {\n\t\t\t\t\t// console.log(\"execute continue2 key:\" + key);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (resultData.data.byteLength > 0 && data.data.byteLength < 1) {\n\t\t\t\t\t// console.log(\"execute ok!! key:\" + key);\n\t\t\t\t\tdata.data = resultData.data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// console.warn(\"resizeExcWithThread. execute C execute-dataMap\")\n\t\t// console.warn(dataMap)\n\t\t// console.warn(result)\n\t\t// console.warn(\"resizeExcWithThread. execute D execute-dataMap\")\n\t\treturn result;\n\t}\n\tgetClassName() {\n\t\treturn this.key;\n\t}\n\tstatic loadInstance(className) {\n\t\treturn instances(className);\n\t}\n\tconvertImageDataToObj(target) {\n\t\tif (target && target.data && target.data.length > 0 && target instanceof ImageData) {\n\t\t\treturn { width: target.width, height: target.height, data: target.data, offsetX: target.offsetX, offsetY: target.offsetY };\n\t\t}\n\t\treturn target;\n\t}\n}","import { ByteUtil } from \"./byteUtil\";\nimport { ImageCalcBase } from \"./imageCalcBase\";\nimport bc from \"../binaryConverter\";\nconst threadCount = 4;\nexport class ImageResizer extends ImageCalcBase {\n\tconstructor() {\n\t\tsuper(\"ImageResizer\");\n\t\tthis[\"resizeAsLanczos\"] = this.resizeAsLanczos;\n\t\tthis[\"resizeAsByCubic\"] = this.resizeAsByCubic;\n\t}\n\tculcWeightByCubic(alpha) {\n\t\treturn (x) => {\n\t\t\tlet result = 0;\n\t\t\tif (x <= 1) {\n\t\t\t\tresult = ((alpha + 2.0) * x * x * x) - ((alpha + 3.0) * x * x) + 1;\n\t\t\t} else if (x <= 2) {\n\t\t\t\tresult = (alpha * x * x * x) - (5.0 * alpha * x * x) + (8.0 * alpha * x) - (4.0 * alpha);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\tsincLanczos(x) {\n\t\treturn Math.sin(x * Math.PI) / (x * Math.PI);\n\t}\n\n\tlanczosWeight(n = 3) {\n\t\treturn (d) => {\n\t\t\treturn d === 0 ?\n\t\t\t\t1 :\n\t\t\t\t(\n\t\t\t\t\tMath.abs(d) < n ?\n\t\t\t\t\tthis.sincLanczos(d) * this.sincLanczos(d / n) :\n\t\t\t\t\t0);\n\t\t}\n\t}\n\n\tasync resizeAsLanczos(iamegData, distImage, isOtherThread) {\n\t\t// console.log(\"resizeAsLanczos.resizeExcWithThread；iamegData:\" + iamegData);\n\t\treturn await this.resizeExc(iamegData, distImage, isOtherThread, \"resizeAsLanczos\")\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e)\n\t\t\t\tconsole.error(e.stack);\n\t\t\t});\n\t}\n\n\tasync resizeAsByCubic(iamegData, distImage, isOtherThread) {\n\t\t// console.log(\"resizeAsByCubic.resizeExcWithThread；iamegData:\" + iamegData);\n\t\tconst result = await this.resizeExc(iamegData, distImage, isOtherThread, \"resizeAsByCubic\")\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"resizeAsByCubic resizeExcWithThread；iamegData\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\t// console.log(\"resizeAsByCubic.resizeExcWithThread； result:\" + result);\n\t\treturn result;\n\t}\n\n\tasync resizeExc(iamegData, distImage, isOtherThread, name) {\n\t\tif (isOtherThread) {\n\t\t\tif (!distImage) {\n\t\t\t\tdistImage = iamegData.distImage\n\t\t\t\tiamegData = iamegData.iamegData\n\t\t\t}\n\t\t\tthis.threadInit();\n\t\t\t// console.log(\"resizeExc execute.iamegData:\" + iamegData);\n\t\t\tconst result = await this.execute(name, { iamegData, distImage })\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.log(e)\n\t\t\t\t\tconsole.error(e.stack);\n\t\t\t\t});\n\t\t\treturn result;\n\t\t} else {\n\t\t\t// console.log(\"resizeExc.iamegData:\" + iamegData);\n\t\t\tlet rowCount = null;\n\t\t\tlet offsetY = null;\n\t\t\tif (!distImage) {\n\t\t\t\tif (iamegData.rowCount) {\n\t\t\t\t\trowCount = iamegData.rowCount\n\t\t\t\t\toffsetY = iamegData.offsetY\n\t\t\t\t\tdistImage = iamegData.distImage\n\t\t\t\t\tiamegData = iamegData.iamegData\n\t\t\t\t\t// console.log(\"resizeExc resizeExcWithThread.offsetY:\" + offsetY + \"/rowCount:\" + rowCount);\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(\"resizeExc resizeExcWithThread S1.iamegData:\" + iamegData + \"/name:\" + name);\n\t\t\t\t\tconst result = await this.resizeExcWithThread(iamegData, distImage, name)\n\t\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t\tconsole.log(e)\n\t\t\t\t\t\t\tconsole.error(e.stack);\n\t\t\t\t\t\t});\n\t\t\t\t\t// console.log(\"resizeExc resizeExcWithThread S2.result:\" + result + \"/name:\" + name);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(distImage);\n\t\t\tif (name === \"resizeAsByCubic\") {\n\t\t\t\t// console.log(\"resizeExc resizeExcWithThread T1.iamegData:\" + iamegData + \"/name:\" + name);\n\t\t\t\treturn this.resizeAsByCubicExe(iamegData, distImage, offsetY, rowCount);\n\t\t\t}\n\t\t\tif (name === \"resizeAsLanczos\") {\n\t\t\t\t// console.log(\"resizeExc resizeExcWithThread U1.iamegData:\" + iamegData + \"/name:\" + name);\n\t\t\t\treturn this.resizeAsLanczosExe(iamegData, distImage, offsetY, rowCount);\n\t\t\t}\n\t\t}\n\t}\n\tresizeExcWithThread(iamegData, distImage, name) {\n\t\t// console.log(\"resizeExcWithThread A .iamegData:\" + iamegData);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// console.log(\"resizeExcWithThread. B iamegData:\" + iamegData);\n\t\t\tdistImage = iamegData.distImage\n\t\t\tiamegData = iamegData.iamegData\n\n\t\t\tthis.threadInit();\n\t\t\tconst distBitmap = distImage.data;\n\t\t\tconst newWidth = distImage.width;\n\t\t\tconst newHeight = distImage.height;\n\t\t\tconst currentBitmap = iamegData.data;\n\t\t\tconst currentWidth = iamegData.width;\n\t\t\tconst currentHeight = iamegData.height;\n\t\t\tconst promises = [];\n\t\t\tlet total = 0;\n\t\t\tconst parLength = Math.floor(newHeight / threadCount);;\n\t\t\t// console.log(\"resizeExcWithThread. C threadCount:\" + threadCount + \"/name:\" + name);\n\t\t\tfor (let i = 0; i < threadCount; i++) {\n\t\t\t\tconst limitHeight = (threadCount - 1 === i) ? newHeight - total : parLength;\n\t\t\t\t// todo Plus\n\t\t\t\tconst newData = new Uint8ClampedArray(newWidth * 4 * limitHeight);\n\t\t\t\tconst newDistData = { data: newData, width: newWidth, height: newHeight };\n\t\t\t\tconst currentImageLen = currentBitmap.length;\n\t\t\t\tconst newIData = new Uint8ClampedArray(currentImageLen);\n\t\t\t\t// console.log(\"resizeExcWithThread. D limitHeight:\" + limitHeight + \"/i:\" + i);\n\t\t\t\tfor (let j = 0; j < currentImageLen; j++) {\n\t\t\t\t\tnewIData[j] = currentBitmap[j];\n\t\t\t\t}\n\t\t\t\tconst newImageData = { data: newIData, width: currentWidth, height: currentHeight };\n\n\t\t\t\t// console.log(\"resizeExcWithThread. E limitHeight:\" + limitHeight + \"/i:\" + i);\n\t\t\t\tconst promise = this.execute(name, { iamegData: newImageData, distImage: newDistData, offsetY: total, rowCount: limitHeight });\n\t\t\t\ttotal += limitHeight;\n\t\t\t\tpromises.push(promise);\n\t\t\t}\n\t\t\tPromise.all(promises)\n\t\t\t\t.then((values) => {\n\t\t\t\t\t// console.log(\"resizeExcWithThread -----A--- values.length:\" + values.length);\n\t\t\t\t\t// console.log(values)\n\t\t\t\t\t// console.log(bc.arrayBuffer2base64(distBitmap.buffer));\n\t\t\t\t\tfor (let val of values) {\n\t\t\t\t\t\t// console.log(val)\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\toffsetY,\n\t\t\t\t\t\t\trowCount\n\t\t\t\t\t\t} = val.distImage;\n\t\t\t\t\t\tconst startIndex = offsetY * 4 * newWidth;\n\t\t\t\t\t\t// const endIndex = (offsetY + rowCount) * 4 * newWidth;\n\t\t\t\t\t\t// let index = 0;\n\t\t\t\t\t\tdistBitmap.set(data, startIndex);\n\t\t\t\t\t\t// for (let j = startIndex; j < endIndex; j++) {\n\t\t\t\t\t\t// \tdistBitmap[j] = data[index];\n\t\t\t\t\t\t// \tindex++;\n\t\t\t\t\t\t// }\n\t\t\t\t\t\t// console.log(bc.arrayBuffer2base64(data.buffer));\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(\"resizeExcWithThread -----B--- values.length:\" + values.length);\n\t\t\t\t\tresolve(distBitmap.buffer);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e.stack);\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\t\tconsole.error(e.target);\n\t\t\t\t\tconsole.error(e.type);\n\t\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\t\tconsole.error(e.message);\n\t\t\t\t\tconsole.error(e.lineno);\n\t\t\t\t\tconsole.error(e.error);\n\t\t\t\t\treject(e)\n\t\t\t\t});\n\n\t\t});\n\t}\n\tresizeAsLanczosExe(iamegData, distImage, offsetY, rowCount) {\n\t\tconst {\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight\n\t\t} = iamegData;\n\t\tconst distBitmap = distImage.data;\n\t\tconst newWidth = distImage.width;\n\t\tconst newHeight = distImage.height;\n\t\tdistImage.offsetY = offsetY;\n\t\tdistImage.rowCount = rowCount;\n\t\t// console.log(\"resizeAsByCubicExe offsetY:\" + offsetY + \"/newWidth:\" + newWidth + \"/rowCount:\" + rowCount + \"/newHeight:\" + newHeight);\n\t\tconst newData = new Uint8ClampedArray(this.resizeLanczos(data, width, height, newWidth, newHeight, distBitmap, offsetY, rowCount));\n\t\t// console.log(bc.arrayBuffer2base64(distBitmap.buffer));\n\t\treturn distImage\n\t}\n\tresizeAsByCubicExe(iamegData, distImage, offsetY, rowCount) {\n\t\tconst {\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight\n\t\t} = iamegData;\n\t\tconst distBitmap = distImage.data;\n\t\tconst newWidth = distImage.width;\n\t\tconst newHeight = distImage.height;\n\t\tdistImage.offsetY = offsetY;\n\t\tdistImage.rowCount = rowCount;\n\t\t// console.log(\"A offsetY:[\" + offsetY + \"]\" + \"--resizeAsByCubicExe A1 offsetY:\" + offsetY + \"/newWidth:\" + newWidth + \"/rowCount:\" + rowCount + \"/newHeight:\" + newHeight);\n\t\t// console.log(\"A1 offsetY:[\" + offsetY + \"]\" + bc.arrayBuffer2base64(data.buffer));\n\t\t// console.log(\"A2 offsetY:[\" + offsetY + \"]\" + bc.arrayBuffer2base64(distBitmap.buffer));\n\t\tconst newData = new Uint8ClampedArray(this.resizeByCubic(data, width, height, newWidth, newHeight, distBitmap, offsetY, rowCount));\n\t\t// console.log(\"B offsetY:[\" + offsetY + \"]\" + \"--resizeAsByCubicExe A2 offsetY:\" + offsetY + \"/newWidth:\" + newWidth + \"/rowCount:\" + rowCount + \"/newHeight:\" + newHeight);\n\t\t// console.log(\"B offsetY:[\" + offsetY + \"]\" + bc.arrayBuffer2base64(distBitmap.buffer));\n\t\treturn distImage\n\t}\n\t/////////////\n\tresize(iamegData, newWidth, newHeight, distImage) {\n\t\tconst {\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight\n\t\t} = iamegData;\n\t\tconst distBitmap = distImage.data;\n\t\tconst newData = new Uint8ClampedArray(this.resizeByCubic(data, width, height, newWidth, newHeight, distBitmap));\n\t\treturn distImage\n\t}\n\tresizeLanczos(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, distBitmap, offsetY, rowCount) {\n\t\treturn this.resizeExecute(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, this.lanczosWeight(3), 6, distBitmap, offsetY, rowCount);\n\t}\n\tresizeByCubic(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, distBitmap, offsetY, rowCount) {\n\t\treturn this.resizeExecute(originBitmap, sourceWidth, sourceHeight, newWidth, newHeight, this.culcWeightByCubic(-1.0), 4, distBitmap, offsetY, rowCount);\n\t}\n\t// TODO run with maltiThead\n\tresizeExecute(originBitmap, sourceWidth, sourceHeight, newWidthF, newHeightF, weightFunc, size, distBitmap, offsetY, rowCount) {\n\t\tconst newWidth = Math.floor(newWidthF);\n\t\tconst newHeight = Math.floor(newHeightF);\n\t\tconst sw = Math.floor(sourceWidth);\n\t\tconst sw4 = sw * 4;\n\t\tconst swLimit = sw - 1;\n\t\tconst sh = Math.floor(sourceHeight);\n\t\tconst sh4 = sh * 4;\n\t\tconst shLimit = sh - 1;\n\t\tconst wf = sw / newWidth;\n\t\tconst hf = sh / newHeight;\n\t\tconst src = originBitmap;\n\t\tconst dist = distBitmap ?\n\t\t\tdistBitmap :\n\t\t\tnew Uint8Array(newWidth * newHeight * 4);\n\t\tconst sizeHalf = size / 2;\n\t\tconst sizeHalfm1 = sizeHalf - 1;\n\t\tconst xMap = {};\n\t\tconst threadRowCount = rowCount ? rowCount : newHeight;\n\t\tconst threadOffsetY = offsetY ? offsetY : 0;\n\t\tconst threadEnd = threadOffsetY + threadRowCount;\n\t\tfor (let iy = threadOffsetY; iy < threadEnd; iy++) {\n\t\t\tconst wfy = hf * iy;\n\t\t\tconst y = Math.floor(wfy);\n\t\t\tconst startY = y - sizeHalfm1;\n\t\t\tconst endY = y + sizeHalf;\n\t\t\tconst y32bitOffsetDist = (iy - threadOffsetY) * 4 * newWidth;\n\t\t\tfor (let ix = 0; ix < newWidth; ix++) {\n\t\t\t\tconst wfx = wf * ix;\n\t\t\t\tconst x = Math.floor(wfx);\n\t\t\t\tlet r = 0;\n\t\t\t\tlet g = 0;\n\t\t\t\tlet b = 0;\n\t\t\t\tconst startX = x - sizeHalfm1;\n\t\t\t\tconst endX = x + sizeHalf;\n\t\t\t\tfor (let jy = startY; jy <= endY; jy++) {\n\t\t\t\t\tconst weightY = weightFunc(Math.abs(wfy - jy));\n\t\t\t\t\tconst sy = (jy < 0 || jy > shLimit) ?\n\t\t\t\t\t\ty :\n\t\t\t\t\t\tjy;\n\t\t\t\t\tconst y32bitOffset = sw4 * sy;\n\t\t\t\t\tfor (let jx = startX; jx <= endX; jx++) {\n\t\t\t\t\t\tconst w = weightFunc(Math.abs(wfx - jx)) * weightY;\n\t\t\t\t\t\tif (w === 0) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst sx = (jx < 0 || jx > swLimit) ?\n\t\t\t\t\t\t\tx :\n\t\t\t\t\t\t\tjx;\n\t\t\t\t\t\tconst offset32bit = y32bitOffset + sx * 4;\n\t\t\t\t\t\tr += src[offset32bit] * w;\n\t\t\t\t\t\tg += src[offset32bit + 1] * w;\n\t\t\t\t\t\tb += src[offset32bit + 2] * w;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// console.log(\"newHeight y32bitOffsetDist:\" + y32bitOffsetDist);\n\t\t\t\tconst offset32bitDist = y32bitOffsetDist + ix * 4;\n\t\t\t\tdist[offset32bitDist] = ByteUtil.trimByte(r);\n\t\t\t\tdist[offset32bitDist + 1] = ByteUtil.trimByte(g);\n\t\t\t\tdist[offset32bitDist + 2] = ByteUtil.trimByte(b);\n\t\t\t\tdist[offset32bitDist + 3] = 255;\n\t\t\t}\n\t\t}\n\t\t// console.log(\"newHeight:\" + dist.buffer);\n\t\t// console.log(dist.buffer);\n\t\treturn dist.buffer;\n\t}\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction vnode(sel, data, children, text, elm) {\n    var key = data === undefined ? undefined : data.key;\n    return { sel: sel, data: data, children: children,\n        text: text, elm: elm, key: key };\n}\nexports.vnode = vnode;\nexports.default = vnode;\n//# sourceMappingURL=vnode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction updateClass(oldVnode, vnode) {\n    var cur, name, elm = vnode.elm, oldClass = oldVnode.data.class, klass = vnode.data.class;\n    if (!oldClass && !klass)\n        return;\n    if (oldClass === klass)\n        return;\n    oldClass = oldClass || {};\n    klass = klass || {};\n    for (name in oldClass) {\n        if (!klass[name]) {\n            elm.classList.remove(name);\n        }\n    }\n    for (name in klass) {\n        cur = klass[name];\n        if (cur !== oldClass[name]) {\n            elm.classList[cur ? 'add' : 'remove'](name);\n        }\n    }\n}\nexports.classModule = { create: updateClass, update: updateClass };\nexports.default = exports.classModule;\n//# sourceMappingURL=class.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar raf = (typeof window !== 'undefined' && window.requestAnimationFrame) || setTimeout;\nvar nextFrame = function (fn) { raf(function () { raf(fn); }); };\nvar reflowForced = false;\nfunction setNextFrame(obj, prop, val) {\n    nextFrame(function () { obj[prop] = val; });\n}\nfunction updateStyle(oldVnode, vnode) {\n    var cur, name, elm = vnode.elm, oldStyle = oldVnode.data.style, style = vnode.data.style;\n    if (!oldStyle && !style)\n        return;\n    if (oldStyle === style)\n        return;\n    oldStyle = oldStyle || {};\n    style = style || {};\n    var oldHasDel = 'delayed' in oldStyle;\n    for (name in oldStyle) {\n        if (!style[name]) {\n            if (name[0] === '-' && name[1] === '-') {\n                elm.style.removeProperty(name);\n            }\n            else {\n                elm.style[name] = '';\n            }\n        }\n    }\n    for (name in style) {\n        cur = style[name];\n        if (name === 'delayed' && style.delayed) {\n            for (var name2 in style.delayed) {\n                cur = style.delayed[name2];\n                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {\n                    setNextFrame(elm.style, name2, cur);\n                }\n            }\n        }\n        else if (name !== 'remove' && cur !== oldStyle[name]) {\n            if (name[0] === '-' && name[1] === '-') {\n                elm.style.setProperty(name, cur);\n            }\n            else {\n                elm.style[name] = cur;\n            }\n        }\n    }\n}\nfunction applyDestroyStyle(vnode) {\n    var style, name, elm = vnode.elm, s = vnode.data.style;\n    if (!s || !(style = s.destroy))\n        return;\n    for (name in style) {\n        elm.style[name] = style[name];\n    }\n}\nfunction applyRemoveStyle(vnode, rm) {\n    var s = vnode.data.style;\n    if (!s || !s.remove) {\n        rm();\n        return;\n    }\n    if (!reflowForced) {\n        getComputedStyle(document.body).transform;\n        reflowForced = true;\n    }\n    var name, elm = vnode.elm, i = 0, compStyle, style = s.remove, amount = 0, applied = [];\n    for (name in style) {\n        applied.push(name);\n        elm.style[name] = style[name];\n    }\n    compStyle = getComputedStyle(elm);\n    var props = compStyle['transition-property'].split(', ');\n    for (; i < props.length; ++i) {\n        if (applied.indexOf(props[i]) !== -1)\n            amount++;\n    }\n    elm.addEventListener('transitionend', function (ev) {\n        if (ev.target === elm)\n            --amount;\n        if (amount === 0)\n            rm();\n    });\n}\nfunction forceReflow() {\n    reflowForced = false;\n}\nexports.styleModule = {\n    pre: forceReflow,\n    create: updateStyle,\n    update: updateStyle,\n    destroy: applyDestroyStyle,\n    remove: applyRemoveStyle\n};\nexports.default = exports.styleModule;\n//# sourceMappingURL=style.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction updateProps(oldVnode, vnode) {\n    var key, cur, old, elm = vnode.elm, oldProps = oldVnode.data.props, props = vnode.data.props;\n    if (!oldProps && !props)\n        return;\n    if (oldProps === props)\n        return;\n    oldProps = oldProps || {};\n    props = props || {};\n    for (key in oldProps) {\n        if (!props[key]) {\n            delete elm[key];\n        }\n    }\n    for (key in props) {\n        cur = props[key];\n        old = oldProps[key];\n        if (old !== cur && (key !== 'value' || elm[key] !== cur)) {\n            elm[key] = cur;\n        }\n    }\n}\nexports.propsModule = { create: updateProps, update: updateProps };\nexports.default = exports.propsModule;\n//# sourceMappingURL=props.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xmlNS = 'http://www.w3.org/XML/1998/namespace';\nvar colonChar = 58;\nvar xChar = 120;\nfunction updateAttrs(oldVnode, vnode) {\n    var key, elm = vnode.elm, oldAttrs = oldVnode.data.attrs, attrs = vnode.data.attrs;\n    if (!oldAttrs && !attrs)\n        return;\n    if (oldAttrs === attrs)\n        return;\n    oldAttrs = oldAttrs || {};\n    attrs = attrs || {};\n    // update modified attributes, add new attributes\n    for (key in attrs) {\n        var cur = attrs[key];\n        var old = oldAttrs[key];\n        if (old !== cur) {\n            if (cur === true) {\n                elm.setAttribute(key, \"\");\n            }\n            else if (cur === false) {\n                elm.removeAttribute(key);\n            }\n            else {\n                if (key.charCodeAt(0) !== xChar) {\n                    elm.setAttribute(key, cur);\n                }\n                else if (key.charCodeAt(3) === colonChar) {\n                    // Assume xml namespace\n                    elm.setAttributeNS(xmlNS, key, cur);\n                }\n                else if (key.charCodeAt(5) === colonChar) {\n                    // Assume xlink namespace\n                    elm.setAttributeNS(xlinkNS, key, cur);\n                }\n                else {\n                    elm.setAttribute(key, cur);\n                }\n            }\n        }\n    }\n    // remove removed attributes\n    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)\n    // the other option is to remove all attributes with value == undefined\n    for (key in oldAttrs) {\n        if (!(key in attrs)) {\n            elm.removeAttribute(key);\n        }\n    }\n}\nexports.attributesModule = { create: updateAttrs, update: updateAttrs };\nexports.default = exports.attributesModule;\n//# sourceMappingURL=attributes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CAPS_REGEX = /[A-Z]/g;\nfunction updateDataset(oldVnode, vnode) {\n    var elm = vnode.elm, oldDataset = oldVnode.data.dataset, dataset = vnode.data.dataset, key;\n    if (!oldDataset && !dataset)\n        return;\n    if (oldDataset === dataset)\n        return;\n    oldDataset = oldDataset || {};\n    dataset = dataset || {};\n    var d = elm.dataset;\n    for (key in oldDataset) {\n        if (!dataset[key]) {\n            if (d) {\n                if (key in d) {\n                    delete d[key];\n                }\n            }\n            else {\n                elm.removeAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase());\n            }\n        }\n    }\n    for (key in dataset) {\n        if (oldDataset[key] !== dataset[key]) {\n            if (d) {\n                d[key] = dataset[key];\n            }\n            else {\n                elm.setAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase(), dataset[key]);\n            }\n        }\n    }\n}\nexports.datasetModule = { create: updateDataset, update: updateDataset };\nexports.default = exports.datasetModule;\n//# sourceMappingURL=dataset.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction invokeHandler(handler, vnode, event) {\n    if (typeof handler === \"function\") {\n        // call function handler\n        handler.call(vnode, event, vnode);\n    }\n    else if (typeof handler === \"object\") {\n        // call handler with arguments\n        if (typeof handler[0] === \"function\") {\n            // special case for single argument for performance\n            if (handler.length === 2) {\n                handler[0].call(vnode, handler[1], event, vnode);\n            }\n            else {\n                var args = handler.slice(1);\n                args.push(event);\n                args.push(vnode);\n                handler[0].apply(vnode, args);\n            }\n        }\n        else {\n            // call multiple handlers\n            for (var i = 0; i < handler.length; i++) {\n                invokeHandler(handler[i]);\n            }\n        }\n    }\n}\nfunction handleEvent(event, vnode) {\n    var name = event.type, on = vnode.data.on;\n    // call event handler(s) if exists\n    if (on && on[name]) {\n        invokeHandler(on[name], vnode, event);\n    }\n}\nfunction createListener() {\n    return function handler(event) {\n        handleEvent(event, handler.vnode);\n    };\n}\nfunction updateEventListeners(oldVnode, vnode) {\n    var oldOn = oldVnode.data.on, oldListener = oldVnode.listener, oldElm = oldVnode.elm, on = vnode && vnode.data.on, elm = (vnode && vnode.elm), name;\n    // optimization for reused immutable handlers\n    if (oldOn === on) {\n        return;\n    }\n    // remove existing listeners which no longer used\n    if (oldOn && oldListener) {\n        // if element changed or deleted we remove all existing listeners unconditionally\n        if (!on) {\n            for (name in oldOn) {\n                // remove listener if element was changed or existing listeners removed\n                oldElm.removeEventListener(name, oldListener, false);\n            }\n        }\n        else {\n            for (name in oldOn) {\n                // remove listener if existing listener removed\n                if (!on[name]) {\n                    oldElm.removeEventListener(name, oldListener, false);\n                }\n            }\n        }\n    }\n    // add new listeners which has not already attached\n    if (on) {\n        // reuse existing listener or create new\n        var listener = vnode.listener = oldVnode.listener || createListener();\n        // update vnode for listener\n        listener.vnode = vnode;\n        // if element changed or added we add all needed listeners unconditionally\n        if (!oldOn) {\n            for (name in on) {\n                // add listener if element was changed or new listeners added\n                elm.addEventListener(name, listener, false);\n            }\n        }\n        else {\n            for (name in on) {\n                // add listener if new listener added\n                if (!oldOn[name]) {\n                    elm.addEventListener(name, listener, false);\n                }\n            }\n        }\n    }\n}\nexports.eventListenersModule = {\n    create: updateEventListeners,\n    update: updateEventListeners,\n    destroy: updateEventListeners\n};\nexports.default = exports.eventListenersModule;\n//# sourceMappingURL=eventlisteners.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vnode_1 = require(\"./vnode\");\nvar is = require(\"./is\");\nfunction addNS(data, children, sel) {\n    data.ns = 'http://www.w3.org/2000/svg';\n    if (sel !== 'foreignObject' && children !== undefined) {\n        for (var i = 0; i < children.length; ++i) {\n            var childData = children[i].data;\n            if (childData !== undefined) {\n                addNS(childData, children[i].children, children[i].sel);\n            }\n        }\n    }\n}\nfunction h(sel, b, c) {\n    var data = {}, children, text, i;\n    if (c !== undefined) {\n        data = b;\n        if (is.array(c)) {\n            children = c;\n        }\n        else if (is.primitive(c)) {\n            text = c;\n        }\n        else if (c && c.sel) {\n            children = [c];\n        }\n    }\n    else if (b !== undefined) {\n        if (is.array(b)) {\n            children = b;\n        }\n        else if (is.primitive(b)) {\n            text = b;\n        }\n        else if (b && b.sel) {\n            children = [b];\n        }\n        else {\n            data = b;\n        }\n    }\n    if (children !== undefined) {\n        for (i = 0; i < children.length; ++i) {\n            if (is.primitive(children[i]))\n                children[i] = vnode_1.vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&\n        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {\n        addNS(data, children, sel);\n    }\n    return vnode_1.vnode(sel, data, children, text, undefined);\n}\nexports.h = h;\n;\nexports.default = h;\n//# sourceMappingURL=h.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vnode_1 = require(\"./vnode\");\nvar htmldomapi_1 = require(\"./htmldomapi\");\nfunction toVNode(node, domApi) {\n    var api = domApi !== undefined ? domApi : htmldomapi_1.default;\n    var text;\n    if (api.isElement(node)) {\n        var id = node.id ? '#' + node.id : '';\n        var cn = node.getAttribute('class');\n        var c = cn ? '.' + cn.split(' ').join('.') : '';\n        var sel = api.tagName(node).toLowerCase() + id + c;\n        var attrs = {};\n        var children = [];\n        var name_1;\n        var i = void 0, n = void 0;\n        var elmAttrs = node.attributes;\n        var elmChildren = node.childNodes;\n        for (i = 0, n = elmAttrs.length; i < n; i++) {\n            name_1 = elmAttrs[i].nodeName;\n            if (name_1 !== 'id' && name_1 !== 'class') {\n                attrs[name_1] = elmAttrs[i].nodeValue;\n            }\n        }\n        for (i = 0, n = elmChildren.length; i < n; i++) {\n            children.push(toVNode(elmChildren[i], domApi));\n        }\n        return vnode_1.default(sel, { attrs: attrs }, children, undefined, node);\n    }\n    else if (api.isText(node)) {\n        text = api.getTextContent(node);\n        return vnode_1.default(undefined, undefined, undefined, text, node);\n    }\n    else if (api.isComment(node)) {\n        text = api.getTextContent(node);\n        return vnode_1.default('!', {}, [], text, node);\n    }\n    else {\n        return vnode_1.default('', {}, [], undefined, node);\n    }\n}\nexports.toVNode = toVNode;\nexports.default = toVNode;\n//# sourceMappingURL=tovnode.js.map","/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {'use strict';var n=void 0,y=!0,aa=this;function G(e,b){var a=e.split(\".\"),d=aa;!(a[0]in d)&&d.execScript&&d.execScript(\"var \"+a[0]);for(var c;a.length&&(c=a.shift());)!a.length&&b!==n?d[c]=b:d=d[c]?d[c]:d[c]={}};var H=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function ba(e,b){this.index=\"number\"===typeof b?b:0;this.f=0;this.buffer=e instanceof(H?Uint8Array:Array)?e:new (H?Uint8Array:Array)(32768);if(2*this.buffer.length<=this.index)throw Error(\"invalid index\");this.buffer.length<=this.index&&ca(this)}function ca(e){var b=e.buffer,a,d=b.length,c=new (H?Uint8Array:Array)(d<<1);if(H)c.set(b);else for(a=0;a<d;++a)c[a]=b[a];return e.buffer=c}\nba.prototype.b=function(e,b,a){var d=this.buffer,c=this.index,f=this.f,l=d[c],p;a&&1<b&&(e=8<b?(L[e&255]<<24|L[e>>>8&255]<<16|L[e>>>16&255]<<8|L[e>>>24&255])>>32-b:L[e]>>8-b);if(8>b+f)l=l<<b|e,f+=b;else for(p=0;p<b;++p)l=l<<1|e>>b-p-1&1,8===++f&&(f=0,d[c++]=L[l],l=0,c===d.length&&(d=ca(this)));d[c]=l;this.buffer=d;this.f=f;this.index=c};ba.prototype.finish=function(){var e=this.buffer,b=this.index,a;0<this.f&&(e[b]<<=8-this.f,e[b]=L[e[b]],b++);H?a=e.subarray(0,b):(e.length=b,a=e);return a};\nvar da=new (H?Uint8Array:Array)(256),ha;for(ha=0;256>ha;++ha){for(var U=ha,ja=U,ka=7,U=U>>>1;U;U>>>=1)ja<<=1,ja|=U&1,--ka;da[ha]=(ja<<ka&255)>>>0}var L=da;function la(e){var b=n,a,d=\"number\"===typeof b?b:b=0,c=e.length;a=-1;for(d=c&7;d--;++b)a=a>>>8^V[(a^e[b])&255];for(d=c>>3;d--;b+=8)a=a>>>8^V[(a^e[b])&255],a=a>>>8^V[(a^e[b+1])&255],a=a>>>8^V[(a^e[b+2])&255],a=a>>>8^V[(a^e[b+3])&255],a=a>>>8^V[(a^e[b+4])&255],a=a>>>8^V[(a^e[b+5])&255],a=a>>>8^V[(a^e[b+6])&255],a=a>>>8^V[(a^e[b+7])&255];return(a^4294967295)>>>0}\nvar ma=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,\n2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,\n2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,\n2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,\n3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,\n936918E3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],V=H?new Uint32Array(ma):ma;function na(e){this.buffer=new (H?Uint16Array:Array)(2*e);this.length=0}na.prototype.getParent=function(e){return 2*((e-2)/4|0)};na.prototype.push=function(e,b){var a,d,c=this.buffer,f;a=this.length;c[this.length++]=b;for(c[this.length++]=e;0<a;)if(d=this.getParent(a),c[a]>c[d])f=c[a],c[a]=c[d],c[d]=f,f=c[a+1],c[a+1]=c[d+1],c[d+1]=f,a=d;else break;return this.length};\nna.prototype.pop=function(){var e,b,a=this.buffer,d,c,f;b=a[0];e=a[1];this.length-=2;a[0]=a[this.length];a[1]=a[this.length+1];for(f=0;;){c=2*f+2;if(c>=this.length)break;c+2<this.length&&a[c+2]>a[c]&&(c+=2);if(a[c]>a[f])d=a[f],a[f]=a[c],a[c]=d,d=a[f+1],a[f+1]=a[c+1],a[c+1]=d;else break;f=c}return{index:e,value:b,length:this.length}};function pa(e,b){this.k=qa;this.l=0;this.input=H&&e instanceof Array?new Uint8Array(e):e;this.e=0;b&&(b.lazy&&(this.l=b.lazy),\"number\"===typeof b.compressionType&&(this.k=b.compressionType),b.outputBuffer&&(this.c=H&&b.outputBuffer instanceof Array?new Uint8Array(b.outputBuffer):b.outputBuffer),\"number\"===typeof b.outputIndex&&(this.e=b.outputIndex));this.c||(this.c=new (H?Uint8Array:Array)(32768))}var qa=2,sa=[],Y;\nfor(Y=0;288>Y;Y++)switch(y){case 143>=Y:sa.push([Y+48,8]);break;case 255>=Y:sa.push([Y-144+400,9]);break;case 279>=Y:sa.push([Y-256+0,7]);break;case 287>=Y:sa.push([Y-280+192,8]);break;default:throw\"invalid literal: \"+Y;}\npa.prototype.g=function(){var e,b,a,d,c=this.input;switch(this.k){case 0:a=0;for(d=c.length;a<d;){b=H?c.subarray(a,a+65535):c.slice(a,a+65535);a+=b.length;var f=b,l=a===d,p=n,k=n,q=n,w=n,u=n,m=this.c,h=this.e;if(H){for(m=new Uint8Array(this.c.buffer);m.length<=h+f.length+5;)m=new Uint8Array(m.length<<1);m.set(this.c)}p=l?1:0;m[h++]=p|0;k=f.length;q=~k+65536&65535;m[h++]=k&255;m[h++]=k>>>8&255;m[h++]=q&255;m[h++]=q>>>8&255;if(H)m.set(f,h),h+=f.length,m=m.subarray(0,h);else{w=0;for(u=f.length;w<u;++w)m[h++]=\nf[w];m.length=h}this.e=h;this.c=m}break;case 1:var s=new ba(H?new Uint8Array(this.c.buffer):this.c,this.e);s.b(1,1,y);s.b(1,2,y);var t=ta(this,c),r,Q,z;r=0;for(Q=t.length;r<Q;r++)if(z=t[r],ba.prototype.b.apply(s,sa[z]),256<z)s.b(t[++r],t[++r],y),s.b(t[++r],5),s.b(t[++r],t[++r],y);else if(256===z)break;this.c=s.finish();this.e=this.c.length;break;case qa:var A=new ba(H?new Uint8Array(this.c.buffer):this.c,this.e),F,I,N,B,C,g=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],J,ea,O,W,X,oa=Array(19),\nya,Z,ia,D,za;F=qa;A.b(1,1,y);A.b(F,2,y);I=ta(this,c);J=ua(this.p,15);ea=va(J);O=ua(this.o,7);W=va(O);for(N=286;257<N&&0===J[N-1];N--);for(B=30;1<B&&0===O[B-1];B--);var Aa=N,Ba=B,P=new (H?Uint32Array:Array)(Aa+Ba),v,R,x,fa,M=new (H?Uint32Array:Array)(316),K,E,S=new (H?Uint8Array:Array)(19);for(v=R=0;v<Aa;v++)P[R++]=J[v];for(v=0;v<Ba;v++)P[R++]=O[v];if(!H){v=0;for(fa=S.length;v<fa;++v)S[v]=0}v=K=0;for(fa=P.length;v<fa;v+=R){for(R=1;v+R<fa&&P[v+R]===P[v];++R);x=R;if(0===P[v])if(3>x)for(;0<x--;)M[K++]=\n0,S[0]++;else for(;0<x;)E=138>x?x:138,E>x-3&&E<x&&(E=x-3),10>=E?(M[K++]=17,M[K++]=E-3,S[17]++):(M[K++]=18,M[K++]=E-11,S[18]++),x-=E;else if(M[K++]=P[v],S[P[v]]++,x--,3>x)for(;0<x--;)M[K++]=P[v],S[P[v]]++;else for(;0<x;)E=6>x?x:6,E>x-3&&E<x&&(E=x-3),M[K++]=16,M[K++]=E-3,S[16]++,x-=E}e=H?M.subarray(0,K):M.slice(0,K);X=ua(S,7);for(D=0;19>D;D++)oa[D]=X[g[D]];for(C=19;4<C&&0===oa[C-1];C--);ya=va(X);A.b(N-257,5,y);A.b(B-1,5,y);A.b(C-4,4,y);for(D=0;D<C;D++)A.b(oa[D],3,y);D=0;for(za=e.length;D<za;D++)if(Z=\ne[D],A.b(ya[Z],X[Z],y),16<=Z){D++;switch(Z){case 16:ia=2;break;case 17:ia=3;break;case 18:ia=7;break;default:throw\"invalid code: \"+Z;}A.b(e[D],ia,y)}var Ca=[ea,J],Da=[W,O],T,Ea,ga,ra,Fa,Ga,Ha,Ia;Fa=Ca[0];Ga=Ca[1];Ha=Da[0];Ia=Da[1];T=0;for(Ea=I.length;T<Ea;++T)if(ga=I[T],A.b(Fa[ga],Ga[ga],y),256<ga)A.b(I[++T],I[++T],y),ra=I[++T],A.b(Ha[ra],Ia[ra],y),A.b(I[++T],I[++T],y);else if(256===ga)break;this.c=A.finish();this.e=this.c.length;break;default:throw\"invalid compression type\";}return this.c};\nfunction wa(e,b){this.length=e;this.n=b}\nvar xa=function(){function e(a){switch(y){case 3===a:return[257,a-3,0];case 4===a:return[258,a-4,0];case 5===a:return[259,a-5,0];case 6===a:return[260,a-6,0];case 7===a:return[261,a-7,0];case 8===a:return[262,a-8,0];case 9===a:return[263,a-9,0];case 10===a:return[264,a-10,0];case 12>=a:return[265,a-11,1];case 14>=a:return[266,a-13,1];case 16>=a:return[267,a-15,1];case 18>=a:return[268,a-17,1];case 22>=a:return[269,a-19,2];case 26>=a:return[270,a-23,2];case 30>=a:return[271,a-27,2];case 34>=a:return[272,\na-31,2];case 42>=a:return[273,a-35,3];case 50>=a:return[274,a-43,3];case 58>=a:return[275,a-51,3];case 66>=a:return[276,a-59,3];case 82>=a:return[277,a-67,4];case 98>=a:return[278,a-83,4];case 114>=a:return[279,a-99,4];case 130>=a:return[280,a-115,4];case 162>=a:return[281,a-131,5];case 194>=a:return[282,a-163,5];case 226>=a:return[283,a-195,5];case 257>=a:return[284,a-227,5];case 258===a:return[285,a-258,0];default:throw\"invalid length: \"+a;}}var b=[],a,d;for(a=3;258>=a;a++)d=e(a),b[a]=d[2]<<24|\nd[1]<<16|d[0];return b}(),Ja=H?new Uint32Array(xa):xa;\nfunction ta(e,b){function a(a,c){var b=a.n,d=[],e=0,f;f=Ja[a.length];d[e++]=f&65535;d[e++]=f>>16&255;d[e++]=f>>24;var g;switch(y){case 1===b:g=[0,b-1,0];break;case 2===b:g=[1,b-2,0];break;case 3===b:g=[2,b-3,0];break;case 4===b:g=[3,b-4,0];break;case 6>=b:g=[4,b-5,1];break;case 8>=b:g=[5,b-7,1];break;case 12>=b:g=[6,b-9,2];break;case 16>=b:g=[7,b-13,2];break;case 24>=b:g=[8,b-17,3];break;case 32>=b:g=[9,b-25,3];break;case 48>=b:g=[10,b-33,4];break;case 64>=b:g=[11,b-49,4];break;case 96>=b:g=[12,b-\n65,5];break;case 128>=b:g=[13,b-97,5];break;case 192>=b:g=[14,b-129,6];break;case 256>=b:g=[15,b-193,6];break;case 384>=b:g=[16,b-257,7];break;case 512>=b:g=[17,b-385,7];break;case 768>=b:g=[18,b-513,8];break;case 1024>=b:g=[19,b-769,8];break;case 1536>=b:g=[20,b-1025,9];break;case 2048>=b:g=[21,b-1537,9];break;case 3072>=b:g=[22,b-2049,10];break;case 4096>=b:g=[23,b-3073,10];break;case 6144>=b:g=[24,b-4097,11];break;case 8192>=b:g=[25,b-6145,11];break;case 12288>=b:g=[26,b-8193,12];break;case 16384>=\nb:g=[27,b-12289,12];break;case 24576>=b:g=[28,b-16385,13];break;case 32768>=b:g=[29,b-24577,13];break;default:throw\"invalid distance\";}f=g;d[e++]=f[0];d[e++]=f[1];d[e++]=f[2];var k,l;k=0;for(l=d.length;k<l;++k)m[h++]=d[k];t[d[0]]++;r[d[3]]++;s=a.length+c-1;u=null}var d,c,f,l,p,k={},q,w,u,m=H?new Uint16Array(2*b.length):[],h=0,s=0,t=new (H?Uint32Array:Array)(286),r=new (H?Uint32Array:Array)(30),Q=e.l,z;if(!H){for(f=0;285>=f;)t[f++]=0;for(f=0;29>=f;)r[f++]=0}t[256]=1;d=0;for(c=b.length;d<c;++d){f=p=\n0;for(l=3;f<l&&d+f!==c;++f)p=p<<8|b[d+f];k[p]===n&&(k[p]=[]);q=k[p];if(!(0<s--)){for(;0<q.length&&32768<d-q[0];)q.shift();if(d+3>=c){u&&a(u,-1);f=0;for(l=c-d;f<l;++f)z=b[d+f],m[h++]=z,++t[z];break}0<q.length?(w=Ka(b,d,q),u?u.length<w.length?(z=b[d-1],m[h++]=z,++t[z],a(w,0)):a(u,-1):w.length<Q?u=w:a(w,0)):u?a(u,-1):(z=b[d],m[h++]=z,++t[z])}q.push(d)}m[h++]=256;t[256]++;e.p=t;e.o=r;return H?m.subarray(0,h):m}\nfunction Ka(e,b,a){var d,c,f=0,l,p,k,q,w=e.length;p=0;q=a.length;a:for(;p<q;p++){d=a[q-p-1];l=3;if(3<f){for(k=f;3<k;k--)if(e[d+k-1]!==e[b+k-1])continue a;l=f}for(;258>l&&b+l<w&&e[d+l]===e[b+l];)++l;l>f&&(c=d,f=l);if(258===l)break}return new wa(f,b-c)}\nfunction ua(e,b){var a=e.length,d=new na(572),c=new (H?Uint8Array:Array)(a),f,l,p,k,q;if(!H)for(k=0;k<a;k++)c[k]=0;for(k=0;k<a;++k)0<e[k]&&d.push(k,e[k]);f=Array(d.length/2);l=new (H?Uint32Array:Array)(d.length/2);if(1===f.length)return c[d.pop().index]=1,c;k=0;for(q=d.length/2;k<q;++k)f[k]=d.pop(),l[k]=f[k].value;p=La(l,l.length,b);k=0;for(q=f.length;k<q;++k)c[f[k].index]=p[k];return c}\nfunction La(e,b,a){function d(a){var c=k[a][q[a]];c===b?(d(a+1),d(a+1)):--l[c];++q[a]}var c=new (H?Uint16Array:Array)(a),f=new (H?Uint8Array:Array)(a),l=new (H?Uint8Array:Array)(b),p=Array(a),k=Array(a),q=Array(a),w=(1<<a)-b,u=1<<a-1,m,h,s,t,r;c[a-1]=b;for(h=0;h<a;++h)w<u?f[h]=0:(f[h]=1,w-=u),w<<=1,c[a-2-h]=(c[a-1-h]/2|0)+b;c[0]=f[0];p[0]=Array(c[0]);k[0]=Array(c[0]);for(h=1;h<a;++h)c[h]>2*c[h-1]+f[h]&&(c[h]=2*c[h-1]+f[h]),p[h]=Array(c[h]),k[h]=Array(c[h]);for(m=0;m<b;++m)l[m]=a;for(s=0;s<c[a-1];++s)p[a-\n1][s]=e[s],k[a-1][s]=s;for(m=0;m<a;++m)q[m]=0;1===f[a-1]&&(--l[0],++q[a-1]);for(h=a-2;0<=h;--h){t=m=0;r=q[h+1];for(s=0;s<c[h];s++)t=p[h+1][r]+p[h+1][r+1],t>e[m]?(p[h][s]=t,k[h][s]=b,r+=2):(p[h][s]=e[m],k[h][s]=m,++m);q[h]=0;1===f[h]&&d(h)}return l}\nfunction va(e){var b=new (H?Uint16Array:Array)(e.length),a=[],d=[],c=0,f,l,p,k;f=0;for(l=e.length;f<l;f++)a[e[f]]=(a[e[f]]|0)+1;f=1;for(l=16;f<=l;f++)d[f]=c,c+=a[f]|0,c<<=1;f=0;for(l=e.length;f<l;f++){c=d[e[f]];d[e[f]]+=1;p=b[f]=0;for(k=e[f];p<k;p++)b[f]=b[f]<<1|c&1,c>>>=1}return b};function $(e){e=e||{};this.files=[];this.d=e.comment}var Ma=[80,75,1,2],Na=[80,75,3,4],Oa=[80,75,5,6];$.prototype.m=function(e,b){b=b||{};var a,d=e.length,c=0;H&&e instanceof Array&&(e=new Uint8Array(e));\"number\"!==typeof b.compressionMethod&&(b.compressionMethod=8);if(b.compress)switch(b.compressionMethod){case 0:break;case 8:c=la(e);e=(new pa(e,b.deflateOption)).g();a=y;break;default:throw Error(\"unknown compression method:\"+b.compressionMethod);}this.files.push({buffer:e,a:b,j:a,r:!1,size:d,h:c})};\n$.prototype.q=function(e){this.i=e};\n$.prototype.g=function(){var e=this.files,b,a,d,c,f,l=0,p=0,k,q,w,u,m,h,s,t,r,Q,z,A,F,I,N,B,C,g,J;B=0;for(C=e.length;B<C;++B){b=e[B];t=b.a.filename?b.a.filename.length:0;r=b.a.comment?b.a.comment.length:0;if(!b.j)switch(b.h=la(b.buffer),b.a.compressionMethod){case 0:break;case 8:b.buffer=(new pa(b.buffer,b.a.deflateOption)).g();b.j=y;break;default:throw Error(\"unknown compression method:\"+b.a.compressionMethod);}if(b.a.password!==n||this.i!==n){var ea=b.a.password||this.i,O=[305419896,591751049,878082192],\nW=n,X=n;H&&(O=new Uint32Array(O));W=0;for(X=ea.length;W<X;++W)Pa(O,ea[W]&255);N=O;F=b.buffer;H?(I=new Uint8Array(F.length+12),I.set(F,12),F=I):F.unshift(0,0,0,0,0,0,0,0,0,0,0,0);for(g=0;12>g;++g)F[g]=Qa(N,11===B?b.h&255:256*Math.random()|0);for(J=F.length;g<J;++g)F[g]=Qa(N,F[g]);b.buffer=F}l+=30+t+b.buffer.length;p+=46+t+r}a=new (H?Uint8Array:Array)(l+p+(22+(this.d?this.d.length:0)));d=0;c=l;f=c+p;B=0;for(C=e.length;B<C;++B){b=e[B];t=b.a.filename?b.a.filename.length:0;r=b.a.comment?b.a.comment.length:\n0;k=d;a[d++]=Na[0];a[d++]=Na[1];a[d++]=Na[2];a[d++]=Na[3];a[c++]=Ma[0];a[c++]=Ma[1];a[c++]=Ma[2];a[c++]=Ma[3];a[c++]=20;a[c++]=b.a.os||0;a[d++]=a[c++]=20;q=a[d++]=a[c++]=0;if(b.a.password||this.i)q|=1;a[d++]=a[c++]=q&255;a[d++]=a[c++]=q>>8&255;w=b.a.compressionMethod;a[d++]=a[c++]=w&255;a[d++]=a[c++]=w>>8&255;u=b.a.date||new Date;a[d++]=a[c++]=(u.getMinutes()&7)<<5|u.getSeconds()/2|0;a[d++]=a[c++]=u.getHours()<<3|u.getMinutes()>>3;a[d++]=a[c++]=(u.getMonth()+1&7)<<5|u.getDate();a[d++]=a[c++]=(u.getFullYear()-\n1980&127)<<1|u.getMonth()+1>>3;m=b.h;a[d++]=a[c++]=m&255;a[d++]=a[c++]=m>>8&255;a[d++]=a[c++]=m>>16&255;a[d++]=a[c++]=m>>24&255;h=b.buffer.length;a[d++]=a[c++]=h&255;a[d++]=a[c++]=h>>8&255;a[d++]=a[c++]=h>>16&255;a[d++]=a[c++]=h>>24&255;s=b.size;a[d++]=a[c++]=s&255;a[d++]=a[c++]=s>>8&255;a[d++]=a[c++]=s>>16&255;a[d++]=a[c++]=s>>24&255;a[d++]=a[c++]=t&255;a[d++]=a[c++]=t>>8&255;a[d++]=a[c++]=0;a[d++]=a[c++]=0;a[c++]=r&255;a[c++]=r>>8&255;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=0;a[c++]=\n0;a[c++]=0;a[c++]=k&255;a[c++]=k>>8&255;a[c++]=k>>16&255;a[c++]=k>>24&255;if(Q=b.a.filename)if(H)a.set(Q,d),a.set(Q,c),d+=t,c+=t;else for(g=0;g<t;++g)a[d++]=a[c++]=Q[g];if(z=b.a.extraField)if(H)a.set(z,d),a.set(z,c),d+=0,c+=0;else for(g=0;g<r;++g)a[d++]=a[c++]=z[g];if(A=b.a.comment)if(H)a.set(A,c),c+=r;else for(g=0;g<r;++g)a[c++]=A[g];if(H)a.set(b.buffer,d),d+=b.buffer.length;else{g=0;for(J=b.buffer.length;g<J;++g)a[d++]=b.buffer[g]}}a[f++]=Oa[0];a[f++]=Oa[1];a[f++]=Oa[2];a[f++]=Oa[3];a[f++]=0;a[f++]=\n0;a[f++]=0;a[f++]=0;a[f++]=C&255;a[f++]=C>>8&255;a[f++]=C&255;a[f++]=C>>8&255;a[f++]=p&255;a[f++]=p>>8&255;a[f++]=p>>16&255;a[f++]=p>>24&255;a[f++]=l&255;a[f++]=l>>8&255;a[f++]=l>>16&255;a[f++]=l>>24&255;r=this.d?this.d.length:0;a[f++]=r&255;a[f++]=r>>8&255;if(this.d)if(H)a.set(this.d,f);else{g=0;for(J=r;g<J;++g)a[f++]=this.d[g]}return a};function Qa(e,b){var a,d=e[2]&65535|2;a=d*(d^1)>>8&255;Pa(e,b);return a^b}\nfunction Pa(e,b){e[0]=(V[(e[0]^b)&255]^e[0]>>>8)>>>0;e[1]=(6681*(20173*(e[1]+(e[0]&255))>>>0)>>>0)+1>>>0;e[2]=(V[(e[2]^e[1]>>>24)&255]^e[2]>>>8)>>>0};function Ra(e,b){var a,d,c,f;if(Object.keys)a=Object.keys(b);else for(d in a=[],c=0,b)a[c++]=d;c=0;for(f=a.length;c<f;++c)d=a[c],G(e+\".\"+d,b[d])};G(\"Zlib.Zip\",$);G(\"Zlib.Zip.prototype.addFile\",$.prototype.m);G(\"Zlib.Zip.prototype.compress\",$.prototype.g);G(\"Zlib.Zip.prototype.setPassword\",$.prototype.q);Ra(\"Zlib.Zip.CompressionMethod\",{STORE:0,DEFLATE:8});Ra(\"Zlib.Zip.OperatingSystem\",{MSDOS:0,UNIX:3,MACINTOSH:7});}).call(this);\n","\nvar content = require(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\", function() {\n\t\tvar newContent = require(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body {\\n  min-height: 100%;\\n  max-height: 100%;\\n  height: 100%;\\n  width: 100%;\\n  padding: 0;\\n  margin: 0;\\n}\\ndiv {\\n  box-sizing: border-box;\\n}\\n\\ndiv.frame {\\n  display:flex;\\n  justify-content: center;\\n  min-height: 100%;\\n  max-height: 100%;\\n  width: 100%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin: 0;\\n  background-color: #c9d5de;\\n}\\ndiv.frame>div{\\n    max-width:940px;\\n}\\ndiv.frame>div.ModalWindow{\\n    max-width:100%;\\n}\\n\\ndiv.footer {\\n  position: fixed;\\n  bottom: 0;\\n  height: 3em;\\n  width: 100%;\\n  border: solid 0px red;\\n  padding: 0.5em;\\n  z-index: 500;\\n  color: white;\\n  background-color: #2c3440\\n}\\n\\ndiv.copyright {\\ncolor: #266abd;\\n  width: 100%;\\n  padding: 0.5em;\\n  text-align: center;\\n  letter-spacing: 10px;\\n  font-size: 0.8em;\\n}\\n\\ndiv.header {\\n  position: fixed;\\n  top: 0;\\n  height: 4.5em;\\n  width: 100%;\\n  border: solid 1px #052240;\\n  border-bottom-width: 3.2em;\\n  z-index: 500;\\n  background-color: #e8eeef;\\n}\\n\\ndiv.title {\\n  font-size: 2em;\\n  font-weight: bold;\\n  padding: 0.5em 0.9em ;\\n  line-height: 0.5em;\\n  color: #1664a2;\\n}\\n\\ndiv.title span.Version {\\n  font-size: 40%;\\n  font-weight: bold;\\n  padding: 0em;\\n  color: rgb(0, 232, 249);\\n}\\n\\ndiv.title:after {\\n  font-size: 0.4em;\\n  padding: 0.5em;\\n  font-weight: normal;\\n  content: \\\":The Images Converter For Book Made By Copy Machine!\\\";\\n  color: #2196f3\\n}\\n\\ndiv.FileUploadArea input {\\n  position: absolute;\\n  left: -100;\\n}\\n\\ndiv.FileUploadArea {\\n  display: block;\\n  min-height: 10em;\\n  height: 20em;\\n  width: 100%;\\n  border: dotted 1px black;\\n  background-color: #a8bae0;\\n  padding: 0.1em;\\n}\\n\\ndiv.FileUploadArea>div.FileUploadAreaA {\\n  display: block;\\n  min-height: 9.8em;\\n  ;\\n  height: 9.8em;\\n  width: 100%;\\n  border: dotted 3px rgb(100, 94, 153);\\n  background-color: #a8bae0;\\n  padding-top: 4em;\\n  padding-bottom: 4em;\\n  text-align: center;\\n  color: rgb(100, 94, 153);\\n  font-size: 2em;\\n}\\n\\ninput.FileUploadFile {\\n  position: absolute;\\n  top: -10em;\\n  left: 10em;\\n  visibility: hidden;\\n}\\n\\ndiv.FilesArea {\\n  min-height: 100%;\\n  width: 100%;\\n  border: dotted 1px black;\\n  background-color: rgb(52, 158, 226);\\n  padding-top: 0.2em;\\n  padding-bottom: 0.2em;\\n  text-align: center;\\n  font-size: 2em;\\n}\\n\\ndiv.FilesArea>div {\\n  min-width: 470px;\\n}\\n\\nspan.imageDataLine {\\n  display: inline-block;\\n  font-size: 50%;\\n  padding: 0.2em;\\n}\\n\\ndiv.delButton {\\n  display: inline-block;\\n  font-size: 50%;\\n  width: 3em;\\n  padding: 0.2em;\\n  line-height: 1em;\\n  text-align: center;\\n  cursor: pointer;\\n  background-color: #675275;\\n}\\n\\ndiv.delButton:active {\\n  color: red;\\n}\\n\\ndiv.delButton:hover {\\n  color: #d48a60;\\n  background-color: #7b4f99;\\n}\\n\\ncanvas.hidden {\\n  position: absolute;\\n  top: -10000px;\\n}\\n\\n[draggable] {\\n  user-select: none;\\n}\\n\\n.column {\\n  height: 150px;\\n  width: 150px;\\n  float: left;\\n  border: 2px solid #666666;\\n  background-color: #ccc;\\n  margin-right: 5px;\\n  border-radius: 10px;\\n  box-shadow: inset 0 0 3px #000;\\n  text-align: center;\\n  cursor: move;\\n}\\n\\n.column.over {\\n  border: 2px dashed #000;\\n}\\n\\n.column header {\\n  color: #fff;\\n  text-shadow: #000 0 1px;\\n  box-shadow: 5px;\\n  border-bottom: 1px solid #ddd;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n}\\n\\n.FilesArea>div {\\n  width: 100%;\\n  min-width: 630px;\\n  display: flex;\\n  flex-wrap: nowrap;\\n  flex-direction: row;\\n}\\n\\n.FilesArea>div>div {\\n  display: flex;\\n  min-width: 115px;\\n  overflow: hidden;\\n}\\n\\n.FilesArea>div>div.PageImages {\\n  min-width: 225px;\\n  width: 225px;\\n  max-width: 50%;\\n}\\n\\n.FilesArea>div>div.ImageDetail {\\n  width:100%;\\n  /* max-width: calc(100% - 320px); */\\n}\\n\\n.ImageDetail>div {\\n  width: 100%;\\n}\\n\\n.ImageDetail .ImageDetailA {\\n  width: 100%;\\n}\\n\\n.ImageDetail .ImageDetailTitle {\\n  position: relative;\\n  font-size: 12px;\\n  background-color: #44cec7;\\n  text-align: left;\\n  padding: 10px;\\n  width: 100%;\\n  z-index: 900;\\n  display:flex;;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n}\\n.ImageDetail .ImageDetailTitle>div {\\n  width:40px;\\n  padding:0.5em;\\n  border-radius: 5px;\\n  background-color: gray;\\n  color:white;\\n  margin: 0.2em;\\n  margin-left: 0.5em;\\n  text-align: center;\\n  cursor:pointer;\\n}\\n.ImageDetail .ImageDetailTitle>div.active {\\n  background-color: black;\\n  color:white;\\n  font-weight: bold;\\n}\\n.image_detail_block.WINDOW>div>img{\\n  max-width:100%;\\n}\\n.image_detail_block.DOUBLE>div>img{\\n  max-width:200%;\\n}\\n.image_detail_block.QUAD>div>img{\\n  max-width:400%;\\n}\\n.image_detail_block.HELF>div>img{\\n  max-width:50%;\\n}\\n.image_detail_block.FULL>div:first-child{\\n  position:fixed;\\n  z-index: 9999;\\n  min-width:100%;\\n  min-height:100%;\\n  top:0;\\n  left:0;\\n  background-color: rgba(17, 19, 21, 0.44);\\n}\\n.image_detail_block.FULL>div>img{\\n  position:fixed;\\n  z-index: 10000;\\n  top:5px;\\n  left:5px;\\n  width:calc(100% - 10px);\\n  cursor: pointer;\\n}\\n.Thumnails {\\n  flex-direction: column;\\n  padding-right: 0.2em;\\n  background-color: rgba(200, 200, 200, 0);\\n}\\n\\n.Thumnails .thumbnails_block {\\n  padding: 1px;\\n  background-color: rgba(220, 220, 220, 1);\\n  border: 0px dotted #cad2b1;\\n  height: 100%;\\n}\\n\\n.Thumnails .thumbnails_block.over {\\n  background-color: rgba(190, 190, 190, 0.8);\\n  border: 2px dotted #cad2b1;\\n}\\n\\n.thumbnail_block {\\n  display: flex;\\n  flex-direction: column;\\n  background-color: rgb(182, 175, 209);\\n  border: 1px solid #fdd;\\n  width: 110px;\\n  height: 110px;\\n  cursor: pointer;\\n  background-repeat: no-repeat;\\n  background-size: 110, 110, contain;\\n  background-position: center;\\n  margin-bottom: 1.8em;\\n}\\n\\n.thumnailsImageArea .thumbnail_block {}\\n\\n.thumbnail_block.over {\\n  background-color: #0bd5d8;\\n  width: 110px;\\n  border: 2px dotted #cad2b1;\\n}\\n\\n.thumbnail_block span.delButton {\\n  width: 30px;\\n  height:30px;\\n  margin-bottom: 77px;\\n}\\n\\n.thumbnail_block div {\\n  display: flex;\\n  height: auto;\\n  margin: auto;\\n}\\n\\n.thumbnail_block div.page_block {\\n  height: 110px;\\n}\\n\\n.thumbnail_block div.options_block {\\n  height: 5px;\\n  font-size: 0.2em;\\n  padding: 0.2em;\\n}\\n\\n.thumbnail_block div.options_block .checkForceColor.enable {\\n  background-color: rgb(236, 145, 145);\\n}\\n\\n.thumbnail_block div.options_block .checkForceColor.disable {\\n  background-color: rgb(241, 241, 241);\\n}\\n\\n.thumbnail_block div.options_block .checkNoCropping.enable {\\n  background-color: rgb(233, 220, 134);\\n}\\n\\n.thumbnail_block div.options_block .checkNoCropping.disable {\\n  background-color: rgb(241, 241, 241);\\n}\\n\\n.thumbnail_block div.options_block .checkForceColor.enable::after, .thumbnail_block div.options_block .checkNoCropping.enable::after {\\n  content: \\\"On\\\";\\n  color: black;\\n}\\n\\n.thumbnail_block div.options_block .checkForceColor.disable::after, .thumbnail_block div.options_block .checkNoCropping.disable::after {\\n  content: \\\"Off\\\";\\n  color: gray;\\n}\\n\\n.thumbnail_text {\\n  display: block;\\n  background-color: rgb(0, 103, 135);\\n  border: 0 solid #fdd;\\n  color: rgb(189, 193, 201);\\n  font-size: 0.3em;\\n  padding: 0.3em;\\n  min-height: 50px;\\n}\\n\\n.image_detail_block {\\n  position: relative;\\n  top: -10px;\\n  left: -30px;\\n}\\n\\n.ProgressBar, .Preview {\\n  top: 0;\\n  left: 0;\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(118, 118, 118, 0.80);\\n  z-index: 1001;\\n  display: none;\\n}\\n\\n.ProgressBar>div {\\n  position: fixed;\\n  top: 50%;\\n  left: 5%;\\n  margin: 0 auto;\\n  width: 90%;\\n  height: 7em;\\n  background-color: rgba(238, 118, 238, 1);\\n  z-index: 1000;\\n  padding: 10px\\n}\\n\\n.ProgressBar>div .progeressTitle {\\n  padding-bottom: 5px;\\n}\\n\\n.ProgressBar>div .progeressFrame {\\n  margin: 0 auto;\\n  width: 95%;\\n  height: 3em;\\n  background-color: rgb(193, 165, 200);\\n  z-index: 1000;\\n  padding: 0px\\n}\\n\\n.ProgressBar>div .progeressInfo {\\n  padding-top: 5px;\\n}\\n\\n.ProgressBar>div .progeressInfo>div {\\n  width: 70%;\\n  float: left;\\n}\\n\\n.ProgressBar>div .progeressInfo>div.progeressPoints {\\n  width: 5em;\\n}\\n\\n.progeress {\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  height: 3em;\\n  background-color: rgb(120, 231, 194);\\n}\\n\\n.Preview>div {\\n  position: fixed;\\n  top: 2%;\\n  left: 2%;\\n  margin: 0 auto;\\n  width: 96%;\\n  height: 96%;\\n  background-color: rgb(197, 206, 213);\\n  z-index: 1000;\\n  padding: 0px\\n}\\n\\n.Preview>div div.img {\\n  max-width: 100%;\\n  max-height: calc(100% - 72px);\\n}\\n.Preview>div div.img.right {\\n  text-align: left;\\n}\\n.Preview>div div.img.left {\\n  text-align: right;\\n}\\n.Preview>div div.img>img {\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n\\n.Preview>div .previewLeft, .Preview>div .previewRight {\\n  cursor: pointer;\\n  padding: 10px;\\n  background-color: rgba(95, 161, 212, 0.58);\\n}\\n.Preview>div .previewLeft>.Dummy, .Preview>div .previewRight>.close {\\n  display: inline-block;\\n  width:1em;\\n  height:1em;\\n}\\n\\n.Preview>div .previewInfo {\\n  font-size: 60%;\\n  padding: 10px 10px 0 10px;\\n  color: rgb(43, 176, 218)\\n}\\n\\n.Preview>div .preview_dual {\\n  display: flex;\\n}\\n\\n.Preview>div .preview_dual .previewImageFrame {\\n  width: 50%;\\n}\\n.Preview>div .previewImageFrame {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.previewInfo .options {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-top: 0.2em;\\n}\\n\\n.previewInfo .options>div {\\n  width: 10em;\\n  padding: 0.2em 0.2em 0.2em 0.2em;\\n  cursor: pointer;\\n  font-size: 0.7em;\\n  color: rgb(29, 154, 114);\\n}\\n\\n.previewInfo .options .checkForceColor.enable {\\n  background-color: rgb(236, 145, 145);\\n}\\n\\n.previewInfo .options .checkForceColor.disable {\\n  background-color: rgb(241, 241, 241);\\n}\\n\\n.previewInfo .options .checkNoCropping.enable {\\n  background-color: rgb(233, 220, 134);\\n}\\n\\n.previewInfo .options .checkNoCropping.disable {\\n  background-color: rgb(241, 241, 241);\\n}\\n\\n.previewInfo .options .checkForceColor.enable::after, .previewInfo .options .checkNoCropping.enable::after {\\n  content: \\\"On\\\";\\n  color: black;\\n}\\n\\n.previewInfo .options .checkForceColor.disable::after, .previewInfo .options .checkNoCropping.disable::after {\\n  content: \\\"Off\\\";\\n  color: gray;\\n}\\n\\n.Preview>div .preview_dual .previewImageFrame.dummy {\\n  background-color: rgb(174, 181, 184);\\n}\\n\\n.TitleSettings {\\n  background-color: rgb(159, 117, 242);\\n  padding: 0.5em;\\n  margin: 0.1em 0;\\n  margin-top: 1em;\\n}\\n\\n.TitleSettingsTitle {\\n  padding: 0.3em;\\n  margin-bottom: 0.3em;\\n  font-weight: bold;\\n  font-size: 110%;\\n  width: 100%;\\n  text-align: center;\\n  background-color: rgb(139, 87, 242);\\n}\\n\\n.TitleSettingsFrame {\\n  display: flex;\\n}\\n\\n.TitleSettingsFrame>div {\\n  width: 50%;\\n}\\n\\n.TitleSettingsRow>span, .TitleSettingsRow>input {\\n  display: inline-flex;\\n  width: 40%;\\n}\\n\\n.TitleSettingsUpdate {\\n  width: 70%;\\n  background-color: rgb(3, 21, 186);\\n  color: white;\\n  font-weight: bold;\\n  text-align: center;\\n  margin: 0.5em auto;\\n  padding: 0.5em;\\n  border-radius: 1em;\\n  cursor: pointer;\\n}\\n\\n.previewFrame {\\n  display: flex;\\n}\\n.previewFrame.right {\\n  justify-content: right;\\n}\\n.previewFrame.left {\\n  justify-content: left;\\n}\\n\\n.previewFrame>div.button {\\n  width: 2em;\\n}\\n\\n.previewFrame>div.button span.button {\\n  display: block;\\n  width: 20px;\\n  text-align: center;\\n}\\n\\n.previewFrame>div.button span.button.symbol {\\n  font-size: 150%;\\n}\\n\\n.previewFrame>div.button span.button.text {\\n  font-size: 50%;\\n}\\n.previewFrame>div.button span.button.dummy {\\n  font-size: 100%;\\n  height:25px;\\n}\\n\\n.previewFrame>div.button span.button.close {\\n  font-size: 85%;\\n  font-weight: bold;\\n  text-align: center;\\n  background-color: #2d3031;\\n  color: #babdce;\\n  height:35px;\\n  width:35px;\\n  border-radius: 22px;\\n  border: 5px solid #babdce;\\n  margin-top:-18px;\\n  margin-right:-18px;\\n  margin-bottom:3px;\\n  margin-left:18px;\\n}\\n.previewFrame>div.button span.button.close:hover {\\n  color: white;\\n  border: 5px solid white;\\n}\\n\\n\\n.previewCallButton {\\n  width: 110px;\\n  background-color: #0b47b5;\\n  font-size: 50%;\\n  padding: 10px;\\n  margin: 1px;\\n  cursor: pointer;\\n  border-radius: 5px;\\n}\\n\\n.previewCallButton:hover {\\n  background-color: #072763;\\n  color: #9a98de;\\n  font-weight: bold;\\n}\\n\\n.pageFrameHeader {\\n  font-size: 60%;\\n  background-color: rgb(4, 29, 56);\\n  color: white;\\n  padding: 5px;\\n}\\n\\n.pageFrameHeaderLeft {\\n  text-align: left;\\n}\\n\\n.pageFrameHeaderRight {\\n  text-align: right;\\n}\\n\\n.PageFrame {\\n  display: inline-block;\\n  display: flex;\\n  background-color: rgb(90, 123, 144);\\n  width: 220px;\\n  height: 150px;\\n  font-size: 1em;\\n  margin: 0.1em auto;\\n  padding: 0.1em 0em;\\n}\\n\\n.PageFrame .Page {\\n  width: 110px;\\n  border: 2px solid rgb(126, 100, 113);\\n  background-color: rgb(172, 148, 185);\\n  height: 140px;\\n  margin: 0.0em auto;\\n}\\n\\n.PageFrame .Dummy {\\n  background-color: rgb(108, 110, 115);\\n  color: rgb(108, 110, 115);\\n}\\n\\n.PageFrame .Page .thumbnail_block {\\n  height: 110px;\\n  width: 106px;\\n  margin: 0.0em auto;\\n  background-color: rgb(227, 209, 238);\\n}\\n\\n.thumbnail_block .image_block {\\n  height: 110px;\\n  width: 106px;\\n  margin: 0.0em auto;\\n  background-color: rgb(227, 209, 238);\\n  cursor: pointer;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n  background-position: center;\\n}\\n\\n.ExportArea .ExportArea {\\n  background-color: rgb(195, 240, 204);\\n  border: 1px solid rgb(87, 158, 17);\\n  padding: 1em;\\n  margin-bottom: 0.2em;\\n}\\n\\n.ExportOrdrList .ExportOrdersListTitle {\\n  background-color: rgb(162, 233, 176);\\n  padding: 10px;\\n  margin-bottom: 0.3em;\\n}\\n\\n.ExportOrdrList .ExportOrdrListFrame {\\n  background-color: rgb(222, 232, 219);\\n  padding: 15px;\\n  border: 1px solid rgb(87, 158, 17);\\n  margin-bottom: 0.5em;\\n}\\n\\n.ExportOrdrList .ExportOrdrs {\\n  margin-bottom: 0.5em;\\n}\\n\\n.ExportButtons {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n}\\n\\ndiv.button>div.exportedState {\\n  background-color: rgb(148, 222, 164);\\n  padding: 0.2em;\\n  font-size: 60%;\\n  max-width:100%;\\n  word-wrap: break-word;\\n}\\n\\n.ExportButtons>div {\\n  display: flex;\\n  width: 144px;\\n  padding: 15px;\\n  margin: 2px;\\n  border: 1px solid rgb(87, 158, 17);\\n  cursor: pointer;\\n  border-radius: 3px;\\n  background-color: rgb(141, 233, 159);\\n}\\n\\n.ExportButtons>div>div{\\n  max-width:100%;\\n}\\n\\ndiv.DownloadLastExportZipButtonFrame, div.DownloadLastExportPdfButtonFrame {\\n  padding: 0em;\\n}\\n\\ndiv.button.disable, div.button.enable {\\n  background-color: rgb(104, 131, 116);\\n  padding: 1em;\\n  margin: 0em;\\n  width: 100%;\\n}\\n\\ndiv.button.enable {\\n  background-color: rgb(148, 219, 86);\\n}\\n\\n.ExportArea .ExportAreaTitle {\\n  margin-bottom: 0.2em;\\n  text-align: center;\\n  padding: 0.3em;\\n  font-weight: bold;\\n  background-color: rgb(151, 238, 143);\\n}\\n\\n.ExportArea .ExportOrdrs>div {\\n  margin: 0.1em;\\n  padding: 0.4em;\\n  padding-left: 2em;\\n  border: 1px solid #aaa;\\n  cursor: pointer;\\n  background-color: rgb(232, 242, 229);\\n}\\n\\n.ExportArea .ExportOrdrs>div:active {\\n  border: 1px solid #666;\\n  background-color: rgb(242, 252, 239);\\n}\\n\\n.ExportArea .ExportOrdrs>div:hover {\\n  border: 1px solid #999;\\n  background-color: rgb(237, 247, 234);\\n}\\n\\n.ExportArea .ExportOrdrs>div.active {\\n  font-weight: bold;\\n  color: rgb(223, 238, 218);\\n  background-color: rgb(70, 187, 35);\\n}\\n\\n.ExportArea .ExportOrdrs>label {\\n  display: inline-block;\\n  line-height: 2em;\\n  margin: 0.1em;\\n  padding: 0.4em 0.6em;\\n  border: 0px solid #aaa;\\n  cursor: pointer;\\n  background-color: rgb(232, 242, 229);\\n}\\n\\n.ExportArea .ExportOrdrs>label:active {\\n  background-color: rgb(174, 223, 160);\\n}\\n\\n.ExportArea .ExportOrdrs>label:hover {\\n  background-color: rgb(237, 247, 234);\\n}\\n\\n.TitleMng {\\n  padding: 10px;\\n  background-color: rgb(255, 165, 162);\\n}\\n\\n.TitleMng .name {\\n  padding-top: 0.5em;\\n  padding-bottom: 0.5em;\\n  font-weight: bold;\\n  background-color: rgb(255, 113, 82);\\n}\\n\\n.TitleMng>.StorageMeter {\\n  margin: 0.5em;\\n  padding: 0.5em;\\n  background-color: rgb(255, 155, 124);\\n}\\n\\n.TitleListFrame, .StorageInitializerFrame, .TitleMng>.TitleNewone {\\n  margin: 0.5em;\\n  padding: 0.5em;\\n  background-color: rgb(255, 155, 124);\\n}\\n\\n.TitleMng .StorageMeterFrame, .StorageInitializerFrame {\\n  display: flex;\\n  padding: 0.1em;\\n  height: 2em;\\n}\\n\\n.TitleMng .StorageMeterFrame div.StorageMeter {\\n  line-height: 1.8em;\\n  height: 2em;\\n  margin-right: 0.5em;\\n}\\n\\n.TitleMng .StorageMeterFrame span.button, .TitleRowRow .button, .TitleNewone .button, .StorageInitializerFrame div.button {\\n  display: inline-block;\\n  margin-left: 1em;\\n  background-color: gray;\\n  cursor: pointer;\\n  padding: 0.5em 2em;\\n  border-radius: 3px;\\n}\\n\\n.TitleMng .StorageMeterFrame span.button {\\n  padding: 0.2em 2em;\\n}\\n\\n.TitleRowRow>div, .StorageInitializerFrame>div {\\n  padding: 0.2em;\\n}\\n\\n.TitleNewoneRow {\\n  margin-left: 1em;\\n}\\n\\n.TitleRowRow {\\n  display: flex;\\n}\\ndiv#menu{\\n  position: fixed;\\n  top: 4.6em;\\n  z-index: 500;\\n  width: 100%;\\n}\\n.MenuFrame {\\n  display: flex;\\n  width: 100%;\\n  max-width: 940px;\\n  align-items: stretch;\\n}\\n\\n.MenuFrame a {\\n  flex-grow:0;\\n  display: inline-block;\\n  width: 20%;\\n  cursor: pointer;\\n  text-decoration: none;\\n  min-height: 2.5em;\\n  padding: 5px 10px;\\n  margin: 2px 1px 0 1px;\\n  border: 0px solid rgb(83, 122, 134);\\n  border-radius: 5px;\\n  background-color: rgb(170, 185, 210);\\n  color: rgb(222, 240, 222);\\n}\\n\\na.dummy {\\n  display: inline-block;\\n  width: 50px;\\n  text-decoration: none;\\n}\\n\\n.MenuFrame>a.MenuButton.active:nth-child(1) {\\n  background-color: rgb(249, 111, 52);\\n}\\n\\n.MenuFrame>a.MenuButton.active:nth-child(2) {\\n  background-color: rgb(104, 65, 199);\\n}\\n\\n.MenuFrame>a.MenuButton.active:nth-child(3) {\\n  background-color: rgb(72, 159, 222);\\n}\\n\\n.MenuFrame>a.MenuButton.active:nth-child(4) {\\n  background-color: rgb(123, 193, 68);\\n}\\n\\n.MenuFrame>a.MenuButton.active:nth-child(5) {\\n  background-color: rgb(80, 50, 60);\\n}\\n\\n.MenuFrame>a.MenuButton.active {\\n  font-weight: bold;\\n  border-width: 0;\\n}\\n\\nnav, div.scroll-container {\\n  display: block;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\ndiv.main-container {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\ndiv.main-container {\\n  position: absolute;\\n  top: 0;\\n  padding-top: 8em;\\n  height: 100%;\\n  padding-bottom: 3em;\\n}\\n\\ndiv.scroll-container {\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  scroll-behavior: smooth;\\n}\\n\\ndiv.Splash {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%;\\n  background-color: rgb(241, 253, 255);\\n  z-index: 1200;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n}\\n\\ndiv.Splash>div.splashTitle {\\n  width:360px;\\n  height:300px;\\n  background-color: #e8eeef;\\n  border: solid 1px #052240;\\n  padding:1em;\\n  border-bottom:203px solid #052240;\\n}\\n\\ndiv.Splash div.appTitle {\\n  color: #1664a2;\\n  font-size: 500%;\\n  padding-top: 30px;\\n  letter-spacing: -0.05em;\\n  padding-left: 1%;\\n  font-weight: bold;\\n}\\n\\ndiv.Splash div.appVerion {\\n  font-size: 100%;\\n  padding-top: 0%;\\n  padding-left: 50%;\\n  color: rgb(0, 232, 249);\\n}\\n\\ndiv.Splash div.message {\\n  font-size: 200%;\\n  padding-top: 10%;\\n}\\n\\ndiv.Splash div.message>div {\\n  text-align: center;\\n}\\n\\ndiv.loader {\\n  text-align: center;\\n  font-family: 'Nunito', sans-serif;\\n  font-size: 1em;\\n  color: transparent;\\n  letter-spacing: 0.01em;\\n}\\n\\n.loader span {\\n  text-shadow:\\n    0 0 2px rgba(204, 208, 212, 0.9),\\n    0 15px 25px rgba(0, 0, 0, 0.3),\\n    0 -2px 3px rgba(0, 0, 0, 0.1),\\n    0 -5px 10px rgba(255, 255, 255, 0.5),\\n    0 5px 10px rgba(0, 0, 0, 0.3),\\n    0 3px 4px rgba(255, 255, 255, 0.2),\\n    0 0 20px rgba(255, 255, 255, 0.45);\\n  animation: loading 0.95s ease-in-out infinite alternate;\\n}\\n\\n@keyframes loading {\\n  to {\\n    text-shadow:\\n      0 0 2px rgba(204, 208, 212, 0.2),\\n      0 0 3px rgba(0, 0, 0, 0.02),\\n      0 0 0 rgba(0, 0, 0, 0),\\n      0 0 0 rgba(255, 255, 255, 0),\\n      0 0 0 rgba(0, 0, 0, 0),\\n      0 0 0 rgba(255, 255, 255, 0),\\n      0 0 0 rgba(255, 255, 255, 0);\\n  }\\n}\\n\\n.loader span:nth-child(2) {\\n  animation-delay: 0.15s;\\n}\\n\\n.loader span:nth-child(3) {\\n  animation-delay: 0.30s;\\n}\\n\\n.loader span:nth-child(4) {\\n  animation-delay: 0.45s;\\n}\\n\\n.loader span:nth-child(5) {\\n  animation-delay: 0.60s;\\n}\\n\\n.loader span:nth-child(6) {\\n  animation-delay: 0.75s;\\n}\\n\\n.loader span:nth-child(7) {\\n  animation-delay: 0.90s;\\n}\\n\\n\\n#Dialog{\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: fixed;\\n  top:0;\\n  left: 0;\\n  z-index: 1200;\\n  width: 100%;\\n  height: 100%;\\n  background-color:rgba(10, 10, 10, 0.5);\\n}\\n#Dialog>div{\\n  width: 320px;\\n  height: 300px;\\n\\n  background-color:#dce4e8;\\n}\\n#Dialog>div div.dialogTitle{\\n  height:3em;\\n  padding:0.5em;\\n}\\n#Dialog>div div.dialogInfo{\\n  height:13em;\\n  padding:0.5em;\\n}\\n#Dialog>div div.dialogDeside{\\n  height:3em;\\n  padding:0.2em;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: row;\\n}\\n#Dialog>div div.dialogDeside>div{\\n  cursor: pointer;\\n  padding: 0.2em;\\n  width:130px;\\n  background-color: #96e8d8;\\n  margin: 0 0.2em;\\n  border-radius: 3px;\\n}\\n.display_none {\\n  display: none;\\n}\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.array = Array.isArray;\nfunction primitive(s) {\n    return typeof s === 'string' || typeof s === 'number';\n}\nexports.primitive = primitive;\n//# sourceMappingURL=is.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createElement(tagName) {\n    return document.createElement(tagName);\n}\nfunction createElementNS(namespaceURI, qualifiedName) {\n    return document.createElementNS(namespaceURI, qualifiedName);\n}\nfunction createTextNode(text) {\n    return document.createTextNode(text);\n}\nfunction createComment(text) {\n    return document.createComment(text);\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n    parentNode.insertBefore(newNode, referenceNode);\n}\nfunction removeChild(node, child) {\n    node.removeChild(child);\n}\nfunction appendChild(node, child) {\n    node.appendChild(child);\n}\nfunction parentNode(node) {\n    return node.parentNode;\n}\nfunction nextSibling(node) {\n    return node.nextSibling;\n}\nfunction tagName(elm) {\n    return elm.tagName;\n}\nfunction setTextContent(node, text) {\n    node.textContent = text;\n}\nfunction getTextContent(node) {\n    return node.textContent;\n}\nfunction isElement(node) {\n    return node.nodeType === 1;\n}\nfunction isText(node) {\n    return node.nodeType === 3;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nexports.htmlDomApi = {\n    createElement: createElement,\n    createElementNS: createElementNS,\n    createTextNode: createTextNode,\n    createComment: createComment,\n    insertBefore: insertBefore,\n    removeChild: removeChild,\n    appendChild: appendChild,\n    parentNode: parentNode,\n    nextSibling: nextSibling,\n    tagName: tagName,\n    setTextContent: setTextContent,\n    getTextContent: getTextContent,\n    isElement: isElement,\n    isText: isText,\n    isComment: isComment,\n};\nexports.default = exports.htmlDomApi;\n//# sourceMappingURL=htmldomapi.js.map","export default class ViewUtil {\n\tconstructor() {}\n\n\tstatic getCurrentPointedElm(event) {\n\t\tconst touches = event.touches;\n\t\tconst ex = touches ? touches[0] ? touches[0].pageX : 0 : event.pageX;\n\t\tconst ey = touches ? touches[0] ? touches[0].pageY : 0 : event.pageY;\n\t\tconst wox = window.pageXOffset;\n\t\tconst woy = window.pageYOffset;\n\t\t// console.log(\"event.name+:\" + event.name + \"/ex:\" + ex + \"/ey:\" + ey + \"/wox:\" + wox + \"/woy:\" + woy);\n\t\tconst elm = document.elementFromPoint(ex - wox, ey - woy);\n\t\t// console.log(elm);\n\t\treturn elm;\n\t}\n\tstatic clearSideElmClass(elm, className) {\n\t\tif (!elm || !elm.style) {\n\t\t\treturn\n\t\t}\n\t\telm.style.opacity = '1';\n\t\tconst childNodes = elm.parentNode.childNodes;\n\t\tfor (let i = 0; i < childNodes.length; i++) {\n\t\t\tconst col = childNodes[i];\n\t\t\tcol.classList.remove(className);\n\t\t}\n\t}\n\tstatic create(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"div\", id, clasｓName, text);\n\t}\n\tstatic createInput(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"input\", id, clasｓName, text);\n\t}\n\tstatic createText(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"text\", id, clasｓName, text);\n\t}\n\tstatic createFile(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"input\", id, clasｓName, text, \"file\");\n\t}\n\tstatic createCanvas(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"canvas\", id, clasｓName, text);\n\t}\n\tstatic createImage(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"img\", id, clasｓName, text);\n\t}\n\tstatic createUl(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"ul\", id, clasｓName, text);\n\t}\n\tstatic createLabel(id, clasｓName, text, forId) {\n\t\tconst elm = ViewUtil.ce(\"label\", id, clasｓName, text);\n\t\telm.setAttribute(\"for\", forId);\n\t\treturn elm;\n\t}\n\tstatic createLi(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"li\", id, clasｓName, text);\n\t}\n\tstatic createSpan(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"span\", id, clasｓName, text);\n\t}\n\tstatic createStrong(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"strong\", id, clasｓName, text);\n\t}\n\tstatic createA(id, clasｓName, text) {\n\t\treturn ViewUtil.ce(\"a\", id, clasｓName, text);\n\t}\n\tstatic ce(tagName, id, clasｓName, text, type) {\n\t\tconst elm = document.createElement(tagName);\n\t\telm.className = clasｓName;\n\t\tif (id) {\n\t\t\telm.id = id;\n\t\t}\n\t\tif (tagName === \"input\" && text) {\n\t\t\telm.setAttribute(\"value\", text);\n\t\t\tif (type) {\n\t\t\t\telm.setAttribute(\"type\", type);\n\t\t\t}\n\t\t} else if (text) {\n\t\t\telm.textContent = text;\n\t\t}\n\t\treturn elm;\n\t}\n\tstatic on(elm, eventType, eventHandler) {\n\t\telm.addEventListener(eventType, eventHandler, false);\n\t}\n\tstatic off(elm, eventType, eventHandler) {\n\t\telm.removeEventListener(eventType, eventHandler, false);\n\t}\n\n\tstatic append(parent, child) {\n\t\tparent.appendChild(child);\n\t}\n\n\tstatic insertFirst(parent, child) {\n\t\tif (parent.hasChildNodes()) {\n\t\t\tparent.insertBefore(child, parent.childNodes[0]);\n\t\t} else {\n\t\t\tparent.appendChild(child);\n\t\t}\n\t}\n\tstatic getBodyElm() {\n\t\treturn document.getElementsByTagName(\"body\")[0];\n\t}\n\tstatic attachBody(elm) {\n\t\tdocument.getElementsByTagName(\"body\")[0].appendChild(elm);\n\t}\n\tstatic detacthBodyById(id) {\n\t\tconst child = documet.getElementById(id);\n\t\tdocument.getElementsByTagName(\"body\")[0].removeChild(child);\n\t}\n\tstatic removeChild(child) {\n\t\tchild.parentNode.removeChild(child);\n\t}\n\tstatic remove(id) {\n\t\tconst child = documet.getElementById(id);\n\t\tif (child.parentNode) {\n\t\t\tchild.parentNode.removeChild(child);\n\t\t}\n\t}\n\tstatic removeChildren(id) {\n\t\tconst elm = documet.getElementById(id);\n\t\twhile (elm.firstChild) {\n\t\t\telm.removeChild(elm.firstChild);\n\t\t}\n\t}\n\tstatic setStyles(elm, styleObj) {\n\t\tfor (let name in styleObj) {\n\t\t\telm.style[name] = styleObj[name];\n\t\t}\n\t}\n\tstatic text(elm, text) {\n\t\telm.textContent = text;\n\t}\n\tstatic emit(elm, eventType, isBubbling = true, isCancelable = true) {\n\t\tconst event = document.createEvent(\"HTMLEvents\");\n\t\tevent.initEvent(eventType, isBubbling, isCancelable);\n\t\treturn elm.dispatchEvent(event);\n\t}\n}","import snabbdomClass from 'snabbdom/modules/class'\nimport snabbdomStyle from 'snabbdom/modules/style'\nimport snabbdomProps from 'snabbdom/modules/props'\nimport snabbdomAttrs from 'snabbdom/modules/attributes'\nimport snabbdomDataset from 'snabbdom/modules/dataset'\nimport snabbdomEventlisteners from 'snabbdom/modules/eventlisteners'\nimport hz from 'snabbdom/h'\nimport toVNodez from 'snabbdom/tovnode'\nlet snabbdom = require('snabbdom');\nconsole.log(snabbdom);\nexport const h = hz;\nexport const toVNode = toVNodez;\nexport const patch = snabbdom.init([snabbdomClass, snabbdomStyle, snabbdomProps,snabbdomAttrs, snabbdomDataset,snabbdomEventlisteners])\n","const baseClasses = [];\nexport class ObjectUtil {\n  static addBaseCLassese(baseClassesList) {\n    if (baseClassesList) {\n      if (Array.isArray(baseClassesList)) {\n        for (let baseClass of baseClassesList) {\n          baseClasses.push(baseClass);\n        }\n      } else {\n        baseClasses.push(baseClassesList);\n      }\n    }\n  }\n  static deepClone(obj) {\n    const channel = new MessageChannel();\n    const inPort = channel.port1;\n    const outPort = channel.port2;\n\n    return new Promise(resolve => {\n      inPort.onmessage = data => {\n        resolve(data.data);\n      }\n      outPort.postMessage(obj);\n    });\n  }\n  static simpleDeepCloneSerialized(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n  static simpleDeepClone(obj, newObj, count = 0) {\n    const newCount = count + 1;\n    const output = newObj\n      ? newObj\n      : Array.isArray(obj)\n        ? []\n        : {};\n    if (newCount > 10) {\n      console.log(obj);\n      console.log(newCount);\n      return output;\n    }\n    for (let key in obj) {\n      const value = obj[key];\n      if (value && typeof value === \"object\" && !value.byteLength) {\n        let baseType = null;\n        for (let baseClass of baseClasses) {\n          if (value instanceof baseClass) {\n            baseType = new baseClass();\n            break;\n          }\n        }\n        output[key] = ObjectUtil.simpleDeepClone(value, baseType, newCount);\n      } else {\n        try {\n          output[key] = value;\n        } catch (e) {\n          console.error(e);\n          console.log(output);\n          throw e;\n        }\n      }\n    }\n    return output;\n  }\n  static singleDeepClone(obj) {\n    const retObj = {};\n    for (let key in obj) {\n      let value = obj[key];\n      retObj[key] = value;\n    }\n    return retObj;\n  }\n  static singleDeepCloneWithoutFuncs(obj) {\n    const retObj = {};\n    for (let key in obj) {\n      let value = obj[key];\n      if (typeof value === 'function') {\n        continue;\n      }\n      retObj[key] = value;\n    }\n    return retObj;\n  }\n  static deepVnodeClone(target) {\n    if (!target) {\n      return target;\n    }\n    const obj = {\n      sel: target.sel,\n      data: ObjectUtil.simpleDeepClone(target.data),\n      children: undefined,\n      text: target.text,\n      elm: target.elm,\n      key: target.key\n    };\n    for (let key in target.data) {\n      if (target.data[key]) {\n        obj.data[key] = target.data[key];\n      }\n    }\n    if (target.children && target.children.length > 0) {\n      obj.children = [];\n      for (let childTarget of target.children) {\n        obj.children.push(ObjectUtil.deepVnodeClone(childTarget));\n      }\n    }\n    return obj;\n  }\n\n  static async recalcSize(em, value, indexSize = 0, delimiterSize = 0, counter) {\n    let size = 0;\n    // console.warn(indexSize)\n    if (!value) {\n      return 1;\n    } else if (value.byteLength && value.byteLength > 0) {\n      const valuseSize = value.byteLength;\n      // console.log(\"====ABvaluseSize:\" + valuseSize);\n      size += (indexSize + valuseSize + 1 + delimiterSize)\n    } else if (typeof value === \"function\") {\n      continu;\n    } else if (typeof value === \"number\") {\n      size += (indexSize + 4 + 1 + delimiterSize)\n    } else if (typeof value === \"string\") {\n      const valuseSize = value.length*1;\n      size += (indexSize*1 + valuseSize + 1 + delimiterSize*1);\n      // console.log(\"====string:valuseSize:\" + valuseSize + \"/indexSize:\"+indexSize+ \"/delimiterSize:\"+delimiterSize+\"/size:\" + size+\"/value:\"+value+\"/\"+(typeof valuseSize) );\n    } else if (typeof value === \"object\" && Array.isArray(value)) {\n      let tempDerimiterSie = 0\n      size += 2 + delimiterSize;\n      for (let i in value) {\n        const arrayValue = value[i];\n        const itemSize = await ObjectUtil.recalcSize(em, arrayValue, 0,0,counter);\n        // console.log(\"====arrayValue:\" + arrayValue + \"/size:\" + size + \"/itemSize:\" + itemSize);\n        size += itemSize + tempDerimiterSie;\n        tempDerimiterSie = 1;\n      }\n      size += (indexSize + 1 + delimiterSize)\n    } else if (typeof value === \"object\") {\n      const itemSize = await ObjectUtil.calcSize(em, value, counter);\n      // console.log(\"====itemSize:\" + itemSize + \"/size:\" + size);\n      size += (indexSize + itemSize + 1 + delimiterSize)\n    }\n    // console.log(\"====value:\" + value + \"/size:\" + size);\n    return size * 1;\n\n  }\n  static async calcSize(em, target, counter = {\n    size: 0\n  }) {\n    if (!target) {\n      return 1;\n    }\n    let delimiterSize = 0;\n    for (let index in target) {\n      const value = target[index];\n      if (index === \"pk\" && value.indexOf(\"Binary-\") === 0) {\n        // console.log(\"====Binary:\" + index);\n        const indexSize = (index + \"\").length*1;\n        const binaryData = await em.get(value)\n        counter.size += await ObjectUtil.recalcSize(em, binaryData, indexSize, delimiterSize, counter);\n        continue;\n      }\n      const indexSize = (index + \"\").length*1;\n      counter.size += await ObjectUtil.recalcSize(em, value, indexSize, delimiterSize, counter)\n      delimiterSize = 1;\n      // console.log(\"====index:\" + index + \"/size:\" + counter.size);\n    }\n    // console.log(\"====counter.size:\" + counter.size);\n    return counter.size * 1;\n  }\n}\n","import { patch, h } from './base/preLoader'\nimport { ObjectUtil } from '../objectUtil'\nexport class ElementSelector {\n\tconstructor() {\n\t\tthis.selectorMap = new Map()\n\t}\n\tgetElementById(vnode, id) {\n\t\tlet result = this.getElements(vnode, \"#\" + id);\n\t\treturn result.length < 1 ?\n\t\t\tnull :\n\t\t\tresult[0];\n\t}\n\tgetElementsByClass(vnode, className) {\n\t\treturn this.getElements(vnode, \".\" + className);\n\t}\n\tpatch(vnode, selector, newNode) {\n\t\t// console.log('patch00 START of Patch newNode:' + newNode);\n\n\t\tif (!newNode && typeof selector === \"string\") {\n\t\t\tconsole.log('patch00a ★ERROR★ of Patch newNode:' + newNode + \"/selector:\" + selector);\n\t\t\treturn vnode;\n\t\t}\n\t\tif (!newNode) {\n\t\t\t// console.log('patch01a of Patch newNode:' + newNode);\n\t\t\tthis.isValidNode(vnode, \"vnode\");\n\t\t\tconst re = patch(vnode, selector);\n\t\t\treturn selector;\n\t\t}\n\t\tif (!selector) {\n\t\t\t// console.log('patch01b of Patch newNode:' + newNode);\n\t\t\tthis.isValidNode(vnode, \"vnode\");\n\t\t\tconst re = patch(vnode, newNode);\n\t\t\treturn newNode;\n\t\t}\n\t\tconst cloneNode = this.prePatch(vnode, selector, newNode);\n\t\tconst re = patch(vnode, cloneNode);\n\t\tconst nodes = this.getElements(cloneNode, selector, false, new Map(), null);\n\t\t// console.log('patch02 END of Patch ====' + \"/node:\" + newNode.elm + \"/parent:\" + (\n\t\t// newNode.elm\n\t\t// ? newNode.elm.parentNode\n\t\t// : null) + \"/count:\" + nodes.length + \"/\" + (\n\t\t// nodes.length > 0\n\t\t// ? nodes[0].elm.parentNode\n\t\t// : null));\n\t\tthis.isValidNode(cloneNode, \"cloneNode\");\n\t\treturn cloneNode;\n\t}\n\n\tisValidNode(vnode, name, parentNode, index) {\n\t\tif (!vnode) {\n\t\t\tconsole.log(\"★★null node!\" + name + \"/parentNode:\" + parentNode);\n\t\t\treturn;\n\t\t}\n\t\tif (vnode.elm && !vnode.elm.parentNode) {\n\t\t\t// console.log(vnode.elm);\n\t\t\tif (parentNode) {\n\t\t\t\tconst length = parentNode.childNodes.length;\n\t\t\t\tif (length > index) {\n\t\t\t\t\tvnode.elm = parentNode.childNodes[index];\n\t\t\t\t} else {\n\t\t\t\t\tparentNode.appendChild(vnode.elm);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(\"★★★invalid node!\" + name);\n\t\t} else if (!vnode.elm) {\n\t\t\tif (parentNode) {\n\t\t\t\tconst length = parentNode.childNodes.length;\n\t\t\t\tif (length > index) {\n\t\t\t\t\tvnode.elm = parentNode.childNodes[index];\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(\"★★★invalid parent index!\" + index + \"/length:\" + length + \"/vnode.sel:\" + vnode.sel);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (vnode.children) {\n\t\t\tfor (let indexA in vnode.children) {\n\t\t\t\tlet child = vnode.children[indexA];\n\t\t\t\tif (!child) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.isValidNode(child, name + \"_c_\", (\n\t\t\t\t\tvnode.elm ?\n\t\t\t\t\tvnode.elm.parentNode :\n\t\t\t\t\tnull), indexA)\n\t\t\t}\n\t\t}\n\t}\n\tlog(msg) {\n\t\tif (this.isShowLog) {\n\t\t\tconsole.log(msg);\n\t\t}\n\t}\n\t// Not cloneNode\n\tprePatch(vnode, selector, newNode) {\n\t\tconst cloneNode = ObjectUtil.deepVnodeClone(vnode);\n\t\tconst parentMap = new Map();\n\t\tthis.log('prepatch01aa:' + JSON.stringify(vnode));\n\t\tconst nodes = this.getElements(cloneNode, selector, false, parentMap, null);\n\t\tlet isShouldPatch = false;\n\t\tthis.log('prepatch01a　nodes：' + nodes);\n\t\tthis.log(nodes);\n\t\tthis.log(parentMap.size + \"/\" + cloneNode.children);\n\t\tfor (let node of nodes) {\n\t\t\tthis.log('prepatch01a');\n\t\t\tlet newOne = ObjectUtil.deepVnodeClone(newNode);\n\t\t\tthis.log('prepatch01b');\n\n\t\t\tfor (let [key, parentNode] of parentMap) {\n\t\t\t\tthis.log(key + \"/\" + node);\n\t\t\t\tif (key === node) {\n\t\t\t\t\tlet children = parentNode.children;\n\t\t\t\t\tfor (let index in children) {\n\t\t\t\t\t\tlet target = children[index];\n\t\t\t\t\t\tif (target === node) {\n\t\t\t\t\t\t\tchildren[index] = newOne;\n\t\t\t\t\t\t\t//newOne.text = newOne.text+\"/\"+Date.now();\n\t\t\t\t\t\t\tisShouldPatch = true;\n\t\t\t\t\t\t\tthis.log('★patch01c AS REPLACE! children.length:' + children.length + \"/index:\" + index + \"/target.sel:\" + target.sel + \"/newOne.sel:\" + newOne.sel + \"/text:\" + newOne.text);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.log('-patch01d ! children.length:' + children.length + \"/index:\" + index + \"/target.sel:\" + target.sel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.log('patch02 END of prePatch');\n\t\treturn isShouldPatch ?\n\t\t\tcloneNode :\n\t\t\tvnode;\n\t}\n\tgetElements(vnode, selector, isEnd = false, parentMap = new Map(), parentVnode) {\n\t\tlet result = [];\n\t\tif (!selector || typeof selector !== 'string') {\n\t\t\tthis.log('getElements selector:' + selector);\n\t\t\treturn result;\n\t\t}\n\t\tlet selectors = selector.split(/ |>/);\n\t\tlet nextSelector = selector;\n\t\tif (selectors.length >= 1) {\n\t\t\tlet firstOne = selectors.shift();\n\t\t\tthis.log(firstOne);\n\t\t\tif (!firstOne) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tif (this.isMatch(vnode.sel, firstOne)) {\n\t\t\t\tthis.log(\"selectors.length:\" + selectors.length);\n\t\t\t\tif (selectors.length < 1) {\n\t\t\t\t\tresult.push(vnode);\n\t\t\t\t\tthis.log(parentVnode);\n\t\t\t\t\tif (parentVnode) {\n\t\t\t\t\t\tparentMap.set(vnode, parentVnode);\n\t\t\t\t\t}\n\t\t\t\t\tthis.log(result);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tnextSelector = selector.substring(firstOne.length + 1, selector.length);\n\t\t\t\tthis.log(\"nextSelector:\" + nextSelector);\n\t\t\t} else if (isEnd) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tnextSelector = selector;\n\t\t\t}\n\n\t\t\tif (!vnode.children) {\n\t\t\t\tthis.log('getElements 01a');\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tlet delimiter = selector.substring(firstOne.length, firstOne.length + 1);\n\t\t\tlet isNextEnd = delimiter === '>';\n\n\t\t\tfor (let child of vnode.children) {\n\t\t\t\tresult = result.concat(this.getElements(child, nextSelector, isNextEnd, parentMap, vnode));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetSelectorMap(selector) {\n\t\tlet map = this.selectorMap.get(selector);\n\t\tif (map) {\n\t\t\treturn map;\n\t\t}\n\t\tmap = new Map();\n\t\tif (!selector) {\n\t\t\treturn map;\n\t\t}\n\t\tconst tokens = selector.split(/\\.|#/g);\n\t\tconst selectorId = selector.indexOf(\"#\") >= 0 ? selector.split(/#/g)[1].split(/\\./g)[0] : \"\";\n\t\tconst classes = [];\n\t\tlet id = \"\";\n\t\tlet tag = \"\";\n\t\tfor (let token of tokens) {\n\t\t\tif (selectorId === token) {\n\t\t\t\tid = token;\n\t\t\t} else if (selector.indexOf(\".\" + token) >= 0) {\n\t\t\t\tclasses.push(token);\n\t\t\t} else {\n\t\t\t\ttag = token;\n\t\t\t}\n\t\t}\n\t\tmap.set(\"id\", id);\n\t\tmap.set(\"class\", classes);\n\t\tmap.set(\"tag\", tag);\n\t\tthis.selectorMap.set(selector, map);\n\t\treturn map;\n\t}\n\tisMatch(sel, selector) {\n\t\tif (this.isShowLog) {\n\t\t\tconsole.log(\"isMatch sel:\" + sel + \"/selector:\" + selector);\n\t\t}\n\t\tconst mapA = this.getSelectorMap(sel);\n\t\tconst mapB = this.getSelectorMap(selector);\n\t\tconst tagName = mapB.get(\"tag\");\n\t\tconst id = mapB.get(\"id\");\n\t\tif (this.isShowLog) {\n\t\t\tconsole.log(\"isMatch tagName:\" + tagName + \"/id:\" + id);\n\t\t}\n\t\tif (tagName !== \"\" && mapA.get(\"tag\") !== tagName) {\n\t\t\tif (this.isShowLog) {\n\t\t\t\tconsole.log(\"false:01 sel:\" + sel + \"/selector:\" + selector);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tif (id !== \"\" && mapA.get(\"id\") !== id) {\n\t\t\tif (this.isShowLog) {\n\t\t\t\tconsole.log(\"false:02 sel:\" + mapA.get(\"id\") + \"/selector:\" + id);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tconst classesA = mapA.get(\"class\");\n\t\tconst classesB = mapB.get(\"class\");\n\t\tfor (let classB of classesB) {\n\t\t\tlet isMatched = false;\n\t\t\tfor (let classA of classesA) {\n\t\t\t\tif (classB === classA) {\n\t\t\t\t\tisMatched = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isMatched === false) {\n\t\t\t\tif (this.isShowLog) {\n\t\t\t\t\tconsole.log(\"false:03 sel:\" + sel + \"/selector:\" + selector);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (selector === \"\") {\n\t\t\tif (this.isShowLog) {\n\t\t\t\tconsole.log(\"false:04 sel:\" + sel + \"/selector:\" + selector);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tif (this.isShowLog) {\n\t\t\tconsole.log(\"isMatch!!!! sel:\" + sel + \"/selector:\" + selector);\n\t\t}\n\t\treturn true;\n\t}\n}","const baseActions = [\"Attach\"];\nexport class ActionCreator {\n  constructor() {}\n  static getBaseActions() {\n    return baseActions;\n  }\n  static createAction(key, data, storeKey = null) {\n    return {type: key, data: data, storeKey: storeKey};\n  }\n  static createBaseAction(type, targetView,data, storeKey = null){\n    const addData = data && typeof data === \"object\"\n      ? data\n      : {};\n    addData.targetView = targetView;\n    addData.selector = targetView?targetView.id:null;\n    addData.storeKey = storeKey;\n    return {type:type , data: addData};\n  }\n  static creatAttachAction(parentView, newView, data, storeKey = null) {\n    // console.log(\"creatAttachAction\");\n    // console.log(newView);\n    const addData = data && typeof data === \"object\"\n      ? data\n      : {};\n    //alert(newView);\n    addData.parentView = parentView;\n    addData.selector = newView.id;\n    addData.storeKey = storeKey;\n    return {type: \"Attach\", data: addData};\n  }\n  static createShowViewAction(key, oldVnode, selector, data, storeKey = null) {\n    return ActionCreator.createGoOtherViewAction(key, null, oldVnode, selector, data, storeKey);\n  }\n  static createGoOtherViewAction(key, view, oldVnode, selector, data, storeKey = null) {\n    let addData = data;\n    if (!view && !oldVnode) {\n      console.warn('createGoOtherViewAction is null!');\n      return {type: key, data: addData, storeKey: storeKey};\n    }\n    if (!data) {\n      addData = {};\n    }\n    addData.view = view;\n    addData.oldVnode = oldVnode;\n    addData.selector = selector;\n    return {type: key, data: addData, storeKey: storeKey};\n  }\n  static isEquals(a, b) {\n    if (a && b && a.type === b.type) {\n      return true;\n    }\n    return false;\n  }\n}\n","const avtiveViews = {};\nconst activeViewList = [];\nexport class ViewAttachQueue {\n  constructor() {\n    this.queue = [];\n  }\n  addActiveView(parentView, view, lastTree) {\n    const parentId = parentView.id;\n    const currentId = view.id;\n    // console.log(\"addActiveView currentId:\" + currentId);\n    const resultParent = this.findActivViews(avtiveViews, parentId);\n\n    // console.log(\"addActiveView resultParent:\" + resultParent);\n    if (resultParent && resultParent.primaryView) {\n      const currentTree = resultParent[currentId];\n      if (currentTree && currentTree.primaryView) {\n        currentTree.primaryView = view;\n        currentTree.parent = resultParent;\n      } else {\n        if (lastTree) {\n          lastTree.parent = resultParent;\n          resultParent[currentId] = lastTree;\n        } else {\n          resultParent[currentId] = {\n            primaryView: view,\n            parent: resultParent\n          };\n        }\n      }\n    } else {\n      avtiveViews[currentId] = lastTree\n        ? lastTree\n        : {\n          primaryView: view,\n          parent: avtiveViews\n        };\n    }\n    this.loadAllActiveViews();\n  }\n  changeActiveView(currentView, nextView, nextViewTree) {\n    const currentId = currentView.id;\n    // console.log(\"changeActiveView currentId:\" + currentId);\n    const resultCurrent = this.findActivViews(avtiveViews, currentId);\n    if (!resultCurrent) {\n      return;\n    }\n    const parent = resultCurrent.parent;\n    delete parent[currentId];\n    const nextId = nextView.id;\n    if (nextViewTree && nextViewTree.primaryView) {\n      parent[nextId] = nextViewTree;\n      nextViewTree.primaryView = nextView;\n      nextViewTree.parent = parent;\n    } else {\n      parent[nextId] = {\n        primaryView: nextView,\n        parent: parent\n      };\n    }\n    this.loadAllActiveViews();\n    return resultCurrent;\n  }\n  removeActiveView(view) {\n    const currentId = view.id;\n    // console.log(\"removeActiveView currentId:\" + currentId);\n    const resultCurrent = this.findActivViews(avtiveViews, currentId);\n    if (!resultCurrent) {\n      return;\n    }\n    const parent = resultCurrent.parent;\n    delete parent[currentId];\n\n    this.loadAllActiveViews();\n    return resultCurrent;\n  }\n\n  findActivViews(activeViewsTree, id, callback, count) {\n    let retView = null;\n    const next = count\n      ? count + 1\n      : 1;\n    if (next > 5) {\n      return null;\n    }\n    if (activeViewsTree) {\n      for (let viewId in activeViewsTree) {\n        if (viewId === undefined || viewId === 'undefined' || viewId === 'parent' || viewId === 'primaryView') {\n          continue;\n        }\n        const current = activeViewsTree[viewId];\n        if (!current.primaryView || !current.parent) {\n          continue;\n        }\n        if (callback) {\n          callback(current);\n        }\n        if (viewId === id) {\n          retView = current;\n        } else if (current && viewId !== 'view' && viewId !== '0') {\n          retView = this.findActivViews(current, id, callback, next);\n        }\n      }\n    }\n    return retView;\n  }\n  loadAllActiveViews() {\n    const resultList = [];\n    this.findActivViews(avtiveViews, 'all', (current) => {\n      resultList.push(current)\n    });\n    const currentLength = activeViewList.length;\n    for (let i = 0; i < currentLength; i++) {\n      activeViewList.pop();\n    }\n    for (let result of resultList) {\n      if (!result.primaryView || !result.parent) {\n        continue;\n      }\n      activeViewList.push(result.primaryView);\n    }\n    return activeViewList;\n  }\n  getActiveViewList() {\n    return activeViewList;\n  }\n}\n","import {ObjectUtil} from '../objectUtil';\n\nconst mainHolder = new Map();\nconst subHolder = new Map();\nconst mainKey = 'aaa';\nconst tempStore = null;\nexport class Store {\n  constructor(service) {}\n  static cloneStore(store,action){\n    subHolder.set(action,store)\n    return ObjectUtil.simpleDeepClone(store);\n  }\n  static getTemp(newKey = mainKey, action){\n    const store = subHolder.has(action)\n      ? subHolder.get(action)\n      : null;\n    return store;\n  }\n  static getStore(newKey = mainKey, actionClass) {\n    const store = mainHolder.has(newKey)\n      ? mainHolder.get(newKey)\n      : null;\n    // copy\n    const clonedStore = store\n      ? ObjectUtil.simpleDeepClone(store)\n      : {};\n    clonedStore['oldVnode'] = store\n      ? store['oldVnode']\n      : null;\n    return clonedStore;\n  }\n  static setStore(store, newKey = mainKey, actionClass) {\n    const clonedStore = store\n      ? ObjectUtil.simpleDeepClone(store)\n      : {};\n    const storeAtCurrent = mainHolder.has(newKey)\n      ? mainHolder.get(newKey)\n      : null;\n    for (let index in storeAtCurrent) {\n      const inputValue = clonedStore[index];\n      const currentValue = storeAtCurrent[index];\n      if (inputValue || (inputValue !== null && inputValue !== undefined)) {\n        storeAtCurrent[index] = inputValue;\n      }\n    }\n    for (let index in storeAtCurrent) {\n      const inputValue = clonedStore[index];\n      const currentValue = storeAtCurrent[index];\n      if (!inputValue && inputValue !== null && currentValue) {\n        clonedStore[index] = currentValue;\n      }\n    }\n    clonedStore['oldVnode'] = store\n      ? store['oldVnode']\n      : null;\n    mainHolder.set(newKey, clonedStore);\n  }\n}\n","import {Store} from './store';\nimport {ViewAttachQueue} from './viewAttachQueue';\nimport {ActionDispatcher} from './actionDispatcher'\nconst viewAttachQueue = new ViewAttachQueue();\nconst actionMap = new Map();\nexport class ActionDispatcherImple {\n  constructor(view) {\n    this.view = view;\n    this.updateMap = new Map();\n    this.updateQueue = [];\n  }\n  static add(action, reducer) {\n    // console.log('ActionDispatcherImple add00:' + action);\n    if (!action) {\n      return false;\n    }\n    // console.log('ActionDispatcherImple add01:' + action.type);\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      if (!reducers.includes(reducer)) {\n        reducers.push(reducer);\n      } else {\n        return false;\n      }\n    } else {\n      actionMap.set(type, [reducer]);\n    }\n    return true;\n  }\n  static remove(action) {\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      if (!reducers.includes(reducer)) {\n        const index = reducers.indexof(reducer);\n        reducers.splice(index, 1)\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n  dispatch(action) {\n    // console.error(\"dispatch:action.type:\"+action.type);\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        this.dispatchExecute(action).then((data) => {\n          resolve(data)\n        }, (e) => {\n          reject(e)\n        })\n      })\n    })\n  }\n  async dispatchExecute(action) {\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    // console.error(\"dispatchExecute:action.type:\"+action.type);\n    const data = action.data;\n    const storeKey = action.storeKey;\n    const actionClass = action.constructor;\n    let store = Store.getStore(storeKey, actionClass);\n    let targetView = this.view;\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      for (let reducer of reducers) {\n        const initializeStoreKeys = reducer.getInitializeKeys();\n        for (let initializeStoreKey of initializeStoreKeys) {\n          store[initializeStoreKey] = null;\n        }\n        break;\n      }\n      for (let reducer of reducers) {\n        //console.log(\"A01 dispatch type:\"+type+\"/reducer.reduce:\"+reducer.reduce)\n        await reducer.preReduce(store, action).catch((e) => {\n          console.error(e)\n        });\n        await reducer.reduce(store, action).catch((e) => {\n          console.error(e)\n        });\n        await reducer.postReduce(store, action).catch((e) => {\n          console.error(e)\n        });\n      }\n      //console.log(\"A01 dispatch type:\"+type+\"/\"+reducers[0])\n      //console.log(reducers[0])\n    }\n    const storeAsClones = Store.cloneStore(store, action);\n    // let storeB = Store.getStore(storeKey,actionClass);\n    //console.log(\"A01 dispatch \")\n    //console.log(storeB)\n    // console.log('dispatch02');\n    let result = null;\n    if (store.isOrverride && action.data.view) {\n      targetView = action.data.views;\n      if (this.view.onViewHide(targetView, data) === false) {\n        return;\n      }\n      result = await this.callUpdate(targetView, data, storeKey, action).catch((e) => {\n        console.error(e)\n      });\n      await this.view.onViewHidden(targetView, data);\n    } else {\n      result = await this.callUpdate(targetView, data, storeKey, action).catch((e) => {\n        console.error(e)\n      });\n    }\n    //store = Store.getStore(storeKey);\n    Store.setStore(storeAsClones, storeKey, actionClass);\n    // console.error(storeAsClones);\n    // console.error(action.type);\n    // console.error(result);\n\n    return true;\n  }\n  callUpdate(targetView, actionData, storeKey, action) {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      const activViews = viewAttachQueue.getActiveViewList();\n      for (let activeView of activViews) {\n        const store = Store.getTemp(storeKey, action);\n        if (targetView === activeView) {\n          //console.log('A0 callUpdate update id:' + activeView.id);\n          // console.log(\"activeView.updateReactiveTheTargetView:\"+action.type+\"/\"+targetView.id);\n          const promise = targetView.updateReactiveTheTargetView(store, actionData, action);\n          if (promise) {\n            if (!promise.then) {\n              alert(\"your view has override method name 'updateReactiveTheTargetView'! activeView.id):\" + activeView.id);\n              reject(promise);\n              return;\n            }\n            promises.push(promise.then(() => {}, (e) => {\n              console.error(e)\n            }));\n          } else {\n            // console.log(activeView);\n          }\n        } else {\n          //console.log('A0 callUpdate updateReactive id:' + activeView.id);\n          // console.log(\"activeView.updateReactive:\" + action.type + \"/\" + targetView.id);\n          const promise = activeView.updateReactive(store, actionData);\n          if (promise) {\n            if (!promise.then) {\n              alert(\"your view has override method name 'updateReactive'! activeView.id):\" + activeView.id);\n              reject(promise);\n              return;\n            }\n            promises.push(promise.then(() => {}, (e) => {\n              console.error(e)\n            }));\n          } else {\n            //console.log(activeView);\n          }\n        }\n      }\n      if (promises.length > 0) {\n        Promise.all(promises).then(resolve, reject);\n      } else {\n        resolve(targetView);\n      }\n    })\n\n    // console.log('callUpdate END----------------');\n  }\n}\n","import {ActionDispatcherImple} from './actionDispatcherImple'\nexport class ActionDispatcher {\n  constructor() {\n  }\n  static create(view){\n    return new ActionDispatcherImple(view);\n  }\n  static createStandAlone(){\n    return new ActionDispatcherImple(false);\n  }\n}\n","import {\n  patch,\n  h\n} from './preLoader'\nexport class V {\n  static div() {}\n}\nconst setProps = (data, inputs) => {\n  let newData = {};\n  if (data && typeof data === \"object\") {\n    if (!data.props) {\n      data.props = {};\n    }\n    newData = data;\n  } else {\n    newData = {\n      props: {}\n    };\n  }\n  for (let key in inputs) {\n    newData.props[key] = inputs[key];\n  }\n  return newData;\n}\nconst vtags = (tagName, id, classNames, data = {}, children, text) => {\n  const id1 = tagName + (\n    id && typeof id === \"string\" ?\n    \"#\" + id :\n    \"\");\n  const id2 = id1 + (\n    classNames ?\n    (Array.isArray(classNames) && classNames.length > 0 && typeof classNames[0] === \"string\") ?\n    \".\" + classNames.join(\".\") :\n    (\n      (Array.isArray(id) && id.length > 0 && typeof id[0] === \"string\") ?\n      \".\" + id.join(\".\") :\n      '') :\n    \"\");\n  const childrenArray = children && Array.isArray(children) ?\n    children :\n    (\n      data && Array.isArray(data) ?\n      data :\n      (\n        Array.isArray(classNames) && classNames.length > 0 && typeof classNames[0] === \"object\" ?\n        classNames :\n        []));\n  const currentText = text ?\n    text :\n    (\n      children && typeof children === \"string\" ?\n      children :\n      data && typeof data === \"string\" ?\n      data\n\n      :\n      classNames && typeof classNames === \"string\" ?\n      classNames :\n      \"\");\n  let currentData = typeof data === \"string\" || Array.isArray(data) ?\n    {} :\n    data;\n  if (children !== undefined && text === undefined && classNames && !Array.isArray(classNames) && typeof classNames === \"object\") {\n    currentData = classNames;\n  } else if (children === undefined && text === undefined && id && !Array.isArray(id) && typeof id === \"object\") {\n    currentData = id;\n  }\n  const toString = Object.prototype.toString\n  //console.log(\"●id2:\" + id2 + \"/\" + typeof currentData + \"/currentData:\" + currentData + \"/toString:\" + toString.call(currentData)+\"/children:\"+childrenArray+\"/\"+Array.isArray(childrenArray)+\"/text:\"+currentText);\n  const childNode = childrenArray.length > 0 ?\n    childrenArray :\n    currentText;\n  const newVnode = h(id2, currentData, childNode);\n  //console.log(newVnode);\n  return newVnode;\n}\n//a div span img ul li input label\nexport const a = (id, classNames, href, data, children) => {\n  return vtags(\"a\", id, classNames, setProps(data, {\n    href: href\n  }), children, null);\n}\nexport const div = (id, classNames, data, children, text) => {\n  return vtags(\"div\", id, classNames, data, children, text);\n}\n\nexport const span = (id, classNames, data, children, text) => {\n  return vtags(\"span\", id, classNames, data, children, text);\n}\n\nexport const img = (id, classNames, alt, src, data) => {\n  return vtags(\"img\", id, classNames, setProps(data, {\n    alt: alt,\n    src: src\n  }), null, null);\n}\n\nexport const ul = (id, classNames, data, children, text) => {\n  return vtags(\"ul\", id, classNames, data, children, text);\n}\n\nexport const li = (id, classNames, data, children, text) => {\n  return vtags(\"li\", id, classNames, data, children, text);\n}\n\nexport const file = (id, classNames, data, value, text) => {\n  return vtags(\"input\", id, classNames, setProps(data, {\n    type: \"file\"\n  }), null, text);\n}\nexport const input = (id, classNames, data, type, text) => {\n  return vtags(\"input\", id, classNames, setProps(data, {\n    type: type,\n    value: text\n  }), null, text);\n}\nexport const checkbox = (id, classNames, data, text) => {\n  return vtags(\"input\", id, classNames, setProps(data, {\n    type: \"checkbox\",\n    value: text\n  }), null, text);\n}\nexport const label = (id, classNames, data, children, text) => {\n  return vtags(\"label\", id, classNames, data, children, text);\n}\nexport const select = (id, classNames, data, children, text) => {\n  return vtags(\"select\", id, classNames, data, children, text);\n}\nexport const option = (id, classNames, data, children, text) => {\n  return vtags(\"option\", id, classNames, data, children, text);\n}\n\nexport const createSelectVnode = (id, classes, name, optionsData, selectedValue, on, suffix = \"\") => {\n  const options = [];\n  const isArray = Array.isArray(optionsData);\n  for (let key in optionsData) {\n    const text = optionsData[key];\n    // alert(\"selectedValue:\" + selectedValue + \"/key:\" + key + \"/\" + (        selectedValue === key))\n    if ((!isArray && key === selectedValue) || (isArray && text + \"\" === selectedValue + \"\")) {\n      //console.log(\"★　matched　selectedValue:\"+selectedValue+\"/text:\"+text)\n      const optionSelected = option(\"\", [\"\"], {\n        attrs: {\n          value: isArray ?\n            text :\n            key,\n          selected: \"true\"\n        }\n      }, text + suffix);\n      options.push(optionSelected);\n    } else {\n      const optionNode = option(\"\", [\"\"], {\n        attrs: {\n          value: isArray ?\n            text :\n            key\n        }\n      }, text + suffix);\n      options.push(optionNode);\n    }\n  }\n  const data = {\n    props: {\n      name: name\n    }\n  }\n  if(on){\n    data.on = on\n  }\n  return select(id, classes, data, options);\n}\n","import {ActionCreator} from './actionCreator'\nexport class ViewBaseActions {\n  constructor() {\n  }\n  static getGotoAnotherViewAction(view, selector, data){\n    if(!view){\n      console.log('getGotoAnotherViewAction view:'+view);\n    }\n    return ActionCreator.createGoOtherViewAction('GotoAnotherView',view,null, selector, data);\n  }\n  static getShowViewAction(oldVnode, selector, data){\n    if(!oldVnode){\n      console.log('getShowViewAction oldVnode:'+oldVnode);\n    }\n    return ActionCreator.createShowViewAction('ShowView',oldVnode, selector, data);\n  }\n}\n","import {ActionCreator} from './actionCreator'\nimport {ActionDispatcherImple} from './actionDispatcherImple'\nconst initializeStoreKeys=[];\nexport class BaseReducer {\n  constructor(isBaseUse) {\n    this.isBaseUse = isBaseUse;\n    // console.log('BaseReducer constructor:' + isBaseUse);\n    if (isBaseUse) {\n      const baseActions = ActionCreator.getBaseActions();\n      for (let index in baseActions) {\n        const type = baseActions[index];\n        this.atatch({type: type});\n      }\n    }\n  }\n  addInitializeKey(targetKey){\n    initializeStoreKeys.push(targetKey);\n  }\n  getInitializeKeys(){\n    const retList = [];\n    for(let value of initializeStoreKeys){\n      retList.push(value);\n    }\n    return retList\n  }\n  atatch(action) {\n    // console.log('A0 BaseReducer atatch action:' + action);\n    // console.log(this);\n    ActionDispatcherImple.add(action, this);\n  }\n  detach(action) {\n    ActionDispatcherImple.delete(action, this);\n  }\n  async preReduce(store, action) {\n    // console.log('A0 BaseReducer preReduce:' + action);\n    store.isOrverride = false;\n    return store;\n  }\n  async reduce(store, action) {\n    // console.log('A0 BaseReducer reduce:' + action);\n    store.isOrverride = true;\n\n    store.oldVnode = action.data.oldVnode;\n    store.selector = \"#\" + action.data.selector;\n    //alert(store);\n    return store;\n  }\n  async postReduce(store, action) {\n    // console.log('A0 BaseReducer postReduce:' + action);\n    return store;\n  }\n}\nnew BaseReducer(true);\n","import {ViewBaseActions} from './viewBaseActions'\nimport {ActionCreator} from './actionCreator'\nimport {BaseReducer} from './baseReducer'\nexport class ViewBaseReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.atatch(ViewBaseActions.getGotoAnotherViewAction());\n    this.atatch(ViewBaseActions.getShowViewAction());\n  }\n  async reduce(store, action) {\n    //console.log('reduce! action:'+action);\n    //console.log('reduce! oldVnode:'+action.data.oldVnode);\n    if (ActionCreator.isEquals(ViewBaseActions.getGotoAnotherViewAction(), action)) {\n      // todo update menue\n      //console.log('getGotoAnotherViewAction!');\n    } else if (ActionCreator.isEquals(ViewBaseActions.getShowViewAction(), action)) {\n      store.isOrverride = true;\n\n      store.oldVnode = action.data.oldVnode;\n      store.selector = \"#\" + action.data.selector;\n    }\n    //console.log('reduced...');\n    return store;\n  }\n}\nconst viewBaseReducer = new ViewBaseReducer();\n","import vu from \"../viewUtil\";\nimport { patch } from './base/preLoader'\nimport { ElementSelector } from './elementSelector'\nimport { ActionCreator } from './actionCreator'\nimport { ViewAttachQueue } from './viewAttachQueue'\nimport { ActionDispatcher } from './actionDispatcher'\nimport { Store } from './store'\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"./base/vtags\";\nimport { ViewBaseReducer } from './viewBaseReducer'\nconst viewAttachQueue = new ViewAttachQueue();\nconst nodeFrame = {\n\trootVnode: null,\n\tms: null\n};\nexport class BaseView {\n\tconstructor(id, className, isNotRenderWrap = false) {\n\t\tthis.dispatcher = ActionDispatcher.create(this);\n\t\tthis.id = id;\n\t\tthis.className = className;\n\t\tthis.isNotRenderWrap = isNotRenderWrap;\n\t\tthis.ms = nodeFrame.ms;\n\t\tthis.es = new ElementSelector();\n\t\tconst store = Store.getStore();\n\t\tthis.onViewLoad(store)\n\t\t//this.preRender(id, className);\n\t\tthis.currentVnode = null;\n\t\tthis.onViewLoaded(store)\n\t\tthis.updateReactiveCallCount = 0;\n\t\tthis.updateReactiveCallTimer = null;\n\t\tthis.updateReactivePromise = new Map();\n\t\tthis.updateCount = 0;\n\t}\n\tstatic ModalWindowClass() {\n\t\treturn \"ModalWindow\";\n\t}\n\tstatic setRootVnode(rootVnode) {\n\t\tnodeFrame.rootVnode = rootVnode;\n\t}\n\tstatic setMainService(ms) {\n\t\tif (ms) {\n\t\t\tnodeFrame.ms = ms;\n\t\t}\n\t}\n\tpatch(selector, newVnode) {\n\t\treturn this.patchFromOtherVnode(nodeFrame.rootVnode, selector, newVnode);\n\t}\n\tinitialPatch() {\n\t\tlet elements = document.getElementsByTagName(\"body\");\n\t\telements[0].innerHTML = '<div id=\"rootNodeA\"><p>ｘ</p></div>';\n\t\tlet currentVnode = document.getElementById('rootNodeA');\n\t\tif (this.updateCount < 1) {\n\t\t\tthis.patchFromOtherVnode(currentVnode, null, this.render());\n\t\t\tthis.updateReactiveTheTargetView({ oldVnode: this.currentVnode, selector: null, isOrverride: true })\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t}\n\t}\n\tpatchFromOtherVnode(currentVnode, selector, newVnode) {\n\t\tlet currentRootNode = selector !== null ? //for firstTime\n\t\t\tnodeFrame.rootVnode :\n\t\t\tcurrentVnode;\n\t\tconst result = this.es.patch(currentRootNode, selector, newVnode);\n\t\tresult.data['name'] = this.name + Date.now();\n\t\tnodeFrame.rootVnode = result;\n\t\t// console.error(this.currentVnode);\n\t\tthis.currentVnode = this.es.getElements(result, '#' + this.id)[0];\n\t\t// console.error(newVnode);\n\t\t// console.warn(\"-----------patchFromOtherVnode:\"+selector+'/#' + this.id+\"/this.currentVnode:\"+this.currentVnode);\n\t\t//  console.log(nodeFrame.rootVnode);\n\t\t// console.log('C01 this.id:' + this.id);\n\t\t// console.log('C01 --baseView.patchFromOtherVnode currentVnode;' + currentVnode + '/selector:' + selector + '/currentSelector:' + currentSelector + '/this:' + this.currentVnode + '/' + this.es.getElements(result, selector));\n\t\treturn result;\n\t}\n\tprePatch(selector, newVnode, isShowLog) {\n\t\tif (!this.currentVnode) {\n\t\t\tthis.currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n\t\t}\n\t\tif (!this.currentVnode) {\n\t\t\tconsole.error('!!!!prePatch nodeFrame.rootVnode: ' + JSON.stringify(nodeFrame.rootVnode));\n\t\t}\n\t\t// console.log('!!A!!prePatch ' + JSON.stringify(this.currentVnode) + '/this.id:' + this.id + \"/selector:\" + selector + \"/\" + this.es.getElements(this.currentVnode, selector)[0]);\n\t\tthis.currentVnode.data['name'] = this.name + Date.now();\n\t\t// console.log('!!B!!prePatch newVnode,' + JSON.stringify(this.currentVnode) + '/this.id:' + this.id);\n\t\tthis.es.isShowLog = isShowLog;\n\t\tthis.currentVnode = this.es.prePatch(this.currentVnode, selector, newVnode);\n\t\tthis.es.isShowLog = null;\n\t\t// console.log('!!C!!prePatch ' + JSON.stringify(this.currentVnode) + '/this.id:' + this.id);\n\t\treturn this.currentVnode;\n\t}\n\tasync updateReactiveTheTargetView(store, actionData, action) {\n\t\tconst oldVnode = store.oldVnode;\n\t\tconst selector = store.selector;\n\t\tconst isOrverride = store.isOrverride;\n\t\t// console.log('A00 update --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/this.currentVnode:' + this.currentVnode + \"/\" + typeof this.currentVnode);\n\t\tif (isOrverride) {\n\t\t\t// console.warn(\"isOrverride:\"+isOrverride+\"/this.currentVnode:\"+this.currentVnode+\"/selector:\"+selector);\n\t\t\tthis.onPreViewBuild(oldVnode, store);\n\t\t\tthis.currentVnode = !this.currentVnode ?\n\t\t\t\tthis.renderWrap(store) :\n\t\t\t\tthis.currentVnode;\n\t\t\t// console.warn(this.currentVnode);\n\t\t} else {\n\t\t\tthis.currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n\t\t}\n\t\t// console.log(\"XXXXXXXXXXXX01 selector:\"+selector+\"/this.updateCount:\"+this.updateCount);\n\t\tawait this.onViewShow(store, actionData)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e)\n\t\t\t});\n\t\t// console.log(\"XXXXXXXXXXXX02 selector:\"+selector+\"/isOrverride:\"+isOrverride+\"/oldVnode:\"+oldVnode);\n\t\tif (isOrverride) {\n\t\t\tif (oldVnode) {\n\t\t\t\t// console.warn(\"patchFromOtherVnode\");\n\t\t\t\tthis.patchFromOtherVnode(oldVnode, selector, this.currentVnode);\n\t\t\t} else {\n\t\t\t\t// console.warn(\"patchFromOtherVnode selector:\"+selector+\"/\"+ this.id+\"/isOrverride:\"+isOrverride+\"/oldVnode:\"+oldVnode);\n\t\t\t\tthis.patchFromOtherVnode(null, '#' + this.id, this.currentVnode);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.patch('#' + this.id, this.currentVnode);\n\t\t}\n\t\tthis.updateCount++;\n\t\t// console.log(\"XXXXXXXXXXXX04 this.id:\" + this.id+\"/this.updateCount:\"+this.updateCount);\n\t\t// console.log(action);\n\t\tif (this.updateCount <= 2 && (!action || action.type === \"Attach\")) {\n\t\t\tthis.updateCount++;\n\t\t\tawait this.onAfterAttachWrap(store, actionData);\n\t\t} else {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.updateCount = 0\n\t\t\t}, 2000);\n\t\t}\n\t\tawait this.onViewShown(store, actionData)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e)\n\t\t\t});\n\t}\n\tupdateReactive(store, actionData) {\n\t\treturn new Promise(\n\t\t\t(resolve, reject) => {\n\t\t\t\t// this.updateReactiveCallCount++;\n\t\t\t\t// const storePagesKey =\"pagesData\"\n\t\t\t\t//       console.error(\"updateReactive:\"+(store[storePagesKey]?store[storePagesKey].length:null));\n\t\t\t\tif (this.updateReactiveCallTimer) {\n\t\t\t\t\tconst clearTimer = this.updateReactiveCallTimer;\n\t\t\t\t\tconst pre = this.updateReactivePromise.get(clearTimer);\n\t\t\t\t\tclearTimeout(this.updateReactiveCallTimer);\n\t\t\t\t\tpre.resolve();\n\t\t\t\t\tsetTimeout(() => { this.updateReactivePromise.delete(clearTimer) })\n\t\t\t\t}\n\t\t\t\tthis.updateReactiveCallTimer = setTimeout(() => {\n\t\t\t\t\tconst oldVnode = store.oldVnode;\n\t\t\t\t\tconst selector = store.selector;\n\t\t\t\t\tconst isOrverride = store.isOrverride;\n\t\t\t\t\tthis.currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n\t\t\t\t\t// console.log(nodeFrame.rootVnode);\n\t\t\t\t\t// console.error(this.currentVnode);\n\t\t\t\t\t// console.log('A0101 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/id:' + this.id);\n\t\t\t\t\tconst promiseOnViewShow = this.onViewShow(store, actionData);\n\t\t\t\t\t// console.log('A102 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n\t\t\t\t\tpromiseOnViewShow.then(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.patch(\"#\" + this.id, this.currentVnode);\n\t\t\t\t\t\t\t// console.log('A103 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n\t\t\t\t\t\t\t//this.onAfterAttach(store);\n\t\t\t\t\t\t\t// console.log('A104 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n\t\t\t\t\t\t\tconst promiseOnViewShown = this.onViewShown(store, actionData);\n\t\t\t\t\t\t\tpromiseOnViewShown.then(\n\t\t\t\t\t\t\t\t() => { resolve() },\n\t\t\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t\t\t\t\treject(e)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}, (e) => {\n\t\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t\t\treject(e)\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\t// console.log('A105 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n\t\t\t\t});\n\t\t\t\tthis.updateReactivePromise.set(this.updateReactiveCallTimer, { resolve, reject })\n\t\t\t}\n\t\t)\n\t}\n\tinit() {}\n\t// attache to\n\tasync attach(parentView = this.parentView, selector, data) {\n\t\tthis.parentView = parentView;\n\t\tlet taregetSelecotor = selector;\n\t\tif (!selector) {\n\t\t\t// console.warn(\"★attach selector is null :\" + selector + \"/this.id:\" + this.id);\n\t\t\ttaregetSelecotor = this.id;\n\t\t}\n\t\tif (this.isAttached()) {\n\t\t\talert('attached!!!');\n\t\t\treturn;\n\t\t}\n\t\t//\n\t\tconst store = Store.getStore();\n\t\tthis.onPreViewBuild(store)\n\t\tthis.activeViewTree = viewAttachQueue.addActiveView(parentView, this, this.activeViewTree);\n\t\t// console.log('A08---attach ==selector:' + taregetSelecotor + '/parentView:' + parentView.id + \"/this.id:\" + this.id);\n\t\tconst action = ActionCreator.creatAttachAction(parentView, this, data);\n\t\tawait this.dispatch(action);\n\t}\n\tisAttached() {\n\t\tconst currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n\t\tif (currentVnode === this.currentVnode) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tasync dispatch(action) {\n\t\tawait this.dispatcher.dispatch(action);\n\t\t// console.log(\"dispatchered /this.id:\" + this.id);\n\t}\n\tgetElementById(id) {\n\t\tconst elements = this.es.getElements(this.currentVnode, '#' + id);\n\t\treturn elements && elements.length > 0 ?\n\t\t\telements[0] :\n\t\t\tnull;\n\t}\n\tasync onAfterAttachWrap(store, actionData) {\n\t\tif (this.updateCount > 2) {\n\t\t\treturn;\n\t\t}\n\t\t// console.log(\"XXXXXXXXXXXX03 id:\"+this.id+\"/this.updateCount:\"+this.updateCount);\n\t\t// console.log(nodeFrame.rootVnode);\n\t\t// console.error(this.currentVnode);\n\t\tawait this.onAfterAttach(store, actionData);\n\t}\n\tasync onAfterAttach(store, actionData) {\n\t\tconst currentVnode = this.currentVnode;\n\t\t// while (viewAttachQueue.hasItem()) {\n\t\t//   let item = viewAttachQueue.poll();\n\t\t//   item.view.currentVnode = this.es.getElements(currentVnode, item.selector);\n\t\t// }\n\t}\n\tchangeAnotherView(parentView, selector, nextView) {\n\t\tthis.onViewHide(nextView, store, actionData);\n\t\tconst action = ActionCreator.creatAttachAction(parentView, this, data);\n\t\tthis.dispatch(action);\n\t\tthis.onViewHidden(nextView, store, actionData);\n\t}\n\t// Event listener\n\tonViewLoad(store, actionData) {\n\t\t// console.log('m001 baseView.onViewLoad name:' + name + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n\t}\n\tonViewLoaded(store, actionData) {\n\t\t// console.log('m002 baseView.onViewLoaded name:' + name + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n\t}\n\tonPreViewBuild(store, actionData) {\n\t\t// console.log('m003a baseView.onPreViewBuild store:' + store + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\t// console.log('m003-- baseView.onViewShow newNode:' + '/store:' + store+\"/this.id:\"+ this.id);\n\t}\n\tasync onViewShown(store, actionData) {\n\t\t// console.log('m004-- baseView.onViewShown newNode:' + '/store:' + store+\"/this.id:\"+ this.id);\n\t\t//console.log(JSON.stringify(this.currentVnode));\n\t}\n\tasync onViewHide(nextView, store, actionData) {\n\t\t// console.log('m005 baseView.onViewHide nextView:' + nextView + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n\t\t//console.log(JSON.stringify(this.currentVnode));\n\t\treturn true;\n\t}\n\tasync onViewHidden(nextView, store, actionData) {\n\t\t// console.log('m006 baseView.onViewHidden nextView:' + nextView + '/actionData:' + actionData+\"/this.id:\"+ this.id);\n\t}\n\trender() {\n\t\tconst elm = vu.create(\"BaseView\", \"BaseView\");\n\t\treturn elm;\n\t}\n\trenderWrap(store, data) {\n\t\t// console.log('renderWrap'+\" id:\"+this.id+\"/this.isNotRenderWrap:\"+this.isNotRenderWrap);\n\t\tconst classNames = this.className ? Array.isArray(this.className) ? this.className : [this.className] : [];\n\t\tconst newVnode = this.isNotRenderWrap ?\n\t\t\tthis.render(store, data) :\n\t\t\tdiv(this.id, classNames, {}, [this.render(store, data)]);\n\t\t// console.log(newVnode)\n\t\treturn newVnode;\n\t}\n\tgetAnker() {\n\t\treturn this.elm;\n\t}\n\n\tshow() {\n\t\tthis.currentVnode.elm.style.display = '';\n\t}\n\n\tclose() {\n\t\tthis.currentVnode.elm.style.display = 'none';\n\t}\n}\n","import vu from \"../util/viewUtil\";\nimport {\n\tBaseView\n} from \"../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../util/reactive/base/vtags\";\nexport class Header extends BaseView {\n\tconstructor(titleText) {\n\t\tsuper(\"header\", \"header\");\n\t\tthis.titleText = this.ms.getAppTitle();\n\t\tthis.Version = this.ms.getAppVersion();\n\t}\n\trender() {\n\t\tconst title = span(\"\", [\"MainTitle\"], this.titleText);\n\t\tconst version = span(\"\", [\"Version\"], this.Version);\n\t\tconst newVnode = div(\"aaa\", {\n\t\t\tstyle: {\n\t\t\t\tcolor: '#000'\n\t\t\t}\n\t\t}, [div(\"title\", [\"title\"], [title, version])]);\n\t\treturn newVnode;\n\t}\n}","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class MenuSelectActionCreator {\n  constructor() {}\n  static creatSelectAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"selectMenu\", targetView, data, storeKey);\n  }\n  static getStoreKey(){\n    return \"menuSelect\";\n  }\n}\n","const ua = navigator.userAgent.replace(/[\\.0-9]+/g,\"x\");\nconst domain = window.location;\nexport default {\n  dbName:\"CopiBon\",\n  ua:ua,\n  domain:domain\n}\n","export class IdbUtil {\n\tstatic currentTables(table, tabels) {\n\t\treturn tabels ? tabels : [table];\n\t}\n\t// static async getTransaction(db,tables,mode,reject,reject){\n\t//   let transaction = db.transaction(tables, mode);\n\t//   transaction.oncomplete = (event) => {\n\t//     db.close();\n\t//     resolve();\n\t//   };\n\t//   transaction.onerror = (event) => {\n\t//     db.close();\n\t//     reject();\n\t//   };\n\t// }\n\n\t//private\n\tstatic isMutch(value, condetions) {\n\t\tif (condetions === undefined || condetions === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (Array.isArray(condetions)) {\n\t\t\tfor (let condition of condetions) {\n\t\t\t\tif (IdbUtil.isMutch(value, condition)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor (let key in condetions) {\n\t\t\t\tlet condition = condetions[key];\n\t\t\t\tif (typeof condition === 'object') {\n\t\t\t\t\tif (IdbUtil.isMutch(value, condition)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet target = value[key];\n\t\t\t\t\tif (target !== condition) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t};\n\tstatic makeKeyRange(start, end, isNotEqualStart, isNotEqualEnd) {\n\t\treturn (isNotEqualStart === undefined && isNotEqualEnd === undefined) ?\n\t\t\tIDBKeyRange.bound(start, end, false, false) :\n\t\t\tIDBKeyRange.bound(start, end, isNotEqualStart, isNotEqualEnd);\n\t}\n\tstatic makeKeyRangeUpper(start, isNotEqualStart) {\n\t\treturn (isNotEqualStart !== true) ?\n\t\t\tIDBKeyRange.upperBound(start) :\n\t\t\tIDBKeyRange.upperBound(start, isNotEqualStart);\n\t}\n\tstatic makeKeyRangeLower(end, isNotEqualEnd) {\n\t\treturn (isNotEqualStart !== true) ?\n\t\t\tKeyRange.lowerBound(end) :\n\t\t\tIDBKeyRange.lowerBound(end, isNotEqualEnd);\n\t}\n\tstatic makeKeyRangeOnly(only) {\n\t\treturn (isNotEqualStart !== true) ?\n\t\t\tIDBKeyRange.only(only) :\n\t\t\tIDBKeyRange.lowerBound(end, isNotEqualEnd);\n\t}\n\t//IDを生成\n\tstatic buildKeyPath(key1, key2, key3, key4, key5) {\n\t\tlet array = [];\n\t\tif (key1 !== undefined) {\n\t\t\tarray.push((key1 + \"\")\n\t\t\t\t.split(\"&\")\n\t\t\t\t.join(\"&amp;\")\n\t\t\t\t.split(\".\")\n\t\t\t\t.join(\"&#046;\"));\n\t\t}\n\t\tif (key2 !== undefined) {\n\t\t\tarray.push((key2 + \"\")\n\t\t\t\t.split(\"&\")\n\t\t\t\t.join(\"&amp;\")\n\t\t\t\t.split(\".\")\n\t\t\t\t.join(\"&#046;\"));\n\t\t}\n\t\tif (key3 !== undefined) {\n\t\t\tarray.push((key3 + \"\")\n\t\t\t\t.split(\"&\")\n\t\t\t\t.join(\"&amp;\")\n\t\t\t\t.split(\".\")\n\t\t\t\t.join(\"&#046;\"));\n\t\t}\n\t\tif (key4 !== undefined) {\n\t\t\tarray.push((key4 + \"\")\n\t\t\t\t.split(\"&\")\n\t\t\t\t.join(\"&amp;\")\n\t\t\t\t.split(\".\")\n\t\t\t\t.join(\"&#046;\"));\n\t\t}\n\t\tif (key5 !== undefined) {\n\t\t\tarray.push((key5 + \"\")\n\t\t\t\t.split(\"&\")\n\t\t\t\t.join(\"&amp;\")\n\t\t\t\t.split(\".\")\n\t\t\t\t.join(\"&#046;\"));\n\t\t}\n\t\treturn array.join(\"\");\n\t};\n}","import { IdbUtil } from './idbUtil'\nconst MODE_R = \"readonly\";\nconst MODE_RW = \"readwrite\";\nexport default class IndexeddbHelper {\n\tconstructor(dbName) {\n\t\tthis.IDBKeyRange = window.IDBKeyRange;\n\t\tthis.indexedDB = window.indexedDB;\n\t\tthis.dbName = dbName;\n\t\tthis.keyPathMap = {};\n\t\tthis.db = null;\n\t\tthis.lastVersion = null;\n\t\tthis.isUpdateOpen = false;\n\t\tthis.timer = null;\n\t\tthis.isDBClosed = true;\n\t\tthis.tableCache = {};\n\t}\n\n\tgetOpenDB(newVersion) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.lastVersion = newVersion;\n\t\t\tif ((this.lastVersion) && this.db) {\n\t\t\t\tthis.db.close();\n\t\t\t\tthis.isUpdateOpen = true;\n\t\t\t\t// this.cacheClear();\n\t\t\t} else if (this.db && this.isDBClosed === false) {\n\t\t\t\tresolve(this.db);\n\t\t\t\treturn;\n\t\t\t} else if (this.lastVersion) {\n\t\t\t\tthis.isUpdateOpen = true;\n\t\t\t} else {\n\t\t\t\tthis.isUpdateOpen = false;\n\t\t\t}\n\t\t\t// TODO instance\n\t\t\tlet request = this.indexedDB.open(this.dbName, newVersion);\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tthis.db = event.target.result;\n\t\t\t\tthis.isDBClosed = false;\n\t\t\t\tresolve(this.db);\n\t\t\t};\n\t\t\trequest.onupgradeneeded = (event) => {\n\t\t\t\tthis.db = event.target.result;\n\t\t\t\tthis.isDBClosed = false;\n\t\t\t\tresolve(this.db);\n\t\t\t};\n\t\t\trequest.onabort = (e) => {\n\t\t\t\tresolve(e);\n\t\t\t};\n\t\t\trequest.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t}\n\tcloseDB() {\n\t\tif (this.isUpdateOpen) {\n\t\t\tthis.db.close();\n\t\t\tthis.isDBClosed = true;\n\t\t} else {\n\t\t\tif (this.timer) {\n\t\t\t\tclearTimeout(this.timer);\n\t\t\t}\n\t\t\tthis.timer = setTimeout(() => {\n\t\t\t\tthis.db.close();\n\t\t\t\tthis.isDBClosed = true;\n\t\t\t}, 1000);\n\t\t}\n\t}\n\tcacheClear() {\n\t\tconst keys = [];\n\t\tfor (let tableName in this.tableCache) {\n\t\t\tkeys.push(tableName);\n\t\t}\n\t\tfor (let tableName of keys) {\n\t\t\tconst tableCache = this.tableCache[tableName];\n\t\t\tfor (let index in tableCache) {\n\t\t\t\tdelete tableCache[index];\n\t\t\t}\n\t\t}\n\t}\n\tsetCache(tableName, key, value) {\n\t\tif (!value || !value.data) {\n\t\t\treturn;\n\t\t}\n\t\tconst data = value.data;\n\t\tfor (let key in data) {\n\t\t\tconst elm = data[key];\n\t\t\tif (elm && elm.byteLength) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!this.tableCache[tableName]) {\n\t\t\tthis.tableCache[tableName] = {};\n\t\t}\n\t\tthis.tableCache[tableName][key] = value;\n\t}\n\tgetCache(tableName, key) {\n\t\tconst tableCache = this.tableCache[tableName];\n\t\treturn tableCache ? tableCache[key] : null;\n\t}\n\tgetObjectStore(db, tableName, tables, mode) {\n\t\tif (mode === MODE_R) {\n\t\t\tthis.cacheClear();\n\t\t}\n\t\tlet transaction = db.transaction(tables, mode);\n\t\ttransaction.oncomplete = (event) => {\n\t\t\tthis.closeDB();\n\t\t};\n\t\ttransaction.onerror = (event) => {\n\t\t\tthis.closeDB();\n\t\t};\n\t\tconst table = transaction.objectStore(tableName);\n\t\treturn table;\n\t}\n\tthrowNewError(callerName) {\n\t\treturn (e) => {\n\t\t\tconsole.error(e);\n\t\t\tif (e.stack) {\n\t\t\t\tconsole.log(e.stack);\n\t\t\t} else {\n\t\t\t\tconsole.log(e.message, e);\n\t\t\t}\n\t\t\tconsole.error(\n\t\t\t\tcallerName ?\n\t\t\t\tcallerName :\n\t\t\t\t\"\" + \"/\" + e);\n\t\t\tthrow new Error(e);\n\t\t}\n\t}\n\tgetKeyPathByMap(tableName) {\n\t\treturn this.keyPathMap[tableName];\n\t}\n\tasync getKeyPath(tableName) {\n\t\tlet keyPathName = this.keyPathMap[tableName];\n\t\tif (keyPathName !== undefined && keyPathName !== null) {\n\t\t\treturn keyPathName;\n\t\t}\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"getKeyPath->getOpenDB\"));\n\t\tlet objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n\t\tthis.closeDB();\n\t\tlet keyPathNameCurrent = objectStore.keyPath;\n\t\tthis.keyPathMap[tableName] = keyPathNameCurrent;\n\t\treturn keyPathNameCurrent;\n\t}\n\t//private\n\tasync getCurrentVersion() {\n\t\tlet db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"getCurrentVersion->getOpenDB\"));\n\t\tconst version = db.version;\n\t\tthis.closeDB();\n\t\treturn version;\n\t};\n\t//public\n\tasync selectAll(payload) {\n\t\tlet { tableName, range, condetions } = payload;\n\t\treturn await this._selectAll(tableName, range, condetions);\n\t}\n\t//Select In-line-Keyで返す。\n\tasync _selectAll(tableName, range, direction) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_selectAll->getOpenDB tableName:\" + tableName));\n\t\tlet objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n\t\treturn await this._selectAllExecute(objectStore, range);\n\t};\n\t_selectAllExecute(objectStore, range, isGetFirstOne) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst list = [];\n\t\t\tlet req = range === undefined ?\n\t\t\t\tobjectStore.openCursor() :\n\t\t\t\tobjectStore.openCursor(range);\n\t\t\treq.onsuccess = (event) => {\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tif (cursor) {\n\t\t\t\t\tconsole.log(cursor.value)\n\t\t\t\t\tlist.push(cursor.value);\n\t\t\t\t\tif (isGetFirstOne) {\n\t\t\t\t\t\tresolve(list[0]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcursor.continue();\n\t\t\t\t} else {\n\t\t\t\t\tresolve(list);\n\t\t\t\t}\n\t\t\t};\n\t\t\treq.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\n\t}\n\t//public\n\tasync selectByKey(payload) {\n\t\tlet { tableName, key } = payload;\n\t\treturn await this._selectByKey(tableName, key);\n\t}\n\t//Select In-line-return promise;Keyで返す。\n\tasync _selectByKey(tableName, key) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_selectByKey->getOpenDB tableName:\" + tableName));\n\t\t// console.log(\"_selectByKey tableName:\" + tableName + \"/pk:\" + key);\n\t\t// console.log(key);\n\t\treturn await this._selectByKeyOnTran(db, tableName, key)\n\t\t\t.catch(this.throwNewError(\"_selectByKey->_selectByKeyOnTran tableName:\" + tableName + \"/mode:\" + MODE_R));\n\t}\n\t_selectByKeyOnTran(db, tableName, key, tables, mode = MODE_R) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst cachekey = tableName + \"_\" + mode;\n\t\t\tconst cache = this.getCache(cachekey, key);\n\t\t\tif (cache) {\n\t\t\t\tresolve(cache);\n\t\t\t} else {\n\t\t\t\tlet objectStore = this.getObjectStore(db, tableName, [tableName], mode);\n\t\t\t\tlet request = objectStore.get(key); //keyはsonomama\n\t\t\t\trequest.onsuccess = (event) => {\n\t\t\t\t\tconst result = request.result;\n\t\t\t\t\tresolve(result);\n\t\t\t\t\tthis.setCache(cachekey, key, result);\n\t\t\t\t};\n\t\t\t\trequest.onerror = (e) => {\n\t\t\t\t\treject(e);\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\t//public\n\tasync selectByKeys(payload) {\n\t\tlet { tableName, keys } = payload;\n\t\treturn await this._selectByKeys(tableName, keys);\n\t}\n\t//Select In-line-return promise;Keyで返す。\n\tasync _selectByKeys(tableName, keys) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_selectByKeys->getOpenDB tableName:\" + tableName));\n\t\treturn await this._selectByKeysOnTran(db, tableName, keys)\n\t\t\t.catch(this.throwNewError(\"_selectByKeys->_selectByKeyOnTran tableName:\" + tableName));\n\t}\n\tasync _selectByKeysOnTran(db, tableName, keys, tables) {\n\t\tlet objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n\t\tconst retMap = {};\n\t\tfor (let key of keys) {\n\t\t\tconst cache = this.getCache(tableName, key);\n\t\t\tconst result = cache ? cache : await this._getByKeyFromeObjectStore(objectStore, key);\n\t\t\tif (!cache) {\n\t\t\t\tthis.setCache(tableName, key, result);\n\t\t\t}\n\t\t\tretMap[key] = result;\n\t\t}\n\t\treturn retMap;\n\t}\n\t_getByKeyFromeObjectStore(objectStore, key) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!key) {\n\t\t\t\tresolve(null);\n\t\t\t}\n\t\t\tlet request = objectStore.get(key); //keyはsonomama\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tresolve(request.result);\n\t\t\t};\n\t\t\trequest.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t}\n\t//public\n\tasync selectFirstOne(payload) {\n\t\tlet { tableName, range, direction } = payload;\n\t\treturn await this._selectFirstOne(tableName, range, direction);\n\t}\n\t//Select FirstOnek\n\tasync _selectFirstOne(tableName, range, direction) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_selectFirstOne->getOpenDB tableName:\" + tableName));\n\t\tlet objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n\t\treturn await this._selectAllExecute(objectStore, range, true);\n\t};\n\n\t//InsertUpdate\n\tasync insertUpdate(payload) {\n\t\tlet { tableName, data, callback } = payload;\n\t\tconst keyPathName = this.getKeyPathByMap();\n\t\treturn await this._insertUpdate(tableName, keyPathName, data, callback)\n\t\t\t.catch(this.throwNewError(\"insertUpdate->_insertUpdate tableName:\" + tableName));\n\t}\n\t//private\n\tasync _insertUpdate(tableName, keyPathName, data, callback) {\n\t\tconst key = data[keyPathName];\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_insertUpdate->getOpenDB tableName:\" + tableName));\n\t\tconst tables = IdbUtil.currentTables(tableName);\n\t\tconst value = await this._selectByKeyOnTran(db, tableName, key, tables, MODE_RW)\n\t\t\t.catch(this.throwNewError(\"_insertUpdate->_selectByKeyOnTran tableName:\" + tableName + \"/MODE_RW\"));\n\t\tif (callback) {\n\t\t\tcallback(value, data);\n\t\t}\n\t\tif (value === undefined) {\n\t\t\treturn await this._insertExecute(db, tableName, key, data, tables)\n\t\t\t\t.catch(this.throwNewError(\"_insertUpdate->_insertExecute tableName:\" + tableName));\n\t\t} else {\n\t\t\treturn await this._updateExecute(db, tableName, key, data, tables)\n\t\t\t\t.catch(this.throwNewError(\"_insertUpdate->_updateExecute tableName:\" + tableName));\n\t\t}\n\t}\n\t_insertExecute(db, tableName, key, data, tables) {\n\t\tlet objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet objectStoreRequest = objectStore.add(data); //,keyPath\n\t\t\tobjectStoreRequest.onsuccess = (event) => {\n\t\t\t\tresolve({ data, key });\n\t\t\t};\n\t\t\tobjectStoreRequest.onerror = (e) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t}\n\t_updateExecute(db, tableName, key, data, tables) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n\t\t\tlet request = objectStore.put(data); //,keyPathValue\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tresolve({ data, key });\n\t\t\t};\n\t\t\trequest.onerror = (e) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\tresolve(e);\n\t\t\t};\n\t\t});\n\t};\n\t//public\n\tasync deleteWithRange(payload) {\n\t\tlet { tableName, range, condetions } = payload;\n\t\treturn await this._deleteWithRange(tableName, range, condetions);\n\t}\n\t//Delete\n\tasync _deleteWithRange(tableName, range, condetions) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_deleteWithRange->getOpenDB tableName:\" + tableName));\n\t\tconst tables = IdbUtil.currentTables(tableName);\n\t\treturn await this._deleteWithRangeExecute(db, tableName, range, condetions, tables);\n\t};\n\t_deleteWithRangeExecute(db, tableName, range, condetions, tables) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n\t\t\tlet request = objectStore.openCursor(range);\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tlet list = [];\n\t\t\t\tif (cursor) {\n\t\t\t\t\tlet value = cursor.value;\n\t\t\t\t\tif (IdbUtil.isMutch(value, condetions)) {\n\t\t\t\t\t\tlet or = objectStore.delete(cursor.key);\n\t\t\t\t\t\tor.onsuccess = (event) => {\n\t\t\t\t\t\t\tlist.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tor.onerror = (e) => {\n\t\t\t\t\t\t\t//momiee\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tcursor.continue();\n\t\t\t\t} else {\n\t\t\t\t\tresolve(list);\n\t\t\t\t}\n\t\t\t};\n\t\t\trequest.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t}\n\t//public\n\tasync delete(payload) {\n\t\tlet { tableName, key } = payload;\n\t\treturn await this._delete(tableName, key);\n\t}\n\t//Delete\n\tasync _delete(tableName, keyPathValue) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_delete->getOpenDB tableName:\" + tableName));\n\t\tconst tables = IdbUtil.currentTables(tableName);\n\t\treturn await this._deleteOnTran(db, tableName, keyPathValue, tables);\n\t};\n\t_deleteOnTran(db, tableName, key, tables) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n\t\t\tlet request = objectStore.delete(key + \"\");\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tresolve({ tableName, key });\n\t\t\t}\n\t\t\trequest.onerror = (e) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t}\n\t//public\n\tasync truncate(payload) {\n\t\tlet { tableName } = payload;\n\t\treturn await this._truncate(tableName);\n\t}\n\t//truncate\n\tasync _truncate(tableName) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"_truncate->getOpenDB tableName:\" + tableName));\n\t\tconst tables = IdbUtil.currentTables(tableName);\n\t\treturn await this._truncateExecute(db, tableName, tables);\n\t};\n\t//truncate\n\t_truncateExecute(db, tableName, tables) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n\t\t\tlet request = objectStore.clear();\n\t\t\trequest.onsuccess = (event) => {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\trequest.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t};\n\tasync getObjectStoreNames() {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"getObjectStoreNames->getOpenDB\"));\n\t\tconst names = db.objectStoreNames;\n\t\tthis.closeDB();\n\t\treturn names;\n\t}\n\tasync isExistsObjectStore(tableName) {\n\t\tconst db = await this.getOpenDB()\n\t\t\t.catch(this.throwNewError(\"isExistsObjectStore->getOpenDB tableName:\" + tableName));\n\t\tlet isExist = false;\n\t\tfor (let name of db.objectStoreNames) {\n\t\t\tif (name === tableName) {\n\t\t\t\tisExist = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.closeDB();\n\t\treturn isExist;\n\t}\n\t//public\n\tasync createStore(payload) {\n\t\tlet { tableName, keyPathName, isAutoIncrement } = payload;\n\t\treturn await this._createStore(tableName, keyPathName, isAutoIncrement);\n\t}\n\t//createStore\n\tasync _createStore(tableName, keyPathName, isAutoIncrement) {\n\t\tconst isExistsObjectStore = await this.isExistsObjectStore();\n\t\tif (isExistsObjectStore === false) {\n\t\t\tconst newVersion = (await this.getCurrentVersion()) + 1;\n\t\t\tconst db = await this.getOpenDB(newVersion)\n\t\t\t\t.catch(this.throwNewError(\"_createStore->getOpenDB tableName:\" + tableName));\n\t\t\tlet isExist = false;\n\t\t\tfor (let name of db.objectStoreNames) {\n\t\t\t\tif (name === tableName) {\n\t\t\t\t\tisExist = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isExist === false) {\n\t\t\t\tdb.createObjectStore(tableName, { keyPath: keyPathName });\n\t\t\t}\n\t\t\tthis.closeDB();\n\t\t};\n\t};\n\t//public\n\tasync dropStore(payload) {\n\t\tlet { tableName } = payload;\n\t\treturn await this._dropStore(tableName);\n\t}\n\t//DropStore\n\tasync _dropStore(tableName) {\n\t\tconst newVersion = (await this.getCurrentVersion()) + 1;\n\t\tconst db = await this.getOpenDB(newVersion)\n\t\t\t.catch(this.throwNewError(\"_dropStore->getOpenDB tableName:\" + tableName));\n\t\tdb.deleteObjectStore(tableName);\n\t\tthis.closeDB();\n\t\treturn;\n\t};\n}","import constant from './constant'\nimport idbh from './indexeddbHelper'\nconst initQueue = [];\nexport default class IdbRapper {\n\n\tconstructor(objectStoreName, keypathName = \"pk\") {\n\t\tif (constant.idbh === undefined) {\n\t\t\tconstant.idbh = new idbh(constant.dbName);\n\t\t}\n\t\tthis.idbh = constant.idbh;\n\t\tthis.keyPathName = keypathName;\n\t\tthis.objectStoreName = objectStoreName;\n\t\t//tableName, keyPathName\n\t}\n\tinit() {\n\t\treturn new Promise((reslve, reject) => {\n\t\t\tthis.idbh._createStore(this.objectStoreName, this.keyPathName)\n\t\t\t\t.then(() => {\n\t\t\t\t\treslve(true)\n\t\t\t\t}, (e) => {\n\t\t\t\t\treject(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t});\n\t\t});\n\t}\n\tisFished() {\n\t\treturn new Promise((reslve, reject) => {\n\t\t\tthis.firstPromise.then(() => {\n\t\t\t\treslve(true);\n\t\t\t}, (e) => {\n\t\t\t\tthrow e;\n\t\t\t})\n\t\t});\n\t}\n\tasync saveDataDefault(key, data, callback) {\n\t\tlet record = {\n\t\t\tpk: key,\n\t\t\tdata: data\n\t\t};\n\t\t//console.log(\"saveDataDefault 001:\" + key + \"/\" + data);\n\t\tawait this.saveData(record, undefined, callback);\n\t\t//console.log(\"saveDataDefault 002:\" + key + \"/\" + data);\n\t}\n\tasync saveData(dataObj, key, callback) {\n\t\t//console.log(\"saveData 001:\" + key + \"/\" + JSON.stringify(dataObj)+\"/dataObj.data:\"+dataObj.data);\n\t\tlet storeData = dataObj;\n\t\t//console.log(\"saveData 002:\" + key + \"/\" + dataObj[this.keyPathName]);\n\t\tif (dataObj[this.keyPathName] === undefined) {\n\t\t\tstoreData = {\n\t\t\t\tdata: dataObj\n\t\t\t};\n\t\t\tstoreData[this.keyPathName] = key;\n\t\t} else if (key !== undefined) {}\n\t\t//console.log(\"saveData 003:\" + key + \"/\" + dataObj +\"/this.objectStoreName:\"+this.objectStoreName);\n\t\tlet value = await this.idbh._insertUpdate(this.objectStoreName, this.keyPathName, storeData, callback);\n\t\t//console.log(\"saveData 004:\" + key + \"/\" + dataObj+\"/\"+JSON.stringify(value)+\"/\"+value.data.data);\n\t}\n\tasync loadDataMap(keys) {\n\t\tif (keys !== undefined) {\n\t\t\tlet recordAsLoadedData = await this.idbh._selectByKeys(this.objectStoreName, keys);\n\t\t\treturn recordAsLoadedData;\n\t\t}\n\t\treturn null;\n\t}\n\tasync loadData(key) {\n\t\tif (key !== undefined) {\n\t\t\tlet recordAsLoadedData = await this.idbh._selectByKey(this.objectStoreName, key);\n\t\t\treturn recordAsLoadedData;\n\t\t}\n\t\treturn null;\n\t}\n\tasync loadDataDefault(key) {\n\t\tlet recordAsDefaultLoad = await this.loadData(key);\n\t\treturn recordAsDefaultLoad === undefined || recordAsDefaultLoad === null ?\n\t\t\tnull :\n\t\t\trecordAsDefaultLoad.data;\n\t}\n\tasync loadAllData() {\n\t\treturn await this.idbh._selectAll(this.objectStoreName);\n\t}\n\tasync deleteData(key) {\n\t\tif (key !== undefined) {\n\t\t\treturn await this.idbh._delete(this.objectStoreName, key);\n\t\t}\n\t\treturn null;\n\t}\n\tasync getOsNames() {\n\t\treturn await this.idbh.getObjectStoreNames();\n\t}\n}","import idb from \"../../util/idb/idbRapper\";\nconst USER_ID = \"default\";\nconst PK_INCREMENT_STORE = \"pk_increment\";\nconst idbAccessors = new Map();\nexport class StorageService {\n\tconstructor(entityClass) {\n\t\tthis.entityClass = entityClass;\n\t\tthis.targetObj = typeof entityClass === \"string\" ? entityClass : new entityClass();\n\t\tthis.idbAccessor = null;\n\t\tthis.entityName = this.targetObj.getEntityName ?\n\t\t\tthis.targetObj.getEntityName() :\n\t\t\tentityClass;\n\t}\n\tgetStoreNameKey(userId = USER_ID) {\n\t\treturn userId + \"_\" + this.targetObj.getEntityName();\n\t}\n\tasync createStore(userId = USER_ID) {\n\t\tconst storeNameKey = this.getStoreNameKey(userId);\n\t\treturn await this.createStoreByName(storeNameKey, userId);\n\t}\n\tasync createStoreByName(storeNameKey, userId = USER_ID) {\n\t\tconst idbAccessor = idbAccessors.has(storeNameKey) ?\n\t\t\tidbAccessors.get(storeNameKey) :\n\t\t\tnew idb(storeNameKey);\n\t\tawait idbAccessor.init()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e)\n\t\t\t});\n\t\tidbAccessors.set(storeNameKey, idbAccessor);\n\t\tthis.idbAccessor = idbAccessor;\n\t\treturn idbAccessor;\n\t}\n\tasync setStore(userId = USER_ID) {\n\t\tthis.idbAccessor = await this.createStore(userId);\n\t\treturn;\n\t}\n\tasync save(pk, data) {\n\t\tlet saveData = data;\n\t\tif (data.toObj) {\n\t\t\tsaveData = data.toObj();\n\t\t}\n\t\t// console.log(saveData);\n\t\tawait this.idbAccessor.saveDataDefault(pk, saveData);\n\t\treturn data; //\n\t}\n\tasync loadAll() {\n\t\tconst list = await this.idbAccessor.loadAllData();\n\t\tconst retList = [];\n\t\tfor (let row of list) {\n\t\t\tconst cloned = this.getEntity(row);\n\t\t\tretList.push(cloned);\n\t\t}\n\t\treturn retList;\n\t}\n\tasync getAsMap(keys) {\n\t\tconst pkList = [];\n\t\tfor (let key of keys) {\n\t\t\tconst pk = key && key.pk ?\n\t\t\t\tkey.pk :\n\t\t\t\tkey;\n\t\t\tpkList.push(pk);\n\t\t}\n\t\tconst recordMap = await this.idbAccessor.loadDataMap(pkList);\n\t\tconst retMap = {};\n\t\tfor (let key in recordMap) {\n\t\t\tconst record = recordMap[key];\n\t\t\tretMap[key] = this.getEntity(record);\n\t\t}\n\t\treturn retMap;\n\t}\n\tasync get(key) {\n\t\tconst pk = key && key.pk ?\n\t\t\tkey.pk :\n\t\t\tkey;\n\t\tconst record = await this.idbAccessor.loadData(pk);\n\t\treturn this.getEntity(record);\n\t}\n\tgetEntity(record) {\n\t\tif (!record || !record.data) {\n\t\t\treturn record;\n\t\t}\n\t\tif (record.data && !this.targetObj.getEntityName) {\n\t\t\treturn record.data;\n\t\t}\n\t\tconst targetObj = new this.entityClass();\n\t\ttargetObj.load(record.data);\n\t\treturn targetObj;\n\t}\n\tasync delete(key) {\n\t\treturn await this.idbAccessor.deleteData(key);\n\t}\n}","import { ObjectUtil } from \"../../util/objectUtil\";\nconst refcols = [];\nexport class BaseEntity {\n\tconstructor(entitiyName = \"BaseEntity\", pk = \"oid\") {\n\t\tthis.pk = pk;\n\t\tthis.entitiyName = entitiyName;\n\t\tthis.refs = [];\n\t}\n\tisEntitiy() {\n\t\treturn true;\n\t}\n\tgetEntityName() {\n\t\treturn this.entitiyName; // this.constructor.name;\n\t}\n\tcreate() {}\n\tupdate() {}\n\tsetPk(pkValue) {\n\t\treturn this[this.pk] = pkValue;\n\t}\n\tgetPk() {\n\t\treturn this[this.pk];\n\t}\n\tinclude(obj) {\n\t\t// console.log(\"!=======BaseEntity.include====================!!\");\n\t\t// console.log(obj);\n\t}\n\texclude(obj) {\n\t\t// console.log(\"!=======BaseEntity.exclude====================!!\");\n\t\t// console.log(obj);\n\t}\n\tasync deepClone() {\n\t\treturn await ObjectUtil.deepClone(this);\n\t}\n\tload(obj) {\n\t\tfor (let key in obj) {\n\t\t\tthis[key] = obj[key];\n\t\t}\n\t}\n\ttoObj() {\n\t\tlet cloned = ObjectUtil.singleDeepCloneWithoutFuncs(this);\n\t\tdelete cloned.pk;\n\t\tdelete cloned.refs;\n\t\tthis.exclude(cloned);\n\t\treturn cloned;\n\t}\n\tcalcSize() {\n\t\tlet size = 0;\n\t\treturn size;\n\t}\n\tgetRefCols() {\n\t\treturn refcols;\n\t}\n}","import { BaseEntity } from \"./baseEntity\";\nconst EnitiyName = \"Binary\";\nexport class Binary extends BaseEntity {\n\tconstructor(arrayBuffer) {\n\t\tsuper(EnitiyName);\n\t\tthis._ab = arrayBuffer;\n\t\tthis.createDate = Date.now();\n\t\tthis.updateDate = Date.now();\n\t}\n\tstatic getEnitiyName() {\n\t\treturn EnitiyName;\n\t}\n\tset ab(_ab) {\n\t\tif (buffer && !buffer.byteLength) {\n\t\t\talert(\"not arrayBuffer!\");\n\t\t}\n\t\tthis._ab = _ab;\n\t}\n\tget ab() {\n\t\treturn this._ab;\n\t}\n\n\tload(obj) {\n\t\tsuper.load(obj)\n\t\tthis._ab = new Uint8Array(this._ab)\n\t\t\t.buffer\n\t}\n\tcreate() {\n\t\treturn new Binary();\n\t}\n}","import {BaseEntity} from \"./baseEntity\";\nconst DELIMITER = \"-\";\nexport class PrimaryKey {\n  constructor(pk) {\n    this.pk = pk;\n  }\n\n  static getDelimiter() {\n    return \"-\";\n  }\n\n  static assemblePK(entity, number) {\n    return entity.getEntityName() + DELIMITER + number;\n  }\n  static isPrimaryKey(value){\n    return value && typeof value ===\"string\" && value.split(DELIMITER).length === 2;\n  }\n\n  static getPrimaryKey(value){\n    if(value){\n      if(PrimaryKey.isPrimaryKey(value)){\n        return value;\n      }else if(value.getEntityName && value.getPk){\n        return value.getPk();\n      }else if(value.oid){\n        return value.oid;\n      }else if(value.pk){\n        return value.pk;\n      }\n      return null;\n    }else{\n      return value;\n    }\n  }\n  static getEntityName(pk){\n    return PrimaryKey.getPrimaryKey(pk).split(DELIMITER)[0];\n  }\n}\n","import bc from \"../../util/binaryConverter\"\nimport {StorageService} from \"./storageService\"\nconst USER_ID = \"default\";\nconst PK_INCREMENT_STORE = \"pk_increment\";\nconst PK_ROW = \"pk_row\";\nexport class PrimaryKeyAutoIncrementService {\n  constructor(userid) {\n    this.ss = new StorageService(userid + \"_\" + PK_INCREMENT_STORE);\n  }\n  async acquirePKNo(userid = USER_ID, targetObj, rowKey = PK_ROW) {\n    const entityName = targetObj.getEntityName();\n    let currentObjectStore = await this.ss.createStoreByName(userid + \"_\" + PK_INCREMENT_STORE, userid);\n    let record = await this.ss.get(rowKey);\n    let nextCountAB = this.countUpUint32(\n      record\n      ? record.data\n      : 0);\n    if (!record) {\n      record = {\n        data: nextCountAB\n      };\n    }\n    let {data, keyPath} = await this.ss.save(rowKey, record, (result, record) => {\n      let nextCountAB = this.countUpUint32(record.data);\n      result.data = nextCountAB;\n    });\n    return bc.arrayBuffer2base64(data);\n  }\n  countUpUint32(arrayBuffer) {\n    let currentCount = arrayBuffer;\n    if (!currentCount) {\n      currentCount = new ArrayBuffer(4);\n    }\n    if (currentCount.data) {\n      currentCount = currentCount.data;\n    } else {}\n    //alert(JSON.stringify(currentCount));\n    let dataview = new DataView(currentCount);\n    let count = dataview.getUint32(0) | 0; // 0\n    count++;\n    dataview.setInt32(0, count >>> 0);\n    return dataview.buffer;\n  }\n}\n","import { StorageService } from \"./storageService\"\nimport { Binary } from \"./binary\";\nimport { ObjectUtil } from \"../../util/objectUtil\";\nimport { PrimaryKey } from \"./primaryKey\";\nimport { PrimaryKeyAutoIncrementService } from \"./primaryKeyAutoIncrementService\";\nconst title = \"CopiBon\";\nconst USER_ID = \"default\";\nconst titlePrefix = \"title_\";\nconst BINALY_PK_ROW = \"BINALY_PK_ROW\";\nconst entityManagerImpls = {};\nconst binarySizeMap = {};\nconst binaryEntity = new Binary();\nexport class EntityManagerImpl {\n\tconstructor(entityManager, entityClass, userId = USER_ID) {\n\t\tthis.userId = userId;\n\t\tthis.entityClass = entityClass;\n\t\tthis.entity = new entityClass();\n\t\tthis.entityName = this.entity.getEntityName();\n\t\tthis.isBinary = binaryEntity.getEntityName() === this.entityName;\n\t\tthis.ss = new StorageService(entityClass);\n\t\tthis.pkais = new PrimaryKeyAutoIncrementService(userId);\n\t\tthis.em = entityManager;\n\t}\n\n\tasync init() {\n\t\t//console.log(\"init! \"+this.entityName);\n\t\treturn await this.ss.setStore(this.userId);\n\t}\n\tasync save(data) {\n\t\tconst result = await this.saveExecute(data, false);\n\t\tif (this.isBinary) {\n\t\t\tconst currentPK = result.getPk();\n\t\t\tlet size = await ObjectUtil.recalcSize(this, result);\n\t\t\tbinarySizeMap[currentPK] = size;\n\t\t}\n\t\treturn result;\n\t}\n\tasync saveWithBinary(data) {\n\t\treturn await this.saveExecute(data, true);\n\t}\n\tasync saveExecute(data, isWithBinary) {\n\t\t//console.log(\"EntityManagerImpl save!!A!! data:\" + data+\"/isWithBinary:\"+isWithBinary);\n\t\tif (!data || !data.getEntityName || !data.getPk || data.getEntityName() !== this.entityName) {\n\t\t\tconsole.log(\"EntityManagerImpl save!!Z!! data:\" + data.getEntityName() + \"/this.entityName:\" + this.entityName + \"/data.getPk:\" + data.getPk);\n\t\t\treturn;\n\t\t}\n\t\tlet currentPK = data.getPk();\n\t\tif (!currentPK) {\n\t\t\tcurrentPK = PrimaryKey.assemblePK(this.entity, await this.pkais.acquirePKNo(this.userId, this.entity));\n\t\t}\n\t\tif (!isWithBinary) {\n\t\t\tawait this.saveArrayBufferCols(data);\n\t\t} else {\n\t\t\t// console.log(\"EntityManagerImpl saveBinary!!A!! data:\" + data + \"/isWithBinary:\" + isWithBinary);\n\t\t\t// console.log(data);\n\t\t\t// console.log(\"EntityManagerImpl saveBinary!!B!! data:\" + data + \"/isWithBinary:\" + isWithBinary);\n\t\t}\n\t\tdata.setPk(currentPK);\n\t\t// console.log(data);\n\t\tconst savedData = await this.ss.save(currentPK, data);\n\t\t// console.log(\"EntityManagerImpl save!!B!! savedData:\" + savedData);\n\t\treturn savedData;\n\t}\n\tasync saveArrayBufferCols(data) {\n\t\tif (binaryEntity.getEntityName() === data.getEntityName()) {\n\t\t\treturn;\n\t\t}\n\t\t// console.log(\"saveArrayBufferCols save!!A!! data:\" + data);\n\t\t// console.log(data);\n\t\t// console.log(\"saveArrayBufferCols save!!B!! data:\" + data);\n\t\tfor (let key in data) {\n\t\t\tconst column = data[key];\n\t\t\tif (!column) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Array.isArray(column)) {\n\t\t\t\tfor (let index of column) {\n\t\t\t\t\tconst item = column[index];\n\t\t\t\t\tif (!item || item.byteLength) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst pk = await this.saveArrayBufferData(item);\n\t\t\t\t\tcolumn[index] = new PrimaryKey(pk);\n\t\t\t\t}\n\t\t\t} else if (column.byteLength) {\n\t\t\t\tconst pk = await this.saveArrayBufferData(column);\n\t\t\t\tdata[key] = new PrimaryKey(pk);\n\t\t\t}\n\t\t}\n\t}\n\tasync saveArrayBufferData(item) {\n\t\t// console.log(\"saveArrayBufferData save!!A!! item:\" + item);\n\t\t// console.log(item);\n\t\t// console.log(\"saveArrayBufferData save!!B!! item:\" + item);\n\t\tif (!item.getEntityName && item.byteLength) {\n\t\t\tconst data = new Binary(item);\n\t\t\tconst newPK = await this.getBinaryPK();\n\t\t\tdata.setPk(newPK);\n\t\t\t// console.log(\"saveArrayBufferData save!!C!! data:\" + data);\n\t\t\t// console.log(data);\n\t\t\tawait this.em.Binary.saveWithBinary(data);\n\t\t\treturn newPK;\n\t\t} else if (item.getEntityName && item.getEntityName() === \"PrimaryKey\") {\n\t\t\treturn item;\n\t\t} else if (item.getEntityName && item.getEntityName() === \"Binary\") {\n\t\t\tconst currentPK = item.getPk();\n\t\t\tif (currentPK) {\n\t\t\t\titem.setPk(currentPK);\n\t\t\t\t// console.log(\"saveArrayBufferData save!!D!! item:\" + item);\n\t\t\t\tawait this.em.Binary.saveWithBinary(item);\n\t\t\t\treturn currentPK;\n\t\t\t} else {\n\t\t\t\t// console.log(\"saveArrayBufferData save!!E!! item:\" + item);\n\t\t\t\tconst newPK = await this.getBinaryPK();\n\t\t\t\titem.setPk(newPK);\n\t\t\t\tawait this.em.Binary.saveWithBinary(item);\n\t\t\t\treturn newPK;\n\t\t\t}\n\t\t}\n\t}\n\tasync getBinaryPK() {\n\t\tconst newNumber = await this.pkais.acquirePKNo(this.userId, binaryEntity, BINALY_PK_ROW);\n\t\treturn PrimaryKey.assemblePK(binaryEntity, newNumber);\n\t}\n\tasync loadAll() {\n\t\treturn await this.ss.loadAll(this.entity);\n\t}\n\tasync getAsMap(keys) {\n\t\treturn await this.ss.getAsMap(keys, this.entity);\n\t}\n\tasync get(pk, isSizeOnly) {\n\t\tif (isSizeOnly) {\n\t\t\tif (binarySizeMap[pk]) {\n\t\t\t\treturn binarySizeMap[pk] * 1;\n\t\t\t}\n\t\t}\n\t\tconst key = \"EntityManagerImpl.get pk:\" + pk + \"/entityName:\" + this.entityName;\n\t\tconsole.time(key)\n\t\tconst result = await this.ss.get(pk, this.entity);\n\t\t// console.log(\"get this.entityName:\" + this.entityName + \"/pk:\" + pk);\n\t\tconsole.timeEnd(key)\n\t\tif (this.isBinary) {\n\t\t\tlet size = await ObjectUtil.recalcSize(this, result);\n\t\t\tbinarySizeMap[pk] = size;\n\t\t}\n\t\treturn result;\n\t}\n\tasync delete(pk) {\n\t\tif (this.isBinary) {\n\t\t\tdelete binarySizeMap[pk];\n\t\t}\n\t\treturn await this.ss.delete(pk);\n\t}\n\n}","import { StorageService } from \"./storageService\"\nimport { EntityManagerImpl } from \"./entityManagerImpl\"\nimport { Binary } from \"./binary\";\nimport { ObjectUtil } from '../../util/objectUtil';\nimport { PrimaryKey } from \"./primaryKey\";\nconst USER_ID = \"default\";\nexport class EntityManager {\n\tconstructor() {}\n\tasync initAsNewUser(entities, userId = USER_ID) {\n\t\tconst promises = [];\n\t\tfor (let entityClass of entities) {\n\t\t\tawait this.initParEntity(entityClass, userId);\n\t\t}\n\t\tawait this.initParEntity(Binary, userId);\n\t}\n\tasync initParEntity(entityClass, userId) {\n\t\tObjectUtil.addBaseCLassese(entityClass);\n\t\tconst entity = new entityClass();\n\t\tconst entityName = entity.getEntityName();\n\t\tthis[entityName] = new EntityManagerImpl(this, entityClass, userId);\n\t\tawait this[entityName].init();\n\t}\n\tisPrimaryKey(item) {\n\t\tif (item && item.getEntityName() === 'PrimaryKey') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tasync getAsMap(keys) {\n\t\tif (!keys || keys.length < 1) {\n\t\t\tconsole.error(\"keys:\" + keys);\n\t\t\talert(\"keys:\" + keys);\n\t\t\treturn null;\n\t\t}\n\t\tconst pk = keys[0];\n\t\tconst truePk = PrimaryKey.getPrimaryKey(pk);\n\t\tif (!PrimaryKey.isPrimaryKey(truePk)) {\n\t\t\tconsole.log(truePk);\n\t\t\treturn null;\n\t\t}\n\t\tconst entityName = PrimaryKey.getEntityName(truePk);\n\t\t// console.log(\"★get entityName:\"+entityName+truePk);\n\t\treturn await this[entityName].getAsMap(keys, this.entity);\n\t}\n\tasync get(pk) {\n\t\tif (!pk) {\n\t\t\tconsole.error(\"pk:\" + pk);\n\t\t\talert(\"pk:\" + pk);\n\t\t\treturn null;\n\t\t}\n\t\tconst truePk = PrimaryKey.getPrimaryKey(pk);\n\t\tif (!PrimaryKey.isPrimaryKey(truePk)) {\n\t\t\tconsole.log(truePk);\n\t\t\treturn null;\n\t\t}\n\t\tconst entityName = PrimaryKey.getEntityName(truePk);\n\t\t// console.log(\"★get entityName:\"+entityName+truePk);\n\t\treturn await this[entityName].get(truePk);\n\t}\n\tasync delete(pk) {\n\t\tif (!pk) {\n\t\t\talert(pk);\n\t\t\treturn null;\n\t\t}\n\t\tconst entityName = PrimaryKey.getEntityName(pk);\n\t\t// console.log(\"★remove entityName:\"+entityName);\n\t\treturn await this[entityName].delete(pk);\n\t}\n}","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['images','setting','series','pages','outputsPars','exports']\nexport class Title extends BaseEntity {\n  constructor(titleId, titlePrefix, name) {\n    super(\"Title\");\n    //console.log(\"!=!titleId:\"+titleId+\"!=!titleId:\"+titleId+\"!=!name:\"+name+\"!=!\"+Date.now());\n    this.id = titleId;\n    this.prefix = titlePrefix;\n    this.name = name;\n    this.target = \"\";\n    this.no = \"\";\n    this.date = \"\";\n    this.pageNo = 0;\n    this.setting = null;\n    this.series = null;\n    this.pageNum = -1;\n    this.images = [];\n    this.pages = [];\n    this.outputsPars = [];\n    this.exports = [];\n    this.direction = \"r2l\";\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n    //console.log(this);\n  }\n  getRefCols(){\n    return refcols;\n  }\n\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['binary','thumbnail']\nexport class Images extends BaseEntity {\n  constructor() {\n    super(\"Images\");\n    this.name = null;\n    this.binary = null;\n    this.type = null;\n    this.thumbnail = null;\n    this.modifyDate=null;\n    this.width = null;\n    this.height = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['binary']\nexport class Thumbnales extends BaseEntity{\n  constructor() {\n    super(\"Thumbnales\");\n    this.name = null;\n    this.binary = null;\n    this.type = null;\n    this.width = null;\n    this.height = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['target']\nexport class Series extends BaseEntity{\n  constructor(name) {\n    super(\"Series\");\n    this.name=name;\n    this.target=null;\n    this.no=\"\";\n    this.date=\"\";\n    this.pageNo=0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","const order = {\n  'number': 1,\n  'string': 2,\n  'boolean': 3,\n  'object': 4,\n  'function': 5,\n  'symbol': 6,\n  'undefined': 7\n};\n\nexport class Sorter {\n  constructor() {}\n  static asc(list, colName) {\n    const func = Sorter.execute([\n      {\n        colName: colName,\n        isDESC: false\n      }\n    ]);\n    list.sort(func);\n  }\n  static desc(list, colName) {\n    const func = Sorter.execute([\n      {\n        colName: colName,\n        isDESC: true\n      }\n    ]);\n    list.sort(func);\n  }\n  static orderBy(list, orders) {\n    const func = Sorter.execute(orders);\n    list.sort(func);\n  }\n  static execute(orders) {\n    return(objA, objB) => {\n      for (let order of orders) {\n        const {colName, isDESC} = order;\n        if(objA === objB){\n          return 0;\n        }\n        if(!objA){\n          return isDESC\n            ? 1\n            : -1;\n        }\n        if(!objB){\n          return isDESC\n            ? -1\n            : 1;\n        }\n        let a = objA[colName];\n        let b = objB[colName];\n        //console.log(\"a:\"+a+\"/b:\"+b);\n        if (a < b) {\n          return isDESC\n            ? 1\n            : -1;\n        } else if (a > b) {\n          return isDESC\n            ? -1\n            : 1;\n        }\n      }\n      return 0;\n    };\n  }\n  static thinningNullData(array) {\n    const thinninged = [];\n    for (let index in array) {\n      const element = array[index];\n      if (element === null || element === undefined) {\n        continue;\n      }\n      thinninged.push(element);\n    }\n    const length = array.length;\n    for (let i = 0; i < length; i++) {\n      array.pop();\n    }\n    for (let index in thinninged) {\n      const element = thinninged[index];\n      array.push(element);\n    }\n  }\n  static typeof() {}\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class ProgressActionCreator {\n  constructor() {}\n  static creatAddAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addProgressBar\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeProgressBar\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateProgressBar\", targetView, data, storeKey);\n  }\n  static creatCompleatAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"compleatProgressBar\", targetView, data, storeKey);\n  }\n}\n","import {MainService} from \"./mainService\";\nimport {ProgressActionCreator} from \"../reduxy/action/progressActionCreator\";\nimport {ActionDispatcher} from \"../util/reactive/actionDispatcher\";\nexport class FileUploadExecuter {\n  constructor() {\n    this.actionDispatcher = ActionDispatcher.createStandAlone();\n    this.name = \"FileUploader\";\n    this.ms = MainService.getInstance();\n  }\n  async readAsArrayBuffer(file) {\n    return await this.read(file, \"ArrayBuffer\");\n  }\n  async readAsBinaryString(file) {\n    return await this.read(file, \"BinaryString\");\n  }\n  async readAsDataURL(file) {\n    return await this.read(file, \"DataURL\");\n  }\n  async readAsText(file) {\n    return await this.read(file, \"text\");\n  }\n  read(file, type = \"binaryString\") {\n    return new Promise((resolve, reject) => {\n      this.reader = new FileReader();\n      //this.progress.init();\n      this.reader.onerror = (event) => {\n        reject(this.errorHandler(event));\n      };\n      this.reader.onprogress = (event) => {\n        this.updateProgress(event);\n      };\n      this.reader.onabort = (e) => {\n        alert('File read cancelled');\n      };\n\n      this.reader.onloadstart = (event) => {\n        this.onLoadStart(event)\n      };\n      this.reader.onload = (event) => {\n        resolve(this.onload(event));\n      };\n      if (type === \"ArrayBuffer\") {\n        this.reader.readAsArrayBuffer(file);\n      } else if (type === \"BinaryString\") {\n        this.reader.readAsBinaryString(file);\n      } else if (type === \"DataURL\") {\n        this.reader.readAsDataURL(file);\n      } else {\n        this.reader.readAsText(file);\n      }\n    })\n  }\n  abortRead() {\n    if (this.reader) {\n      this.reader.abort();\n    }\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatRemoveAction());\n  }\n  errorHandler(event) {\n    switch (event.target.error.code) {\n      case event.target.error.NOT_FOUND_ERR:\n        alert('File Not Found!');\n        break;\n      case event.target.error.NOT_READABLE_ERR:\n        alert('File is not readable');\n        break;\n      case event.target.error.ABORT_ERR:\n        break; // noop\n      default:\n        alert('An error occurred reading this file.');\n    };\n  }\n\n  updateProgress(event) {\n    const percentLoaded = Math.round((event.loaded / event.total) * 100);\n    if (percentLoaded < 100) {\n      //this.progress.progress(percentLoaded);\n      this.actionDispatcher.dispatch(ProgressActionCreator.creatUpdateAction(null,{progress:percentLoaded}));\n\n    }\n  }\n  onload(event) {\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatCompleatAction());\n    return this.reader.result;\n  }\n  onLoadStart() {\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatAddAction());\n    //this.progress.start();\n  }\n}\n","import {Title} from \"../../entity/title\";\nimport {Images} from \"../../entity/images\";\nimport {Thumbnales} from \"../../entity/thumbnales\";\nimport {Series} from \"../../entity/series\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nimport {Sorter} from \"../../util/sorter\";\nimport {MainService} from \"../../service/mainService\";\nimport {FileUploadExecuter} from \"../../service/fileUploadExecuter\";\n\nconst TITLE_STORE_NAME = \"CopiBonTitles\";\nconst defaultTitle = \"CopiBon\";\nconst defaultName = \"DefaultName\";\nconst defaultTitlePrefix = \"title_\";\nexport class TitleManager {\n  constructor(entityManager, titleId) {\n    this.em = entityManager;\n    this.ms = MainService.getInstance();\n    this.ip = this.ms.ip;\n    this.im = this.ms.im;\n    this.tbm = this.ms.tbm;\n    this.sm = this.ms.sm;\n    console.log(\"title is new!!\" + this.tbm);\n    //this.load(titleId).then((title)=>{this.currentTitle=title;console.log(\"title is new!\")});\n  }\n  async loadCurrent() {\n    return this.currentTitle;\n  }\n  async isExist(titleId){\n    return titleId?!!await this.em.Title.get(titleId):false;\n  }\n  async load(titleId = defaultTitle) {\n    if(!titleId){\n      return null;\n    }\n    if (this.currentTitle && this.currentTitle.getPk() === titleId) {\n      return this.currentTitle;\n    }\n    let title = await this.em.Title.get(titleId);\n    if (!title) {\n      title = await this.createTitle(titleId);\n    }\n    this.currentTitle = title;\n    return title;\n  }\n\n  async createTitle(titleId = defaultTitle, titlePrefix = defaultTitlePrefix, name = defaultName) {\n    const title = new Title(titleId, titlePrefix, name);\n    title.setPk(titleId);\n    title.setting = titleId;\n    await this.sm.createDefault(titleId);\n    await this.em.Title.save(title);\n    return title;\n  }\n\n  async changeTitle(newTitleId) {\n    this.currentTitle = await this.loadTitle(newTitleId);\n    if (!this.currentTitle) {\n      this.currentTitle = await this.createTitle(defaultTitle, defaultTitlePrefix, defaultName);\n    }\n  }\n  async loadTitleList() {\n    return await this.em.Title.loadAll();\n  }\n  async saveTitle(title) {\n    if (title) {\n      title.updateDate = Date.now();\n      const images = title.images;\n      Sorter.thinningNullData(images);\n      for (let index in images) {\n        const image = images[index];\n        if (!PrimaryKey.isPrimaryKey(image)) {\n          images[index] = PrimaryKey.getPrimaryKey(image);\n        }\n      }\n      this.currentTitle = await this.em.Title.save(title);\n    }\n  }\n  async deleteTitleCascade() {\n    const titelId = this.titelId;\n    const titelPrefix = this.titelPrefix;\n  }\n  async addImageFiles(files) {\n    const title = await this.loadCurrent();\n    const images = title.images;\n    Sorter.thinningNullData(images);\n    const iamageEntitis = [];\n    let count = images.length;\n    for (let file of files) {\n      let {imagePk, imageEntity} = await this.im.saveImageFile(file, count);\n      count++;\n      images.push(imagePk);\n      iamageEntitis.push(imageEntity);\n    }\n    //console.log(images);\n    await this.saveTitle(title);\n    return iamageEntitis;\n  }\n  async addImage(name, dataURI) {}\n  async removeImage(pk) {\n    const title = await this.load();\n    const images = title.images;\n    for (let index in images) {\n      const imageEntityPk = images[index];\n      if (PrimaryKey.getPrimaryKey(imageEntityPk) === pk) {\n        await this.im.remove(pk);\n        delete images[index];\n      };\n    }\n    // console.log(images);\n    await this.saveTitle(title);\n  }\n  async getExports() {\n    const title = await this.loadCurrent();\n    if(title && title.exports && Array.isArray(title.exports)){\n      return title.exports;\n    }else{\n      title.exports = [];\n      await this.saveTitle(title);\n      return title.exports;\n    }\n  }\n  async getCurrentTitleName() {\n    const title = await this.loadCurrent();\n    return title.name;\n  }\n  async saveCurrent() {\n    const title = await this.loadCurrent();\n    await this.saveTitle(title);\n  }\n\n  async loadSettings() {\n    const title = await this.loadCurrent();\n    const pk = title.getPk();\n    const settingEntityLoad = await this.sm.loadByPk(pk);\n    if(!settingEntityLoad){\n      const settingEntity =  await this.sm.createDefault(pk);\n      return settingEntity;\n    }\n    return settingEntityLoad;\n  }\n  async loadThumbnails() {\n    const title = await this.loadCurrent();\n    return await this.im.loadThumbnails(title.images);\n  }\n  async updateImagesListing(newList) {\n    const title = await this.loadCurrent();\n    return await this.im.updateImagesListing(title.images,newList);\n  }\n}\n","import { Binary } from \"../entity/binary\";\nimport { PrimaryKey } from \"../entity/primaryKey\";\nexport class BinaryManager {\n\tconstructor(entityManager) {\n\t\tthis.em = entityManager;\n\t}\n\tasync load(pk) {\n\t\tconsole.time('BinaryManager.load');\n\t\tlet binaryPk = pk;\n\t\tif (!pk) {\n\t\t\tbinaryPk = PrimaryKey.getPrimaryKey(pk);\n\t\t}\n\t\tconst result = await this.em.Binary.get(binaryPk);\n\t\tconsole.timeEnd('BinaryManager.load');\n\t\treturn result\n\t}\n\tasync remove(pk) {\n\t\tlet binaryPk = pk;\n\t\tif (!pk) {\n\t\t\tbinaryPk = PrimaryKey.getPrimaryKey(pk);\n\t\t}\n\t\treturn await this.em.Binary.delete(binaryPk);\n\t}\n\tasync save(pk, name, ab, addDataMap) {\n\t\tconsole.time('BinaryManager.save');\n\t\t// console.log(\"BinaryManager save!!A!! pk:\" + pk);\n\t\t// console.log(binary);\n\t\t// console.log(\"BinaryManager save!!B!! name:\" + name);\n\t\tlet binEntity = null;\n\t\tif (pk) {\n\t\t\tbinEntity = await this.em.Binary.get(pk);\n\t\t}\n\t\t// console.log(binary);\n\t\t//alert(binary);\n\t\t// let binaryPk = PrimaryKey.getPrimaryKey(binary);\n\t\tif (!binEntity) {\n\t\t\tbinEntity = new Binary(ab);\n\t\t} else {\n\t\t\tbinEntity.updateDate = Date.now();\n\t\t\tbinEntity._ab = ab;\n\t\t}\n\t\tif (addDataMap && typeof addDataMap === \"object\") {\n\t\t\tfor (let key in addDataMap) {\n\t\t\t\tbinEntity[key] = addDataMap[key];\n\t\t\t}\n\t\t}\n\t\tconst binaryEntitySaved = await this.em.Binary.save(binEntity)\n\t\tconsole.timeEnd('BinaryManager.save');\n\t\treturn PrimaryKey.getPrimaryKey(binaryEntitySaved);\n\t}\n}","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['previewThumbnail','outputImage','outputExpandImage','outputDualImage','thumbnail','baseImage']\nexport class Pages extends BaseEntity{\n  constructor() {\n    super(\"Pages\");\n    this.previewThumbnail = null;\n    this.outputImage = null;\n    this.outputExpandImage = null;\n    this.outputDualImage = null;\n    this.thumbnail = null;\n    this.baseImage = null;\n    this.isForceColor = false;\n    this.isNoCropping = false;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","import {Pages} from \"../../entity/pages\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class PagesManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  setTitleManager(tm){\n    this.tm = tm;\n  }\n  async loadFromImagePk(pk) {\n    const pagePk = PrimaryKey.getPrimaryKey(pk);\n    const pageEntity = await this.em.get(pagePk);\n    if (!pageEntity || !pageEntity.thumbnail) {\n      return null;\n    }\n    const thumbnailPk = PrimaryKey.getPrimaryKey(pageEntity.thumbnail);\n    const thumbnailEntity = await this.em.get(thumbnailPk);\n    thumbnailEntity.parentPk = pagePk;\n    return thumbnailEntity\n  }\n  async remove(pk) {\n    const target = await this.em.Pages.get(pk);\n    if (target) {\n      if (target.previewThumbnail) {\n        await this.em.Binary.delete(target.previewThumbnail);\n      }\n      if (target.outputImage) {\n        await this.em.Binary.delete(target.outputImage);\n      }\n      await this.em.Pages.delete(pk);\n    }\n  }\n  async removeImage(pk) {\n    const target = await this.em.Pages.get(pk);\n    if (target) {\n      if (target.previewThumbnail) {\n        await this.em.Binary.delete(target.previewThumbnail);\n      }\n      if (target.outputImage) {\n        await this.em.Binary.delete(target.outputImage);\n      }\n      if (target.outputDualImage) {\n        await this.em.Binary.delete(target.outputDualImage);\n      }\n      if (target.outputExpandImage) {\n        await this.em.Binary.delete(target.outputExpandImage);\n      }\n      target.baseImage = null;\n      target.thumbnail = null;\n      target.outputDualImage = null;\n      target.outputExpandImage = null;\n      target.previewThumbnail = null;\n      target.outputImage = null;\n      await this.em.Pages.save(target);\n    }\n  }\n\n  async addPage(imagePk,pagePk) {\n    const title = await this.tm.load();\n    const pages = title.pages;\n    const pageEntitis = [];\n    for (let index in pages) {\n      const pk = pages[index];\n      if (!pk) {\n        continue;\n      }\n      const pageEntity = await this.em.get(pk);\n      if(pk === pagePk){\n        const imageEntity = await this.em.get(imagePk);\n        const thumbnailEntity = await this.em.get(imageEntity.thumbnail);\n        const binaryEntity = await this.em.get(thumbnailEntity.binary);\n        pageEntity.thumbnail = imageEntity.thumbnail;\n        pageEntity.baseImage = imagePk;\n        await this.em.Pages.save(pageEntity);\n        //alert(\"pagePk:\"+pagePk+\"/imagePｋ:\"+imagePk+JSON.stringify(pageEntity));\n      }\n      pageEntitis.push(pageEntity);\n    }\n    return pageEntitis;\n  }\n  async move(fromPk, toPk) {\n    const targetFrom = await this.em.Pages.get(fromPk);\n    const targetTo = await this.em.Pages.get(toPk);\n    if(!targetFrom|| !targetTo){\n      return \n    }\n    const previewThumbnailFrom = targetFrom.previewThumbnail;\n    const previewThumbnailTo = targetTo.previewThumbnail;\n    const outputImageFrom = targetFrom.outputImage;\n    const outputImageTo = targetTo.outputImage;\n    const thumbnailFrom = targetFrom.thumbnail;\n    const thumbnailTo = targetTo.thumbnail;\n    const baseImageFrom = targetFrom.baseImage;\n    const baseImageTo = targetTo.baseImage;\n    targetFrom.previewThumbnail= previewThumbnailTo;\n    targetTo.previewThumbnail= previewThumbnailFrom;\n    targetFrom.outputImage= outputImageTo;\n    targetTo.outputImage= outputImageFrom;\n    targetFrom.thumbnail= thumbnailTo;\n    targetTo.thumbnail= thumbnailFrom;\n    targetFrom.baseImage= baseImageTo;\n    targetTo.baseImage= baseImageFrom;\n    await this.em.Pages.save(targetFrom);\n    await this.em.Pages.save(targetTo);\n  }\n  async loadAll() {\n    const retList = [];\n    const pages = this.em.Pages.loadAll();\n    for (let page of pages) {\n      retList.push(page);\n    }\n    return retList;\n  }\n  async load(pk) {\n    return await this.em.Pages.get(pk);\n  }\n  /*\n  */\n  async save(pk, previewThumbnail=null, outputImage=null,thumbnail=null,baseImage=null, listing = 0,binary = null) {\n    let page = null;\n    if (pk) {\n      page = await this.em.Pages.get(pk);\n    }\n    let binaryPk = binary?PrimaryKey.getPrimaryKey(binary):null;\n    if (!page) {\n      page = new Pages();\n    } else {\n      page.updateDate = Date.now();\n    }\n    page.previewThumbnail = previewThumbnail || previewThumbnail === null\n      ? previewThumbnail\n      : page.previewThumbnail;\n    page.outputImage = binaryPk\n      ? binaryPk\n      : binary;\n    page.outputImage = outputImage || outputImage === null\n      ? outputImage\n      : page.outputImage;\n    page.thumbnail = thumbnail || thumbnail === null\n      ? thumbnail\n      : page.thumbnail;\n    page.baseImage = baseImage || baseImage === null\n      ? baseImage\n      : page.baseImage;\n    page.listing = listing || listing === null\n      ? listing\n      : page.listing;\n    return await this.em.Pages.save(page);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['outputProfile']\nexport class Settings extends BaseEntity{\n  constructor() {\n    super(\"Settings\");\n    this.name = \"\";\n    this.pageNum = 0;\n    this.startPage = \"l\";\n    this.pageDelection = 0;\n    this.outputProfile = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","import {Settings} from \"../../entity/settings\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class SettingsManager {\n  constructor(entityManager, opm) {\n    this.em = entityManager;\n    this.opm = opm;\n  }\n  async loadByPk(titilePk) {\n    const settingEntity = await this.em.Settings.get(titilePk);\n    return settingEntity;\n  }\n\n  async loadAll() {\n    const retList = [];\n    const settings = this.em.Pages.loadAll();\n    for (let setting of settings) {\n      retList.push(setting);\n    }\n    return retList;\n  }\n  async createDefault(titilePk) {\n    const setting = new Settings();\n    setting.setPk(titilePk);\n    setting.pageNum = 8;\n    setting.startPage = \"l\";\n    setting.pageDelection = \"r2l\";\n    setting.outputProfile = this.opm.getDefaultPk();\n    setting.listing = 0;\n    const saved = await this.em.Settings.save(setting);\n    return saved;\n  }\n  async save(pk, name, pageNum, startPage, pageDirection,outputProfile, listing = 0) {\n    let settings = null;\n    if (pk) {\n      settings = await this.em.Settings.get(pk);\n    }\n    if (!settings) {\n      settings = new Settings();\n    } else {\n      settings.updateDate = Date.now();\n    }\n    settings.name = name || name === null\n      ? name\n      : settings.name;\n    settings.pageNum = pageNum\n      ? pageNum\n      : 8;\n    settings.startPage = startPage || startPage === null\n      ? startPage\n      : settings.startPage;\n    settings.pageDirection = pageDirection || pageDirection === null\n      ? pageDirection\n      : settings.pageDirection;\n    settings.outputProfile = outputProfile || outputProfile === null\n      ? outputProfile\n      : settings.outputProfile;\n    settings.listing = listing || listing === null\n      ? listing\n      : settings.listing;\n    return await this.em.Settings.save(settings);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = []\nexport class OutputProfiles extends BaseEntity {\n  constructor(id, prefix, name) {\n    super(\"OutputProfiles\");\n    //console.log(\"!=!titleId:\"+titleId+\"!=!titleId:\"+titleId+\"!=!name:\"+name+\"!=!\"+Date.now());\n    this.id = id;\n    this.prefix = prefix;\n    this.pageSize = \"A5\";\n    this.direction = \"r2l\";\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n    //console.log(this);\n  }\n  getRefCols(){\n    return refcols;\n  }\n\n}\n","import {OutputProfiles} from \"../../entity/outputProfiles\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nconst defaultPk = 'copibondefa'\nexport class OutputProfilesManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n    this.createDefault();\n  }\n  getDefaultPk() {\n    return defaultPk;\n  }\n  async loadAll() {\n    const retList = [];\n    const outputProfiles = await this.em.OutputProfiles.loadAll();\n    for (let outputProfile of outputProfiles) {\n      retList.push(outputProfile);\n    }\n    if (retList.length < 1) {\n      retList.push(await this.createDefault());\n    }\n    return retList;\n  }\n  async loadByPk(pk) {\n    const outputProfilePK = PrimaryKey.getPrimaryKey(pk);\n    if (!outputProfilePK) {\n      const outputProfileEntity = await this.em.OutputProfiles.get(pk);\n      return outputProfileEntity;\n    } else {\n      const outputProfileEntity = await this.em.OutputProfiles.get(outputProfilePK);\n      return outputProfileEntity;\n    }\n  }\n  async createDefault() {\n    const savedOne = await this.loadByPk(defaultPk);\n    if (savedOne) {\n      return savedOne;\n    }\n    const outputProfiles = new OutputProfiles();\n    outputProfiles.setPk(defaultPk);\n    const saved = await this.em.OutputProfiles.save(outputProfiles);\n    return saved;\n  }\n  async save(pk, name, binary, type, width, height, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.OutputProfiles.get(pk);\n    }\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Setting();\n    } else {\n      image.updateDate = Date.now();\n    }\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    return await this.em.Thumbnales.save(image);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nconst refcols = ['binary','thumbnail']\nexport class ImageOutputs extends BaseEntity {\n  constructor() {\n    super(\"ImageOutputs\");\n    this.name = null;\n    this.binary = null;\n    this.type = null; // zip or pdf\n    this.thumbnail = null; // thumnails of firstPage\n    this.orderName = \"\";\n    this.size = 0;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n  getRefCols(){\n    return refcols;\n  }\n}\n","import {ImageOutputs} from \"../../entity/imageOutputs\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class ImageOutputsManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.ImageOutputs.get(binaryPk);\n  }\n  async remove(pk) {\n    const target = await this.em.ImageOutputs.get(pk);\n    if (target) {\n      if (target.binary) {\n        await this.em.Binary.delete(target.binary);\n      }\n      await this.em.ImageOutputs.delete(pk);\n    }\n  }\n  async save(pk, name, binary, type, orderName,size, listing = 0) {\n    let imageOutputs = null;\n    if (pk) {\n      imageOutputs = await this.em.ImageOutputs.get(pk);\n    }\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!imageOutputs) {\n      imageOutputs = new ImageOutputs();\n    } else {\n      imageOutputs.updateDate = Date.now();\n    }\n    imageOutputs.name = name || name === null\n      ? name\n      : imageOutputs.name;\n    imageOutputs.binary = binaryPk\n      ? binaryPk\n      : binary;\n    imageOutputs.type = type || type === null\n      ? type\n      : imageOutputs.type;\n    imageOutputs.orderName = orderName || orderName === null\n      ? orderName\n      : imageOutputs.orderName;\n    imageOutputs.size = size || size === null\n      ? size\n      : imageOutputs.size;\n    imageOutputs.listing = listing || listing === null\n      ? listing\n      : imageOutputs.listing;\n    const imageEntitySaved =  await this.em.ImageOutputs.save(imageOutputs);\n    return PrimaryKey.getPrimaryKey(imageEntitySaved);\n  }\n}\n","import {Images} from \"../../entity/images\";\nimport {MainService} from \"../../service/mainService\";\nimport bc from \"../../util/binaryConverter\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nimport {Sorter} from \"../../util/sorter\";\nimport {FileUploadExecuter} from \"../fileUploadExecuter\";\n\nconst loadedImageMap = new Map();\nexport class ImageManager {\n  constructor(entityManager) {\n    this.ms = MainService.getInstance();\n    this.em = entityManager;\n    this.ip = this.ms.ip;\n    this.tbm = this.ms.tbm;\n  }\n  setTitleManager(tm){\n    this.tm = tm;\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (typeof pk!==\"string\") {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Images.get(binaryPk);\n  }\n  async reloadLoadedImages() {\n    return await this.createRetList(this.getEntitisAsList());\n  }\n  async loadImages() {\n    const title = await this.tm.load();\n    const images = title.images;\n    const imageEntitis = [];\n    for (let index in images) {\n      const pk = images[index];\n      if (!pk) {\n        continue;\n      }\n      const imageEntity = await this.em.get(pk);\n      if(imageEntity){\n\n      }\n      imageEntitis.push(imageEntity);\n    }\n    return await this.createRetList(imageEntitis);\n  }\n  async remove(pk) {\n    const imageEntity = await this.em.get(pk);\n    console.log(\"removeImage imageEntity.thumbnail:\" + imageEntity.thumbnail);\n    const binaryPk = PrimaryKey.getPrimaryKey(imageEntity.binary);\n    console.log(\"removeImage binaryPk:\" + binaryPk);\n    const thumbnailPk = PrimaryKey.getPrimaryKey(imageEntity.thumbnail);\n    console.log(\"removeImage thumbnailPk:\" + thumbnailPk);\n    if (thumbnailPk) {\n      const thumbnailEntity = await this.em.get(thumbnailPk);\n      console.log(\"removeImage thumbnailEntity:\" + thumbnailEntity);\n      const thumbnailBinaryPk = PrimaryKey.getPrimaryKey(thumbnailEntity.binary);\n      console.log(\"removeImage thumbnailBinaryPk:\" + thumbnailBinaryPk);\n      await this.em.delete(thumbnailBinaryPk);\n      await this.em.delete(thumbnailPk);\n    }\n    await this.em.delete(binaryPk);\n    await this.em.delete(pk);\n  }\n  async saveImageFile(file, count = 0) {\n    const fue = new FileUploadExecuter();\n    const arrayBuffer = await fue.readAsArrayBuffer(file);\n    const data = {\n      name: file.name,\n      ab: arrayBuffer,\n      type: file.type\n    };\n    const imgElm = await this.ip.createImageNodeByData(data);\n    const dataURI = await this.ip.createThumbnail(arrayBuffer, 100, 100, file.type);\n    const arrayBufferThumbnail = bc.dataURI2ArrayBuffer(dataURI);\n    const imgElmThumb = await this.ip.createImageNodeByData({name: file.name, ab: arrayBufferThumbnail, type: file.type});\n    const thumbnailEntity = await this.tbm.save(null, file.name, arrayBufferThumbnail, file.type, imgElmThumb.width, imgElmThumb.height, 0);\n    console.log(\"addImageFiles thumbnailEntity:\" + thumbnailEntity);\n    const thumbnailPk = PrimaryKey.getPrimaryKey(thumbnailEntity);\n    console.log(\"addImageFiles thumbnailPk:\" + thumbnailPk);\n    const imageEntity = await this.save(null, file.name, arrayBuffer, file.type, imgElm.width, imgElm.height, thumbnailPk, count);\n    console.log(\"addImageFiles imageEntity:\" + imageEntity);\n    const imagePk = imageEntity.getPk();\n    return {imagePk: imagePk, imageEntity: imageEntity};\n  }\n  async save(pk, name, binary, type, width, height, thumbnail, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.Images.get(pk);\n    }\n        console.log(\"ImageManager save!!9!! binary:\" + binary);\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Images();\n    } else {\n      image.updateDate = Date.now();\n    }\n\n    console.log(\"ImageManager save!!A!! image:\" + image);\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.thumbnail = thumbnail || thumbnail === null\n      ? thumbnail\n      : PrimaryKey.getPrimaryKey(image.thumbnail);\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    const savedData = await this.em.Images.save(image);\n    console.log(\"ImageManager save!!B!! image:\" + savedData);\n    return savedData;\n  }\n\n  async loadThumbnails(images) {\n    const retList = [];\n    const imageList = [];\n    for (let image of images) {\n      const imagePk = PrimaryKey.getPrimaryKey(image);\n      const imageEntity = await this.load(imagePk);\n      imageList.push(imageEntity);\n    }\n    Sorter.orderBy( imageList,[{colName:\"listing\", isDESC:false}]);\n    for (let imageEntity of imageList) {\n      const imagePk = PrimaryKey.getPrimaryKey(imageEntity);\n      const thumbnailEntity = await this.tbm.loadFromImagePk(imagePk);\n      retList.push(thumbnailEntity);\n    }\n    return retList;\n  }\n  async createRetList(imageEntitis) {\n    Sorter.orderBy(imageEntitis, [\n      {\n        colName: \"listing\",\n        isDESC: false\n      }, {\n        colName: \"updateDate\",\n        isDESC: true\n      }\n    ]);\n    //console.log(\"=★=showFilesInit imageEntitis:\" + imageEntitis.length);\n    const retList = [];\n    for (let imageEntity of imageEntitis) {\n      const pk = imageEntity && imageEntity.getPk?imageEntity.getPk():null;\n      if (loadedImageMap.has(pk)) {\n        const retObj = loadedImageMap.get(pk);\n        retList.push(retObj);\n      } else if (!pk) {\n        retList.push(null);\n      } else {\n        const retObj = await this.processParImage(imageEntity);\n        loadedImageMap.set(pk, retObj);\n        retList.push(retObj);\n      }\n    }\n    return retList;\n  }\n  async processParImage(imageEntity) {\n    const imagePk = imageEntity.getPk();\n    const thumbnailEntity = await this.em.get(imageEntity.thumbnail);\n    const binaryEntity = await this.em.get(thumbnailEntity.binary);\n    const imgElm = await this.ip.createImageNodeByData({name: imageEntity.name, ab: binaryEntity.ab, type: imageEntity.type});\n    const size = (\n      binaryEntity.ab\n      ? (new Uint8Array(binaryEntity.ab)).length\n      : 0);\n    const imageText = escape(imageEntity.name) + ' (' + (\n    imageEntity.type || 'n/a') + ') - ' + size + 'bytes, last modified: ' + imageEntity.modifyDate + ' size:' + imageEntity.width + 'x' + imageEntity.height\n\n    const retObj = {\n      imageEntity: imageEntity,\n      binaryEntity: binaryEntity,\n      size: size,\n      imageText: imageText,\n      isOnPage:false\n    };\n    return retObj;\n  }\n  removeLoaded(pk){\n    loadedImageMap.delete(pk);\n  }\n  getRetObjsAsList() {\n    const retList = [];\n    for (let [key, retObj] of loadedImageMap.entries()) {\n      retList.push(retObj);\n    }\n    return retList;\n  }\n  getEntitisAsList() {\n    const retList = [];\n    for (let [key, retObj] of loadedImageMap.entries()) {\n      retList.push(retObj.imageEntity);\n    }\n    return retList;\n  }\n  getFromLoaded(pk){\n    return loadedImageMap.get(pk);\n  }\n}\n","import {Thumbnales} from \"../../entity/thumbnales\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class ThumbnaleManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  async loadFromImagePk(pk) {\n    const imagePk = PrimaryKey.getPrimaryKey(pk);\n    const imageEntity = await this.em.get(imagePk);\n    if(!imageEntity || !imageEntity.thumbnail){\n      return null;\n    }\n    const thumbnailPk  = PrimaryKey.getPrimaryKey(imageEntity.thumbnail);\n    const thumbnailEntity = await this.em.get(thumbnailPk);\n    thumbnailEntity.parentPk = imagePk;\n    return thumbnailEntity\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Thumbnales.get(binaryPk);\n  }\n  async save(pk, name, binary, type, width, height, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.Thumbnales.get(pk);\n    }\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Thumbnales();\n    } else {\n      image.updateDate = Date.now();\n    }\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    return await this.em.Thumbnales.save(image);\n  }\n}\n","const ua = navigator.userAgent.replace(/[\\.0-9]+/g, \"x\");\nconst domain = window.location;\nconst A5 = {};\nexport default {\n\tA5: A5\n}\nexport const SettingData = {\n\tpageStart: {\n\t\tl: \"fromLeft\",\n\t\tr: \"fromRight\"\n\t},\n\tpageDirection: {\n\t\tl2r: \"LeftToRight\",\n\t\tr2l: \"RightToLeft\"\n\t},\n\tpageNums: [1, 2, 4, 6, 8, 10, 12, 16]\n}\nexport const PrefareceData = {\n\tpreviewSizeSingle: {\n\t\tw400: 400,\n\t\tw500: 500,\n\t\tw800: 800,\n\t\tw1000: 1000\n\t},\n\te: {\n\t\tw400: 400,\n\t\tw500: 500,\n\t\tw800: 800,\n\t\tw1000: 1000\n\t}\n}\nexport const dpis = {\n\tdpi72: 72,\n\tdpi150: 150,\n\tdpi300: 300,\n\tdpi350: 350,\n\tdpi600: 600,\n\tdpi1200: 1200,\n\tsame: 0\n}\nexport const printMargin = {\n\tnone: 0,\n\tconbini: 5\n}\nexport const basePaper = {\n\tB6: {\n\t\ttarget: \"B6\",\n\t\tframe: \"B6\",\n\t\tmultiple: 1\n\t},\n\tA5: {\n\t\ttarget: \"A5\",\n\t\tframe: \"A5\",\n\t\tmultiple: 1\n\t},\n\tB5: {\n\t\ttarget: \"B5\",\n\t\tframe: \"B5\",\n\t\tmultiple: 1\n\t},\n\tA4: {\n\t\ttarget: \"A4\",\n\t\tframe: \"A4\",\n\t\tmultiple: 1\n\t},\n\tB4: {\n\t\ttarget: \"B4\",\n\t\tframe: \"B4\",\n\t\tmultiple: 1\n\t},\n\tA3: {\n\t\ttarget: \"A3\",\n\t\tframe: \"A3\",\n\t\tmultiple: 1\n\t},\n\tmangaPaperB5: {\n\t\ttarget: \"A5\",\n\t\tframe: \"B5\",\n\t\tmultiple: 1\n\t},\n\tmangaPaperA4: {\n\t\ttarget: \"B5\",\n\t\tframe: \"A4\",\n\t\tmultiple: 1\n\t},\n\tmangaPaperA4ExpandTatikiri: {\n\t\ttarget: \"B5\",\n\t\tframe: \"A4\",\n\t\tmultiple: (274 / 257)\n\t},\n\tmangaPaperB4: {\n\t\ttarget: \"A4\",\n\t\tframe: \"B4\",\n\t\tmultiple: 1\n\t},\n\tmangaPaperA3: {\n\t\ttarget: \"B4\",\n\t\tframe: \"A3\",\n\t\tmultiple: 1\n\t},\n\tpure_fit: {\n\t\ttarget: \"same\",\n\t\tframe: \"same\",\n\t\tmultiple: 1\n\t}\n}\nexport const paperSizeSet = {\n\tA6: {\n\t\tx: 105,\n\t\ty: 148\n\t},\n\tB6: {\n\t\tx: 128,\n\t\ty: 182\n\t},\n\tA5: {\n\t\tx: 148,\n\t\ty: 210\n\t},\n\tB5: {\n\t\tx: 182,\n\t\ty: 257\n\t},\n\tA4: {\n\t\tx: 210,\n\t\ty: 297\n\t},\n\tB4: {\n\t\tx: 257,\n\t\ty: 364\n\t},\n\tA3: {\n\t\tx: 297,\n\t\ty: 420\n\t}\n}\n\nexport const ExportOrders = [ //\n\t{\n\t\torderName: \"B6 none croping\",\n\t\tbasePaper: \"B6\"\n\t},\n\t{\n\t\torderName: \"A5 none croping\",\n\t\tbasePaper: \"A5\"\n\t},\n\t{\n\t\torderName: \"B5 none croping\",\n\t\tbasePaper: \"B5\"\n\t},\n\t{\n\t\torderName: \"A4 none croping\",\n\t\tbasePaper: \"A4\"\n\t},\n\t{\n\t\torderName: \"B4 none croping\",\n\t\tbasePaper: \"B4\"\n\t},\n\t{\n\t\torderName: \"A3 none croping\",\n\t\tbasePaper: \"A3\"\n\t},\n\t{\n\t\torderName: \"Manga Paper B5 Tatikiri to A5\",\n\t\tbasePaper: \"mangaPaperB5\"\n\t},\n\t{\n\t\torderName: \"Manga Paper A4 Tatikiri to B5\",\n\t\tbasePaper: \"mangaPaperA4\"\n\t},\n\t{\n\t\torderName: \"Manga Paper B4 Tatikiri to A4\",\n\t\tbasePaper: \"mangaPaperB4\"\n\t},\n\t{\n\t\torderName: \"Manga Paper A4 ExpandTatikiriSpecial\",\n\t\tbasePaper: \"mangaPaperA4ExpandTatikiri\"\n\t}\n];","import { dpis, printMargin, paperSizeSet, basePaper } from \"../../settings/exportSettings\";\nexport class Paper {\n\tconstructor() {\n\t\t//\n\t\tthis.paparSize = {}\n\t}\n\tcalcClopOffsetPixcel(basePaperSet, dpi) {\n\t\tconst cropSizeMm = this.calcClopOffsetMm(basePaperSet);\n\t\t//const size = this.getTargetPaperSizeMm(basePaperSet);\n\t\tconst offset = {\n\t\t\tx: this.calcPixcel(dpi, cropSizeMm.x) * -1,\n\t\t\ty: this.calcPixcel(dpi, cropSizeMm.y) * -1\n\t\t};\n\t\t// console.log(\"calcClopOffsetPixce:l\"+JSON.stringify(offset)+\"/\"+dpi);\n\t\treturn offset;\n\t}\n\tcalcClopOffsetMm(basePaperSet) {\n\t\tconst targetPaper = basePaper[basePaperSet];\n\t\tconst offset = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\t\tif (!targetPaper || targetPaper.target === \"same\") {\n\t\t\t//\n\t\t\treturn offset;\n\t\t}\n\t\tconst targetSize = this.getPaperSizeMm(targetPaper.target);\n\t\tconst frameSize = this.getPaperSizeMm(targetPaper.frame);\n\t\tconst targetX = targetSize.x * targetPaper.multiple;\n\t\tconst targetY = targetSize.y * targetPaper.multiple;\n\t\toffset.x = (frameSize.x - targetX) / 2;\n\t\toffset.y = (frameSize.y - targetY) / 2;\n\t\treturn offset;\n\t}\n\tgetTargetPaperSizeMm(basePaperSet) {\n\t\tconst size = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\t\tif (!basePaperSet) {\n\t\t\t//\n\t\t\treturn size;\n\t\t}\n\t\tconst targetSize = this.getPaperSizeMm(basePaperSet);\n\t\treturn targetSize;\n\t}\n\tgetTargetPaperSize(basePaperSet, dpiName) {\n\t\tconst targetPaper = basePaper[basePaperSet];\n\t\tconst size = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\t\tif (!targetPaper || targetPaper.target === \"same\") {\n\t\t\t//\n\t\t\treturn size;\n\t\t}\n\t\tconst targetSize = this.getTargetPaperSizeMm(targetPaper.target);\n\t\tconst dpi = this.getDpi(dpiName);\n\t\tsize.x = this.calcPixcel(targetSize.x, dpi);\n\t\tsize.y = this.calcPixcel(targetSize.y, dpi);\n\t\treturn size;\n\t}\n\tcalcPixcel(dpi, mm) {\n\t\treturn Math.floor(mm * dpi / 25.4);\n\t}\n\n\tcalcDpi(pixcel, mm) {\n\t\treturn pixcel / mm * 25.4;\n\t}\n\tgetPaperFrameSizeMm(basePaperSet) {\n\t\tconst targetPaper = basePaper[basePaperSet];\n\t\treturn paperSizeSet[targetPaper.frame];\n\t}\n\tgetTragetPaper(basePaperSet) {\n\t\tconst targetPaper = basePaper[basePaperSet];\n\t\treturn targetPaper.target;\n\t}\n\tgetPaperSizeMm(paperSize) {\n\t\treturn paperSizeSet[paperSize];\n\t}\n\tgetPrintMargin(marginSetting) {\n\t\treturn printMargin[marginSetting];\n\t}\n\tgetDpi(dpiName) {\n\t\treturn dpis[dpiName];\n\t}\n\tgetOffset(dpiName, marginSetting) {\n\t\tconst margin = this.getPrintMargin(marginSetting);\n\t\tconst dpi = this.getDpi(dpiName);\n\t\tconst mpi = dpi / 25.4;\n\t\treturn Math.floor(mpi * margin);\n\t}\n\tgetPixcelSizeBySelected(paperSize, dpiName, marginSetting = \"none\") {\n\t\tconst size = this.getPaperSizeMm(paperSize);\n\t\tconst margin = this.getPrintMargin(marginSetting);\n\t\tconst dpi = this.getDpi(dpiName);\n\t\treturn this.getPixcelSizeWithMargin(dpi, size.x, size.y, margin);\n\t}\n\tgetPixcelSize(dpi, mmWidth, mmHeight) {\n\t\tconst mpi = dpi / 25.4;\n\t\treturn {\n\t\t\twidth: Math.floor(mpi * mmWidth),\n\t\t\theight: Math.floor(mpi * mmHeight)\n\t\t}\n\t}\n\tgetPixcelSizeWithMargin(dpi, mmWidth, mmHeight, mmMargin) {\n\t\tconst mmMarginDual = mmMargin * 2;\n\t\treturn this.getPixcelSize(dpi, mmWidth - mmMarginDual, mmHeight - mmMarginDual)\n\t}\n}","import vu from \"./viewUtil\";\nimport bc from \"./binaryConverter\";\nimport { Paper } from \"./image/paper\";\nimport { ImageMerger } from \"./image/imageMerger\";\nimport { ImageResizer } from \"./image/imageResizer\";\nconst imgRe = /^image\\/.+|application\\/octet-stream/;\nexport class ImageProcessor {\n\tconstructor() {\n\t\tthis.canvas = vu.createCanvas(null, \"hidden\");\n\n\t\tthis.ctx = this.canvas.getContext('2d');\n\t\tthis.paper = new Paper();\n\t\tthis.imageMerger = new ImageMerger();\n\t\tthis.imageResizer = new ImageResizer();\n\t\twindow.onload = () => {\n\t\t\tdocument.body.appendChild(this.canvas);\n\t\t};\n\t}\n\tsetDataURI(dataURI) {\n\t\tthis.dataURI = dataURI;\n\t}\n\tasync resize(ab, maxWidth, maxHeight) {\n\t\tconst origin = await this.getImageDataFromArrayBuffer(ab);\n\t\treturn this.resizeInMaxSize(origin, maxWidth, maxHeight);\n\t}\n\tasync resizeAsPaper(ab, paperSize, dpiName, marginSetting) {\n\t\tconst origin = await this.getImageDataFromArrayBuffer(ab);\n\t\tconst sizeOfPaper = this.paper.getPixcelSizeBySelected(paperSize, dpiName);\n\t\tlet newPaperData = this.ctx.createImageData(sizeOfPaper.width, sizeOfPaper.height);\n\t\tconst sizeOfImage = this.paper.getPixcelSizeBySelected(paperSize, dpiName, marginSetting);\n\t\tconst newData = this.resizeInMaxSize(origin, sizeOfImage.width, sizeOfImage.height);\n\t\tconst marginMM = this.paper.getOffset(dpiName, marginSetting);\n\t\tconst data = {\n\t\t\toffsetY: marginMM,\n\t\t\toffsetX: marginMM,\n\t\t\tdata: newData.data,\n\t\t\twidth: newData.width,\n\t\t\theight: newData.height\n\t\t}\n\t\tconst len = newData.data.length\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tnewPaperData.data[i] = newData.data[i];\n\t\t}\n\t\tthis.canvas.width = newPaperData.width;\n\t\tthis.canvas.height = newPaperData.height;\n\t\tawait this.imageMerger.margeReplace(newPaperData, [data], true);\n\t\t// console.log(\"newData---------------------------------------------------width:\" + sizeOfImage.width + \"/height:\" + sizeOfImage.height)\n\t\t// console.log(newData)\n\t\t// console.log(data)\n\t\t// console.log(newPaperData.data)\n\t\tthis.ctx.putImageData(newPaperData, 0, 0);\n\t\tnewPaperData = undefined;\n\t\tlet dataUri = this.canvas.toDataURL();\n\t\tconsole.time('resize copy');\n\t\tconst abResized = bc.dataURI2ArrayBuffer(dataUri);\n\t\tdataUri = undefined;\n\t\tconsole.timeEnd('resize copy');\n\t\treturn abResized;\n\t}\n\n\tresizeInMaxSize(iamegData, maxWidth, maxHeight) {\n\t\tconst { data, width, height } = iamegData;\n\t\tconst retioOuter = maxWidth / maxHeight;\n\t\tconst retioInner = width / height;\n\t\tconst isWidthGreater = retioInner >= retioOuter;\n\t\tconst retio = isWidthGreater ?\n\t\t\tmaxWidth / width :\n\t\t\tmaxHeight / height;\n\t\tconst newWidth = isWidthGreater ?\n\t\t\tmaxWidth :\n\t\t\twidth * retio;\n\t\tconst newHeight = isWidthGreater ?\n\t\t\theight * retio :\n\t\t\tmaxHeight;\n\t\t// console.log(\"resizeInMaxSize---------------------------------------------------newWidth:\" + newWidth + \"/newHeight:\" + newHeight)\n\t\treturn this.resizeExecute(iamegData, newWidth, newHeight);\n\t}\n\tresizeExecute(iamegData, newWidth, newHeight) {\n\t\tconsole.time('resize');\n\t\tconst newImageData = this.ctx.createImageData(newWidth, newHeight);\n\t\tthis.imageResizer.resize(iamegData, newWidth, newHeight, newImageData);\n\t\tconsole.timeEnd('resize');\n\t\treturn newImageData;\n\t}\n\tgetImageDataFromArrayBuffer(ab) {\n\t\t// console.time('resize getImageDataFromArrayBuffer');\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet dataUri = bc.arrayBuffer2DataURI(ab);\n\t\t\tab = null;\n\t\t\tconst img = new Image();\n\t\t\timg.src = dataUri;\n\t\t\timg.onload = () => {\n\t\t\t\tdataUri = null\n\t\t\t\tconst width = img.width;\n\t\t\t\tconst height = img.height;\n\t\t\t\tthis.canvas.width = width;\n\t\t\t\tthis.canvas.height = height;\n\t\t\t\tthis.ctx.drawImage(img, 0, 0);\n\t\t\t\tconst imageData = this.ctx.getImageData(0, 0, width, height);\n\t\t\t\tresolve(imageData);\n\t\t\t\t// console.timeEnd('resize getImageDataFromArrayBuffer');\n\t\t\t}\n\t\t\timg.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\tgetArrayBufferFromImageBitmapDataAsJpg(iamgeBitmapData, quority) {\n\t\tconst option = {\n\t\t\ttype: 'image/jpeg',\n\t\t\tquority: quority\n\t\t};\n\t\treturn this.getArrayBufferFromImageBitmapData(iamgeBitmapData, option);\n\t}\n\tgetArrayBufferFromImageBitmapDataAsPng(iamgeBitmapData) {\n\t\treturn this.getArrayBufferFromImageBitmapData(iamgeBitmapData);\n\t}\n\tgetArrayBufferFromImageBitmapData(iamgeBitmapData, option) {\n\t\tconsole.time('resize getArrayBufferFromImageBitmapData');\n\t\tthis.canvas.width = Math.floor(iamgeBitmapData.width);\n\t\tthis.canvas.height = Math.floor(iamgeBitmapData.height);\n\t\tlet newPaperData = this.ctx.createImageData(iamgeBitmapData.width, iamgeBitmapData.height);\n\t\tconst len = iamgeBitmapData.data.length\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tnewPaperData.data[i] = iamgeBitmapData.data[i];\n\t\t}\n\t\tthis.ctx.putImageData(newPaperData, 0, 0);\n\t\tlet dataUri = option ? this.canvas.toDataURL(option.type, option.quority) : this.canvas.toDataURL();\n\t\tconst abResized = bc.dataURI2ArrayBuffer(dataUri);\n\t\t// console.log('iamgeBitmapData.data.length:'+iamgeBitmapData.data.length+'/w:'+iamgeBitmapData.width+'/h:'+iamgeBitmapData.height);\n\t\t// console.log('dataUri:'+dataUri);\n\t\t// console.log(abResized);\n\t\tnewPaperData = undefined;\n\t\tconsole.timeEnd('resize getArrayBufferFromImageBitmapData');\n\t\treturn abResized;\n\t}\n\tcreate(arrayBuffer, width, height, type) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst imgElm = new Image();\n\t\t\timgElm.src = bc.arrayBuffer2DataURI(arrayBuffer, type);\n\t\t\timgElm.onload = () => {\n\t\t\t\tconst widthScale = width / imgElm.width;\n\t\t\t\tconst heightScale = height / imgElm.height;\n\t\t\t\tconst scale = widthScale <= heightScale ?\n\t\t\t\t\twidthScale :\n\t\t\t\t\theightScale;\n\t\t\t\tthis.canvas.height = Math.floor(imgElm.height * scale);\n\t\t\t\tthis.canvas.width = Math.floor(imgElm.width * scale);\n\t\t\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\t\t\tthis.ctx.scale(scale, scale);\n\t\t\t\tthis.ctx.drawImage(imgElm, 0, 0);\n\t\t\t\tresolve(this.exportPng());\n\t\t\t};\n\t\t\timgElm.onerror = (e) => {\n\t\t\t\tconsole.log('失敗');\n\t\t\t\tconsole.error(e);\n\t\t\t\treject(null);\n\t\t\t};\n\t\t});\n\t}\n\texportPng() {\n\t\treturn this.canvas.toDataURL();\n\t}\n\texportJpeg(quority = 1.0) {\n\t\treturn this.canvas.toDataURL('image/jpeg', quority);\n\t}\n\n\tcreateImageNodeByData(data) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet { name, ab, type } = data;\n\t\t\tlet imgElm = vu.createImage();\n\t\t\timgElm.alt = escape(name);\n\n\t\t\tif (!type) {\n\t\t\t\ttype = \"application/octet-stream\";\n\t\t\t}\n\t\t\tif (type && type.match(imgRe)) {\n\t\t\t\timgElm.src = bc.arrayBuffer2DataURI(ab, type);\n\t\t\t\timgElm.onload = () => {\n\t\t\t\t\tdata.height = imgElm.height;\n\t\t\t\t\tdata.width = imgElm.width;\n\t\t\t\t\tresolve(imgElm);\n\t\t\t\t}\n\t\t\t\timgElm.onerror = (e) => {\n\t\t\t\t\tconsole.log('失敗');\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\treject(e);\n\t\t\t\t};\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\tresolve(imgElm);\n\t\t\t}\n\n\t\t});\n\t}\n}","import { ImageProcessor } from \"../util/imageProcessor\";\nexport class ImageProcessService {\n\tconstructor() {\n\t\tthis.ip = new ImageProcessor();\n\t}\n\tasync createThumbnail(arrayBuffer, type) {\n\t\tconst retURI = await this.ip.create(arrayBuffer, 100, 100, type);\n\t\t// console.log(retURI);\n\t\treturn retURI;\n\t}\n\n\tasync createImageNodeByData(data) {\n\t\treturn await this.ip.createImageNodeByData(data);\n\t}\n\n\tasync resize(ab, newWidth, newHeight) {\n\t\treturn await this.ip.resize(ab, newWidth, newHeight);\n\t}\n\tasync resizeAsPaperB5_72(ab) {\n\t\treturn await this.ip.resizeAsPaper(ab, \"B5\", \"dpi72\", \"conbini\");\n\t}\n\tasync getImageDataFromArrayBuffer(ab) {\n\t\treturn await this.ip.getImageDataFromArrayBuffer(ab);\n\t}\n\tgetArrayBufferFromImageBitmapData(imageBitmapData, option) {\n\t\tconsole.time(\"ImageProcessService.getArrayBuffer From ImageBitmapData\")\n\t\tconst result = this.ip.getArrayBufferFromImageBitmapData(imageBitmapData, option);\n\t\tconsole.timeEnd(\"ImageProcessService.getArrayBuffer From ImageBitmapData\")\n\t\treturn result;\n\t}\n\tgetArrayBufferFromImageBitmapDataAsJpg(imageBitmapData, quority) {\n\t\tconsole.time(\"ImageProcessService.getArrayBufferFromImageBitmapDataAsJpg\")\n\t\tconst result = this.ip.getArrayBufferFromImageBitmapDataAsJpg(imageBitmapData, quority);\n\t\tconsole.timeEnd(\"ImageProcessService.getArrayBufferFromImageBitmapDataAsJpg\")\n\t\treturn result;\n\t}\n\tgetArrayBufferFromImageBitmapDataAsPng(imageBitmapData) {\n\t\treturn this.ip.getArrayBufferFromImageBitmapDataAsPng(imageBitmapData);\n\t}\n}","import {MainServiceImpl} from \"./mainServiceImpl\"\nimport {Thread} from \"../util/thread/thread\"\nconst mainServiceImpl = new MainServiceImpl();\nconst currentSiries = \"\";\nconst currentTitle = \"\";\nexport class MainService {\n  static getInstance(){\n    const thread = new Thread();\n    thread.postMessage(\"WASMcaller\",\"\");\n    return mainServiceImpl;\n  }\n  async init(appTitle,appVersion){\n    await mainServiceImpl.init(appTitle,appVersion);\n  }\n}\n","import {EntityManager} from \"./entity/entityManager\";\nimport {TitleManager} from \"./manager/titleManager\";\nimport {BinaryManager} from \"./manager/binaryManager\";\nimport {PagesManager} from \"./manager/pagesManager\";\nimport {SettingsManager} from \"./manager/settingsManager\";\nimport {OutputProfilesManager} from \"./manager/outputProfilesManager\";\nimport {ImageOutputsManager} from \"./manager/imageOutputsManager\";\nimport {ImageManager} from \"./manager/imageManager\";\nimport {ThumbnaleManager} from \"./manager/thumbnailManager\";\nimport {Images} from \"../entity/images\";\nimport {Series} from \"../entity/series\";\nimport {Thumbnales} from \"../entity/thumbnales\";\nimport {Title} from \"../entity/title\";\nimport {Pages} from \"../entity/pages\";\nimport {Settings} from \"../entity/settings\";\nimport {OutputProfiles} from \"../entity/outputProfiles\";\nimport {ImageOutputs} from \"../entity/imageOutputs\";\nimport {ImageProcessService} from \"./imageProcessService\"\n\nconst title = \"CopiBon\";\nconst titlePrefix = \"title_\";\nexport class MainServiceImpl {\n  constructor() {\n    this.em = new EntityManager();\n    this.ip = new ImageProcessService();\n  }\n  async init(appTitle,appVersion) {\n    this.appTitle = appTitle;\n    this.appVersion = appVersion;\n    await this.em.initAsNewUser([Images, Series, Thumbnales, Title, Pages, Settings, OutputProfiles,ImageOutputs]);\n    this.ip = new ImageProcessService();\n    this.bm = new BinaryManager(this.em);\n    this.tbm = new ThumbnaleManager(this.em);\n    this.pb = new ThumbnaleManager(this.em);\n    this.tbm = new ThumbnaleManager(this.em);\n    this.im = new ImageManager(this.em);\n    this.pm = new PagesManager(this.em);\n    this.opm = new OutputProfilesManager(this.em);\n    this.iom = new ImageOutputsManager(this.em);\n    this.sm = new SettingsManager(this.em,this.opm );\n    this.tm = new TitleManager(this.em);\n    this.im.setTitleManager(this.tm);\n    this.pm.setTitleManager(this.tm);\n    await this.tm.load();\n  }\n  getAppTitle(){\n    return this.appTitle;\n  }\n  getAppVersion(){\n    return this.appVersion;\n  }\n}\n","import {MenuSelectActionCreator} from '../action/menuSelectActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nlet menuSelectViewReducer = null;\nexport class MenuSelectViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.menuSelectAction = MenuSelectActionCreator.creatSelectAction();\n    this.atatch(this.menuSelectAction);\n    this.storeKey = MenuSelectActionCreator.getStoreKey();\n    this.addInitializeKey(this.storeKey);\n  }\n  static register() {\n    if (!menuSelectViewReducer) {\n      menuSelectViewReducer = new MenuSelectViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.menuSelectAction.type === action.type) {\n      store[this.storeKey] = action.data.id;\n    }\n    return store;\n  }\n}\n","import vu from \"../util/viewUtil\";\nimport { BaseView } from \"../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../util/reactive/base/vtags\";\nimport { MenuSelectActionCreator } from '../reduxy/action/menuSelectActionCreator'\nimport { MenuSelectViewReducer } from '../reduxy/reducer/menuSelectViewReducer'\nexport class Menu extends BaseView {\n\tconstructor() {\n\t\tsuper(\"menu\", \"Menu\");\n\t\tthis.text = \"Menu\";\n\t\tthis.storeKey = MenuSelectActionCreator.getStoreKey();\n\t\tthis.menuButtonClass = \"MenuButton\";\n\t\tthis.selected = \"\";\n\t\tthis.steps = [];\n\t\tthis.steps.push({\n\t\t\tid: 'step0',\n\t\t\tancker: '#' + 'TitleMng',\n\t\t\tlabel: 'Step0 Select or New',\n\t\t\ttargets: ['TitleMng']\n\t\t});\n\t\tthis.steps.push({\n\t\t\tid: 'step1',\n\t\t\tancker: '#' + 'TitleSettings',\n\t\t\tlabel: 'Step1 Work Setting',\n\t\t\ttargets: ['TitleSettings']\n\t\t});\n\t\tthis.steps.push({\n\t\t\tid: 'step2',\n\t\t\tancker: '#' + 'fuaPArent',\n\t\t\tlabel: 'Step2 Select Files',\n\t\t\ttargets: ['fuaPArent', 'FilesArea']\n\t\t});\n\t\tthis.steps.push({\n\t\t\tid: 'step3',\n\t\t\tancker: '#' + 'ExportArea',\n\t\t\tlabel: 'Step3 Export',\n\t\t\ttargets: ['ExportArea']\n\t\t});\n\t\tthis.steps.push({\n\t\t\tid: 'step4',\n\t\t\tancker: '#' + 'step4',\n\t\t\tlabel: 'Step4 Pref',\n\t\t\ttargets: ['']\n\t\t});\n\t\tthis.isSelectByManual = false;\n\t}\n\trender() {\n\t\treturn div(this.id + 'Frame', [\"MenuFrame\"], this.createButtons());\n\t}\n\tasync onAfterAttach(store, data) {\n\t\tMenuSelectViewReducer.register();\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\tconst id = store[this.storeKey];\n\t\t\tthis.hilightMenu(id);\n\t\t}\n\t}\n\tonClick(id) {\n\t\treturn (event) => {\n\t\t\tthis.isSelectByManual = true;\n\t\t\tthis.hilightMenu(id);\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.isSelectByManual = false;\n\t\t\t}, 1000);\n\t\t}\n\t}\n\thilightMenu(id) {\n\t\tconst parent = document.getElementById(this.id + 'Frame');\n\t\tif (this.isSelectByManual) {\n\t\t\tfor (let step of this.steps) {\n\t\t\t\tif (step.id === id) {\n\t\t\t\t\tfor (let child of parent.children) {\n\t\t\t\t\t\tchild.classList.remove(\"active\");\n\t\t\t\t\t};\n\t\t\t\t\tdocument.getElementById(step.id)\n\t\t\t\t\t\t.classList.add(\"active\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tfor (let child of parent.children) {\n\t\t\tchild.classList.remove(\"active\");\n\t\t};\n\t\tfor (let step of this.steps) {\n\t\t\tfor (let target of step.targets) {\n\t\t\t\tif (target === id) {\n\t\t\t\t\tdocument.getElementById(step.id)\n\t\t\t\t\t\t.classList.add(\"active\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcreateButtons() {\n\t\tconst menuTabs = [];\n\t\tfor (let step of this.steps) {\n\t\t\tmenuTabs.push(a(step.id, [this.menuButtonClass], step.ancker, {\n\t\t\t\ton: {\n\t\t\t\t\tclick: this.onClick(step.id)\n\t\t\t\t}\n\t\t\t}, step.label))\n\t\t}\n\t\treturn menuTabs;\n\t}\n}","\nexport class BaseEventHandler {\n  constructor() {\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nconst baseActions = [\"addImage\", \"removeImage\", \"sortImages\", 'loadImages'];\nexport class ImageActionCreator {\n  constructor() {}\n  static creatAddAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addImage\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeImage\", targetView, data, storeKey);\n  }\n  static creatLoadImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadImages\", targetView, data, storeKey);\n  }\n  static creatSortImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"sortImages\", targetView, data, storeKey);\n  }\n  static creatChangeTitleImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"changeTitle\", targetView, data, storeKey);\n  }\n  static creatDetailAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"detail\", targetView, data, storeKey);\n  }\n  static getStoreImagesKey(){\n    return \"imagesData\";\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nconst baseActions = [\"addImage\", \"removeImage\", \"sortImages\", 'loadImages'];\nexport class PageActionCreator {\n  constructor() {}\n  static creatAddPageAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addPage\", targetView, data, storeKey);\n  }\n  static creatRemovePageAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removePage\", targetView, data, storeKey);\n  }\n  static creatResetPagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"resetPages\", targetView, data, storeKey);\n  }\n  static creatSortPagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"sortPages\", targetView, data, storeKey);\n  }\n  static getStorePagesKey(){\n    return \"pagesData\";\n  }\n}\n","import { Sorter } from \"../../util/sorter\";\nimport { MainService } from \"../../service/mainService\"\nexport class PageProcessor {\n\tconstructor() {\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.em = this.ms.em;\n\t\tthis.pm = this.ms.pm;\n\t\tthis.tm = this.ms.tm;\n\t}\n\n\tasync resetPagesFull() {\n\t\tconst setting = await this.tm.loadSettings();\n\t\tconst pageNum = setting.pageNum;\n\t\treturn await this.resetPages(pageNum);\n\t}\n\tasync resetPages(pageNum) {\n\t\tconst title = await this.tm.load();\n\t\tconst pages = title.pages;\n\t\tconst pageEntitis = [];\n\t\tconst delPages = [];\n\t\tconst addPageAsNew = {};\n\t\tif (pages.length > pageNum) {\n\n\t\t\tconst pageEntitysMap = await this.em.getAsMap(pages);\n\t\t\tfor (let index in pages) {\n\t\t\t\tconst pk = pages[index];\n\t\t\t\tif (!pk || typeof pk !== \"string\") {\n\t\t\t\t\taddPageAsNew[index] = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst pageEntity = pageEntitysMap[pk]; //await this.em.get(pk);\n\t\t\t\tif (!pageEntity) {\n\t\t\t\t\taddPageAsNew[index] = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tpageEntitis.push(pageEntity);\n\t\t\t\tif (index >= pageNum) {\n\t\t\t\t\tdelPages.push(pk);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let index in delPages) {\n\t\t\t\tconst delTarget = delPages[index];\n\t\t\t\tfor (let i in pages) {\n\t\t\t\t\tconst current = pages[i];\n\t\t\t\t\tif (delTarget === current) {\n\t\t\t\t\t\tdelete pages[i];\n\t\t\t\t\t\tthis.pm.remove(delTarget);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let keyIndex in addPageAsNew) {\n\t\t\t\tconst index = keyIndex * 1;\n\t\t\t\tif (index < pageNum) {\n\t\t\t\t\tconst addOne = await this.pm.save(null, null, null, null, null, index);\n\t\t\t\t\tpages[index] = addOne.getPk();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst addCount = pageNum - pages.length;\n\t\t\tfor (let index = pages.length; index < pageNum; index++) {\n\t\t\t\tconst addOne = await this.pm.save(null, null, null, null, null, index);\n\t\t\t\tpages.push(addOne.getPk());\n\t\t\t}\n\t\t}\n\n\t\tfor (let index = 0; index < pageNum; index++) {\n\t\t\tif (index >= pages.length) {\n\t\t\t\tconst addOne = await this.pm.save(null, null, null, null, null, index);\n\t\t\t\tpages.push(addOne.getPk());\n\t\t\t\t// console.warn(\"index:\"+index+\"/pk:\"+pk+\"/pages[index]:\"+pages[index]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst pk = pages[index];\n\t\t\tif (!pk || typeof pk !== \"string\") {\n\t\t\t\tconst addOne = await this.pm.save(null, null, null, null, null, index);\n\t\t\t\tpages[index] = addOne.getPk();\n\t\t\t\t// console.warn(\"index:\"+index+\"/pk:\"+pk+\"/pages[index]:\"+pages[index]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst pageEntity = await this.em.get(pk);\n\t\t\tif (!pageEntity) {\n\t\t\t\tconst addOne = await this.pm.save(null, null, null, null, null, index);\n\t\t\t\tpages[index] = addOne.getPk();\n\t\t\t\t// console.warn(\"index:\"+index+\"/pk:\"+pk+\"/pages[index]:\"+pages[index]);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// console.warn(\"index:\"+index+\"/pk:\"+pk+\"/pages[index]:\"+pages[index]+\"/pageNum:\"+pageNum);\n\t\t}\n\t\tawait this.tm.saveTitle(title);\n\t}\n\tasync loadPages() {\n\t\tconst title = await this.tm.load();\n\t\tconst pages = title.pages;\n\t\tconst pageEntitis = [];\n\t\tfor (let index in pages) {\n\t\t\tconst pk = pages[index];\n\t\t\tif (!pk) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst pageEntity = await this.em.get(pk);\n\t\t\tpageEntitis.push(pageEntity);\n\t\t}\n\t\treturn pageEntitis;\n\t}\n\tasync move(fromPk, toPk) {\n\t\tawait this.pm.move(fromPk, toPk)\n\t}\n\tasync add(imagePk, pagePk) {\n\t\tawait this.pm.addPage(imagePk, pagePk);\n\t}\n\tasync remove(pagePk) {\n\t\tawait this.pm.removeImage(pagePk);\n\t}\n}","import {ImageActionCreator} from '../action/imageActionCreator'\nimport {PageActionCreator} from '../action/pageActionCreator'\nimport {Sorter} from \"../../util/sorter\";\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nimport {PageProcessor} from '../processor/pageProcessor'\nlet imageViewReducer = null;\nexport class ImageViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.em = this.ms.em;\n    this.im = this.ms.im;\n    this.tm = this.ms.tm;\n    this.imagAddAction = ImageActionCreator.creatAddAction();\n    this.imageRemoveAction = ImageActionCreator.creatRemoveAction();\n    this.imagesLoadAction = ImageActionCreator.creatLoadImagesAction();\n    this.imagesSortAction = ImageActionCreator.creatSortImagesAction();\n    this.imagesChangeTitleAction = ImageActionCreator.creatChangeTitleImagesAction();\n    this.imagesDetailAction = ImageActionCreator.creatDetailAction();\n    this.atatch(this.imagAddAction);\n    this.atatch(this.imageRemoveAction);\n    this.atatch(this.imagesLoadAction);\n    this.atatch(this.imagesSortAction);\n    this.atatch(this.imagesChangeTitleAction);\n    this.atatch(this.imagesDetailAction);\n    this.pp = new PageProcessor();\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n    this.storePagesKey = PageActionCreator.getStorePagesKey();\n  }\n  static register() {\n    if (!imageViewReducer) {\n      imageViewReducer = new ImageViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    let isCalled = false;\n    if (this.imagAddAction.type === action.type) {\n      store[this.storeImagesKey] = await this.saveFiles(action.data.files);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imageRemoveAction.type === action.type) {\n      store[this.storeImagesKey] = await this.remove(action.data.imagePKforDelete);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesLoadAction.type === action.type) {\n      store[this.storeImagesKey] = await this.loadImages();\n      store[this.storePagesKey] = await this.loadPages();\n      //alert(store[this.storePagesKey]);\n    } else if (this.imagesSortAction.type === action.type) {\n      store[this.storeImagesKey] = await this.sort(action.data.imagePKmove, action.data.imagePKdrop);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesChangeTitleAction.type === action.type) {\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesDetailAction.type === action.type) {\n      store[\"imagesDetailData\"] = await this.loadAImage(action.data.imagePK);\n    }\n    return store;\n  }\n  async loadPages(){\n    return await this.pp.loadPages();\n  }\n  async saveFiles(files) {\n    const imageEntitis = await this.tm.addImageFiles(files);\n    const retList = this.im.getEntitisAsList();\n    for (let imageEntity of imageEntitis) {\n      retList.unshift(imageEntity);\n    }\n    return await this.im.createRetList(retList);\n  }\n\n  async sort(movePk, dropPk) {\n    //console.log('sort movePk:' + movePk + '/dropPk:' + dropPk+\"/this.em.save:\"+this.em)\n      // console.log(this.em)\n    const imageEntitis = this.im.getEntitisAsList();\n\n    for (let index in imageEntitis) {\n      const imageEntity = imageEntitis[index];\n      const pk = imageEntity.getPk();\n      imageEntity.listing = index;\n      //console.log('sort pk:' + pk + '/index:' + index + '/imageEntity.listing:' + imageEntity.listing)\n    }\n    Sorter.orderBy(imageEntitis, [\n      {\n        colName: \"listing\",\n        isDESC: false\n      }, {\n        colName: \"updateDate\",\n        isDESC: true\n      }\n    ]);\n    const converterMap = {};\n    converterMap[movePk] = dropPk;\n    converterMap[dropPk] = movePk;\n    for (let index in imageEntitis) {\n      const imageEntity = imageEntitis[index];\n      const pk = imageEntity.getPk();\n      console.log('sort pk:' + pk + '/index:' + index + '/imageEntity.listing:' + imageEntity.listing)\n      const convertedPk = converterMap[pk]\n        ? converterMap[pk]\n        : pk;\n      if (convertedPk !== pk) {\n        const imageEntityConverted = this.im.getFromLoaded(convertedPk).imageEntity;\n        imageEntityConverted.listing = index;\n        imageEntityConverted.updateDate = Date.now();\n        await this.em.Images.save(imageEntityConverted);\n      } else {\n        imageEntity.listing = index;\n      }\n    }\n    return await this.im.createRetList(imageEntitis);\n  }\n\n  async loadAImage(pk) {\n    if(!pk){\n      return\n    }\n    const imageEntity = await this.em.get(pk);\n    const binaryEntity = await this.em.get(imageEntity.binary);\n    const size = binaryEntity._ab.byteLength;\n    const imageText = escape(imageEntity.name) + ' (' + (\n    imageEntity.type || 'n/a') + ') - ' + size + 'bytes, last modified: ' + imageEntity.modifyDate + ' size:' + imageEntity.width + 'x' + imageEntity.height\n\n    return {imageEntity:imageEntity,binaryEntity:binaryEntity,imageText:imageText}\n  }\n  async loadImages() {\n    const a = await this.pp.resetPagesFull();\n    return await this.im.loadImages();\n  }\n\n  async remove(pk) {\n    await this.tm.removeImage(pk);\n    this.im.removeLoaded(pk);\n    return this.im.getRetObjsAsList();\n  }\n}\n// setTimeout(ImageViewReducer.register,1);\n","import {BaseEventHandler} from \"./baseEventHandler\";\nimport {ImageActionCreator} from '../reduxy/action/imageActionCreator'\nimport {ImageViewReducer} from '../reduxy/reducer/imageViewReducer'\nexport class FileUploader extends BaseEventHandler {\n  constructor(fileProcessor) {\n    super();\n    // this.fileProcessor = fileProcessor;\n    this.name = \"FileUploader\";\n    ImageViewReducer.register();\n  }\n  handleFileSelect(view) {\n    return (event)=>{\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const files = event.target.files; // FileList object\n      this.handleFiles(view,files);\n    }\n  }\n\n  handleDrop(view){\n    return (event)=>{\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const files = event.dataTransfer.files;\n      this.handleFiles(view,files);\n    }\n  }\n  handleFiles(view,files){\n    const actin = ImageActionCreator.creatAddAction(view,{files:files});\n    view.dispatch(actin);\n    //this.fileProcessor.processFiles(files);\n  }\n  async areadParFile(file){\n    return await areadParFile(file);\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  file\n} from \"../../util/reactive/base/vtags\";\nimport {FileUploader} from \"../../eventHandler/fileUploader\";\nconst text = \"Drop image file\";\nexport class FileUploadArea extends BaseView {\n  constructor() {\n    super(\"fuaPArent\", \"FileUploadArea\",true);\n    this.fu = new FileUploader();\n  }\n  render() {\n    this.FileUploadFile = file(\"FileUploadFile\", [\"FileUploadFile\"],{on:{\n      'change':this.fu.handleFileSelect(this)\n    }});\n    this.fileUploadArea = div(\"FileUploadArea\", [\"FileUploadAreaA\"],text);\n\n    return div(this.id, [\"FileUploadArea\"], {\n      on: {\n        'dragover': this.fu.handleDrop(this),\n        'drop': this.fu.handleDrop(this),\n        'click': (e) => {\n          const fileInput = this.getElementById(\"FileUploadFile\");\n          fileInput.elm.click();\n        }\n      }\n    }, [this.fileUploadArea, this.FileUploadFile]);\n  }\n  async onAfterAttach(store, data) {\n\n    //alert('FileUploadArea onAfterAttach')\n    //this.addEventListeners();\n\n  }\n}\n","const re_yyyy = /yyyy/;\nconst re_MM = /MM/;\nconst re_dd = /dd/;\nconst re_hh = /hh/;\nconst re_mm = /mm/;\nconst re_ss = /ss/;\n\nexport const unixTimeToDateFormat = (unixtime, format = \"yyyy-MM-dd hh:mm:ss\") => {\n\tconst d = new Date(unixtime);\n\tconst year = d.getFullYear();\n\tconst month = ('0' + (d.getMonth() * 1 + 1))\n\t\t.slice(-2);\n\tconst day = ('0' + d.getDate())\n\t\t.slice(-2);;\n\tconst hour = ('0' + d.getHours())\n\t\t.slice(-2);\n\tconst min = ('0' + d.getMinutes())\n\t\t.slice(-2);\n\tconst sec = ('0' + d.getSeconds())\n\t\t.slice(-2);\n\treturn format.replace(re_yyyy, year)\n\t\t.replace(re_MM, month)\n\t\t.replace(re_dd, day)\n\t\t.replace(re_hh, hour)\n\t\t.replace(re_mm, min)\n\t\t.replace(re_ss, sec);\n}\nexport const getNowUnixtime = () => {\n\treturn new Date()\n\t\t.getTime();\n}","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class SettingActionCreator {\n  constructor() {}\n  static creatAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"creatSetting\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeSetting\", targetView, data, storeKey);\n  }\n  static creatLoadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadSetting\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateSetting\", targetView, data, storeKey);\n  }\n  static getStoreKey(){\n    return \"settings\";\n  }\n  static getStoreKeyOpm(){\n    return \"settingsOpm\";\n  }\n}\n","import { SettingActionCreator } from '../action/settingActionCreator'\nimport { PageActionCreator } from '../action/pageActionCreator'\nimport { PageProcessor } from '../processor/pageProcessor'\nimport { ImageActionCreator } from '../action/imageActionCreator'\nimport { Sorter } from \"../../util/sorter\";\nimport { MainService } from \"../../service/mainService\"\nimport { BaseReducer } from '../../util/reactive/baseReducer'\nlet settingViewReducer = null;\nexport class SettingViewReducer extends BaseReducer {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.tm = this.ms.tm;\n\t\tthis.sm = this.ms.sm;\n\t\tthis.im = this.ms.im;\n\t\tthis.opm = this.ms.opm;\n\t\tthis.creatAction = SettingActionCreator.creatAction();\n\t\tthis.creatRemoveAction = SettingActionCreator.creatRemoveAction();\n\t\tthis.creatLoadAction = SettingActionCreator.creatLoadAction();\n\t\tthis.creatUpdateAction = SettingActionCreator.creatUpdateAction();\n\t\tthis.atatch(this.creatAction);\n\t\tthis.atatch(this.creatRemoveAction);\n\t\tthis.atatch(this.creatLoadAction);\n\t\tthis.atatch(this.creatUpdateAction);\n\t\tthis.storeKey = SettingActionCreator.getStoreKey();\n\t\tthis.storeKeyOpm = SettingActionCreator.getStoreKeyOpm();\n\n\t\tthis.pp = new PageProcessor();\n\t\tthis.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n\t\tthis.storePagesKey = PageActionCreator.getStorePagesKey();\n\t}\n\tstatic register() {\n\t\tif (!settingViewReducer) {\n\t\t\tsettingViewReducer = new SettingViewReducer();\n\t\t}\n\t}\n\tasync reduce(store, action) {\n\t\tif (this.creatAction.type === action.type) {\n\t\t\tstore[this.storeKey] = await this.load()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tstore[this.storeKeyOpm] = await this.opm.loadAll()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t} else if (this.creatRemoveAction.type === action.type) {\n\t\t\tstore[this.storeKey] = await this.reset(action.data)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tstore[this.storeKeyOpm] = await this.opm.loadAll()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t} else if (this.creatLoadAction.type === action.type) {\n\t\t\tstore[this.storeKey] = await this.load()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tstore[this.storeKeyOpm] = await this.opm.loadAll()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t} else if (this.creatUpdateAction.type === action.type) {\n\t\t\tstore[this.storeKey] = await this.update(action.data)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\t// alert(\"creatUpdateAction:\" + JSON.stringify(store[this.storeKey]));\n\t\t\tstore[this.storeKeyOpm] = await this.opm.loadAll()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tconst result = await this.pp.resetPagesFull()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tstore[this.storePagesKey] = await this.pp.loadPages(result)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\tstore[this.storeImagesKey] = await this.im.loadImages()\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t});\n\t\t\t// console.error(\"storePagesKey:\"+store[this.storePagesKey].length);\n\t\t}\n\t}\n\tasync update(data) {\n\t\tconst title = await this.tm.load();\n\t\tconst pk = title.getPk();\n\n\t\tconst saved = await this.sm.save(pk, data.name, data.pageNum, data.startPage, data.pageDirection, data.outputProfile, data.listing);\n\t\tconst settingEntityLoad = await this.sm.loadByPk(pk);\n\n\t\tif (!settingEntityLoad) {\n\t\t\tconst settingEntity = await this.sm.createDefault(pk);\n\t\t\treturn settingEntity;\n\t\t}\n\t\tconst savedLoad = await this.tm.loadSettings();\n\t\t// console.warn(saved);\n\t\t// console.warn(settingEntityLoad);\n\t\t// console.warn(savedLoad);\n\t\treturn saved;\n\t}\n\tasync reset() {\n\t\tconst title = await this.tm.load();\n\t\tconst pk = title.getPk();\n\t\tconst settingEntity = await this.sm.createDefault(pk);\n\t\treturn settingEntity;\n\t}\n\tasync load() {\n\t\treturn await this.tm.loadSettings();\n\t}\n}","import vu from \"../../util/viewUtil\";\nimport { unixTimeToDateFormat } from \"../../util/timeUtil\";\nimport { BaseView } from \"../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel,\n\tselect,\n\toption,\n\tcreateSelectVnode\n} from \"../../util/reactive/base/vtags\";\nimport { SettingViewReducer } from '../../reduxy/reducer/settingViewReducer'\nimport { SettingData } from '../../settings/exportSettings'\nimport { SettingActionCreator } from '../../reduxy/action/settingActionCreator'\nexport class TitleSettings extends BaseView {\n\tconstructor() {\n\t\tsuper(\"TitleSettings\", \"TitleSettings\");\n\t\tthis.text = \"TitleSettingsAAA\";\n\t\tthis.bodyId = this.id + \"Child\";\n\t\tthis.storeKey = SettingActionCreator.getStoreKey();\n\t\tthis.getStoreKeyOpm = SettingActionCreator.getStoreKeyOpm();\n\t}\n\trender() {\n\t\treturn div(this.bodyId, [\"TitleSettings\"], this.text);\n\t}\n\tasync onAfterAttach(store, data) {\n\t\tSettingViewReducer.register();\n\t\tconst action = SettingActionCreator.creatLoadAction(this, {});\n\t\t// console.warn(\"onAfterAttach action:\" + action.type);\n\t\tawait this.dispatch(action);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\t// console.log(\"TitleSettings onViewShow 01 this.storeKey:\" + this.storeKey + '/' + store[this.storeKey]);\n\t\tif (store[this.storeKey]) {\n\t\t\tawait this.showSettings(store[this.storeKey], store[this.getStoreKeyOpm]);\n\t\t}\n\t}\n\tupdate() {\n\t\treturn (event) => {\n\t\t\tthis.updateExec();\n\t\t\t// setTimeout(() => { this.updateExec(); }, 20);\n\t\t}\n\t}\n\tupdateExec() {\n\t\tconst nameInput = document.getElementById(this.id + \"NameInput\")\n\t\t\t.value;\n\t\tconst pageNumInput = document.getElementById(this.id + \"PageNumInput\")\n\t\t\t.value;\n\t\tconst startPageInput = document.getElementById(this.id + \"StartPageInput\")\n\t\t\t.value;\n\t\tconst pageDirectionInput = document.getElementById(this.id + \"PageDirectionInput\")\n\t\t\t.value;\n\t\tconst outputProfileInput = document.getElementById(this.id + \"OutputProfileInput\")\n\t\t\t.value;\n\t\t//alert(\"update NameInput:\" + nameInput + \"/\" + pageNumInput + \"/\" + startPageInput + \"/\" + pageDirectionInput + \"/\" + outputProfileInput)\n\t\t//data.name, data.pageNum, data.startPage,, data.startPage, data.outputProfile, data.listing);\n\t\tconst action = SettingActionCreator.creatUpdateAction(this, {\n\t\t\tname: nameInput,\n\t\t\tpageNum: pageNumInput,\n\t\t\tstartPage: startPageInput,\n\t\t\tpageDirection: pageDirectionInput,\n\t\t\toutputProfile: outputProfileInput,\n\t\t\tlisting: 0\n\t\t});\n\n\t\tthis.dispatch(action);\n\t}\n\tasync showSettings(setting, outputProfiles) {\n\t\t// console.log(setting);\n\t\t// console.log(outputProfiles);\n\t\tconst labelClass = this.id + \"Label\";\n\t\tconst inputClass = this.id + \"Input\";\n\t\tconst title = div(\"\", [this.id + \"Title\"], \"Setting for Output\");\n\t\tconst nameLabel = span(\"\", [labelClass], 'name:');\n\t\tconst nameInput = input(this.id + \"NameInput\", [this.id + \"NameInput\"], {\n\t\t\tprops: {\n\t\t\t\tname: this.id + \"NameInput\"\n\t\t\t}\n\t\t}, \"text\", setting.name);\n\t\tconst nameRow = div(\"\", [this.id + \"Row\"], [nameLabel, nameInput]);\n\t\tconst pageNumLabel = span(\"\", [labelClass], 'pageNum:');\n\t\tconst idpageNumInput = this.id + \"PageNumInput\";\n\t\tconst pageNumInput = createSelectVnode(idpageNumInput, [\n\t\t\tinputClass, idpageNumInput\n\t\t], idpageNumInput, SettingData.pageNums, setting.pageNum);\n\t\tconst pageNumRow = div(\"\", [this.id + \"Row\"], [pageNumLabel, pageNumInput]);\n\n\t\tconst startPageLabel = span(\"\", [labelClass], 'startPage:');\n\t\tconst idStartPageInput = this.id + \"StartPageInput\";\n\t\tconst startPageInput = createSelectVnode(idStartPageInput, [\n\t\t\tinputClass, idStartPageInput\n\t\t], idStartPageInput, SettingData.pageStart, setting.startPage);\n\t\tconst startPageRow = div(\"\", [this.id + \"Row\"], [startPageLabel, startPageInput]);\n\n\t\tconst pageDirectionLabel = span(\"\", [labelClass], 'pageDirection:');\n\t\tconst idPageDirectionInput = this.id + \"PageDirectionInput\";\n\t\tconst pageDirectionInput = createSelectVnode(idPageDirectionInput, [\n\t\t\tinputClass, idPageDirectionInput\n\t\t], idPageDirectionInput, SettingData.pageDirection, setting.pageDirection);\n\t\tconst pageDirectionRow = div(\"\", [this.id + \"Row\"], [pageDirectionLabel, pageDirectionInput]);\n\n\t\tconst outputProfileLabel = span(\"\", [labelClass], 'outputProfile:');\n\t\tconst idOutputProfileInput = this.id + \"OutputProfileInput\";\n\t\tconst outputProfileInput = input(idOutputProfileInput, [\n\t\t\tinputClass, idOutputProfileInput\n\t\t], {\n\t\t\tprops: {\n\t\t\t\tname: idOutputProfileInput\n\t\t\t}\n\t\t}, \"text\", setting.outputProfile);\n\t\tconst outputProfileRow = div(\"\", [this.id + \"Row\"], [outputProfileLabel, outputProfileInput]);\n\t\tconst frameL = div(\"\", [this.id + \"FrameL\"], [nameRow, pageNumRow]);\n\t\tconst frameR = div(\"\", [this.id + \"FrameR\"], [startPageRow, pageDirectionRow, outputProfileRow]);\n\t\tconst frame = div(\"\", [this.id + \"Frame\"], [frameL, frameR]);\n\t\tconst button = div(\"\", [this.id + \"Update\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.update()\n\t\t\t}\n\t\t}, \"Save! LastUpdate:\" + unixTimeToDateFormat(setting.updateDate));\n\t\tconst childlen = [title, frame, button];\n\t\tthis.prePatch(\"#\" + this.bodyId, div(this.bodyId, [\"TitleSettings\"], childlen));\n\t}\n}","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class ExportActionCreator {\n  constructor() {}\n  static createExecuteAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"executeExport\", targetView, data, storeKey);\n  }\n  static creatExecuteAllAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"executeExportAll\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeExported\", targetView, data, storeKey);\n  }\n  static creatLoadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadExported\", targetView, data, storeKey);\n  }\n  static createDownloadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"downloadExport\", targetView, data, storeKey);\n  }\n  static createExecutePdfAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"executePdfExport\", targetView, data, storeKey);\n  }\n  static createDownloadPdfAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"downloadPdfExport\", targetView, data, storeKey);\n  }\n  static createDownloadImgAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"downloadUploadedImgZip\", targetView, data, storeKey);\n  }\n  static createDownloadFullBKAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"downloadFullBackup\", targetView, data, storeKey);\n  }\n  static createSelectOrderAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"selectOrderExport\", targetView, data, storeKey);\n  }\n  static getStoreKey(){\n    return \"exports\";\n  }\n  static getStorePdfDLKey(){\n    return \"exportPdfDL\";\n  }\n  static getStoreZipDLKey(){\n    return \"exportZipDL\";\n  }\n  static getStoreUploadedImgZipDLKey(){\n    return \"exportUploadedImgZipDL\";\n  }\n  static getStoreFullBackupZipDLKey(){\n    return \"exportFullBackupZipDL\";\n  }\n  static getStoreRemoveResultKey(){\n    return \"exportRemoveResult\";\n  }\n  static getStoreExportResultKey(){\n    return \"exportExportResult\";\n  }\n  static getStoreSelectedOrderKey(){\n    return \"exportSelectedOrder\";\n  }\n}\n","import { ImageMerger } from \"./imageMerger\";\nexport class ImageCropper {\n\tconstructor() {\n\t\tthis.imageMerger = new ImageMerger();\n\t}\n\n\tasync cropImage(imageData, newWidth, newHieght, offsetX, offsetY) {\n\t\tconst retArray = new Uint8ClampedArray(newWidth * newHieght * 4);\n\t\tconst imagaDataBase = {\n\t\t\tdata: retArray,\n\t\t\twidth: newWidth,\n\t\t\theight: newHieght\n\t\t};\n\t\timageData.offsetX = offsetX;\n\t\timageData.offsetY = offsetY;\n\t\tawait this.imageMerger.margeReplace(imagaDataBase, [imageData], false)\n\t\treturn imagaDataBase;\n\t}\n\tasync corpImageToData(imageData, distData, offset) {\n\t\timageData.offsetX = offset.x;\n\t\timageData.offsetY = offset.y;\n\t\tawait this.imageMerger.margeReplace(distData, [imageData], false);\n\t}\n}","import {ByteUtil} from \"./byteUtil\";\nexport class ImageFilter {\n  constructor() {\n  }\n\n  beGrascale(imageData) {\n    const data = imageData.data;\n    const width = imageData.width;\n    const height = imageData.height;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const index = (y * width + x)*4;\n        const gray = ByteUtil.trimByte((data[index] + data[index + 1] + data[index + 2])/3);\n        data[index] = gray;\n        data[index + 1] = gray;\n        data[index + 2] = gray;\n      }\n    }\n    return imageData;\n  }\n}\n","export class UnicodeEncoder {\n  static surrogatePairToCodePoint(charCode1, charCode2) {\n    return ((charCode1 & 0x3FF) << 10) + (charCode2 & 0x3FF) + 0x10000;\n  }\n\n  static stringToCodePointArray(str) {\n    const codePoints = [];\n    const len = str.length;\n    for (let i = 0; i < len; i++) {\n      const charCode = str.charCodeAt(i);\n      if ((charCode & 0xF800) === 0xD800) {\n        codePoints.push(UnicodeEncoder.surrogatePairToCodePoint(charCode, str.charCodeAt(++i)));\n      } else {\n        codePoints.push(charCode);\n      }\n    }\n    console.log(codePoints)\n    return codePoints;\n  }\n\n  static codePointArrayToString(codePoints) {\n    let stringParts = \"\";\n    const len = codePoints.length\n    for (let i = 0; i < len; ++i) {\n      let codePointCharCodes = null;\n      const codePoint = codePoints[i];\n      if (codePoint > 0xFFFF) {\n        const offset = codePoint - 0x10000;\n        codePointCharCodes = [\n          0xD800 + (offset >> 10),\n          0xDC00 + (offset & 0x3FF)\n        ];\n      } else {\n        codePointCharCodes = [codePoint];\n      }\n      stringParts += (String.fromCharCode.apply(String, codePointCharCodes));\n    }\n    return stringParts;\n  }\n  static encodeUTF8(str) {\n    const codes = UnicodeEncoder.stringToCodePointArray(str);\n    const len = codes.length;\n    const array = [];\n    for (let i = 0; i < len; i++) {\n      const c = codes[i];\n      if (c <= 0x7f) { //1byte\n        array.push(c);\n      } else if (c <= 0x7ff) { //2byte\n        array.push(0xc0 | c >>> 6, 0x80 | c & 0xbf);\n      } else if (c <= 0xffff) { //3byte\n        array.push(0xe0 | c >>> 12, 0x80 | c >>> 6 & 0xbf, 0x80 | c & 0xbf);\n      } else if (c <= 0x1ffff) { //4byte\n        array.push(0xf0 | c >>> 18, 0x80 | c >>> 12 & 0xbf, 0x80 | c >>> 6 & 0xbf, 0x80 | c & 0xbf);\n      }\n    }\n    return new Uint8Array(array);\n  }\n  static encodeUTF16(str, endian) {\n    const codes = UnicodeEncoder.stringToCodePointArray(str);\n    const len = codes.length;\n    const array = endian\n      ? endian === 'LE'\n        ? [0xff, 0xfe]\n        : [0xfe, 0xff]\n      : []; //BOM\n    for (let i = 0; i < len; i++) {\n      const c = codes[i];\n      if (endian === 'LE') {\n        array.push(c & 0xff, c >>> 8 & 0xff);\n      } else {\n        array.push(c >>> 8 & 0xff, c & 0xff);\n      }\n    }\n    return new Uint8Array(array);\n  }\n  decodeUTF8(array) {\n    let str = \"\";\n    const len = array.length;\n    for (let i = 0; i < len; i++) {\n      const c = array[i];\n      if (c <= 0x7f) {\n        str += String.fromCharCode(c);\n      } else if (c <= 0xdf && c >= 0xc2) {\n        str += String.fromCharCode((c & 31) << 6 | array[++i] & 63);\n      } else if (c <= 0xef && c >= 0xe0) {\n        str += String.fromCharCode((c & 15) << 12 | (array[++i] & 63) << 6 | array[++i] & 63);\n      } else if (c <= 0xf7 && c >= 0xf0) {\n        //utf8   11110uuu  10uuxxxx  10xxxxxx  10xxxxxx\n        //utf16  110110wwwwxxxxxx  110111xxxxxxxxxx (wwww = uuuuu-1)\n        str += String.fromCharCode(0xd800 | ((c & 7) << 8 | (array[++i] & 63) << 2 | array[++i] >>> 4 & 3) - 64, 0xdc00 | (array[i++] & 15) << 6 | array[i] & 63);\n      } else {\n        str += String.fromCharCode(0xfffd);\n      }\n    }\n    return str;\n  }\n  decodeUTF16(array) {\n    let endian = 'BE';\n    let i = 0;\n    const len = array.length;\n    let str = \"\";\n    if (array[0] * array[1] === 0xff * 0xfe) { // remove BOM\n      endian = array[0] === 0xff\n        ? 'LE'\n        : 'BE';\n      i = 2;\n    }\n    for (; i < len; i += 2) {\n      str += String.fromCharCode(\n        endian === 'LE'\n        ? (array[i + 1] << 8 | array[i])\n        : (array[i] << 8 | array[i + 1]));\n    }\n    return str;\n  }\n  static stringToByteArray(str) {\n    const len = str.length;\n    const array = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      array[i] = str.charCodeAt(i) & 0xff;\n    }\n    return array;\n  }\n}\n","import { ProgressActionCreator } from \"../action/progressActionCreator\"\nimport { ActionDispatcher } from \"../../util/reactive/actionDispatcher\";\nexport class ProgressBarProcessor {\n\tconstructor(pp) {\n\t\tthis.actionDispatcher = ActionDispatcher.createStandAlone();\n\t}\n\tasync update(percentProgress, msg) {\n\t\tif (percentProgress < 100) {\n\t\t\t//this.progress.progress(percentLoaded);\n\t\t\tconst percent = Math.floor(percentProgress * 10) / 10;\n\t\t\tawait this.actionDispatcher.dispatch(ProgressActionCreator.creatUpdateAction(null, {\n\t\t\t\tprogress: percent,\n\t\t\t\tmsg: msg\n\t\t\t}));\n\t\t}\n\t}\n\tasync comple(msg) {\n\t\t// setTimeout(()=>{\n\t\tawait this.actionDispatcher.dispatch(ProgressActionCreator.creatCompleatAction(null, { msg: msg }))\n\t\t// });\n\t}\n\tasync open(title) {\n\t\tawait this.actionDispatcher.dispatch(ProgressActionCreator.creatAddAction(null, {\n\t\t\tmsg: \"\",\n\t\t\ttitle: title\n\t\t}))\n\t}\n\tasync close() {\n\t\tawait this.actionDispatcher.dispatch(ProgressActionCreator.creatRemoveAction());\n\t}\n}","import { Sorter } from \"../../util/sorter\";\nimport { MainService } from \"../../service/mainService\"\nimport { ProgressBarProcessor } from \"./progressBarProcessor\"\nexport class PreviewProcessor {\n\tconstructor() {\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.em = this.ms.em;\n\t\tthis.tm = this.ms.tm;\n\t\tthis.ip = this.ms.ip;\n\t\tthis.previewMaxWidth = 1000;\n\t\tthis.previewMaxHeight = 1000;\n\t\tthis.pbp = new ProgressBarProcessor();\n\t\tthis.progress = 0;\n\t}\n\n\tasync loadPreviews() {\n\t\tawait this.pbp.open('Create Previews');\n\t\tthis.progress = 0;\n\t\tthis.pbp.update(this.progress, 'loading Settings');\n\t\tconst title = await this.tm.load();\n\t\tconst pages = title.pages;\n\t\tconst retPreviews = [];\n\t\tconst pegaNum = pages.length;\n\t\tconst stepNum = 4\n\t\tconst progressUnit = 100 / (stepNum * pegaNum)\n\t\tlet pageCount = 0;\n\n\t\tconst pageEntitysMap = await this.em.getAsMap(pages);\n\t\tfor (let pagePk of pages) {\n\t\t\tpageCount++;\n\t\t\tconst pageStep = \"[\" + pageCount + \"/\" + pegaNum + \"]\";\n\t\t\tthis.progress += progressUnit;\n\t\t\tthis.pbp.update(this.progress, 'load pageEnitity' + pageStep);\n\t\t\tif (!pagePk) {\n\t\t\t\tretPreviews.push(null);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst pageEnitity = pageEntitysMap[pagePk]; //await this.em.get(pagePk);\n\t\t\tif (!pageEnitity) {\n\t\t\t\tretPreviews.push(null);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst previewThumbnail = pageEnitity.previewThumbnail;\n\t\t\tconst baseImage = pageEnitity.baseImage;\n\t\t\tif (baseImage) {\n\t\t\t\tif (previewThumbnail) {\n\t\t\t\t\tthis.progress += progressUnit * 3;\n\t\t\t\t\tthis.pbp.update(this.progress, 'load binaryEntity' + pageStep);\n\t\t\t\t\tconst binaryEntity = await this.em.get(previewThumbnail);\n\t\t\t\t\tbinaryEntity.parent = pageEnitity;\n\t\t\t\t\tbinaryEntity.parentPk = pagePk;\n\t\t\t\t\tretPreviews.push(binaryEntity);\n\t\t\t\t} else {\n\t\t\t\t\tthis.progress += progressUnit;\n\t\t\t\t\tthis.pbp.update(this.progress, 'load imageEntity' + pageStep);\n\t\t\t\t\tconst imageEntity = await this.em.get(baseImage);\n\t\t\t\t\tthis.progress += progressUnit;\n\t\t\t\t\tthis.pbp.update(this.progress, 'load binaryEntity' + pageStep);\n\t\t\t\t\tconst binaryEntity = await this.em.get(imageEntity.binary);\n\t\t\t\t\t//TODO mk previews\n\t\t\t\t\t//binaryEntity._ab = await this.ip.resize(binaryEntity._ab,this.previewMaxWidth,this.previewMaxHeight);\n\t\t\t\t\tthis.progress += progressUnit;\n\t\t\t\t\tthis.pbp.update(this.progress, 'resize As Paper B5_72dpi' + pageStep);\n\t\t\t\t\tbinaryEntity._ab = await this.ip.resizeAsPaperB5_72(binaryEntity._ab);\n\t\t\t\t\t// console.log(newData.data);\n\t\t\t\t\t// console.log(binaryEntity._ab);\n\t\t\t\t\t// alert(binaryEntity._ab);\n\t\t\t\t\tbinaryEntity.parent = pageEnitity;\n\t\t\t\t\tbinaryEntity.parentPk = pagePk;\n\t\t\t\t\tretPreviews.push(binaryEntity);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tretPreviews.push(null);\n\t\t\t}\n\t\t}\n\n\t\tthis.progress = 100;\n\t\tawait this.pbp.update(this.progress, 'end all!');\n\t\treturn retPreviews;\n\t}\n\tasync shapeListBySets(previews, isSingle, setting) {\n\t\tconst cratePageData = PreviewProcessor.getCratePageDataFunc();\n\t\tif (isSingle) {\n\t\t\tconst retSetLis = [];\n\t\t\tfor (let index in previews) {\n\t\t\t\tretSetLis.push(cratePageData(index * 1 + 1, false, false, previews, this.dummyClass));\n\t\t\t}\n\t\t\tawait this.pbp.comple(this.progress);\n\t\t\treturn retSetLis;\n\t\t} else {\n\t\t\tconst pageNum = setting.pageNum * 1; //SettingData.pageNums[setting.pageNum-1]*1;\n\t\t\tthis.pageNum = pageNum;\n\t\t\tawait this.pbp.comple(this.progress);\n\t\t\treturn PreviewProcessor.buildPageFrames(setting, previews, cratePageData, this.dummyClass);\n\t\t}\n\t}\n\t//\n\tstatic getCratePageDataFunc() {\n\t\treturn (pageNo, className, isRight, binaries, dummyClass) => {\n\t\t\tconst currentBinary = binaries[pageNo - 1];\n\t\t\treturn {\n\t\t\t\tpageNo: pageNo,\n\t\t\t\tparent: currentBinary ? currentBinary.parent : null,\n\t\t\t\tparentPk: currentBinary ? currentBinary.parentPk : null,\n\t\t\t\tisDummy: className === dummyClass,\n\t\t\t\tisRight: isRight,\n\t\t\t\tbinary: currentBinary\n\t\t\t}\n\t\t}\n\t}\n\tstatic buildPageFrames(setting, binaries, cratePageData, dummyClass) {\n\t\tconst retFrames = [];\n\t\tconst startPage = setting.startPage;\n\t\tconst pageNum = setting.pageNum * 1; //SettingData.pageNums[setting.pageNum-1]*1;\n\t\tconst pageDirection = setting.pageDirection;\n\t\tconst isPageDirectionR2L = pageDirection === \"r2l\";\n\t\tconst isPageStartR = startPage === \"r\";\n\t\tconst frameNum = Math.ceil(pageNum / 2);\n\t\tconst isOdd = (pageNum % 2 === 1);\n\t\tconst isMatchPageStartSide = (pageDirection.indexOf(startPage) === 0);\n\t\tconst addPageNum = isOdd ?\n\t\t\t1 :\n\t\t\tisMatchPageStartSide ?\n\t\t\t0 :\n\t\t\t1;\n\t\tconst totalPageFrame = frameNum * 1 + addPageNum * 1;\n\t\tconst pageClass = \"Page\";\n\t\tconst isStartFull = (isPageDirectionR2L && isPageStartR) || (!isPageDirectionR2L && !isPageStartR)\n\t\tconst leftStartDummyClass = !isPageStartR || isStartFull ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst rightStartDummyClass = isPageStartR || isStartFull ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst leftEndDummyClass = (isOdd && (!isStartFull || (isStartFull && !isPageDirectionR2L))) || (!isOdd && (!isPageDirectionR2L || isStartFull)) ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst rightEndDummyClass = (isOdd && (!isStartFull || (isStartFull && isPageDirectionR2L))) || (!isOdd && (isPageDirectionR2L || isStartFull)) ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst lastIndex = totalPageFrame - 1;\n\t\tlet pagNo = 0;\n\t\tlet pageOffset = 0;\n\t\t//console.log(\"★lastIndex:\"+lastIndex+\"/pageNum:\"+pageNum+\"/setting.pageNum:\"+setting.pageNum);\n\t\tfor (let index = 0; index < totalPageFrame; index++) {\n\t\t\tconst leftPageNo = (\n\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t1 :\n\t\t\t\t0) + pageOffset + pagNo;\n\t\t\tconst rightPageNo = (\n\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t0 :\n\t\t\t\t1) + pageOffset + pagNo;\n\t\t\tconst pagePair = [];\n\t\t\tretFrames.push(pagePair);\n\t\t\t//////////////////////////////////\n\t\t\tif (index === 0) { //LR\n\t\t\t\tconst leftPageNoFirst = isPageDirectionR2L && isStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t\t1 :\n\t\t\t\t\tisStartFull ?\n\t\t\t\t\t1 :\n\t\t\t\t\t0\n\t\t\t\tconst rightPageNoFirst = isPageDirectionR2L && isStartFull ?\n\t\t\t\t\t1 :\n\t\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t\t0 :\n\t\t\t\t\tisStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\t1\n\t\t\t\tpagePair.push(cratePageData(leftPageNoFirst, leftStartDummyClass, false, binaries, dummyClass));\n\t\t\t\tpagePair.push(cratePageData(rightPageNoFirst, rightStartDummyClass, true, binaries, dummyClass));\n\t\t\t\tpageOffset = 1;\n\t\t\t\tpagNo += isStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\t1;\n\t\t\t} else if (index === lastIndex) {\n\t\t\t\tpagePair.push(cratePageData(leftPageNo, leftEndDummyClass, false, binaries, dummyClass));\n\t\t\t\tpagePair.push(cratePageData(rightPageNo, rightEndDummyClass, true, binaries, dummyClass));\n\t\t\t} else {\n\t\t\t\tpagePair.push(cratePageData(leftPageNo, \"\", false, binaries, dummyClass));\n\t\t\t\tpagePair.push(cratePageData(rightPageNo, \"\", true, binaries, dummyClass));\n\t\t\t\tpagNo += 2;\n\t\t\t}\n\t\t}\n\t\treturn retFrames;\n\t}\n\n\tasync updatePage(pk, key) {\n\t\tconst pageEntity = await this.em.Pages.get(pk);\n\t\tconst cratePageData = PreviewProcessor.getCratePageDataFunc();\n\t\tif (pageEntity) {\n\t\t\tconst value = pageEntity[key];\n\t\t\tpageEntity[key] = !value;\n\t\t\tawait this.em.Pages.save(pageEntity);\n\n\t\t}\n\t\treturn pageEntity;\n\t}\n}","export class BinaryUtil {\n\tconstructor() {}\n\ttoArrayBuffer() {\n\n\t}\n\tstatic joinU8as(u8as) {\n\t\tlet len = 0;\n\t\tlet index = 0;\n\t\tconst u8aEdge = [];\n\t\tfor (let u8a of u8as) {\n\t\t\tconst start = len;\n\t\t\tlen += u8a.byteLength;\n\t\t\tconst end = len;\n\t\t\tu8aEdge.push({\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t});\n\t\t}\n\t\t// console.log(\"joinU8as.len:\" + len);\n\t\tconst retU8a = new Uint8Array(len);\n\t\tfor (let u8a of u8as) {\n\t\t\tconst edge = u8aEdge[index];\n\t\t\tconst start = edge.start;\n\t\t\tconst end = edge.end;\n\t\t\tfor (let i = start; i < end; i++) {\n\t\t\t\tretU8a[i] = u8a[i - start];\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\t\treturn retU8a;\n\t}\n\tstatic hexString2U8a(hexStr) {\n\t\tconst retArrray = [];\n\t\tconst hexList = hexStr.split(\",\");\n\t\t// console.log(\"BinaryUtil.hexString2U8a hexStr:\" + hexStr + \" /len:\" + hexList.length)\n\t\t// console.log(hexList)\n\t\tfor (let hex of hexList) {\n\t\t\tif (hex && !Number.isNaN(parseInt(hex, 16))) {\n\t\t\t\tretArrray.push(parseInt(hex, 16));\n\t\t\t}\n\t\t}\n\t\treturn new Uint8Array(retArrray);\n\t}\n\tstatic convertDataUri2U8a(dataUri) {\n\t\tconst dataUriParts = dataUri.split(',');\n\t\tconst base64 = dataUriParts[1];\n\t\tconst binStr = atob(base64);\n\t\tconst binLen = binStr.length;\n\t\tconst u8a = new Uint8Array(new ArrayBuffer(binLen));\n\t\tfor (let i = 0; i < binLen; i++) {\n\t\t\tu8a[i] = binStr.charCodeAt(i);\n\t\t}\n\t\treturn u8a;\n\t}\n\tconvertStr2Ab(str) {\n\t\tconst string = btoa(unescape(encodeURIComponent(str)));\n\t\tconst charList = string.split('');\n\t\tconst len = charList.length;\n\t\tconst ua = new Uint8Array(len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tua[i] = charList[i].charCodeAt(0);\n\t\t}\n\t\treturn ua.buffer;\n\t}\n\tuintToString(ab) {\n\t\tconst ua = new Uint8Array(ab);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tua[i] = charList[i].charCodeAt(0);\n\t\t}\n\t\tconst encodedString = String.fromCharCode.apply(null, uintArray)\n\t\tconst decodedString = decodeURIComponent(escape(atob(encodedString)));\n\t\treturn decodedString;\n\t}\n\n\tconvertHexToAb(array) {\n\t\tconst len = array.length;\n\t\tconst retArray = new Uint8Array(len);\n\t\tfor (let index = 0; index < len; index++) {\n\t\t\tconst hexStr = array[index];\n\t\t\tretArray[index] = parseInt(hexStr, 16);\n\t\t}\n\t\treturn retArray.buffer;\n\t}\n\tunicodeStringToTypedArray(s) {\n\t\tconst escstr = encodeURIComponent(s);\n\t\tconst binstr = escstr.replace(/%([0-9A-F]{2})/g, function(match, p1) {\n\t\t\treturn String.fromCharCode('0x' + p1);\n\t\t});\n\t\tconst ua = new Uint8Array(binstr.length);\n\t\tArray.prototype.forEach.call(binstr, function(ch, i) {\n\t\t\tua[i] = ch.charCodeAt(0);\n\t\t});\n\t\treturn ua;\n\t}\n\ttypedArrayToUnicodeString(ua) {\n\t\tconst binstr = Array.prototype.map.call(ua, function(ch) {\n\t\t\t\treturn String.fromCharCode(ch);\n\t\t\t})\n\t\t\t.join('');\n\t\tconst escstr = binstr.replace(/(.)/g, function(m, p) {\n\t\t\tconst code = p.charCodeAt(p)\n\t\t\t\t.toString(16)\n\t\t\t\t.toUpperCase();\n\t\t\tif (code.length < 2) {\n\t\t\t\tcode = '0' + code;\n\t\t\t}\n\t\t\treturn '%' + code;\n\t\t});\n\t\treturn decodeURIComponent(escstr);\n\t}\n}","export class UnicodeEncoder {\n\tstatic surrogatePairToCodePoint(charCode1, charCode2) {\n\t\treturn ((charCode1 & 0x3FF) << 10) + (charCode2 & 0x3FF) + 0x10000;\n\t}\n\n\tstatic stringToCodePointArray(str) {\n\t\tconst codePoints = [];\n\t\tif (!str) {\n\t\t\treturn codePoints;\n\t\t}\n\t\tconst len = str.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst charCode = str.charCodeAt(i);\n\t\t\tif ((charCode & 0xF800) === 0xD800) {\n\t\t\t\tcodePoints.push(UnicodeEncoder.surrogatePairToCodePoint(charCode, str.charCodeAt(++i)));\n\t\t\t} else {\n\t\t\t\tcodePoints.push(charCode);\n\t\t\t}\n\t\t}\n\t\t// console.log(codePoints)\n\t\treturn codePoints;\n\t}\n\n\tstatic codePointArrayToString(codePoints) {\n\t\tlet stringParts = \"\";\n\t\tconst len = codePoints.length\n\t\tfor (let i = 0; i < len; ++i) {\n\t\t\tlet codePointCharCodes = null;\n\t\t\tconst codePoint = codePoints[i];\n\t\t\tif (codePoint > 0xFFFF) {\n\t\t\t\tconst offset = codePoint - 0x10000;\n\t\t\t\tcodePointCharCodes = [\n\t\t\t\t\t0xD800 + (offset >> 10),\n\t\t\t\t\t0xDC00 + (offset & 0x3FF)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tcodePointCharCodes = [codePoint];\n\t\t\t}\n\t\t\tstringParts += (String.fromCharCode.apply(String, codePointCharCodes));\n\t\t}\n\t\treturn stringParts;\n\t}\n\tstatic encodeUTF8(str) {\n\t\tconst codes = UnicodeEncoder.stringToCodePointArray(str);\n\t\tconst len = codes.length;\n\t\tconst array = [];\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst c = codes[i];\n\t\t\tif (c <= 0x7f) { //1byte\n\t\t\t\tarray.push(c);\n\t\t\t} else if (c <= 0x7ff) { //2byte\n\t\t\t\tarray.push(0xc0 | c >>> 6, 0x80 | c & 0xbf);\n\t\t\t} else if (c <= 0xffff) { //3byte\n\t\t\t\tarray.push(0xe0 | c >>> 12, 0x80 | c >>> 6 & 0xbf, 0x80 | c & 0xbf);\n\t\t\t} else if (c <= 0x1ffff) { //4byte\n\t\t\t\tarray.push(0xf0 | c >>> 18, 0x80 | c >>> 12 & 0xbf, 0x80 | c >>> 6 & 0xbf, 0x80 | c & 0xbf);\n\t\t\t}\n\t\t}\n\t\treturn new Uint8Array(array);\n\t}\n\tstatic encodeUTF16(str, endian) {\n\t\tconst codes = UnicodeEncoder.stringToCodePointArray(str);\n\t\tconst len = codes.length;\n\t\tconst array = endian ?\n\t\t\tendian === 'LE' ? [0xff, 0xfe] : [0xfe, 0xff] : []; //BOM\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst c = codes[i];\n\t\t\tif (endian === 'LE') {\n\t\t\t\tarray.push(c & 0xff, c >>> 8 & 0xff);\n\t\t\t} else {\n\t\t\t\tarray.push(c >>> 8 & 0xff, c & 0xff);\n\t\t\t}\n\t\t}\n\t\treturn new Uint8Array(array);\n\t}\n\tdecodeUTF8(array) {\n\t\tlet str = \"\";\n\t\tconst len = array.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst c = array[i];\n\t\t\tif (c <= 0x7f) {\n\t\t\t\tstr += String.fromCharCode(c);\n\t\t\t} else if (c <= 0xdf && c >= 0xc2) {\n\t\t\t\tstr += String.fromCharCode((c & 31) << 6 | array[++i] & 63);\n\t\t\t} else if (c <= 0xef && c >= 0xe0) {\n\t\t\t\tstr += String.fromCharCode((c & 15) << 12 | (array[++i] & 63) << 6 | array[++i] & 63);\n\t\t\t} else if (c <= 0xf7 && c >= 0xf0) {\n\t\t\t\t//utf8   11110uuu  10uuxxxx  10xxxxxx  10xxxxxx\n\t\t\t\t//utf16  110110wwwwxxxxxx  110111xxxxxxxxxx (wwww = uuuuu-1)\n\t\t\t\tstr += String.fromCharCode(0xd800 | ((c & 7) << 8 | (array[++i] & 63) << 2 | array[++i] >>> 4 & 3) - 64, 0xdc00 | (array[i++] & 15) << 6 | array[i] & 63);\n\t\t\t} else {\n\t\t\t\tstr += String.fromCharCode(0xfffd);\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\tdecodeUTF16(array) {\n\t\tlet endian = 'BE';\n\t\tlet i = 0;\n\t\tconst len = array.length;\n\t\tlet str = \"\";\n\t\tif (array[0] * array[1] === 0xff * 0xfe) { // remove BOM\n\t\t\tendian = array[0] === 0xff ?\n\t\t\t\t'LE' :\n\t\t\t\t'BE';\n\t\t\ti = 2;\n\t\t}\n\t\tfor (; i < len; i += 2) {\n\t\t\tstr += String.fromCharCode(\n\t\t\t\tendian === 'LE' ?\n\t\t\t\t(array[i + 1] << 8 | array[i]) :\n\t\t\t\t(array[i] << 8 | array[i + 1]));\n\t\t}\n\t\treturn str;\n\t}\n\tstatic stringToByteArray(str) {\n\t\tconst len = str.length;\n\t\tconst array = new Uint8Array(len);\n\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tarray[i] = str.charCodeAt(i) & 0xff;\n\t\t}\n\t\treturn array;\n\t}\n}","export const KeyKeywords = {\n\tType: true,\n\tSubtype: true,\n\tBaseFont: true,\n\tPDF: true,\n\tColorSpace: true,\n\tFilter: true,\n\tProcSet: true\n};\n//72dpi 25.4mm 1mm=2.834645669\nexport const pageSazeMapA = {\n\tA4: [0, 0, 595, 842],\n\tA4: [0, 0, 595, 842]\n}\nexport const paperSizeSet = {\n\tA6: {\n\t\tx: 105,\n\t\ty: 148\n\t},\n\tB6: {\n\t\tx: 128,\n\t\ty: 182\n\t},\n\tA5: {\n\t\tx: 148,\n\t\ty: 210\n\t},\n\tB5: {\n\t\tx: 182,\n\t\ty: 257\n\t},\n\tA4: {\n\t\tx: 210,\n\t\ty: 297\n\t},\n\tB4: {\n\t\tx: 257,\n\t\ty: 364\n\t},\n\tA3: {\n\t\tx: 297,\n\t\ty: 420\n\t}\n}\nexport const pageSazeMap = (() => {\n\tconst retMap = {};\n\tconst retio = 1 / 25.4 * 72;\n\tfor (let key in paperSizeSet) {\n\t\tconst value = paperSizeSet[key];\n\t\tconst x = Math.floor(value.x * 10 * retio) / 10;\n\t\tconst y = Math.floor(value.y * 10 * retio) / 10;\n\t\tretMap[key] = [0, 0, x, y];\n\t}\n\treturn retMap\n})()","import {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tUnicodeEncoder\n} from '../util/unicodeEncoder'\nimport {\n\tKeyKeywords\n} from '../constants/pdfConstants'\nconst refMap = new Map();\nconst NEWLINE = '\\n';\nconst refList = [];\nexport class RefObject {\n\tconstructor() {\n\t\tthis.exportText = '';\n\t\tthis.map = {};\n\t\tthis.isBePlaneMap = false;\n\t\tthis.afterRegsterRefMap = [];\n\t\tthis.isRoot = false;\n\t\tthis.isInfo = false;\n\t}\n\tcreateExport() {\n\n\t}\n\tstatic getRefMap() {\n\t\treturn refMap;\n\t}\n\tstatic init() {\n\t\tconst len = refList.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\trefList.pop();\n\t\t}\n\t\trefMap.clear();\n\t}\n\tstatic getRefList() {\n\t\treturn refList;\n\t}\n\tregisterAfterRefMap(obj) {\n\t\tthis.afterRegsterRefMap.push(obj);\n\t}\n\tregisterRefMap() {\n\t\trefList.push(this);\n\t\tlet index = 1;\n\t\tfor (let obj of refList) {\n\t\t\tconst indexPrefix = index + \" 0 \";\n\t\t\trefMap.set(obj, indexPrefix);\n\t\t\tindex++;\n\t\t}\n\t\tfor (let obj of this.afterRegsterRefMap) {\n\t\t\tobj.registerRefMap();\n\t\t}\n\t}\n\tgetRefNo() {\n\t\treturn refMap.get(this);\n\t}\n\tisRegisterd() {\n\t\treturn refMap.has(this);\n\t}\n\tsetBePlaneMap() {\n\t\tthis.isBePlaneMap = true;\n\t}\n\tsetElm(key, value) {\n\t\tthis.map[key] = value;\n\t}\n\tstatic getNewLine() {\n\t\treturn NEWLINE;\n\t}\n\tcreateFile() {}\n\tstatic getAsU8a(text) {\n\t\treturn UnicodeEncoder.encodeUTF8(text + NEWLINE);\n\t}\n\tcreateObject() {\n\t\tconst u8aStream = this.createStream(this.map);\n\t\tconst u8aStart = UnicodeEncoder.encodeUTF8(this.getRefNo() + 'obj' + NEWLINE);\n\t\tconst u8aMain = UnicodeEncoder.encodeUTF8(this.createMap(\"\", this.map));\n\t\tconst u8aEnd = UnicodeEncoder.encodeUTF8('endobj' + NEWLINE);\n\t\treturn BinaryUtil.joinU8as([u8aStart, u8aMain, u8aStream, u8aEnd]);\n\t}\n\tcreateMap(keyword, value) {\n\t\tlet retText = '';\n\t\tif (value === null || value === undefined) {\n\n\t\t} else if (typeof value === 'string') {\n\t\t\tif (KeyKeywords[keyword]) {\n\t\t\t\tretText += \"/\" + value;\n\t\t\t} else {\n\t\t\t\tretText += \"(\" + value + ')';\n\t\t\t}\n\t\t} else if (typeof value === 'number') {\n\t\t\tretText += value;\n\t\t} else if (typeof value === 'object' && Array.isArray(value)) {\n\t\t\tconst newArray = [];\n\t\t\tfor (let index in value) {\n\t\t\t\tconst val = value[index];\n\t\t\t\tnewArray.push(this.createMap(keyword, val));\n\t\t\t}\n\t\t\tretText += '[ ' + newArray.join(' ') + ' ]';\n\t\t} else if (typeof value === 'object' && value.isRegisterd && value.isRegisterd()) {\n\t\t\tretText += value.getRefNo() + 'R';\n\t\t} else if (typeof value === 'object' && value.isRegisterd && value.map) {\n\t\t\tretText += '<<' + NEWLINE\n\t\t\tfor (let key in value.map) {\n\t\t\t\tconst val = value.map[key]\n\t\t\t\tconst row = '/' + key + ' ' + this.createMap(key, val);\n\t\t\t\tretText += row + NEWLINE;\n\t\t\t}\n\t\t\tretText += '>>';\n\t\t} else if (typeof value === 'object') {\n\t\t\tretText += '<<' + NEWLINE\n\t\t\tfor (let key in value) {\n\t\t\t\tconst val = value[key]\n\t\t\t\tconst row = '/' + key + ' ' + this.createMap(key, val);\n\t\t\t\tretText += row + NEWLINE;\n\t\t\t}\n\t\t\tretText += '>>' + NEWLINE;\n\t\t}\n\t\treturn retText;\n\t}\n\tcreateStream() {\n\t\treturn UnicodeEncoder.encodeUTF8('');\n\t}\n}","import {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tRefObject\n} from './refObject'\nimport {\n\tUnicodeEncoder\n} from '../util/unicodeEncoder'\nconst NEW_LINE = RefObject.getNewLine();\nexport class Header {\n\tstatic getText() {\n\t\tconst retText = '%PDF-1.４' + NEW_LINE + '%';\n\t\treturn retText;\n\t}\n\tstatic getU8a() {\n\t\tconst u8aMain = UnicodeEncoder.encodeUTF8(Header.getText());\n\t\tconst binStrU8a = BinaryUtil.hexString2U8a('e2,e3,cf,d3');\n\t\tconst u8aNewLine = UnicodeEncoder.encodeUTF8(NEW_LINE);\n\t\treturn BinaryUtil.joinU8as([u8aMain, binStrU8a, u8aNewLine]);\n\t}\n}","import {\n\tRefObject\n} from '../base/refObject'\nexport class CatalogObject extends RefObject {\n\tconstructor(pagesObj) {\n\t\tsuper();\n\t\tthis.setElm('Type', 'Catalog');\n\t\tthis.setElm('Pages', pagesObj);\n\t\t// this.setElm('Version', 0);\n\t\tthis.registerAfterRefMap(pagesObj);\n\t\tthis.isRoot = true;\n\t}\n}","import {\n\tRefObject\n} from '../base/refObject'\nimport {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tUnicodeEncoder\n} from '../util/unicodeEncoder'\nexport class ImageContentsObject extends RefObject {\n\tconstructor(imageId) {\n\t\tsuper();\n\t\tthis.setElm('Length', 0);\n\t\tthis.imageId = imageId;\n\t}\n\tsetParentPage(pageObj) {\n\t\tthis.pageObj = pageObj;\n\t\tthis.pageWidth = this.pageObj.width;\n\t\tthis.pageHeight = this.pageObj.height;\n\t}\n\tcreateStream() {\n\t\tconst NEWLINE = RefObject.getNewLine();\n\t\tconst u8as = [];\n\t\tlet retText = ''\n\t\tu8as.push(RefObject.getAsU8a('stream'));\n\t\tretText += 'q' + NEWLINE;\n\t\tretText += this.pageWidth + ' 0 0' + ' ' + this.pageHeight + ' 0 0 cm' + NEWLINE;\n\t\tretText += '/' + this.imageId + ' Do' + NEWLINE;\n\t\tretText += 'Q';\n\t\tconst u8a = RefObject.getAsU8a(retText);\n\t\tconst length = u8a.byteLength;\n\t\tthis.setElm('Length', length);\n\t\tu8as.push(u8a);\n\t\tu8as.push(RefObject.getAsU8a('endstream'));\n\t\treturn BinaryUtil.joinU8as(u8as);\n\t}\n}","import {\n\tRefObject\n} from '../base/refObject'\nimport {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tUnicodeEncoder\n} from '../util/unicodeEncoder'\nexport class ImageResourcesObject extends RefObject {\n\tconstructor(imageId) {\n\t\tsuper();\n\t\tthis.setElm('ProcSet', ['PDF', 'ImageC']);\n\t\tthis.imageId = imageId;\n\t}\n\tsetImageXObject(imageXObject) {\n\t\tconst xObjectMap = new RefObject();\n\t\txObjectMap.setBePlaneMap();\n\t\tconst imageId = imageXObject.getImageId();\n\t\txObjectMap.setElm(imageId, imageXObject);\n\t\timageXObject.registerRefMap();\n\t\tthis.setElm('XObject', xObjectMap);\n\t}\n}","import {\n\tRefObject\n} from '../base/refObject'\nimport {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tUnicodeEncoder\n} from '../util/unicodeEncoder'\nexport class ImageXObject extends RefObject {\n\tconstructor(imageId, u8a, width, height) {\n\t\tsuper();\n\t\tthis.setElm('Type', 'XObject');\n\t\tthis.setElm('Subtype', 'Image');\n\t\tthis.setElm('Width', width);\n\t\tthis.setElm('Height', height);\n\t\tthis.setElm('BitsPerComponent', 8);\n\t\tthis.setElm('Length', 0);\n\t\tthis.setElm('ColorSpace', 'DeviceRGB');\n\t\tthis.setElm('Filter', 'DCTDecode');\n\t\tthis.imageId = imageId;\n\t\tconsole.log(\"ImageXObject.constructor u8a:\" + u8a.byteLength)\n\t\tthis.jpegU8a = u8a;\n\t}\n\tgetImageId() {\n\t\treturn this.imageId;\n\t}\n\tcreateStream() {\n\t\tconst NEWLINE = RefObject.getNewLine();\n\t\tconst u8as = [];\n\t\tconst retText = ''\n\t\tu8as.push(RefObject.getAsU8a('stream'));\n\t\tconst length = this.jpegU8a.byteLength;\n\t\tthis.setElm('Length', length);\n\t\tu8as.push(this.jpegU8a);\n\t\tu8as.push(RefObject.getAsU8a(NEWLINE + 'endstream'));\n\t\tconsole.log(\"ImageXObject.createStream this.jpegU8a:\" + this.jpegU8a.byteLength)\n\t\tconst result = BinaryUtil.joinU8as(u8as);\n\t\tconsole.log(\"ImageXObject.createStream result:\" + result.byteLength)\n\t\treturn result;\n\t}\n}","const re_yyyy = /yyyy/;\nconst re_MM = /MM/;\nconst re_dd = /dd/;\nconst re_hh = /hh/;\nconst re_mm = /mm/;\nconst re_ss = /ss/;\n\nexport const unixTimeToDateFormat = (unixtime, format = \"yyyy-MM-dd hh:mm:ss\") => {\n\tconst d = new Date(unixtime);\n\tconst year = d.getFullYear();\n\tconst month = ('0' + (d.getMonth() * 1 + 1))\n\t\t.slice(-2);\n\tconst day = ('0' + d.getDate())\n\t\t.slice(-2);;\n\tconst hour = ('0' + d.getHours())\n\t\t.slice(-2);\n\tconst min = ('0' + d.getMinutes())\n\t\t.slice(-2);\n\tconst sec = ('0' + d.getSeconds())\n\t\t.slice(-2);\n\treturn format.replace(re_yyyy, year)\n\t\t.replace(re_MM, month)\n\t\t.replace(re_dd, day)\n\t\t.replace(re_hh, hour)\n\t\t.replace(re_mm, min)\n\t\t.replace(re_ss, sec);\n}\nexport const getNowUnixtime = () => {\n\treturn new Date()\n\t\t.getTime();\n}\nexport const getNow = () => {\n\t//(D:20181012023235+02'00')\n\tconst now = getNowUnixtime();\n\tconst retText = unixTimeToDateFormat(now, \"D:yyyyMMddhhmmss+0:00\")\n\treturn retText;\n}","import { RefObject } from '../base/refObject'\nimport { getNow } from '../util/pdfTimeUtil'\nexport class InfoObject extends RefObject {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.setElm('Type', 'Info');\n\t\tthis.setElm('Creator', 'It is me!');\n\t\tthis.setElm('CreationDate', getNow());\n\t\tthis.setElm('ModDate', getNow());\n\t\tthis.setElm('Producer', 'aaa');\n\t\tthis.isInfo = true;\n\t}\n}","import {\n\tpageSazeMap\n} from '../constants/pdfConstants'\nimport {\n\tUnitUtil\n} from '../util/unitUtil'\nimport {\n\tRefObject\n} from '../base/refObject'\nexport class PageObject extends RefObject {\n\tconstructor(sizeName = \"A4\") {\n\t\tsuper();\n\t\tthis.setElm('Type', 'Page');\n\t\tconst paperSizePoint = pageSazeMap[sizeName];\n\t\tthis.width = paperSizePoint[2];\n\t\tthis.height = paperSizePoint[3];\n\t\t// console.log(pageSazeMap)\n\t\t// console.log(paperSizePoint)\n\t\t// alert(pageSazeMap + \"/this.width+:\" + this.width + \"/this.height:\" + this.height)\n\t\tthis.setElm('MediaBox', paperSizePoint);\n\t}\n\tsetParent(parent) {\n\t\tthis.setElm('Parent', parent);\n\t}\n\tsetResources(resources) {\n\t\tthis.setElm('Resources', resources);\n\t\tresources.registerRefMap();\n\t}\n\tsetContents(contents) {\n\t\tif (contents.setParentPage) {\n\t\t\tcontents.setParentPage(this);\n\t\t}\n\t\tthis.setElm('Contents', contents);\n\t\tcontents.registerRefMap();\n\t}\n\tgetFontName() {\n\t\treturn this.fontName;\n\t}\n}","\nimport {RefObject} from '../base/refObject'\nexport class PagesObject extends RefObject {\n  constructor() {\n    super();\n    this.setElm('Type','Pages');\n    this.pages=[];\n    this.setElm('Kids',this.pages);\n    this.setElm('Count',this.pages.length);\n  }\n  addPage(pageObj){\n    this.pages.push(pageObj);\n    pageObj.registerRefMap();\n    pageObj.setParent(this);\n    this.setElm('Kids',this.pages);\n    this.setElm('Count',this.pages.length);\n  }\n}\n","import {\n\tpageSazeMap\n} from '../constants/pdfConstants'\nimport {\n\tUnitUtil\n} from '../util/unitUtil'\nimport {\n\tBinaryUtil\n} from '../util/binaryUtil'\nimport {\n\tRefObject\n} from '../base/refObject'\nconst CRLF = '\\r\\n';\nexport class TrailerObject extends RefObject {\n\tconstructor() {\n\t\tsuper();\n\t}\n\tsetRoot(rootObj) {\n\t\trootObj.registerRefMap();\n\t}\n\tsetInfo(infoObj) {\n\t\tinfoObj.registerRefMap();\n\t}\n\tcreateXref(startOffset) {\n\t\tconst NEWLINE = RefObject.getNewLine();\n\t\tlet retText = 'xref' + NEWLINE\n\t\tconst list = RefObject.getRefList();\n\t\tconst len = list.length;\n\t\tretText += '0 ' + len + NEWLINE\n\t\tconst results = [];\n\t\tlet rootObj = null;\n\t\tlet infoObj = null;\n\t\tretText += '0000000000 65535 f' + CRLF;\n\t\tlet currentBytes = startOffset;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst refObje = list[i];\n\t\t\tconst u8a = refObje.createObject();\n\t\t\tretText += ('0000000000' + currentBytes)\n\t\t\t\t.slice(-10) + ' 00000 n' + CRLF;\n\t\t\tcurrentBytes += u8a.length;\n\t\t\tresults.push(u8a);\n\t\t\tif (refObje.isRoot) {\n\t\t\t\trootObj = refObje;\n\t\t\t}\n\t\t\tif (refObje.isInfo) {\n\t\t\t\tinfoObj = refObje;\n\t\t\t}\n\t\t}\n\t\tretText += 'trailer' + NEWLINE\n\t\tretText += '<<' + NEWLINE\n\t\tretText += '/Root ' + rootObj.getRefNo() + 'R' + NEWLINE\n\t\tif (infoObj) {\n\t\t\tretText += '/Info ' + infoObj.getRefNo() + 'R' + NEWLINE\n\t\t}\n\t\tretText += '/Size ' + len + NEWLINE\n\t\tretText += '>>' + NEWLINE\n\t\tretText += 'startxref' + NEWLINE\n\t\tretText += currentBytes + NEWLINE\n\t\tretText += '%%EOF'\n\t\tconst trailerU8a = RefObject.getAsU8a(retText);\n\t\tresults.push(trailerU8a);\n\t\t// <<\n\t\t// /Root 1 0 R\n\t\t// /Size 6\n\t\t// >>\n\t\t// startxref\n\t\t// 440\n\t\t// %%EOF\n\t\treturn BinaryUtil.joinU8as(results);\n\t}\n}","import {\n\tRefObject\n} from './base/refObject'\nimport {\n\tHeader\n} from './base/header'\nimport {\n\tBinaryUtil\n} from './util/binaryUtil'\nimport {\n\tCatalogObject\n} from './objects/catalogObject'\nimport {\n\tFontObject\n} from './objects/fontObject'\nimport {\n\tImageContentsObject\n} from './objects/imageContentsObject'\nimport {\n\tImageResourcesObject\n} from './objects/imageResourcesObject'\nimport {\n\tImageXObject\n} from './objects/imageXObject'\nimport {\n\tInfoObject\n} from './objects/infoObject'\nimport {\n\tPageObject\n} from './objects/pageObject'\nimport {\n\tPagesObject\n} from './objects/pagesObject'\nimport {\n\tTextStreamObject\n} from './objects/textStreamObject'\nimport {\n\tTrailerObject\n} from './objects/trailerObject'\nexport class PdfDocument {\n\tconstructor(pageSizse) {\n\t\tRefObject.init();\n\t\tthis.pageSize = pageSizse;\n\t\tthis.info = new InfoObject();\n\t\tthis.pages = new PagesObject();\n\t\tthis.root = new CatalogObject(this.pages);\n\t\tthis.trailer = new TrailerObject();\n\t\tthis.trailer.setRoot(this.root);\n\t\tthis.trailer.setInfo(this.info);\n\t\tthis.imageCount = 0;\n\t}\n\taddDummyPage() {\n\t\tconst page = new PageObject(this.pageSize);\n\t\t//this.pages.addPage(page);\n\t}\n\taddImagePage(dataUri, ab, width, height) {\n\t\tlet u8aImage = new Uint8Array(ab);\n\t\tlet currentWidth = width;\n\t\tlet currentHeight = height;\n\t\tif (!dataUri && !ab) {\n\t\t\tu8aImage = new Uint8Array([255, 255, 255, 255]);\n\t\t\tcurrentWidth = 1;\n\t\t\tcurrentHeight = 1;\n\t\t}\n\t\tconst imageId = 'img' + this.imageCount;\n\t\tconst ic = new ImageContentsObject(imageId);\n\t\tconst ir = new ImageResourcesObject(imageId);\n\t\tconst page = new PageObject(this.pageSize);\n\t\tconst binaryU8a = !dataUri ? u8aImage : BinaryUtil.convertDataUri2U8a(dataUri);\n\t\tconst imageXobj = new ImageXObject(imageId, binaryU8a, currentWidth, currentHeight);\n\t\tthis.pages.addPage(page);\n\t\tpage.setContents(ic);\n\t\tpage.setResources(ir);\n\t\tir.setImageXObject(imageXobj);\n\t\tthis.imageCount++;\n\t}\n\tcreateFile() {\n\t\tconst retArray = [];\n\t\tconst headerU8a = Header.getU8a();\n\t\t// console.log(\"headerU8a:\" + headerU8a.byteLength);\n\t\tretArray.push(headerU8a);\n\t\tconst body = this.trailer.createXref(headerU8a.byteLength);\n\t\tretArray.push(body);\n\t\treturn BinaryUtil.joinU8as(retArray);\n\t}\n}","import {\n\tPdfDocument\n} from './pdfDocument'\nexport class PdfBuilder {\n\tconstructor() {}\n\tcreateDoc(title) {}\n\tcreateImagesDoc(pageSize = 'A4', imageList) {\n\t\tconst pdfDoc = new PdfDocument(pageSize);\n\t\t// console.log(\"createImagesDoc imageList:\" + imageList.length);\n\t\tlet i = 0;\n\t\tfor (let item of imageList) {\n\t\t\ti++;\n\t\t\tif (!item || typeof item !== 'object') {\n\t\t\t\tpdfDoc.addDummyPage();\n\t\t\t\t// console.log(item);\n\t\t\t\t// console.log(\"createImagesDoc continue:\" + item);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst dataUri = item.dataUri;\n\t\t\tconst ab = item.ab;\n\t\t\tconst height = item.height;\n\t\t\tconst width = item.width;\n\t\t\tpdfDoc.addImagePage(dataUri, ab, width, height);\n\t\t\t// console.log(\"createImagesDoc i:\" + i + \"item:\" + item);\n\t\t}\n\t\treturn pdfDoc.createFile();\n\t}\n}","import {\n\tMainService\n} from \"../../service/mainService\"\nimport {\n\tProgressBarProcessor\n} from \"./progressBarProcessor\"\nimport {\n\tPdfBuilder\n} from \"../../util/pdf/pdfBuilder\"\nimport { Paper } from \"../../util/image/paper\";\n\nexport class ExportPdfProcessor {\n\tconstructor(pp) {\n\t\tthis.pp = pp;\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.em = this.ms.em;\n\t\tthis.bm = this.ms.bm;\n\t\tthis.im = this.ms.im;\n\t\tthis.ip = this.ms.ip;\n\t\tthis.paper = new Paper();\n\t\tthis.delList = [];\n\t}\n\tasync createPdf(paperSize, pages, targetSize, settings, isSaddleStitchingOrder) {\n\t\tconst letList = [];\n\t\tconst pageNum = settings.pageNum;\n\t\tconst startPage = settings.startPage;\n\t\tconst isPageDirectionR2L = settings.pageDirection === \"r2l\";\n\t\tconst isMatchPageStartSide = (settings.pageDirection.indexOf(startPage) === 0);\n\t\tconst pdfImage = {\n\t\t\tdata: new Uint8Array(targetSize.x * targetSize.y * 4),\n\t\t\twidth: targetSize,\n\t\t\theight: targetSize.y\n\t\t};\n\t\tif (isMatchPageStartSide) {\n\t\t\tletList.push({});\n\t\t}\n\t\tlet pageCount = 0;\n\t\t// alert(\"isSaddleStitchingOrder:\" + isSaddleStitchingOrder);\n\t\tfor (let page of pages) {\n\t\t\tpageCount++;\n\t\t\tif (pageNum < pageCount) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!page || !page.outputExpandImage) {\n\t\t\t\tletList.push({})\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst binaryEntity = await this.loadBinaryWidCleanUp(page.outputExpandImage);\n\t\t\tpdfImage.data = new Uint8ClampedArray(binaryEntity._ab);\n\t\t\tpdfImage.width = binaryEntity.width;\n\t\t\tpdfImage.height = binaryEntity.height;\n\t\t\tlet pdfImageAb = this.ip.getArrayBufferFromImageBitmapDataAsJpg(pdfImage, 1.0);\n\t\t\tletList.push({\n\t\t\t\tab: pdfImageAb,\n\t\t\t\twidth: pdfImage.width,\n\t\t\t\theight: pdfImage.height\n\t\t\t})\n\t\t\t// console.log(pdfImageAb);\n\t\t}\n\t\tthis.reSortAsSaddleStitchingOrder(letList, isPageDirectionR2L, isSaddleStitchingOrder);\n\t\tconst pdfBuilder = new PdfBuilder();\n\t\tconsole.log(paperSize + \"/isMatchPageStartSide:\" + isMatchPageStartSide)\n\t\t// alert(paperSize)\n\t\tconst result = pdfBuilder.createImagesDoc(paperSize, letList);\n\t\tthis.delOnList();\n\t\t// console.log(result)\n\t\t// console.log(result.byteLength)\n\t\t// alert(result)\n\t\treturn result;\n\t}\n\treSortAsSaddleStitchingOrder(letList, isPageDirectionR2L, isSaddleStitchingOrder) {\n\t\t// console.log(\"reSortAsSaddleStitchingOrder A1:\" + \"/\" + letList.length)\n\t\tif (isSaddleStitchingOrder !== true) {\n\t\t\treturn\n\t\t}\n\t\tconst tmpList = [];\n\t\tconst len = letList.length;\n\t\t// console.log(\"reSortAsSaddleStitchingOrder len:\" + len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\ttmpList.push(letList.shift());\n\t\t}\n\t\tconst mod = 4 - len % 4;\n\t\t// console.log(\"reSortAsSaddleStitchingOrder mod:\" + mod);\n\t\tif (mod < 4) {\n\t\t\tfor (let i = 0; i < mod; i++) {\n\t\t\t\ttmpList.push({});\n\t\t\t}\n\t\t}\n\t\tconst outputLength = tmpList.length;\n\t\t// console.log(\"reSortAsSaddleStitchingOrder outputLength:\" + outputLength);\n\t\tlet isFromFirst = isPageDirectionR2L === false;\n\t\t// console.log(\"reSortAsSaddleStitchingOrder A2:\" + isFromFirst + \"/\" + tmpList.length + \"/\" + letList.length)\n\t\tconst setCount = outputLength / 4;\n\t\tfor (let i = 0; i < setCount; i++) {\n\t\t\tconst switchFlag = isFromFirst; //setCount % 2 > 0 ? !isFromFirst : isFromFirst;\n\t\t\tconst offsetPageNum = i * 2;\n\t\t\tconst one = switchFlag ? tmpList[offsetPageNum] : tmpList[outputLength - (1 + offsetPageNum)];\n\t\t\tconst two = switchFlag ? tmpList[outputLength - (1 + offsetPageNum)] : tmpList[offsetPageNum];\n\t\t\tconst three = switchFlag ? tmpList[outputLength - (2 + offsetPageNum)] : tmpList[offsetPageNum + 1];\n\t\t\tconst four = switchFlag ? tmpList[offsetPageNum + 1] : tmpList[outputLength - (2 + offsetPageNum)];\n\n\t\t\tletList.push(one);\n\t\t\tletList.push(two);\n\t\t\tletList.push(three);\n\t\t\tletList.push(four);\n\t\t}\n\t\t// console.log(\"reSortAsSaddleStitchingOrder A3:\" + isFromFirst + \"/\" + tmpList.length + \"/\" + letList.length)\n\t}\n\taddDummyPage() {\n\t\treturn {};\n\t}\n\tasync loadBinaryWidCleanUp(pk) {\n\t\tif (!pk) {\n\t\t\treturn null;\n\t\t}\n\t\tconst binaryEntity = await this.em.get(pk);\n\t\tthis.delList.push(pk);\n\t\treturn binaryEntity;\n\t}\n\tasync delOnList() {\n\t\tfor (let pk of this.delList) {\n\t\t\tconst outputNew = await this.bm.save(pk, \"expandPage\", new Uint8Array(1)\n\t\t\t\t.buffer, { width: 1, height: 1 });\n\t\t\t// await this.bm.remove(pk);\n\t\t}\n\t}\n}","import { Sorter } from \"../../util/sorter\";\nimport { getNowUnixtime, unixTimeToDateFormat } from \"../../util/timeUtil\";\nimport { Paper } from \"../../util/image/paper\";\nimport { ImageMerger } from \"../../util/image/imageMerger\";\nimport { ImageResizer } from \"../../util/image/imageResizer\";\nimport { ImageCropper } from \"../../util/image/imageCropper\";\nimport { ImageFilter } from \"../../util/image/imageFilter\";\nimport { UnicodeEncoder } from \"../../util/unicodeEncoder\";\nimport { MainService } from \"../../service/mainService\"\nimport { PreviewProcessor } from \"./previewProcessor\"\nimport { ProgressBarProcessor } from \"./progressBarProcessor\"\nimport { ExportPdfProcessor } from \"./exportPdfProcessor\"\n// import {Zlib, Zip, Raw, PKZIP} from \"zlibjs/bin/zlib_and_gzip.min\"\nimport { Zlib } from \"zlibjs/bin/zip.min\"\n\nconst order = {\n\torderName: \"MangaPaperA4ExpandTatikiri\",\n\tbasePaper: \"mangaPaperA4ExpandTatikiri\",\n\tdpiName: \"dpi600\"\n};\nexport class ExportImageProcessor {\n\tconstructor(pp) {\n\t\tthis.pp = pp;\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.em = this.ms.em;\n\t\tthis.sm = this.ms.sm;\n\t\tthis.bm = this.ms.bm;\n\t\tthis.im = this.ms.im;\n\t\tthis.iom = this.ms.iom;\n\t\tthis.ip = this.ms.ip;\n\t\tthis.tm = this.ms.tm;\n\t\tthis.paper = new Paper();\n\t\tthis.imageMerger = new ImageMerger();\n\t\tthis.imageResizer = new ImageResizer();\n\t\tthis.imageCropper = new ImageCropper();\n\t\tthis.imageFilter = new ImageFilter();\n\t\tthis.pbp = new ProgressBarProcessor();\n\t\tthis.epp = new ExportPdfProcessor();\n\n\t\tthis.progress = 0;\n\t\tthis.delList = [];\n\t}\n\tasync exportZipExecute(exportOrders = [order]) {\n\t\treturn await this.exportExecute(exportOrders, true);\n\t}\n\tasync exportPdfExecute(exportOrders) {\n\t\treturn await this.exportExecute(exportOrders, false);\n\t}\n\tasync exportExecute(exportOrders = [order], isZip = true) {\n\t\t// 0 load Title & pages ExecutePerPage\n\t\tawait this.pbp.open('Export and save files for print as ' + (isZip ? \"zip\" : \"pdf\"));\n\t\tthis.progress = 0;\n\t\tthis.pbp.update(this.progress, 'loading Settings');\n\t\tconst setting = await this.tm.loadSettings()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e)\n\t\t\t});\n\t\tthis.progress = 1;\n\t\tthis.pbp.update(this.progress, 'loading pages');\n\t\tconst pages = await this.pp.loadPages()\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e)\n\t\t\t});\n\t\tthis.progress = 2;\n\t\tawait this.pbp.update(this.progress, 'start executess');\n\t\tconst result = await this.executeParOrder(setting, pages, exportOrders[0], isZip)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"ExportImageProcessor exportExecute executeParOrder\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\tawait this.pbp.comple(this.progress);\n\t\treturn result;\n\t}\n\tasync executeParOrder(setting, pages, order, isZip) {\n\t\t//-1 order consts calc\n\t\tconst targetDpi = this.paper.getDpi(order.dpiName);\n\t\tconst targetSize = this.paper.getTargetPaperSize(order.basePaper, order.dpiName);\n\t\tconst clopOffset = this.paper.calcClopOffsetPixcel(order.basePaper, targetDpi);\n\t\tconst frameSizeMm = this.paper.getPaperFrameSizeMm(order.basePaper);\n\t\tconst isGrayscale = order.isGrayscale;\n\t\tconst isMaxSize10M = order.isMaxSize10M;\n\t\tconst isLanczose = order.isLanczose;\n\t\tconst isSaddleStitchingOrder = order.isSaddleStitchingOrder;\n\t\tconst frameSize = {\n\t\t\tx: this.paper.calcPixcel(targetDpi, frameSizeMm.x),\n\t\t\ty: this.paper.calcPixcel(targetDpi, frameSizeMm.y)\n\t\t};\n\t\tthis.progress = 3;\n\t\tthis.pbp.update(this.progress, 'expandAndCropSize');\n\t\tawait this.expandAndCropSize(targetSize, frameSizeMm, frameSize, clopOffset, pages, isGrayscale, isLanczose, setting.pageNum)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"ExportImageProcessor exportExecute executeParOrder\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\tconst exports = isZip ? (await this.executeAsZip(targetSize, setting, pages, isMaxSize10M)) : (await this.executeAsPdf(order.basePaper, setting, pages, isMaxSize10M, isSaddleStitchingOrder));\n\t\treturn exports;\n\t}\n\tasync executeAsZip(targetSize, setting, pages, isMaxSize10M) {\n\t\tconst isPageDirectionR2L = setting.pageDirection === \"r2l\";\n\t\tconst isRightStart = setting.startPage === \"r\";\n\t\tconst isSideSynced = (isPageDirectionR2L && isRightStart) || (!isPageDirectionR2L && !isRightStart);\n\t\tconst isOdd = pages.length % 2 > 0;\n\n\t\tthis.progress = 60;\n\t\tthis.pbp.update(this.progress, 'start exportDualImage4Print');\n\t\tawait this.exportDualImage4Print(targetSize, setting, pages, isSideSynced, isOdd, isPageDirectionR2L, isMaxSize10M)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"ExportImageProcessor exportExecute executeParOrder\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\t//11 save zip\n\t\tthis.progress = 85;\n\t\tthis.pbp.update(this.progress, 'start exoprtAsZip');\n\t\tawait this.delOnList();\n\t\tconst compressed = await this.exoprtAsZip(pages)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"ExportImageProcessor exportExecute executeParOrder\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\treturn await this.commonEnd(compressed, \"zip\");\n\t}\n\tasync executeAsPdf(targetSize, setting, pages, isMaxSize10M, isSaddleStitchingOrder) {\n\t\tconst isPageDirectionR2L = setting.pageDirection === \"r2l\";\n\t\tconst isRightStart = setting.startPage === \"r\";\n\t\tconst isSideSynced = (isPageDirectionR2L && isRightStart) || (!isPageDirectionR2L && !isRightStart);\n\t\tconst isOdd = pages.length % 2 > 0;\n\n\t\tthis.progress = 60;\n\t\tthis.pbp.update(this.progress, 'start exportDualImage4Print');\n\t\tthis.progress = 85;\n\t\tthis.pbp.update(this.progress, 'start exoprtAsPdf');\n\t\tconst targetPaper = this.paper.getTragetPaper(targetSize);\n\t\t// console.log(setting);\n\t\t// alert(setting);\n\t\tconst pdf = await this.epp.createPdf(targetPaper, pages, targetSize, setting, isSaddleStitchingOrder)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(\"ExportImageProcessor exportExecute executeParOrder\");\n\t\t\t\tconsole.error(e.stack);\n\t\t\t\tconsole.error(e);\n\t\t\t\tconsole.error(e.currentTarget);\n\t\t\t\tconsole.error(e.returnValue);\n\t\t\t\tconsole.error(e.srcElement);\n\t\t\t\tconsole.error(e.target);\n\t\t\t\tconsole.error(e.type);\n\t\t\t\tconsole.error(e.eventPhase);\n\t\t\t\tconsole.error(e.timeStamp);\n\t\t\t\tconsole.error(e.message);\n\t\t\t\tconsole.error(e.lineno);\n\t\t\t\tconsole.error(e.error);\n\t\t\t});\n\t\t// alert(\"pdf:\" + pdf);\n\t\treturn await this.commonEnd(pdf, \"pdf\");\n\t}\n\t//End\n\tasync commonEnd(result, type) {\n\t\tconst exports = await this.tm.getExports();\n\t\tlet exportImagePk = null;\n\t\tlet outputOld = null;\n\t\tfor (let exportPk of exports) {\n\t\t\tconst imageOutput = await this.iom.load(exportPk);\n\t\t\tif (imageOutput && imageOutput.type === type) {\n\t\t\t\texportImagePk = exportPk;\n\t\t\t\toutputOld = imageOutput.binary;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst outputNew = await this.bm.save(outputOld, \"expandPage\", result);\n\t\tconst size = result.byteLength;\n\t\tconst now = (new Date()\n\t\t\t.getTime());\n\t\tconst yyyyMMddThhmmss = unixTimeToDateFormat(now, \"yyyyMMddThhmmss\");\n\t\tconst settings = await this.tm.loadSettings();\n\t\tconst defaultTitle = await this.tm.getCurrentTitleName();\n\t\tconst exportPrefix = settings.name ? settings.name : defaultTitle;\n\t\tconst exportImageNewPk = await this.iom.save(exportImagePk, exportPrefix + yyyyMMddThhmmss + \".\" + type, outputNew, type, order.orderName, size);\n\t\t// console.log(result);\n\t\tif (exportImageNewPk) {\n\t\t\texports.push(exportImageNewPk);\n\t\t\tawait this.tm.saveCurrent();\n\t\t}\n\t\tawait this.delOnList();\n\t\t// return pk list PK!PK!\n\t\tthis.progress = 100;\n\t\tthis.pbp.update(this.progress, 'end all!');\n\t\tthis.pbp.comple(this.progress);\n\t\treturn exports;\n\t}\n\tasync expandAndCropSize(targetSize, frameSizeMm, frameSize, clopOffset, pages, isGrayscale, isLanczose, pageNum) {\n\t\t//console.log(\"--targetSize--isGrascale:\" + isGrascale)\n\t\t//console.log(targetSize)\n\t\tconst expandedPaper = {\n\t\t\tdata: new Uint8ClampedArray(frameSize.x * frameSize.y * 4),\n\t\t\twidth: frameSize.x,\n\t\t\theight: frameSize.y\n\t\t};\n\t\tconst cropedPaper = {\n\t\t\tdata: new Uint8ClampedArray(targetSize.x * targetSize.y * 4),\n\t\t\twidth: targetSize.x,\n\t\t\theight: targetSize.y\n\t\t};\n\t\tconst cropedPaperForSave = {\n\t\t\tdata: new Uint8ClampedArray(targetSize.x * targetSize.y * 4),\n\t\t\twidth: targetSize.x,\n\t\t\theight: targetSize.y\n\t\t};\n\t\tconst targetRetio = targetSize.x / targetSize.y;\n\t\tconst isBaseWhite = true;\n\t\tlet currentDataAb = null\n\t\tthis.progress = 5;\n\t\tthis.pbp.update(this.progress, 'start pages');\n\t\t//50\n\t\tconst pegaNum = pageNum; //pages.length;\n\t\tconst stepNum = 9\n\t\tconst progressUnit = 50 / (stepNum * pegaNum)\n\t\tlet pageCount = 0;\n\t\tfor (let pageEntity of pages) {\n\t\t\tpageCount++;\n\t\t\tif (pageCount > pegaNum) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst pageStep = \"[\" + pageCount + \"/\" + pegaNum + \"]\";\n\t\t\tif (pageEntity && pageEntity.baseImage) {\n\t\t\t\t// console.log(pageEntity)\n\t\t\t\t//1 Expand\n\t\t\t\tthis.pbp.update(this.progress, 'load baseImageEntity' + pageStep);\n\t\t\t\tconst baseImageEntity = await this.em.get(pageEntity.baseImage);\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'load baseBinaryEntity' + pageStep);\n\t\t\t\tconst width = baseImageEntity.width;\n\t\t\t\tconst height = baseImageEntity.height;\n\t\t\t\tconst baseBinaryEntity = await this.em.get(baseImageEntity.binary);\n\t\t\t\t// console.log(baseImageEntity)\n\t\t\t\t// console.log(bastapNumseBinaryEntity)\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa0a\")\n\t\t\t\t// TODO convert flate bitmap data\n\t\t\t\tcurrentDataAb = baseBinaryEntity._ab;\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'get ImageDataFromArrayBuffer' + pageStep);\n\t\t\t\tconst origin = await this.ip.getImageDataFromArrayBuffer(baseBinaryEntity._ab);\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa0a w:\" + origin.width + '/h:' + origin.height)\n\t\t\t\tconst retio = width / height;\n\t\t\t\tconst isWider = retio > targetRetio;\n\t\t\t\tconst longPixcel = isWider ?\n\t\t\t\t\twidth :\n\t\t\t\t\theight;\n\t\t\t\tconst longMm = isWider ?\n\t\t\t\t\tframeSizeMm.x :\n\t\t\t\t\tframeSizeMm.y;\n\t\t\t\tconst dpi = this.paper.calcDpi(longPixcel, longMm);\n\t\t\t\t//paper size nomalize\n\t\t\t\tconst sizeWhitePaperWidth = isWider ?\n\t\t\t\t\twidth :\n\t\t\t\t\tMath.floor(height * targetRetio);\n\t\t\t\tconst sizeWhitePaperHeight = isWider ?\n\t\t\t\t\tMath.floor(width / targetRetio) :\n\t\t\t\t\theight;\n\t\t\t\tconst offsetX = isWider ?\n\t\t\t\t\t0 :\n\t\t\t\t\tMath.floor((sizeWhitePaperWidth - width) / 2);\n\t\t\t\tconst offsetY = isWider ?\n\t\t\t\t\tMath.floor((sizeWhitePaperHeight - height) / 2) :\n\t\t\t\t\t0;\n\t\t\t\tconst whitePaper = {\n\t\t\t\t\tdata: new Uint8ClampedArray(sizeWhitePaperWidth * sizeWhitePaperHeight * 4),\n\t\t\t\t\twidth: sizeWhitePaperWidth,\n\t\t\t\t\theight: sizeWhitePaperHeight\n\t\t\t\t};\n\t\t\t\torigin.offsetX = offsetX;\n\t\t\t\torigin.offsetY = offsetY;\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa1a/\" + whitePaper.data.length + '/w:' + sizeWhitePaperWidth + '/h:' + sizeWhitePaperHeight); // + \"/isGrascale:\" + isGrascale)\n\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'maege Replace origin to whitePaper' + pageStep);\n\n\t\t\t\tconsole.time(\"maege Replace origin to whitePaper\" + pageStep)\n\t\t\t\tif (isGrayscale && !pageEntity.isForceColor) {\n\t\t\t\t\tawait this.imageMerger.margeReplace(whitePaper, [this.imageFilter.beGrascale(origin)], isBaseWhite, true);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.imageMerger.margeReplace(whitePaper, [origin], isBaseWhite, true);\n\t\t\t\t}\n\t\t\t\tconsole.timeEnd(\"maege Replace origin to whitePaper\" + pageStep)\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa2a/\" + expandedPaper.data.length)\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, (isLanczose ? 'expand resizeAsLanczos' : 'expand resizeAsByCubic') + pageStep);\n\t\t\t\tconsole.time((isLanczose ? 'expand resizeAsLanczos' : 'expand resizeAsByCubic') + pageStep)\n\t\t\t\tif (pageEntity.isNoCropping) {\n\t\t\t\t\tif (isLanczose) {\n\t\t\t\t\t\tawait this.imageResizer.resizeAsLanczos(whitePaper, cropedPaper, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.imageResizer.resizeAsByCubic(whitePaper, cropedPaper, true);\n\t\t\t\t\t}\n\t\t\t\t\t//console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa3a/\" + cropedPaper.data.length)\n\t\t\t\t\tthis.progress += progressUnit;\n\t\t\t\t\tthis.pbp.update(this.progress, 'No crop!' + pageStep);\n\t\t\t\t} else {\n\t\t\t\t\tif (isLanczose) {\n\t\t\t\t\t\tawait this.imageResizer.resizeAsLanczos(whitePaper, expandedPaper, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.imageResizer.resizeAsByCubic(whitePaper, expandedPaper, true);\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa3a/\" + cropedPaper.data.length)\n\t\t\t\t\tthis.progress += progressUnit;\n\t\t\t\t\tthis.pbp.update(this.progress, 'crop!' + pageStep);\n\t\t\t\t\tawait this.imageCropper.corpImageToData(expandedPaper, cropedPaper, clopOffset);\n\t\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa3b/\" + cropedPaper.data.length)\n\t\t\t\t}\n\t\t\t\tconsole.timeEnd((isLanczose ? 'expand resizeAsLanczos' : 'expand resizeAsByCubic') + pageStep)\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'get ArrayBuffer From ImageBitmapData' + pageStep);\n\n\t\t\t\t//currentDataAb = this.ip.getArrayBufferFromImageBitmapData(cropedPaper);\n\t\t\t\tcurrentDataAb = cropedPaper.data.buffer;\n\t\t\t\tconst plain = cropedPaper.data;\n\t\t\t\t//console.log(Zlib);\n\t\t\t\t//console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa4a-/\")\n\t\t\t\t//console.time('RawDeflate');\n\t\t\t\t// const deflate = new Raw.RawDeflate(plain);\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa5a\")\n\t\t\t\t// const compressed = deflate.compress();\n\t\t\t\t// console.timeEnd('RawDeflate');\n\t\t\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa6a\")\n\t\t\t\t// cropedPaperForSave.data = compressed;\n\n\t\t\t\t// console.log(compressed)\n\t\t\t\t// alert(frameSizeMm);\n\t\t\t\t//expand\n\t\t\t\t//2 Save to page\n\t\t\t\tconst outputOld = pageEntity.outputExpandImage;\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'save ArrayBuffer' + pageStep);\n\t\t\t\tconst outputNew = await this.bm.save(outputOld, \"expandPage\", currentDataAb, { width: cropedPaper.width, height: cropedPaper.height });\n\t\t\t\tpageEntity.outputExpandImage = outputNew;\n\t\t\t\tthis.progress += progressUnit;\n\t\t\t\tthis.pbp.update(this.progress, 'save pageEntity' + pageStep);\n\t\t\t\tawait this.em.Pages.save(pageEntity);\n\t\t\t\t//3 CropPage\n\t\t\t\t//4 saveImage\n\t\t\t\t//5 Save to page\n\t\t\t\t//break;\n\t\t\t} else {\n\t\t\t\tthis.progress += progressUnit * stepNum;\n\t\t\t\tthis.pbp.update(this.progress, 'save pageEntity' + pageStep);\n\t\t\t}\n\t\t}\n\t}\n\tasync exoprtAsZip(pages) {\n\t\tconsole.time(\"exoprtAsZip\")\n\t\tconst zip = new Zlib.Zip({ compress: false });\n\t\tlet pageNum = 0;\n\t\tlet lastOne = null;\n\t\tfor (let pageEntity of pages) {\n\t\t\tif (pageEntity && pageEntity.outputDualImage) {\n\t\t\t\tif (pageEntity.outputDualImage === lastOne) {\n\t\t\t\t\tpageEntity.outputDualImage = null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tpageNum++;\n\t\t\t\tlastOne = pageEntity.outputDualImage;\n\t\t\t\tconst outputBinaryEntity = await this.em.get(lastOne);\n\t\t\t\t//console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa7a pageNum:\" + pageNum + \"/outputBinaryEntity:\" + outputBinaryEntity + \"/lastOne:\" + lastOne);\n\t\t\t\tif (outputBinaryEntity) {\n\t\t\t\t\tconst nextPageNo = pageNum * 2;\n\t\t\t\t\tconst currentPageNo = nextPageNo - 1;\n\t\t\t\t\tzip.addFile(new Uint8Array(outputBinaryEntity._ab), {\n\t\t\t\t\t\tfilename: UnicodeEncoder.stringToByteArray('page' + currentPageNo + \"-\" + nextPageNo + '.jpg')\n\t\t\t\t\t});\n\t\t\t\t\tthis.delList.push(lastOne);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t//uncompress\n\t\tconst result = zip.compress();\n\t\tconsole.timeEnd(\"exoprtAsZip\")\n\t\treturn result;\n\t}\n\tasync exportDualImage4Print(targetSize, setting, pages, isSideSynced, isOdd, isPageDirectionR2L, isMaxSize10M) {\n\t\t//6 new WhiteImageCreate\n\t\t//7 load2PageImage\n\t\t//8 merge\n\t\t//9 save\n\t\tconst cropedPaperDual = {\n\t\t\tdata: new Uint8ClampedArray(targetSize.x * targetSize.y * 8),\n\t\t\twidth: targetSize.x * 2,\n\t\t\theight: targetSize.y\n\t\t};\n\t\t//console.log(setting);\n\t\t// const cratePageData = PreviewProcessor.getCratePageDataFunc();\n\t\tconst dummyClass = \"dummy\";\n\t\t// const shapedList = PreviewProcessor.buildPageFrames(setting, pages, cratePageData, dummyClass);\n\t\tconst pairPages = {\n\t\t\tright: null,\n\t\t\tleft: null,\n\t\t\trightBin: null,\n\t\t\tleftBin: null\n\t\t};\n\t\tlet isSkeped = isSideSynced !== true;\n\t\tconst printPages = [];\n\t\tconst printPairs = [];\n\t\tlet indexA = 0;\n\t\tconsole.time(\"exportDualImage4Print A1:\");\n\t\tfor (let page of pages) {\n\t\t\tif (indexA === 0 && isSideSynced) {\n\t\t\t\tprintPages.push(null);\n\t\t\t}\n\t\t\tindexA++;\n\t\t\t// console.error(page);\n\t\t\tconst data = {\n\t\t\t\tpageNo: indexA,\n\t\t\t\tisDummy: false,\n\t\t\t\tisRight: indexA % 2 > 0 && isSideSynced,\n\t\t\t\tbinary: !page || page.baseImage === null ?\n\t\t\t\t\tnull : page\n\t\t\t}\n\t\t\tprintPages.push(data);\n\t\t}\n\t\tconsole.timeEnd(\"exportDualImage4Print A1:\");\n\n\t\tconsole.time(\"exportDualImage4Print A2:\");\n\t\tfor (let index = 0; index < printPages.length; index++) {\n\t\t\tconst newPair = [null, null];\n\t\t\tnewPair[0] = printPages[index];\n\t\t\tindex++;\n\t\t\tif (index < printPages.length) {\n\t\t\t\tnewPair[1] = printPages[index];\n\t\t\t}\n\t\t\tprintPairs.push(newPair);\n\t\t}\n\t\tthis.progress = 61;\n\t\tthis.pbp.update(this.progress, 'start exportDualImage4Print');\n\t\tconst pageNum = printPairs.length;\n\t\tlet pageCount = 0;\n\t\tconst stepNum = 9\n\t\tconst progressUnit = 20 / (stepNum * pageNum)\n\t\tconsole.timeEnd(\"exportDualImage4Print A2:\");\n\t\tconsole.time(\"exportDualImage4Print A3:\");\n\t\tfor (let printPagePair of printPairs) {\n\t\t\tpageCount++;\n\t\t\tconst pageStep = \"[\" + pageCount + \"/\" + pageNum + \"]\";\n\t\t\tthis.progress += progressUnit;\n\t\t\tthis.pbp.update(this.progress, 'exportDualImage4Print' + pageStep);\n\n\t\t\t// console.log(\"exportDualImage4Print　pageStep:\" + pageStep + \"/\" + cropedPaperDual.data.length);\n\t\t\t// console.log(cropedPaperDual);\n\t\t\tawait this.buildDualImage(targetSize, cropedPaperDual, pairPages, printPagePair, isPageDirectionR2L, isMaxSize10M, pageStep, progressUnit);\n\t\t}\n\t\tconsole.timeEnd(\"exportDualImage4Print A3:\");\n\t\t// console.log(cropedPaperDual);\n\t}\n\tasync buildDualImage(targetSize, cropedPaperDual, pairPages, shapedPagePair, isPageDirectionR2L, isMaxSize10M, pageStep, progressUnit) {\n\t\tconsole.time(\"exportDualImage4Print buildDualImageA3 pageStep:\" + pageStep);\n\t\t//console.log(shapedPagePair);\n\t\tconst one = shapedPagePair[0];\n\t\tconst two = shapedPagePair[1];\n\t\t// reverse side!\n\t\tconst right = isPageDirectionR2L ?\n\t\t\tone :\n\t\t\ttwo;\n\t\tconst left = isPageDirectionR2L ?\n\t\t\ttwo :\n\t\t\tone;\n\t\tpairPages.right = right === null || right.isDummy ?\n\t\t\tnull :\n\t\t\tright.binary;\n\t\tpairPages.left = left === null || left.isDummy ?\n\t\t\tnull :\n\t\t\tleft.binary;\n\t\tpairPages.rightBin = null;\n\t\tpairPages.leftBin = null;\n\t\t// console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa6a shapedPagePair:\" + shapedPagePair + \"/left:\" + pairPages.left + \"/right:\" + pairPages.right);\n\n\t\tlet pageEntity = null;\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'load pairPages.right' + pageStep);\n\t\tif (pairPages.right && pairPages.right.outputExpandImage) {\n\t\t\t// pairPages.rightBin = await this.em.get(pairPages.right.outputExpandImage);\n\t\t\tpairPages.rightBin = await this.loadBinaryWidCleanUp(pairPages.right.outputExpandImage);\n\t\t\tpageEntity = pairPages.right;\n\t\t}\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'load pairPages.left' + pageStep);\n\t\tif (pairPages.left && pairPages.left.outputExpandImage) {\n\t\t\t// pairPages.leftBin = await this.em.get(pairPages.left.outputExpandImage);\n\t\t\tpairPages.leftBin = await this.loadBinaryWidCleanUp(pairPages.left.outputExpandImage);\n\t\t\tpageEntity = pairPages.left;\n\t\t}\n\t\tif (!pageEntity) {\n\t\t\tthis.progress += progressUnit * 7;\n\t\t\tthis.pbp.update(this.progress, 'load null' + pageStep);\n\t\t\treturn;\n\t\t}\n\t\tthis.imageMerger.beWhiteImage(cropedPaperDual, true);\n\t\t//console.log(\"aaaaaaaaaaaaaaaaaaaaaaaa6a left:\" + pairPages.left + \"/right:\" + pairPages.right);\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'set Left' + pageStep);\n\t\tif (pairPages.leftBin) {\n\t\t\tconst data = pairPages.leftBin._ab;\n\t\t\t//\tconst data = await this.ip.getImageDataFromArrayBuffer(pairPages.leftBin._ab);\n\t\t\tconst origin = { data: new Uint8Array(data), width: pairPages.leftBin.width, height: pairPages.leftBin.height }\n\t\t\torigin.offsetX = 0;\n\t\t\torigin.offsetY = 0;\n\t\t\t// console.log(\"A pairPages.leftBin　pageStep:\" + pageStep);\n\t\t\t// console.log(cropedPaperDual);\n\t\t\t// console.log(origin);\n\t\t\tawait this.imageMerger.margeReplace(cropedPaperDual, [origin], false, true);\n\t\t\t// console.log(\"pairPages.leftBin\");\n\t\t}\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'set right' + pageStep);\n\t\tif (pairPages.rightBin) {\n\t\t\tconst data = pairPages.rightBin._ab;\n\t\t\t// const data = await this.ip.getImageDataFromArrayBuffer(pairPages.rightBin._ab);\n\t\t\tconst origin = { data: new Uint8Array(data), width: pairPages.rightBin.width, height: pairPages.rightBin.height }\n\t\t\torigin.offsetX = targetSize.x;\n\t\t\torigin.offsetY = 0;\n\t\t\t// console.log(\"B pairPages.rightBin　pageStep:\" + pageStep);\n\t\t\t// console.log(cropedPaperDual);\n\t\t\t// console.log(origin);\n\t\t\tawait this.imageMerger.margeReplace(cropedPaperDual, [origin], false, true);\n\t\t\t// console.log(\"pairPages.rightBin\");\n\t\t}\n\t\t//ping?\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'convert to jepg' + pageStep);\n\t\tlet cropedPaperDualAb = this.ip.getArrayBufferFromImageBitmapDataAsJpg(cropedPaperDual, 1.0);\n\t\tconst size10MB = 10 * 1000 * 1000;\n\t\tconst length = cropedPaperDualAb.byteLength;\n\t\tif (isMaxSize10M && size10MB < length) {\n\t\t\tconst retio = size10MB / length;\n\t\t\tropedPaperDualAb = this.ip.getArrayBufferFromImageBitmapDataAsJpg(cropedPaperDual, retio);\n\t\t}\n\t\tconst outputOld = pageEntity.outputDualImage;\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'save jepg binary' + pageStep);\n\t\tconst outputNew = await this.bm.save(outputOld, \"expandDualPage\", cropedPaperDualAb);\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'save right and delete temp files' + pageStep);\n\t\tif (pairPages.right && pairPages.right.outputExpandImage) {\n\t\t\tpairPages.right.outputDualImage = outputNew;\n\t\t\tawait this.em.Pages.save(pairPages.right);\n\t\t\tawait this.em.delete(pairPages.rightBin);\n\t\t}\n\t\tthis.progress += progressUnit;\n\t\tthis.pbp.update(this.progress, 'save left and delete temp files' + pageStep);\n\t\tif (pairPages.left && pairPages.left.outputExpandImage) {\n\t\t\tpairPages.left.outputDualImage = outputNew;\n\t\t\tawait this.em.Pages.save(pairPages.left);\n\t\t\tawait this.em.delete(pairPages.leftBin);\n\t\t}\n\t\tconsole.timeEnd(\"exportDualImage4Print buildDualImageA3 pageStep:\" + pageStep);\n\t}\n\tasync loadBinaryWidCleanUp(pk) {\n\t\tconst binaryEntity = await this.em.get(pk);\n\t\tthis.delList.push(pk);\n\t\treturn binaryEntity;\n\t}\n\tasync delOnList() {\n\t\tfor (let pk of this.delList) {\n\t\t\t// const outputNew = await this.bm.save(pk, \"expandPage\", new Uint8Array(1)\n\t\t\t// \t.buffer, { width: 1, height: 1 });\n\t\t\tawait this.bm.remove(pk);\n\t\t}\n\t}\n}","import { Sorter } from \"../../util/sorter\";\nimport { getNowUnixtime } from \"../../util/timeUtil\";\nimport { UnicodeEncoder } from \"../../util/unicodeEncoder\";\nimport { MainService } from \"../../service/mainService\"\nimport { PreviewProcessor } from \"./previewProcessor\"\n\nconst order = {\n\torderName: \"MangaPaperA4ExpandTatikiri\",\n\tbasePaper: \"mangaPaperA4ExpandTatikiri\",\n\tdpiName: \"dpi600\"\n};\nexport class ExportUtilProcessor {\n\tconstructor() {\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.em = this.ms.em;\n\t\tthis.bm = this.ms.bm;\n\t\tthis.im = this.ms.im;\n\t\tthis.iom = this.ms.iom;\n\t\tthis.tm = this.ms.tm;\n\t}\n\tasync load() {\n\t\tconst exportPks = await this.tm.getExports();\n\t\treturn await this.getZipPdfPair(exportPks);\n\t}\n\tasync remove(exportPk = -1) {\n\t\tconst exportPks = await this.tm.getExports();\n\t\tif (exportPks) {\n\t\t\tfor (let exportｓIndex in exportPks) {\n\t\t\t\tconst current = exportPks[exportｓIndex];\n\t\t\t\tdelete exportPks[exportｓIndex];\n\t\t\t\tawait this.iom.remove(current);\n\t\t\t}\n\t\t\tawait this.tm.saveCurrent();\n\t\t}\n\t}\n\tasync loadZip(exportPk) {\n\t\tif (exportPk) {\n\t\t\talert('ExportUtilProcessor loadZip is NULL!');\n\t\t} else {\n\t\t\tconst imageOutpus = await this.load();\n\t\t\tconst zip = imageOutpus.zip;\n\t\t\tif (zip && zip.binary) {\n\t\t\t\t//alert(zip.binary);\n\t\t\t\tconst binaryEntity = await this.bm.load(zip.binary);\n\t\t\t\tzip.ab = binaryEntity._ab;\n\t\t\t\t// console.error(zip.ab)\n\t\t\t}\n\t\t\treturn zip;\n\t\t}\n\t\treturn null;\n\t}\n\tasync loadPdf(exportPk) {\n\t\tif (exportPk) {\n\t\t\talert('ExportUtilProcessor loadPdf exportPk is NULL!');\n\t\t} else {\n\t\t\tconst imageOutpus = await this.load();\n\t\t\tconst pdf = imageOutpus.pdf;\n\t\t\tif (pdf && pdf.binary) {\n\t\t\t\tconst binaryEntity = await this.bm.load(pdf.binary);\n\t\t\t\tpdf.ab = binaryEntity._ab;\n\t\t\t}\n\t\t\treturn pdf;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getZipPdfPair(exportPks) {\n\t\tconst imageOutpus = { pdf: null, zip: null };\n\t\tif (!!exportPks === false) {\n\t\t\treturn imageOutpus;\n\t\t}\n\t\tfor (let exportPk of exportPks) {\n\t\t\tconst imageOutput = await this.iom.load(exportPk);\n\t\t\tif (imageOutput && imageOutput.type === \"zip\") {\n\t\t\t\timageOutpus.zip = imageOutput;\n\t\t\t}\n\t\t\tif (imageOutput && imageOutput.type === \"pdf\") {\n\t\t\t\timageOutpus.pdf = imageOutput;\n\t\t\t}\n\t\t}\n\t\treturn imageOutpus;\n\t}\n}","import { ExportActionCreator } from '../action/exportActionCreator'\nimport { MainService } from \"../../service/mainService\"\nimport { BaseReducer } from '../../util/reactive/baseReducer'\nimport { ExportImageProcessor } from '../processor/exportImageProcessor'\nimport { ExportUtilProcessor } from '../processor/exportUtilProcessor'\nimport { PageProcessor } from '../processor/pageProcessor'\nimport { ImageActionCreator } from '../action/imageActionCreator'\nlet exportReducer = null;\nexport class ExportReducer extends BaseReducer {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.ms = MainService.getInstance();\n\t\tthis.im = this.ms.im;\n\t\tthis.bm = this.ms.bm;\n\t\tthis.iom = this.ms.iom;\n\t\tthis.tm = this.ms.tm;\n\t\tthis.exportExecuteAction = ExportActionCreator.createExecuteAction();\n\t\tthis.exportExecuteAllAction = ExportActionCreator.creatExecuteAllAction();\n\t\tthis.exportRemoveAction = ExportActionCreator.creatRemoveAction();\n\t\tthis.exportsLoadAction = ExportActionCreator.creatLoadAction();\n\t\tthis.exportDownloadAction = ExportActionCreator.createDownloadAction();\n\t\tthis.exportExecutePdfAction = ExportActionCreator.createExecutePdfAction();\n\t\tthis.exportDownloadPdfAction = ExportActionCreator.createDownloadPdfAction();\n\t\tthis.selectOrderAction = ExportActionCreator.createSelectOrderAction();\n\t\tthis.atatch(this.exportExecuteAction);\n\t\tthis.atatch(this.exportExecuteAllAction);\n\t\tthis.atatch(this.exportRemoveAction);\n\t\tthis.atatch(this.exportsLoadAction);\n\t\tthis.atatch(this.exportDownloadAction);\n\t\tthis.atatch(this.exportExecutePdfAction);\n\t\tthis.atatch(this.exportDownloadPdfAction);\n\t\tthis.atatch(this.selectOrderAction);\n\n\t\tthis.pp = new PageProcessor();\n\t\tthis.eip = new ExportImageProcessor(this.pp);\n\t\tthis.eup = new ExportUtilProcessor(this.pp);\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n\t\tthis.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n\t\tthis.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n\t\tthis.storeSelectedOrderKey = ExportActionCreator.getStoreSelectedOrderKey();\n\t\tthis.addInitializeKey(this.storeKey);\n\t\tthis.addInitializeKey(this.storePdfDLKey);\n\t\tthis.addInitializeKey(this.storeZipDLKey);\n\t\tthis.addInitializeKey(this.storeRemoveResultKey);\n\t\tthis.addInitializeKey(this.storeExportResultKey);\n\t\tthis.addInitializeKey(this.storeSelectedOrderKey);\n\t}\n\tstatic register() {\n\t\tif (!exportReducer) {\n\t\t\texportReducer = new ExportReducer();\n\t\t}\n\t}\n\tasync reduce(store, action) {\n\t\tif (this.exportExecuteAction.type === action.type) {\n\t\t\tconst loadPks = await this.exportExecute(action.data.exportOrders);\n\t\t\tstore[this.storeKey] = loadPks;\n\t\t\tstore[this.storeExportResultKey] = loadPks;\n\t\t} else if (this.exportExecuteAllAction.type === action.type) {\n\t\t\tstore[this.storeExportResultKey] = await this.exportExecute(action.data.exportOrders);\n\t\t\tstore[this.storeExportResultKey] = await this.exportPdfExecute(action.data.exportOrders);\n\t\t} else if (this.exportRemoveAction.type === action.type) {\n\t\t\tconst loadPks = await this.remove(action.data.exportPk);\n\t\t\tstore[this.storeRemoveResultKey] = loadPks;\n\t\t} else if (this.exportsLoadAction.type === action.type) {\n\t\t\tstore[this.storeKey] = await this.load();\n\t\t} else if (this.exportDownloadAction.type === action.type) {\n\t\t\tstore[this.storeZipDLKey] = await this.loadZip(action.data.exportPk);\n\t\t} else if (this.exportExecutePdfAction.type === action.type) {\n\t\t\tconst loadPks = await this.exportPdfExecute(action.data.exportOrders);\n\t\t\tstore[this.storeKey] = loadPks;\n\t\t\tstore[this.storeExportResultKey] = loadPks;\n\t\t} else if (this.exportDownloadPdfAction.type === action.type) {\n\t\t\tstore[this.storePdfDLKey] = await this.loadPdf(action.data.exportPk);\n\t\t} else if (this.selectOrderAction.type === action.type) {\n\t\t\tif (action.data.selectOrder && action.data.selectOptions) {\n\t\t\t\tconst newData = {\n\t\t\t\t\tselectOptions: action.data.selectOptions,\n\t\t\t\t\tselectOrder: action.data.selectOrder\n\t\t\t\t};\n\t\t\t\tstore[this.storeSelectedOrderKey] = newData;\n\t\t\t}\n\t\t}\n\t\treturn store;\n\t}\n\tasync exportExecute(exportOrders) {\n\t\tconst exportPks = await this.eip.exportZipExecute(exportOrders);\n\t\treturn await this.eup.getZipPdfPair(exportPks);\n\t}\n\tasync exportPdfExecute(exportOrders) {\n\t\tconst exportPks = await this.eip.exportPdfExecute(exportOrders);\n\t\treturn await this.eup.getZipPdfPair(exportPks);\n\t}\n\t// whh save single data ? the data is too Big for indexeddb !\n\tasync loadZip(exportPk) {\n\t\treturn await this.eup.loadZip(exportPk);\n\t}\n\t// whh save single data ? the data is too Big for indexeddb !\n\tasync loadPdf(exportPk) {\n\t\treturn await this.eup.loadPdf(exportPk);\n\t}\n\tasync remove(exportPk) {\n\t\t//\n\t\tawait this.eup.remove(exportPk);\n\t\treturn await this.eup.load();\n\t}\n\tasync load() {\n\t\treturn await this.eup.load();\n\t}\n}\n","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nexport class ExportAllButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ExportAllButton\", \"ExportAllButton\", true);\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n\t\tthis.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n\t\tthis.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n\t}\n\n\trender(store, actionData) {\n\t\treturn div(this.id, [this.id + \"Frame\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [div(\"\", [\"button\"], \"make zip and pdf!\")]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\tconst result = store[this.storeKey];\n\t\t\tif (result.pdf && result.zip) {\n\t\t\t\t// alert(\"OK All Exported!\");\n\t\t\t}\n\t\t}\n\t}\n\tclick() {\n\t\treturn (event) => {\n\t\t\tconst action = ExportActionCreator.creatExecuteAllAction();\n\t\t\tthis.dispatch(action);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","import { ActionCreator } from '../../util/reactive/actionCreator'\nexport class DialogActionCreator {\n\tconstructor() {}\n\tstatic creatOpenAction(targetView, data, storeKey = null) {\n\t\treturn ActionCreator.createBaseAction(\"openDialog\", targetView, data, storeKey);\n\t}\n\tstatic creatAlertAction(targetView, data, storeKey = null) {\n\t\treturn ActionCreator.createBaseAction(\"openAlertDialogX\", targetView, data, storeKey);\n\t}\n\tstatic creatConfirmAction(targetView, data, storeKey = null) {\n\t\treturn ActionCreator.createBaseAction(\"openConfirmDialog\", targetView, data, storeKey);\n\t}\n\tstatic creatCloseAction(targetView, data, storeKey = null) {\n\t\treturn ActionCreator.createBaseAction(\"closeDialog\", targetView, data, storeKey);\n\t}\n\tstatic getStoreKey() {\n\t\treturn \"dialog\";\n\t}\n}","import {\n\tDialogActionCreator\n} from '../action/dialogActionCreator'\nimport {\n\tMainService\n} from \"../../service/mainService\"\nimport {\n\tBaseReducer\n} from '../../util/reactive/baseReducer'\nlet dialogViewReducer = null;\nexport class DialogViewReducer extends BaseReducer {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.dialogOpenAction = DialogActionCreator.creatOpenAction();\n\t\tthis.dialogAlertAction = DialogActionCreator.creatAlertAction();\n\t\tthis.dialogConfirmAction = DialogActionCreator.creatConfirmAction();\n\t\tthis.dialogCloseAction = DialogActionCreator.creatCloseAction();\n\t\tthis.atatch(this.dialogOpenAction);\n\t\tthis.atatch(this.dialogAlertAction);\n\t\tthis.atatch(this.dialogConfirmAction);\n\t\tthis.atatch(this.dialogCloseAction);\n\t\tthis.storeKey = DialogActionCreator.getStoreKey();\n\t\tthis.addInitializeKey(this.storeKey);\n\t}\n\tstatic register() {\n\t\tif (!dialogViewReducer) {\n\t\t\tdialogViewReducer = new DialogViewReducer();\n\t\t}\n\t}\n\tasync reduce(store, action) {\n\t\tif (this.dialogOpenAction.type === action.type) {\n\t\t\tstore[this.storeKey] = this.createDialog(true, action.type, action.data.msg, action.data.title, action.data.nextActions);\n\t\t} else if (this.dialogAlertAction.type === action.type) {\n\t\t\tstore[this.storeKey] = this.createDialog(true, action.type, action.data.msg, action.data.title);\n\t\t} else if (this.dialogConfirmAction.type === action.type) {\n\t\t\tstore[this.storeKey] = this.createDialog(true, action.type, action.data.msg, action.data.title);\n\t\t} else if (this.dialogCloseAction.type === action.type) {\n\t\t\tstore[this.storeKey] = this.createDialog(false, action.type);\n\t\t}\n\t\treturn store;\n\t}\n\tcreateDialog(isVisible, type, msg, title, nextActions) {\n\t\treturn {\n\t\t\tisVisible: isVisible,\n\t\t\ttype: type,\n\t\t\tmsg: msg,\n\t\t\ttitle: title,\n\t\t\tnextActions\n\t\t}\n\t}\n}","import vu from \"../../../util/viewUtil\";\nimport { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { DialogActionCreator } from '../../../reduxy/action/dialogActionCreator'\nimport { DialogViewReducer } from '../../../reduxy/reducer/dialogViewReducer'\nlet dialogInstance = null;\nexport class Dialog extends BaseView {\n\tconstructor() {\n\t\tsuper(\"Dialog\", [\"Dialog\", BaseView.ModalWindowClass()]);\n\t\tthis.storeKey = DialogActionCreator.getStoreKey();\n\t\tthis.dialogOpenAction = DialogActionCreator.creatOpenAction();\n\t\tthis.dialogAlertAction = DialogActionCreator.creatAlertAction();\n\t\tthis.dialogConfirmAction = DialogActionCreator.creatConfirmAction();\n\t\tthis.title = \"Dialog\";\n\t\tdialogInstance = this;\n\t\tthis.resolv = null;\n\t\tthis.reject = null;\n\t}\n\n\tasync onAfterAttach(store, data) {\n\t\tthis.close();\n\t\tDialogViewReducer.register();\n\t}\n\tstatic async opneAlert(title, msg) {\n\t\treturn new Promise(\n\t\t\t(resolv, reject) => {\n\t\t\t\tdialogInstance.showAlertDialog(title, msg);\n\t\t\t\tdialogInstance.resolv = resolv;\n\t\t\t\tdialogInstance.reject = reject;\n\t\t\t}\n\t\t);\n\t}\n\tstatic async opneConfirm(title, msg) {\n\t\treturn new Promise(\n\t\t\t(resolv, reject) => {\n\t\t\t\tdialogInstance.showConfirmDialog(title, msg);\n\t\t\t\tdialogInstance.resolv = resolv;\n\t\t\t\tdialogInstance.reject = reject;\n\t\t\t}\n\t\t);\n\t}\n\tshowAlertDialog(title, msg) {\n\t\tconst action = DialogActionCreator.creatAlertAction(this, { title: title, msg: msg });\n\t\tthis.dispatch(action);\n\t}\n\tshowConfirmDialog(title, msg) {\n\t\tconst action = DialogActionCreator.creatConfirmAction(this, { title: title, msg: msg });\n\t\tthis.dispatch(action);\n\t}\n\trender() {\n\t\treturn div(\"\" [\"DialogView\"], {\n\t\t\tstyle: {\n\t\t\t\tdisplay: \"none\"\n\t\t\t}\n\t\t}, [\n\t\t\tdiv('', ['dialogTitle'], this.title),\n\t\t\tdiv('', ['dialogFrame'], [div('', ['dialog'], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: this.initPoint\n\t\t\t\t}\n\t\t\t})]),\n\t\t\tdiv('', ['dialogInfo'], [\n\t\t\t\tdiv('', ['dialogMessage'], \"\")\n\t\t\t]),\n\t\t\tdiv('', ['dialogDeside'], [\n\t\t\t\tdiv('', ['dialogOk'], { on: { click: this.onOK() } }, \"OK\"),\n\t\t\t\tdiv('', ['dialogCancel'], { on: { click: this.onCancel() } }, \"Cancel\")\n\t\t\t])\n\t\t]);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\t//alert(\"onViewShow\");\n\t\t\tthis.showDialog(store[this.storeKey]);\n\t\t\t//console.log(\"Dialog onViewShow\");\n\t\t}\n\t}\n\tonOK() {\n\t\treturn (event) => {\n\t\t\tconst action = DialogActionCreator.creatCloseAction(this, {});\n\t\t\tif (this.resolv) {\n\t\t\t\tthis.resolv(true);\n\t\t\t\tthis.resolv = null;\n\t\t\t\tthis.reject = null;\n\t\t\t}\n\t\t\tthis.dispatch(action);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\tonCancel() {\n\t\treturn (event) => {\n\t\t\tconst action = DialogActionCreator.creatCloseAction(this, {});\n\t\t\tif (this.resolv) {\n\t\t\t\tthis.resolv(false);\n\t\t\t\tthis.resolv = null;\n\t\t\t\tthis.reject = null;\n\t\t\t}\n\t\t\tthis.dispatch(action);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\tshowDialog(data) {\n\t\tconst { isVisible, type, msg, title } = data;\n\t\tif (title) {\n\t\t\tthis.title = title;\n\t\t}\n\t\tif (isVisible) {\n\t\t\tthis.show();\n\t\t\tthis.prePatch(\".dialog\", div(\"\", [\"dialog\"], {\n\t\t\t\tstyle: {}\n\t\t\t}, ));\n\t\t\tthis.prePatch(\".dialogTitle\", div(\"\", [\"dialogTitle\"], {}, this.title));\n\t\t\tthis.prePatch(\".dialogMessage\", div(\"\", [\"dialogMessage\"], {}, msg));\n\t\t\tconst buttons = [];\n\t\t\tbuttons.push(div('', ['dialogOk'], { on: { click: this.onOK() } }, \"OK\"));\n\t\t\tif (this.dialogConfirmAction.type === type) {\n\t\t\t\tbuttons.push(div('', ['dialogCancel'], { on: { click: this.onCancel() } }, \"Cancel\"));\n\t\t\t}\n\t\t\tthis.prePatch(\".dialogDeside\", div('', ['dialogDeside'], buttons));\n\t\t} else {\n\t\t\tthis.close();\n\t\t\tthis.prePatch(\".dialog\", div(\"\", [\"dialog\"], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: \"0%\"\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis.prePatch(\".dialogPoints\", div(\"\", [\"dialogPoints\"], {}, this.initPoint));\n\t\t}\n\t}\n}","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\n\nimport { unixTimeToDateFormat } from \"../../../util/timeUtil\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { getNowUnixtime } from \"../../../util/timeUtil\";\nimport { Dialog } from \"../dialog/dialog\";\nexport class ExportImgZipButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ExportImgZipButton\", \"ExportImgZipButton\", true);\n\t\tthis.storeSelectedOrderKey = ExportActionCreator.getStoreSelectedOrderKey();\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n\t\tthis.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n\t\tthis.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n\t\tthis.stateId = \"exportedStateZip\";\n\t\tthis.isExported = false;\n\t\tthis.exportOrderData = null;\n\t\tthis.startTime = null;\n\t}\n\n\trender(store, actionData) {\n\t\tconst buttonName = div(\"\", [\"buttonName\"], \"make zip!\");\n\t\tconst exportedState = div(this.stateId, [\"exportedStateNone\"], \"no export\");\n\t\treturn div(this.id, [this.id + \"Frame\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [div(\"\", [\"button\"], [buttonName, exportedState])]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeExportResultKey]) {\n\t\t\tconst data = store[this.storeExportResultKey];\n\t\t\tconst zip = data.zip;\n\t\t\tconst isSuccess = this.buildButton(data);\n\t\t\tconst duration = (getNowUnixtime() - this.startTime) / 1000;\n\t\t\tif (isSuccess && this.startTime) {\n\t\t\t\tthis.startTime = null;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tDialog.opneAlert(\"Build Zip File Complete!\", \"OK download zip file! \" + zip.size + \"byte  Duration:\" + duration + \"sec\");\n\t\t\t\t}, 1000)\n\t\t\t\t//\":\" + JSON.stringify(store[this.storeExportResultKey]) + \"/this.isExported:\" + this.isExported);\n\t\t\t}\n\t\t} else if (store[this.storeKey]) {\n\t\t\t//alert(JSON.stringify(store[this.storeKey]));\n\t\t\tthis.buildButton(store[this.storeKey]);\n\t\t}\n\n\t\tif (store[this.storeSelectedOrderKey]) {\n\t\t\tconst orderData = store[this.storeSelectedOrderKey];\n\t\t\tconst selectOptions = orderData.selectOptions;\n\t\t\tconst selectOrder = orderData.selectOrder;\n\t\t\tthis.exportOrderData = {\n\t\t\t\tbasePaper: selectOrder.basePaper,\n\t\t\t\torderName: selectOrder.orderName,\n\t\t\t\tdpiName: selectOptions.dpiName,\n\t\t\t\tisGrayscale: selectOptions.isGrayscale,\n\t\t\t\tisMaxSize10M: selectOptions.isMaxSize10M,\n\t\t\t\tisLanczose: selectOptions.isLanczose\n\t\t\t}\n\t\t}\n\t}\n\tbuildButton(exports) {\n\t\tif (exports && exports.zip) {\n\t\t\tconst zip = exports.zip\n\t\t\tconst exportString = \"*Last Exported One* \" + zip.name + \" / \" + zip.orderName + \" /size: \" + zip.size + \"byte / \" + unixTimeToDateFormat(zip.updateDate);\n\t\t\tthis.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedState\"], exportString));\n\t\t\tthis.isExported = true;\n\t\t\treturn true;\n\t\t\t// console.log(data);\n\t\t\t//alert(\"OK download zip file!:\" + JSON.stringify(exports) + \"/this.isExported:\" + this.isExported);\n\n\t\t} else {\n\t\t\tthis.isExported = false;\n\t\t\tthis.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedStateNone\"], \"no export\"));\n\t\t\treturn false;\n\t\t\t// console.log(data);\n\t\t\t//alert(\"OK download zip file!:\" + JSON.stringify(exports) + \"/this.isExported:\" + this.isExported);\n\t\t}\n\t}\n\n\tclick() {\n\t\treturn async (event) => {\n\t\t\tif (!this.exportOrderData) {\n\t\t\t\tDialog.opneAlert(\"I'm need ExportSettings!\", \"Export Order is not Selected!\");\n\t\t\t\t// alert(\"Export Order is not Selected!\");\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst result = await Dialog.opneConfirm(\"Comfirm\", \"is export orverride ok?\");\n\t\t\tif (!this.isExported || this.isExported && result) {\n\t\t\t\tthis.startTime = getNowUnixtime();\n\t\t\t\tconst action = ExportActionCreator.createExecuteAction(this, { exportOrders: [this.exportOrderData] });\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","import {\n\tBaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { unixTimeToDateFormat } from \"../../../util/timeUtil\";\nimport {\n\tExportActionCreator\n} from '../../../reduxy/action/exportActionCreator'\nimport { getNowUnixtime } from \"../../../util/timeUtil\";\nimport { Dialog } from \"../dialog/dialog\";\nexport class ExportPdfButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ExportPdfButton\", \"ExportPdfButton\", true);\n\t\tthis.storeSelectedOrderKey = ExportActionCreator.getStoreSelectedOrderKey();\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n\t\tthis.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n\t\tthis.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n\t\tthis.stateId = \"exportedStatePdf\";\n\t\tthis.isExported = false;\n\t\tthis.exportOrderData = null;\n\t}\n\n\trender(store, actionData) {\n\t\tconst buttonName = div(\"\", [\"buttonName\"], \"make pdf!\");\n\t\tconst exportedState = div(this.stateId, [\"exportedStateNone\"], \"no export\");\n\t\treturn div(this.id, [this.id + \"Frame\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [div(\"\", [\"button\"], [buttonName, exportedState])]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeExportResultKey]) {\n\t\t\tconst data = store[this.storeExportResultKey];\n\t\t\tconst pdf = data.pdf;\n\t\t\tconst isSuccess = this.buildButton(data);\n\t\t\tconst duration = (getNowUnixtime() * 1 - this.startTime) / 1000;\n\t\t\tif (isSuccess && this.startTime) {\n\t\t\t\tthis.startTime = null;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tDialog.opneAlert(\"Build Pdf File Complete!\", \"OK download pdf file! \" + pdf.size + \"byte  Duration:\" + duration + \"sec\");\n\t\t\t\t}, 1000)\n\t\t\t\t//\":\" + JSON.stringify(store[this.storeExportResultKey]) + \"/this.isExported:\" + this.isExported);\n\t\t\t}\n\t\t} else if (store[this.storeKey]) {\n\t\t\tthis.buildButton(store[this.storeKey]);\n\t\t}\n\n\t\tif (store[this.storeSelectedOrderKey]) {\n\t\t\tconst orderData = store[this.storeSelectedOrderKey];\n\t\t\tconst selectOptions = orderData.selectOptions;\n\t\t\tconst selectOrder = orderData.selectOrder;\n\t\t\tthis.exportOrderData = {\n\t\t\t\tbasePaper: selectOrder.basePaper,\n\t\t\t\torderName: selectOrder.orderName,\n\t\t\t\tdpiName: selectOptions.dpiName,\n\t\t\t\tisGrayscale: selectOptions.isGrayscale,\n\t\t\t\tisMaxSize10M: selectOptions.isMaxSize10M,\n\t\t\t\tisLanczose: selectOptions.isLanczose,\n\t\t\t\tisSaddleStitchingOrder: selectOptions.isSaddleStitchingOrder\n\t\t\t}\n\t\t}\n\t}\n\tbuildButton(exports) {\n\t\tif (exports && exports.pdf) {\n\t\t\tconst pdf = exports.pdf\n\t\t\tconst exportString = \"*Last Exported One* \" + pdf.name + \" / \" + pdf.orderName + \" /size: \" + pdf.size + \"byte / \" + unixTimeToDateFormat(pdf.updateDate);\n\t\t\tthis.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedState\"], exportString));\n\t\t\tthis.isExported = true;\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.isExported = false;\n\t\t\tthis.prePatch(\"#\" + this.stateId, div(this.stateId, [\"exportedStateNone\"], \"no export\"));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tclick() {\n\t\treturn async (event) => {\n\t\t\tif (!this.exportOrderData) {\n\t\t\t\tDialog.opneAlert(\"I'm need ExportSettings!\", \"Export Order is not Selected!\");\n\t\t\t\t// alert(\"Export Order is not Selected!\");\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst result = await Dialog.opneConfirm(\"Comfirm\", \"is export orverride ok?\");\n\t\t\tif (!this.isExported || this.isExported && result) {\n\t\t\t\tthis.startTime = getNowUnixtime() * 1;\n\t\t\t\tconst action = ExportActionCreator.createExecutePdfAction(this, { exportOrders: [this.exportOrderData] });\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","export class FileDownloader {\n  static download(fileName, content, mimeType = \"text/plain\") {\n    const blob = new Blob([content], {\"type\": mimeType});\n    const ancker = document.createElement(\"a\");\n    ancker.style.display=\"none\";\n    ancker.download = fileName;\n    ancker.href = window.URL.createObjectURL(blob);\n    ancker.dataset.downloadurl = [mimeType, fileName, ancker.href].join(\":\");\n    document.body.appendChild(ancker);\n    ancker.click();\n    setTimeout(()=>{document.body.removeChild(ancker) });\n  }\n}\n","import {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {unixTimeToDateFormat} from \"../../../util/timeUtil\";\nimport {ExportActionCreator} from '../../../reduxy/action/exportActionCreator'\nimport {FileDownloader} from \"../../../util/fileDownloader\";\nexport class DownloadLastExportZipButton extends BaseView {\n  constructor() {\n    super(\"DownloadLastExportZipButton\", \"DownloadLastExportZipButton\", true);\n    this.storeKey = ExportActionCreator.getStoreKey();\n    this.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n    this.stateId = this.id + \"Button\";\n    this.isExported = false;\n  }\n\n  render(store, actionData) {\n    const text = div(this.stateId, [\n      \"button\", \"disable\"\n    ], \"-no export Zip-\");\n    return div(this.id, [this.id + \"Frame\"], {\n    }, [text]);\n  }\n  async onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {\n    if (store[this.storeZipDLKey]) {\n      const output = store[this.storeZipDLKey];\n      if (output.ab) {\n        FileDownloader.download(output.name, output.ab, \"application/zip\");\n      } else {\n        alert(\"not exported!\");\n      }\n    } else if (store[this.storeKey]) {\n      const data = store[this.storeKey];\n      const zip = data.zip;;\n      if (zip) {\n        // const exportString = zip.name + \" / \" + zip.orderName + \" / \" + unixTimeToDateFormat(zip.updateDate);\n        const text = div(this.stateId, [\n          \"button\", \"enable\"\n        ],{\n          on: {\n            click: this.click()\n          }\n        }, \"download Zip!\");\n        this.prePatch(\"#\" + this.stateId, text);\n        this.isExported = true;\n      } else {\n        const text = div(this.stateId, [\n          \"button\", \"disable\"\n        ], \"no export Zip\");\n        this.prePatch(\"#\" + this.stateId, text);\n        this.isExported = false;\n      }\n    }\n  }\n  click() {\n    return(event) => {\n      if (this.isExported) {\n        const action = ExportActionCreator.createDownloadAction(); //createDownloadPdfAction\n        this.dispatch(action);\n      }\n      event.stopPropagation();\n      return false;\n    }\n  }\n}\n","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { unixTimeToDateFormat } from \"../../../util/timeUtil\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { FileDownloader } from \"../../../util/fileDownloader\";\nexport class DownloadLastExportPdfButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"DownloadLastExportPdfButton\", \"DownloadLastExportPdfButton\", true);\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.stateId = this.id + \"Button\";\n\t\tthis.isExported = false;\n\t}\n\n\trender(store, actionData) {\n\t\tconst text = div(this.stateId, [\n\t\t\t\"button\", \"disable\"\n\t\t], \"-no export PDF-\");\n\t\tconst result = div(this.id, [\n\t\t\tthis.id + \"Frame\"\n\t\t], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [text]);\n\t\t// alert(\"render this.isExported :\" + this.isExported+'/this.id:'+this.id);\n\t\treturn result;\n\t}\n\tasync onAfterAttach(store, data) {\n\t\t// alert(\"onAfterAttach this.isExported :\" + this.isExported+'/this.id:'+this.id);\n\t}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storePdfDLKey]) {\n\t\t\tconst output = store[this.storePdfDLKey];\n\t\t\tif (output.ab) {\n\t\t\t\tFileDownloader.download(output.name, output.ab, \"application/pdf\");\n\t\t\t} else {\n\t\t\t\talert(\"not exported!\");\n\t\t\t}\n\t\t} else if (store[this.storeKey]) {\n\t\t\tconst data = store[this.storeKey];\n\t\t\tconst pdf = data.pdf;\n\t\t\tif (pdf) {\n        // const exportString = zip.name + \" / \" + zip.orderName + \" / \" + unixTimeToDateFormat(zip.updateDate);\n        const text = div(this.stateId, [\n          \"button\", \"enable\"\n        ],{\n          on: {\n            click: this.click()\n          }\n        }, \"download PDF!\");\n        this.prePatch(\"#\" + this.stateId, text);\n        this.isExported = true;\n      } else {\n        const text = div(this.stateId, [\n          \"button\", \"disable\"\n        ], \"no export PDF\");\n        this.prePatch(\"#\" + this.stateId, text);\n        this.isExported = false;\n\t\t\t}\n\t\t} else {}\n\t}\n\tclick() {\n\t\treturn (event) => {\n\t\t\tif (this.isExported) {\n\t\t\t\tconst action = ExportActionCreator.createDownloadPdfAction(); //createDownloadPdfAction\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}\n","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { Dialog } from \"../dialog/dialog\";\nexport class DeleteExportOneButton extends BaseView {\n\tconstructor() {\n\t\tsuper(\"DeleteExportOneButton\", \"DeleteExportOneButton\", true);\n\t\tthis.storeKey = ExportActionCreator.getStoreKey();\n\t\tthis.storePdfDLKey = ExportActionCreator.getStorePdfDLKey();\n\t\tthis.storeZipDLKey = ExportActionCreator.getStoreZipDLKey();\n\t\tthis.storeRemoveResultKey = ExportActionCreator.getStoreRemoveResultKey();\n\t\tthis.storeExportResultKey = ExportActionCreator.getStoreExportResultKey();\n\t}\n\n\trender(store, actionData) {\n\t\treturn div(this.id, [this.id + \"Frame\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.click()\n\t\t\t}\n\t\t}, [div(\"\", [\"button\"], \"delete Exports!\")]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeRemoveResultKey]) {\n\t\t\t//  alert(\"delete exports!\");\n\t\t\tconst action = ExportActionCreator.creatLoadAction(this);\n\t\t\tthis.dispatch(action);\n\t\t}\n\t}\n\tclick() {\n\t\treturn async (event) => {\n\t\t\tconst result = await Dialog.opneConfirm(\"Let's start!\", \"delete exports?\");\n\t\t\tif (result) {\n\t\t\t\tconst action = ExportActionCreator.creatRemoveAction();\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","import {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\"; //\nimport {ExportActionCreator} from '../../../reduxy/action/exportActionCreator'\nimport {ExportReducer} from '../../../reduxy/reducer/exportReducer'\nimport {ExportAllButton} from './exportAllButton'\nimport {ExportImgZipButton} from \"./exportImgZipButton\";\nimport {ExportPdfButton} from './exportPdfButton'\nimport {DownloadLastExportZipButton} from './downloadLastExportZipButton'\nimport {DownloadLastExportPdfButton} from './downloadLastExportPdfButton'\nimport {DeleteExportOneButton} from './deleteExportOneButton'\nexport class ExportButton extends BaseView {\n  constructor() {\n    super(\"ExportButton\", \"ExportButtonFrame\");\n    this.storeKey = ExportActionCreator.getStoreKey();\n    this.exportAllButton = new ExportAllButton();\n    this.exportImgZipButton = new ExportImgZipButton();\n    this.exportPdfButton = new ExportPdfButton();\n    this.downloadLastExportZipButton = new DownloadLastExportZipButton();\n    this.downloadLastExportPdfButton = new DownloadLastExportPdfButton();\n    this.deleteExportOneButton = new DeleteExportOneButton();\n  }\n  async onAfterAttach(store, data) {\n    await this.exportAllButton.attach(this);\n    await this.exportImgZipButton.attach(this);\n    await this.exportPdfButton.attach(this);\n    await this.downloadLastExportZipButton.attach(this);\n    await this.downloadLastExportPdfButton.attach(this);\n    await this.deleteExportOneButton.attach(this);\n    ExportReducer.register();\n    const action = ExportActionCreator.creatLoadAction(this);\n    await this.dispatch(action);\n  }\n\n  async onViewShow(store, actionData) {\n    if (store[this.storeKey]) {\n      //alert(\"OK\");\n    }\n  }\n\n  render(store, actionData) {\n    return div(\"\", [\"ExportButtons\"], [\n      div(this.exportAllButton.id),\n      div(this.exportImgZipButton.id),\n      div(this.exportPdfButton.id),\n      div(this.downloadLastExportZipButton.id),\n      div(this.downloadLastExportPdfButton.id),\n      div(this.deleteExportOneButton.id)\n    ]);\n  }\n}\n","\nimport {\n  BaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {dpis, ExportOrders} from \"../../../settings/exportSettings\";\nimport {ExportActionCreator} from '../../../reduxy/action/exportActionCreator'\nexport class ExportOrderRow extends BaseView {\n  constructor(parent) {\n    super(\"ExportOrderRow\", \"ExportOrderRow\");\n    this.parent = parent;\n    this.selectOrder = null;\n    this.ordersMap = {};\n    this.orderOptions={isGrayscale:false,dpiName:\"dpi72\",isMaxSize10M:false,isLanczose:false}\n    this.activeClassName = \"active\";\n  }\n\n  render(store, actionData) {\n    const name = div(\"\", [\"TitleName\"], \"TitleName\");\n    return div(\"\", [this.id + \"Frame\"], [name, div(this.imageAreaID, [\"ImageDetailA\"], this.id + \"aaaaa\")]);\n  }\n  async onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {}\n  getCurrentSelected(){\n    return this.ordersMap[this.selectOrder];\n  }\n  getSelectOrder(name){\n    return (event)=>{\n      if(name){\n        this.selectOrder = name;\n      }\n      const action = ExportActionCreator.createSelectOrderAction(this.parent,{\n        selectOrder:this.ordersMap[this.selectOrder],\n        selectOptions:this.parent.getCurrentOptions()\n      });\n      this.dispatch(action);\n      event.stopPropagation();\n      return false;\n    }\n  }\n\n  buildRows(exportOrderData){\n    const retList = [];\n    const ordersList = ExportOrders;\n    const selectOrder = exportOrderData && exportOrderData.selectOrder? exportOrderData.selectOrder:null;\n    for(let order of ordersList){\n      const name=order.orderName;\n      const activeClass = selectOrder && selectOrder.orderName && order.orderName===selectOrder.orderName? this.activeClassName:\"\";\n      this.ordersMap[name]= order;\n      const label = span(\"\",[name+\"Text\"],[name]);\n      const id = \"ExportOrderRow-\"+name;\n      const row = div(id,[name,activeClass],{\n        on:{click:this.getSelectOrder(name)}\n      },[label]);\n      retList.push(row);\n    }\n    return retList;\n  }\n}\n","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\tcreateSelectVnode,\n\tspan,\n\tlabel,\n\tcheckbox\n} from \"../../../util/reactive/base/vtags\";\nimport { ExportActionCreator } from '../../../reduxy/action/exportActionCreator'\nimport { ExportOrderRow } from './exportOrderRow'\nimport { dpis, ExportOrders } from \"../../../settings/exportSettings\";\nexport class ExportOrderList extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ExportOrdrList\", \"ExportOrdrList\");\n\t\tthis.exportOrderRow = new ExportOrderRow(this);\n\t\tthis.storeSelectedOrderKey = ExportActionCreator.getStoreSelectedOrderKey();\n\t\tthis.listFrameId = this.id + \"ListFrame\";\n\t\tthis.listId = this.id + \"List\";\n\t\tthis.checkboxIsGrascale = \"checkboxIsGrascaleAt\" + this.Id;\n\t\tthis.selectBoxDpiName = \"selectBoxDpiNameAt\" + this.Id;\n\t\tthis.checkboxIsMaxSize10M = \"checkboxIsMaxSize10MAt\" + this.Id;\n\t\tthis.checkboxIsLanczose = \"checkboxIsLanczoseAt\" + this.Id;\n\t\tthis.checkboxIsSaddleStitchingOrder = \"checkboxIsSaddleStitchingOrder\" + this.Id;\n\t}\n\n\trender(store, actionData) {\n\t\tconst inputFrameClass = \"ExportOrdrs\";\n\t\tconst name = div(\"\", [inputFrameClass], \"Export Orders List\");\n\t\t////\n\t\tconst inputClass = \"ExportOrdersOptions\";\n\t\tconst checkboxIsGrascale = label(\"\", [inputClass], [checkbox(this.checkboxIsGrascale, [\"\"], {\n\t\t\ton: { change: this.exportOrderRow.getSelectOrder() }\n\t\t}, \"\"), \"isGrayscale?\"]);\n\t\tconst dpiList = {};\n\t\tlet firstKey = \"\";\n\t\tfor (let dpiName in dpis) {\n\t\t\tfirstKey = dpis[dpiName];\n\t\t\tbreak;\n\t\t}\n\n\t\tconst selectBoxDpiName = label(\"\", [inputClass], [\" \", createSelectVnode(this.selectBoxDpiName, [], \"\", dpis, dpiList[firstKey], {\n\t\t\tchange: this.exportOrderRow.getSelectOrder()\n\t\t}), \"dpi\"]);\n\t\tconst checkboxIsMaxSize10M = label(\"\", [inputClass], [checkbox(this.checkboxIsMaxSize10M, [\"\"], {\n\t\t\ton: { change: this.exportOrderRow.getSelectOrder() }\n\t\t}, \"\"), \"isMaxSize10MB/Paper?\"]);\n\t\tconst checkboxIsLanczose = label(\"\", [inputClass], [checkbox(this.checkboxIsLanczose, [\"\"], {\n\t\t\ton: { change: this.exportOrderRow.getSelectOrder() }\n\t\t}, \"\"), \"isLanczose Or ByCubic?\"]);\n\t\tconst checkboxIsSaddleStitchingOrder = label(\"\", [inputClass], [checkbox(this.checkboxIsSaddleStitchingOrder, [\"\"], {\n\t\t\ton: { change: this.exportOrderRow.getSelectOrder() }\n\t\t}, \"\"), \"is Saddle Stitching Order At PDF?\"]);\n\t\tconst exportOptions = div(\"\", [inputFrameClass], [\"Options:\", selectBoxDpiName, checkboxIsGrascale, checkboxIsMaxSize10M, checkboxIsLanczose, checkboxIsSaddleStitchingOrder]);\n\t\t////\n\t\tconst list = div(this.listFrameId, [inputFrameClass], this.buildRows());\n\t\treturn div(this.listId, [this.id + \"Frame\"], [name, list, exportOptions]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeSelectedOrderKey]) {\n\t\t\tconst inputFrameClass = \"ExportOrdrs\";\n\t\t\tconst selectOrderData = store[this.storeSelectedOrderKey];\n\t\t\tconst list = div(this.listFrameId, [inputFrameClass], this.buildRows(selectOrderData));\n\t\t\tthis.prePatch(\"#\" + this.listFrameId, list);\n\t\t}\n\t}\n\tgetCurrentOptions() {\n\t\tconst result = {\n\t\t\tisGrayscale: document.getElementById(this.checkboxIsGrascale)\n\t\t\t\t.checked,\n\t\t\tdpiName: document.getElementById(this.selectBoxDpiName)\n\t\t\t\t.value,\n\t\t\tisMaxSize10M: document.getElementById(this.checkboxIsMaxSize10M)\n\t\t\t\t.checked,\n\t\t\tisLanczose: document.getElementById(this.checkboxIsLanczose)\n\t\t\t\t.checked,\n\t\t\tisSaddleStitchingOrder: document.getElementById(this.checkboxIsSaddleStitchingOrder)\n\t\t\t\t.checked\n\t\t};\n\t\treturn result;\n\n\t}\n\n\tbuildRows(selectOrderData = null) {\n\t\treturn this.exportOrderRow.buildRows(selectOrderData)\n\t}\n}","import vu from \"../../util/viewUtil\";\nimport {\n  BaseView\n} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {\n  ExportButton\n} from '../parts/export/exportButton'\nimport {\n  ExportOrderList\n} from '../parts/export/exportOrderList'\n\nimport {\n  ExportActionCreator\n} from '../../reduxy/action/exportActionCreator'\nexport class ExportArea extends BaseView {\n  constructor() {\n    super(\"ExportArea\", \"ExportArea\");\n    this.text = \"ExportArea\";\n    this.exportButton = new ExportButton();\n    this.exportOrderList = new ExportOrderList();\n  }\n\n  async onAfterAttach(store, data) {\n    await this.exportOrderList.attach(this);\n    await this.exportButton.attach(this);\n    const action = ExportActionCreator.creatLoadAction();\n    await this.dispatch(action);\n  }\n  render() {\n    return div(this.id, [\"ExportArea\"], [\n      div('', ['ExportAreaTitle'], this.text),\n      div(this.exportOrderList.id),\n      div(this.exportButton.id)\n    ]);\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {\n  BaseView\n} from \"../../util/reactive/baseView\";\nimport bc from \"../../util/binaryConverter\";\n\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {\n  ImageActionCreator\n} from '../../reduxy/action/imageActionCreator'\nconst PLANE = 'PLANE';\nconst WINDOW = 'WINDOW';\nconst DOUBLE = 'DOUBLE';\nconst HELF = 'HELF';\nconst QUAD = 'QUAD';\nconst FULL = 'FULL';\nexport class ImageDetail extends BaseView {\n  constructor() {\n    super(\"ImageDetail\", \"ImageDetail\");\n    this.imageAreaID = this.id + \"child\";\n    this.isOnScroll = false;\n    this.startX = 0;\n    this.startY = 0;\n    this.previewMode = PLANE;\n    this.pk = null;\n  }\n  render(store, actionData) {\n    const toNativeSizeButton = div(this.id + \"toNativeSizeButton\", [\"toNativeSizeButton\"], {\n      on: {\n        click: this.toNativeSize()\n      }\n    }, \"1:1\");\n    const toWindowSizeButton = div(this.id + \"toWindowSizeButton\", [\"toWindowSizeButton\"], {\n      on: {\n        click: this.toWindowSize()\n      }\n    }, \"W\");\n    const toDoubleWindowSizeButton = div(this.id + \"toDoubleWindowSizeButton\", [\"toDoubleWindowSizeButton\"], {\n      on: {\n        click: this.toDoubleWindowSize()\n      }\n    }, \"Wx2\");\n    const toQuadWindowSizeButton = div(this.id + \"toQuadWindowSizeButton\", [\"toQuadWindowSizeButton\"], {\n      on: {\n        click: this.toQuadWindowSize()\n      }\n    }, \"Wx4\");\n    const toHelfWindowSizeButton = div(this.id + \"toHelfWindowSizeButton\", [\"toHelfWindowSizeButton\"], {\n      on: {\n        click: this.toHelfWindowSize()\n      }\n    }, \"W/2\");\n    const toFullWindowSizeButton = div(this.id + \"toFullWindowSizeButton\", [\"toFullWindowSizeButton\"], {\n      on: {\n        click: this.toHelfWindowSize()\n      }\n    }, \"FW\");\n    const title = span(\"\", [\"ImageDetailTitleText\"], \"ImageDetailTitle\");\n    const titleBar = div(\"\", [\"ImageDetailTitle\"], [title, toNativeSizeButton, toWindowSizeButton, toDoubleWindowSizeButton, toQuadWindowSizeButton, toHelfWindowSizeButton, toFullWindowSizeButton]);\n    return div(\"\", [\"\"], [titleBar, div(this.imageAreaID, [\"ImageDetailA\"], \"No Image Selected\")]);\n  }\n\n  async onViewShow(store, actionData) {\n    if (store.imagesDetailData) {\n      await this.showImage(store.imagesDetailData);\n      this.startX = 0;\n      this.startY = 0;\n      this.offsetX = 0;\n      this.offsetY = 0;\n      this.isOnScroll = false;\n    }\n  }\n  async onAfterAttach(store, data) {\n    this.setSelectStyle(\"toNativeSizeButton\", PLANE)\n    this.setSelectStyle(\"toWindowSizeButton\", WINDOW)\n    this.setSelectStyle(\"toDoubleWindowSizeButton\", DOUBLE)\n    this.setSelectStyle(\"toQuadWindowSizeButton\", QUAD)\n    this.setSelectStyle(\"toHelfWindowSizeButton\", HELF)\n    this.setSelectStyle(\"toFullWindowSizeButton\", FULL)\n  }\n  async showImage(imageData) {\n    const {\n      imageEntity,\n      binaryEntity,\n      imageText\n    } = imageData;\n    const pk = imageEntity.getPk();\n    if (this.pk !== pk) {\n      this.previewMode = PLANE;\n    }\n    this.setSelectStyle(\"toNativeSizeButton\", PLANE)\n    this.setSelectStyle(\"toWindowSizeButton\", WINDOW)\n    this.setSelectStyle(\"toDoubleWindowSizeButton\", DOUBLE)\n    this.setSelectStyle(\"toQuadWindowSizeButton\", QUAD)\n    this.setSelectStyle(\"toHelfWindowSizeButton\", HELF)\n    this.setSelectStyle(\"toFullWindowSizeButton\", FULL)\n    this.pk = pk;\n    const dataUri = bc.arrayBuffer2DataURI(binaryEntity._ab);\n    const imgVnode = img(pk + \"_image\", imageEntity.name, imageEntity.name, dataUri, {});\n    const textVnode = span(pk + \"_text\", [\"thumbnail_text\"], imageData.imageText);\n    const image = [\n      div(\"\", [\"\"], [imgVnode]),\n      div(\"\", [textVnode])\n    ]\n    this.prePatch(\"#\" + this.imageAreaID, div(this.imageAreaID, [\"image_detail_block\", this.previewMode], {\n      on: {\n        mousedown: this.onMouseOn(),\n        mousemove: this.onMouseMove(),\n        click: this.onClick()\n      },\n      style: {\n        top: 0,\n        left: 0\n      }\n    }, image));\n  }\n  onClick() {\n    toNativeSize()\n    return (event) => {\n      alert(\"click\");\n    }\n  }\n  setSelectStyle(id, className) {\n    const active = \"active\";\n    const button = document.getElementById(this.id + id);\n    if (this.previewMode === className) {\n      // alert(this.previewMode);\n      button.classList.add(active);\n    } else {\n      button.classList.remove(active);\n    }\n  }\n  toNativeSize() {\n    return (event) => {\n      // alert(\"toNativeSize this.pk):\" + this.pk);\n      this.previewMode = PLANE;\n      if (this.pk) {\n        const action = ImageActionCreator.creatDetailAction(this, {\n          imagePK: this.pk\n        });\n        this.dispatch(action);\n      }\n    }\n  }\n  toWindowSize() {\n    return (event) => {\n      // alert(\"toWindowSize this.pk):\" + this.pk);\n      this.previewMode = WINDOW;\n      if (this.pk) {\n        const action = ImageActionCreator.creatDetailAction(this, {\n          imagePK: this.pk\n        });\n        this.dispatch(action);\n      }\n    }\n  }\n  toDoubleWindowSize() {\n    return (event) => {\n      // alert(\"toDoubleWindowSize this.pk):\" + this.pk);\n      this.previewMode = DOUBLE;\n      if (this.pk) {\n        const action = ImageActionCreator.creatDetailAction(this, {\n          imagePK: this.pk\n        });\n        this.dispatch(action);\n      }\n    }\n  }\n  toHelfWindowSize() {\n    return (event) => {\n      // alert(\"toHelfWindowSize this.pk):\" + this.pk);\n      this.previewMode = HELF;\n      if (this.pk) {\n        const action = ImageActionCreator.creatDetailAction(this, {\n          imagePK: this.pk\n        });\n        this.dispatch(action);\n      }\n    }\n  }\n  toQuadWindowSize() {\n    return (event) => {\n      // alert(\"toHelfWindowSize this.pk):\" + this.pk);\n      this.previewMode = QUAD;\n      if (this.pk) {\n        const action = ImageActionCreator.creatDetailAction(this, {\n          imagePK: this.pk\n        });\n        this.dispatch(action);\n      }\n    }\n  }\n  toFullWindowSize() {\n    return (event) => {\n      // alert(\"toHelfWindowSize this.pk):\" + this.pk);\n      this.previewMode = FULL;\n      if (this.pk) {\n        const action = ImageActionCreator.creatDetailAction(this, {\n          imagePK: this.pk\n        });\n        this.dispatch(action);\n      }\n    }\n  }\n  onMouseOn() {\n    return (event) => {\n      // alert(\"onMouseOn\");\n      this.startX = this.offsetX ?\n        event.clientX + this.offsetX * 0 - this.offsetX１ :\n        event.clientX;\n      this.startY = this.offsetY ?\n        event.clientY + this.offsetY * 0 - this.offsetY１ :\n        event.clientY;\n      const elm = event.target;\n      this.isOnScroll = this.isOnScroll ? false : true;\n    }\n  }\n  onMouseOff() {\n    return (event) => {\n      // alert(\"onMouseOff\");\n      const elm = event.target;\n      this.isOnScroll = false;\n    }\n  }\n  onMouseMove() {\n    return (event) => {\n      const elm = event.target;\n      if (this.isOnScroll) {\n        const currentX = event.clientX;\n        const currentY = event.clientY;\n        const offsetX = currentX - this.startX;\n        const offsetY = currentY - this.startY;\n        const targetNode = elm.parentNode.parentNode;\n        // console.log(\"elm.tagName:\" + elm.tagName + \"/(offsetX:\" + offsetX + \"/offsetY:\" + offsetY\n        // + \")/(currentX:\" + currentX + \"/currentY:\" + currentY\n        // + \")/(this.startX:\" + this.startX + \"/this.startY:\" + this.startY);\n        targetNode.style.top = offsetY + \"px\";\n        targetNode.style.left = offsetX + \"px\";\n        this.offsetX = this.startX;\n        this.offsetY = this.startY;\n        this.offsetX１ = offsetX;\n        this.offsetY１ = offsetY;\n      }\n    }\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport bc from \"../../util/binaryConverter\";\nimport { BaseView } from \"../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../util/reactive/base/vtags\";\nimport { PageActionCreator } from '../../reduxy/action/pageActionCreator'\nimport { ImageActionCreator } from '../../reduxy/action/imageActionCreator'\nexport class PageImage extends BaseView {\n\tconstructor(parent, listing, draggableArea) {\n\t\tsuper(\"PageImage\" + listing, \"PageImage\");\n\t\tthis.ip = this.ms.ip;\n\t\tthis.parent = parent;\n\t\tthis.draggableArea = draggableArea;\n\t\tthis.listing = listing;\n\t\tthis.thumbnail = null;\n\t\tthis.thumbnail_block = \"thumbnail_block\";\n\t\tthis.draggableArea.toDropPage = (elm) => { this.doDrop(elm) };\n\t}\n\trender() {\n\t\tthis.button = div(this.id + \"child\", \"PageImageA\", this.id);\n\t\treturn div([this.button]);\n\t}\n\tasync setPageData(pageData, imageData) {\n\t\tthis.pageData = pageData;\n\t\tthis.imageData = imageData;\n\t\tif (!pageData) {\n\t\t\treturn;\n\t\t}\n\t\tthis.pk = pageData.getPk();\n\t\tconst binaryEntity = this.imageData ?\n\t\t\tthis.imageData.binaryEntity :\n\t\t\tnull;\n\t\tif (binaryEntity) {\n\t\t\tconst data = {\n\t\t\t\tname: \"page_\" + this.listing,\n\t\t\t\tab: binaryEntity._ab,\n\t\t\t\ttype: binaryEntity.type\n\t\t\t}\n\t\t\tthis.thumbnail = await this.ip.createImageNodeByData(data)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tthrow e\n\t\t\t\t});\n\t\t\t// console.log(this.thumbnail)\n\t\t} else {\n\t\t\tthis.thumbnail = null;\n\t\t}\n\t}\n\trender(store, actionData) {\n\t\treturn div('', \"\");\n\t}\n\tremove(pk) {\n\t\treturn (event) => {\n\t\t\tif (window.confirm(\"delete ok?\")) {\n\t\t\t\tconst action = PageActionCreator.creatRemoveAction(this, { imagePKforDelete: pk });\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\thandleDragStart(dragImageSrc) {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tthis.parent.dropElm = null;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n\t\t\tthis.draggableArea.nowSelectedElm = elm;\n\t\t\tevent.dataTransfer.effectAllowed = 'move';\n\t\t\tevent.dataTransfer.setData('text/html', elm.innerHTML);\n\t\t\tlet dragIcon = document.createElement('img');\n\t\t\tdragIcon.src = dragImageSrc;\n\t\t\tdragIcon.width = 100;\n\t\t\tevent.dataTransfer.setDragImage(dragIcon, -10, -10);\n\t\t}\n\t}\n\thandleDragOver() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tevent.preventDefault(); // Necessary. Allows us to drop.\n\t\t\tevent.dataTransfer.dropEffect = 'move'; // See the section on the DataTransfer object.\n\t\t\treturn false;\n\t\t}\n\t}\n\thandleDragEnter() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.classList.add('over');\n\t\t}\n\t}\n\thandleDragLeave() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.classList.remove('over'); // this / event.target is previous target element.\n\t\t}\n\t}\n\thandleDrop(event) {\n\t\treturn (event) => {\n\t\t\tevent.stopPropagation(); // Stops some browsers from redirecting.\n\t\t\tevent.preventDefault();\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.doDrop(elm);\n\t\t\treturn false;\n\t\t}\n\t}\n\tdoDrop(elm) {\n\t\tthis.parent.dropElm = elm;\n\t\tconst nowSelectedElm = this.draggableArea.nowSelectedElm;\n\t\tif (nowSelectedElm && nowSelectedElm.dataset.pk && nowSelectedElm !== elm) {\n\t\t\tconst selectedPk = nowSelectedElm.dataset.pk;\n\t\t\tconst targetPk = elm.dataset.pk;\n\t\t\tif (selectedPk && nowSelectedElm.dataset.is_image) {\n\t\t\t\t//console.log('sort handleDrop imagePKmove:' + nowSelectedElm+ \"/elm.dataset.pk:\" + elm.dataset.pk+\"/targetPk:\"+targetPk)\n\t\t\t\tconst action = PageActionCreator.creatAddPageAction(this, {\n\t\t\t\t\timagePk: selectedPk,\n\t\t\t\t\tpagePk: targetPk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t} else if (selectedPk && nowSelectedElm.dataset.is_page) {\n\t\t\t\t//console.log('sort handleDrop imagePKmove:' + nowSelectedElm + \"/elm.dataset.pk:\" + elm.dataset.pk+\"/targetPk:\"+targetPk)\n\t\t\t\tconst action = PageActionCreator.creatSortPagesAction(this, {\n\t\t\t\t\tformPk: selectedPk,\n\t\t\t\t\ttoPk: targetPk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t\tvu.clearSideElmClass(elm, 'over');\n\t}\n\thandleDragEnd(event) {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tconst targetPk = elm.dataset.pk;\n\t\t\t//console.log('sort handleDrop imagePKmove:' + this.draggableArea.nowSelectedElm + \"/elm.dataset.pk:\" + elm.dataset.pk + \"/targetPk:\" + targetPk)\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.draggableArea.nowSelectedElm = null;\n\t\t\tvu.clearSideElmClass(elm, 'over');\n\t\t\tif (this.draggableArea.cancelPageArea !== null) {\n\t\t\t\tconst action = PageActionCreator.creatRemovePageAction(this, {\n\t\t\t\t\tpagePk: targetPk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\thandleTouchStart(dragImageSrc) {\n\t\treturn (event) => {\n\t\t\t//console.log(\"handleTouchStart PP\");\n\t\t\tconst elm = event.target;\n\t\t\tthis.parent.dropElm = null;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\twindow.blockMenuHeaderScroll = true;\n\t\t\telm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n\t\t\tthis.draggableArea.nowSelectedElm = elm;\n\t\t\t// event.dataTransfer.effectAllowed = 'move';\n\t\t\t// // event.dataTransfer.setData('text/html', elm.innerHTML);\n\t\t\t// let dragIcon = document.createElement('img');\n\t\t\t// dragIcon.src = dragImageSrc;\n\t\t\t// dragIcon.width = 100;\n\t\t\t// event.dataTransfer.setDragImage(dragIcon, -10, -10);\n\t\t}\n\t}\n\thandleTouchMove() {\n\t\treturn (event) => {\n\t\t\t//console.log(\"handleTouchMove PP\");\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst pointedElm = vu.getCurrentPointedElm(event);\n\t\t\tif (this.pointedElm && this.pointedElm !== pointedElm) {\n\t\t\t\tvu.clearSideElmClass(this.pointedElm, 'over');\n\t\t\t}\n\t\t\tthis.pointedElm = pointedElm;\n\t\t\tif (!pointedElm.getAttribute('draggable') || pointedElm === elm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpointedElm.classList.add('over');\n\t\t}\n\t}\n\thandleTouchEnd() {\n\t\treturn (event) => {\n\t\t\twindow.blockMenuHeaderScroll = false;\n\t\t\tconst elm = event.target;\n\t\t\tconst targetPk = elm.dataset.pk;\n\t\t\t//console.log('sort handleDrop imagePKmove:' + this.draggableArea.nowSelectedElm + \"/elm.dataset.pk:\" + elm.dataset.pk + \"/targetPk:\" + targetPk)\n\t\t\tvu.clearSideElmClass(elm, 'over');\n\t\t\tconst pointedElm = this.pointedElm;\n\t\t\tif (!pointedElm || pointedElm === elm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.pointedElm = null;\n\t\t\tvu.clearSideElmClass(pointedElm, 'over');\n\t\t\tif (!pointedElm.classList || !pointedElm.classList.contains(pointedElm.thumbnail_block)) {\n\t\t\t\tif (pointedElm.id === 'thumnailsImageArea' || pointedElm.getAttribute('draggable')) {\n\t\t\t\t\tconst action = PageActionCreator.creatRemovePageAction(this, {\n\t\t\t\t\t\tpagePk: targetPk\n\t\t\t\t\t});\n\t\t\t\t\tthis.dispatch(action);\n\t\t\t\t}\n\t\t\t\tthis.doDrop(pointedElm);\n\t\t\t\tthis.draggableArea.nowSelectedElm = null;\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (!pointedElm.getAttribute('draggable')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.doDrop(pointedElm);\n\t\t\t// this.draggableArea.toDropTumnails(pointedElm);\n\t\t\tthis.draggableArea.nowSelectedElm = null;\n\t\t}\n\t}\n\tselectImage(event) {\n\t\treturn (event) => {\n\t\t\tevent.stopPropagation(); // Stops some browsers from redirecting.\n\t\t\tevent.preventDefault();\n\t\t\tconst elm = event.target;\n\t\t\t// console.log('sort selecImage imagePKmove:/elm.dataset.pk:' + elm.dataset.pk + \"/\" + this.pageData)\n\t\t\tif (this.pageData && this.pageData.baseImage) {\n\t\t\t\tconst action = ImageActionCreator.creatDetailAction(this, { imagePK: this.pageData.baseImage });\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\trenderVnode(parent) {\n\t\tconst pageEntity = this.pageData;\n\t\tif (!pageEntity) {\n\t\t\treturn div(this.id, [\"aaaaaaa\" + this.listing], \"null\" + this.listing);\n\t\t}\n\t\tconst src = this.thumbnail ?\n\t\t\tthis.thumbnail.src :\n\t\t\tnull;\n\t\tconst imageBg = !src ? {} : {\n\t\t\t\"background-image\": \"url(\" + src + \")\"\n\t\t};\n\t\t//console.log(\"★A binaryEntity 01\"+this.id+\"/src:\"+src)\n\t\t//const imgVnode = img(this.pk + \"_page\", [\"\"], \"\", src, {});\n\t\tconst enable = 'enable'\n\t\tconst disable = 'disable'\n\t\tconst pageBlock = div(\"\", [\"page_block\"], []);\n\t\tconst checkNoCropping = div(\"\", [\"checkNoCropping\", (pageEntity.isNoCropping ? enable : disable)], \"isNoCropping\");\n\t\tconst checkForceColor = div(\"\", [\"checkForceColor\", (pageEntity.isForceColor ? enable : disable)], \"isForceColor\");\n\t\tconst optionsBlock = div(\"\", [\"options_block\"], [checkForceColor, checkNoCropping]);\n\t\tconst rowVnode = div(this.id, [\"thumbnail_block\"], {\n\t\t\ton: {\n\t\t\t\tdragstart: this.handleDragStart(src),\n\t\t\t\tdragover: this.handleDragOver(),\n\t\t\t\tdragenter: this.handleDragEnter(),\n\t\t\t\tdragleave: this.handleDragLeave(),\n\t\t\t\tdrop: this.handleDrop(),\n\t\t\t\tdragend: this.handleDragEnd(),\n\t\t\t\tclick: this.selectImage(),\n\t\t\t\ttouchstart: this.handleTouchStart(),\n\t\t\t\ttouchmove: this.handleTouchMove(),\n\t\t\t\ttouchend: this.handleTouchEnd()\n\t\t\t},\n\t\t\tdataset: {\n\t\t\t\tpk: this.pk,\n\t\t\t\tis_page: true\n\t\t\t},\n\t\t\tstyle: imageBg,\n\t\t\tprops: {\n\t\t\t\t\"draggable\": \"true\"\n\t\t\t}\n\t\t}, [pageBlock, optionsBlock]);\n\t\tparent.prePatch(\"#\" + this.id, rowVnode);\n\t\treturn rowVnode;\n\t}\n\tcreateVnode() {}\n}","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class PreviewActionCreator {\n  constructor() {}\n  static creatOpenAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"openPreview\", targetView, data, storeKey);\n  }\n  static creatCloseAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"closePreview\", targetView, data, storeKey);\n  }\n  static creatNextAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"nextPreview\", targetView, data, storeKey);\n  }\n  static creatBackAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"backPreview\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateOnPreview\", targetView, data, storeKey);\n  }\n  static getStorePreviewKey(){\n    return \"previewCommand\";\n  }\n  static getStoreUpdatePreviewKey(){\n    return \"previewUpdateCommand\";\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport { BaseView } from \"../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../util/reactive/base/vtags\";\nimport { SettingData } from '../../settings/exportSettings'\nimport { SettingActionCreator } from '../../reduxy/action/settingActionCreator'\nimport { PageImage } from './pageImage'\nimport { PageProcessor } from '../../reduxy/processor/pageProcessor'\nimport { ImageActionCreator } from '../../reduxy/action/imageActionCreator'\nimport { PageActionCreator } from '../../reduxy/action/pageActionCreator'\nimport { PreviewActionCreator } from '../../reduxy/action/previewActionCreator'\nexport class PageImages extends BaseView {\n\tconstructor(draggableArea) {\n\t\tsuper(\"PageImages\", \"PageImages\");\n\t\tthis.storeKey = SettingActionCreator.getStoreKey();\n\t\tthis.childId = this.id + \"child\";\n\t\tthis.thumbnails = {};\n\t\tthis.dummyClass = \"Dummy\";\n\t\tthis.pages = [];\n\t\tthis.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n\t\tthis.storePagesKey = PageActionCreator.getStorePagesKey();\n\t\tfor (let index = 0; index < 32; index++) {\n\t\t\tthis.pages.push(new PageImage(this, index, draggableArea))\n\t\t}\n\t\tthis.dropElm = null;\n\t\tthis.lastSettingOne = null;\n\t\tthis.lastPagesData = null;\n\t\tthis.lastImagesData = null;\n\t}\n\trender() {\n\t\tthis.setting = div(this.id + \"child\", [\"PageImagesA\"], this.id);\n\t\treturn div(this.id, \"PageImages\", [this.setting]);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tconst pagesData = store[this.storePagesKey];\n\t\tconst imagesData = store[this.storeImagesKey];\n\t\tconst pagesDataJson = JSON.stringify(pagesData);\n\t\tconst imagesDataJson = JSON.stringify(imagesData);\n\t\tif (store[this.storeKey]) {\n\t\t\tconst settings = store[this.storeKey];\n\t\t\tconst settingsJson = JSON.stringify(settings);\n\t\t\t// console.log(\"Pages onViewShow settingsJson:\" + settingsJson);\n\t\t\t// console.log(\"Pages onViewShow settingsJson:\" + this.lastSettingOne);\n\t\t\tif (settingsJson !== this.lastSettingOne) {\n\t\t\t\t//alert(\"imagesData:\"+imagesData+\"/pagesData:\"+pagesData);\n\t\t\t\t// alert(\"store[this.storeKey]:\"+this.lastSettingOne+\"/\"+(JSON.stringify(settings)));\n\t\t\t\t// \n\t\t\t\t// console.log(\"Pages onViewShow pagesData:\" + pagesData);\n\t\t\t\t// console.log(pagesData);\n\t\t\t\t// alert(\"Pages onViewShow\" + JSON.stringify(settings));\n\t\t\t\tconst pageFrames = this.buildPageFrames(settings);\n\t\t\t\tthis.prePatch(\"#\" + this.childId, div(this.childId, pageFrames));\n\t\t\t\tthis.lastSettingOne = settingsJson;\n\t\t\t}\n\t\t} else {\n\t\t\t// return;\n\t\t}\n\t\tif (imagesData && pagesData && (this.lastPagesData !== pagesDataJson || this.lastImagesData !== imagesDataJson)) {\n\t\t\tawait this.showPages(pagesData, imagesData);\n\t\t\tthis.lastPagesData = pagesDataJson;\n\t\t\tthis.lastImagesData = imagesDataJson;\n\t\t\t// console.log(\"Pages onViewShow\"+store[this.storeKey]);\n\t\t}\n\t}\n\taddPage(imagesPk, pagePk) {\n\t\tconst action = PageActionCreator.creatAddPageAction(this, {\n\t\t\timagePk: imagesPk,\n\t\t\tpagePk: pagePk\n\t\t});\n\t\tthis.dispatch(action);\n\t}\n\tasync showPages(pagesData, imagesData) {\n\t\tconst imageMap = {};\n\t\tfor (let imageData of imagesData) {\n\t\t\tif (!imageData) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst imageEntity = imageData.imageEntity;\n\t\t\tconst imagePk = imageEntity.getPk();\n\t\t\timageMap[imagePk] = imageData;\n\t\t}\n\t\tlet index = 0;\n\t\tfor (let pageEntity of pagesData) {\n\t\t\tconst page = this.pages[index];\n\t\t\tindex++;\n\t\t\tif (!pageEntity) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst pk = pageEntity.getPk();\n\t\t\tconst imagePk = pageEntity.baseImage;\n\t\t\tconst imageData = imageMap[imagePk];\n\t\t\t//alert(\"id:\"+imageData+\"/imagePk:\"+imagePk)\n\t\t\tawait page.setPageData(pageEntity, imageData);\n\t\t\tpage.renderVnode(this);\n\t\t}\n\t}\n\tcreatPageFrame(pageNo, dummyClass, isRight) {\n\t\tconst frameParts = [];\n\t\tif (dummyClass === this.dummyClass) {\n\t\t\treturn frameParts;\n\t\t}\n\t\tconst sideClass = \"pageFrameHeader\" + (\n\t\t\tisRight ?\n\t\t\t\"Right\" :\n\t\t\t\"Left\");\n\t\tframeParts.push(div(\"\", [\n\t\t\t\"pageFrameHeader\", sideClass\n\t\t], pageNo + \"\"))\n\t\tconst pageIndex = pageNo - 1;\n\t\tconst page = this.pages[pageIndex].renderVnode(this);\n\t\tframeParts.push(page)\n\t\treturn frameParts;\n\t}\n\tshowPreviewSingle() {\n\t\treturn (event) => {\n\t\t\t//alert(\"showPreviewSingle\");\n\t\t\tconst action = PreviewActionCreator.creatOpenAction(this, { isSingle: true });\n\t\t\tthis.dispatch(action);\n\t\t}\n\t}\n\tshowPreviewDual() {\n\t\treturn (event) => {\n\t\t\t//alert(\"showPreviewDual\");\n\t\t\tconst action = PreviewActionCreator.creatOpenAction(this, { isSingle: false });\n\t\t\tthis.dispatch(action);\n\t\t}\n\t}\n\tbuildPreviewButtons() {\n\t\tconst previewSingle = div(\"\", [\"previewCallButton\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.showPreviewSingle()\n\t\t\t}\n\t\t}, \"Preview Single\");\n\t\tconst previewDouble = div(\"\", [\"previewCallButton\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.showPreviewDual()\n\t\t\t}\n\t\t}, \"Preview Dual\");\n\t\treturn div(\"\", [\"previewFrame\"], [previewSingle, previewDouble]);\n\t}\n\tbuildPageFrames(setting) {\n\t\tconst frames = [];\n\t\tframes.push(this.buildPreviewButtons());\n\t\tconst startPage = setting.startPage;\n\t\tconst pageNum = setting.pageNum * 1; //SettingData.pageNums[setting.pageNum-1]*1;\n\t\tthis.pageNum = pageNum;\n\t\tconst pageDirection = setting.pageDirection;\n\t\tconst isPageDirectionR2L = pageDirection === \"r2l\";\n\t\tconst isPageStartR = startPage === \"r\";\n\t\tconst frameNum = Math.ceil(pageNum / 2);\n\t\tconst isOdd = (pageNum % 2 === 1);\n\t\tconst isMatchPageStartSide = pageDirection && (pageDirection.indexOf(startPage) === 0);\n\t\tconst addPageNum = isOdd ?\n\t\t\t1 :\n\t\t\tisMatchPageStartSide ?\n\t\t\t0 :\n\t\t\t1;\n\t\tconst totalPageFrame = frameNum * 1 + addPageNum * 1;\n\t\tconst dummyClass = this.dummyClass;\n\t\tconst pageClass = \"Page\";\n\t\tconst isStartFull = (isPageDirectionR2L && isPageStartR) || (!isPageDirectionR2L && !isPageStartR)\n\t\tconst leftStartDummyClass = !isPageStartR || isStartFull ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst rightStartDummyClass = isPageStartR || isStartFull ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst leftEndDummyClass = (isOdd && (!isStartFull || (isStartFull && !isPageDirectionR2L))) || (!isOdd && (!isPageDirectionR2L || isStartFull)) ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst rightEndDummyClass = (isOdd && (!isStartFull || (isStartFull && isPageDirectionR2L))) || (!isOdd && (isPageDirectionR2L || isStartFull)) ?\n\t\t\t\"\" :\n\t\t\tdummyClass;\n\t\tconst lastIndex = totalPageFrame - 1;\n\t\tlet pagNo = 0;\n\t\tlet pageOffset = 0;\n\t\t//console.log(\"★lastIndex:\"+lastIndex+\"/pageNum:\"+pageNum+\"/setting.pageNum:\"+setting.pageNum);\n\t\tfor (let index = 0; index < totalPageFrame; index++) {\n\t\t\tconst leftPageNo = (\n\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t1 :\n\t\t\t\t0) + pageOffset + pagNo;\n\t\t\tconst rightPageNo = (\n\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t0 :\n\t\t\t\t1) + pageOffset + pagNo;\n\t\t\tconst pagePair = [];\n\t\t\t//////////////////////////////////\n\t\t\tif (index === 0) { //LR\n\t\t\t\tconst leftPageNoFirst = isPageDirectionR2L && isStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t\t1 :\n\t\t\t\t\tisStartFull ?\n\t\t\t\t\t1 :\n\t\t\t\t\t0\n\t\t\t\tconst rightPageNoFirst = isPageDirectionR2L && isStartFull ?\n\t\t\t\t\t1 :\n\t\t\t\t\tisPageDirectionR2L ?\n\t\t\t\t\t0 :\n\t\t\t\t\tisStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\t1\n\t\t\t\tpagePair.push(div(\"\", [\n\t\t\t\t\tpageClass, leftStartDummyClass\n\t\t\t\t], this.creatPageFrame(leftPageNoFirst, leftStartDummyClass, false), totalPageFrame + \"L\" + leftPageNoFirst + \" \" + isMatchPageStartSide));\n\t\t\t\tpagePair.push(div(\"\", [\n\t\t\t\t\tpageClass, rightStartDummyClass\n\t\t\t\t], this.creatPageFrame(rightPageNoFirst, rightStartDummyClass, true), frameNum + \"R\" + rightPageNoFirst + \" \" + isOdd));\n\t\t\t\tpageOffset = 1;\n\t\t\t\tpagNo += isStartFull ?\n\t\t\t\t\t2 :\n\t\t\t\t\t1;\n\t\t\t} else if (index === lastIndex) {\n\t\t\t\tpagePair.push(div(\"\", [\n\t\t\t\t\tpageClass, leftEndDummyClass\n\t\t\t\t], this.creatPageFrame(leftPageNo, leftEndDummyClass, false), \"L\" + leftPageNo));\n\t\t\t\tpagePair.push(div(\"\", [\n\t\t\t\t\tpageClass, rightEndDummyClass\n\t\t\t\t], this.creatPageFrame(rightPageNo, rightEndDummyClass, true), \"R\" + rightPageNo));\n\t\t\t} else {\n\t\t\t\tpagePair.push(div(\"\", [pageClass], this.creatPageFrame(leftPageNo, \"\", false), \"L\" + leftPageNo));\n\t\t\t\tpagePair.push(div(\"\", [pageClass], this.creatPageFrame(rightPageNo, \"\", true), \"R\" + rightPageNo));\n\t\t\t\tpagNo += 2;\n\t\t\t}\n\t\t\tframes.push(div(\"\", [\"PageFrame\"], pagePair, \"pageFrame index:\" + index))\n\t\t}\n\t\treturn frames;\n\t}\n}","import {PreviewActionCreator} from '../action/previewActionCreator'\nimport {SettingActionCreator} from '../action/settingActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nimport {PreviewProcessor} from '../processor/previewProcessor'\nlet previewReducer = null;\nexport class PreviewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.tm = this.ms.tm;\n    this.pvp = new PreviewProcessor();\n    this.previewOpenAction = PreviewActionCreator.creatOpenAction();\n    this.previewCloseAction = PreviewActionCreator.creatCloseAction();\n    this.previewNextAction = PreviewActionCreator.creatNextAction();\n    this.previewBackAction = PreviewActionCreator.creatBackAction();\n    this.previewUpdateAction = PreviewActionCreator.creatUpdateAction();\n    this.atatch(this.previewOpenAction);\n    this.atatch(this.previewCloseAction);\n    this.atatch(this.previewNextAction);\n    this.atatch(this.previewBackAction);\n    this.atatch(this.previewUpdateAction);\n    this.storeKey = PreviewActionCreator.getStorePreviewKey();\n    this.storeUpdateKey = PreviewActionCreator.getStoreUpdatePreviewKey();\n    this.storeSettingKey = SettingActionCreator.getStoreKey();\n    this.addInitializeKey(this.storeKey);\n    this.addInitializeKey(this.storeUpdateKey);\n    this.addInitializeKey(this.storeSettingKey);\n  }\n  static register() {\n    if (!previewReducer) {\n      previewReducer = new PreviewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.previewOpenAction.type === action.type) {\n      const isSingle = action.data.isSingle;\n      const setting = await this.tm.loadSettings().catch((e) => {\n        console.log(e)\n      });\n      const list = await this.loadPreviews(setting, isSingle);\n      store[this.storeKey] = {\n        isSingle: isSingle,\n        list: list,\n        setting: setting\n      };\n    } else if (this.previewCloseAction.type === action.type) {\n      store[this.storeKey] = {\n        type: this.previewCloseAction.type\n      };\n    } else if (this.previewNextAction.type === action.type) {\n      store[this.storeKey] = {\n        isSingle: action.data.isSingle,\n        nowSetNum: action.data.pageNo,\n        type: this.previewNextAction.type\n      };\n    } else if (this.previewBackAction.type === action.type) {\n      store[this.storeKey] = {\n        isSingle: action.data.isSingle,\n        nowSetNum: action.data.pageNo,\n        type: this.previewBackAction.type\n      };\n    } else if (this.previewUpdateAction.type === action.type) {\n      store[this.storeUpdateKey] = {\n        pk: action.data.pk,\n        page:await this.pvp.updatePage(action.data.pk,action.data.key)\n      };\n    }\n    return store;\n  }\n  async loadPreviews(setting, isSingle) {\n    const binaries = await this.pvp.loadPreviews();\n    const list = await this.pvp.shapeListBySets(binaries, isSingle, setting);\n    return list;\n  }\n}\n","import vu from \"../../../util/viewUtil\";\nimport bc from \"../../../util/binaryConverter\";\nimport { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { PreviewReducer } from '../../../reduxy/reducer/previewReducer'\nimport { ImageActionCreator } from '../../../reduxy/action/imageActionCreator'\nimport { PreviewActionCreator } from '../../../reduxy/action/previewActionCreator'\nexport class Preview extends BaseView {\n\tconstructor() {\n\t\tsuper(\"Preview\", [\"Preview\", BaseView.ModalWindowClass()], true);\n\t\tthis.storeKey = PreviewActionCreator.getStorePreviewKey();\n\t\tthis.storeUpdateKey = PreviewActionCreator.getStoreUpdatePreviewKey();\n\t\tthis.previewOpenAction = PreviewActionCreator.creatOpenAction();\n\t\tthis.previewCloseAction = PreviewActionCreator.creatCloseAction();\n\t\tthis.previewNextAction = PreviewActionCreator.creatNextAction();\n\t\tthis.previewBackAction = PreviewActionCreator.creatBackAction();\n\t\tthis.list = [];\n\t\tthis.currentSetNum = 0;\n\t\tthis.isSingle = true;\n\t\tthis.classNameRight = \"previeRight\";\n\t\tthis.classNameLeft = \"previeLeft\";\n\t\tthis.dummyClassName = \"dummy\";\n\t\tthis.closeActionType = this.previewCloseAction.type;\n\t}\n\tonAfterAttach(store, data) {\n\t\tPreviewReducer.register();\n\t}\n\trender() {\n\t\tconst viewFrame = div('', ['previewFrame', BaseView.ModalWindowClass()], [\n\t\t\tdiv('', ['previewLeft'], \"<\"),\n\t\t\tdiv('', ['previewFrameA'], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: \"100%\"\n\t\t\t\t}\n\t\t\t}),\n\t\t\tdiv('', ['previewRight'], \">\")\n\t\t])\n\t\treturn div(this.id, [\"Preview\"], {\n\t\t\tstyle: {\n\t\t\t\tdisplay: \"none\"\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tclick: this.beClose()\n\t\t\t}\n\t\t}, [viewFrame]);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tconst data = store[this.storeKey];\n\t\tconst dataUpdate = store[this.storeUpdateKey];\n\t\tif (dataUpdate && this.list) {\n\t\t\tconst { page, pk } = dataUpdate;\n\t\t\tfor (let index in this.list) {\n\t\t\t\tconst pageData = this.list[index];\n\t\t\t\tif (Array.isArray(pageData)) {\n\t\t\t\t\tconst one = pageData[0];\n\t\t\t\t\tif (one.parentPk === pk) {\n\t\t\t\t\t\tone.parent = page;\n\t\t\t\t\t\tthis.showPreview(this.list, this.isSingle, this.pageNo, this.isR2L);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst two = pageData[1];\n\t\t\t\t\tif (two.parentPk === pk) {\n\t\t\t\t\t\ttwo.parent = page;\n\t\t\t\t\t\tthis.showPreview(this.list, this.isSingle, this.pageNo, this.isR2L);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (pageData.parentPk === pk) {\n\t\t\t\t\t\tpageData.parent = page;\n\t\t\t\t\t\tthis.showPreview(this.list, this.isSingle, this.pageNo, this.isR2L);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\tif (data) {\n\t\t\tconst { isSingle, nowSetNum, list, type, setting } = data;\n\t\t\tif (isSingle !== undefined) {\n\t\t\t\tthis.isSingle = isSingle;\n\t\t\t}\n\t\t\tif (setting) {\n\t\t\t\tthis.setting = setting;\n\t\t\t}\n\t\t\tif (list) {\n\t\t\t\tthis.list = list;\n\t\t\t} else if (type === this.previewCloseAction.type) {\n\t\t\t\tthis.list = null;\n\t\t\t\t// alert(\"onViewShow beClose\");\n\t\t\t\tthis.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.currentVnode.elm.style.display = 'block';\n\t\t\tconst pageSetCount = this.list.length;\n\t\t\tthis.isR2L = this.setting.pageDirection === \"r2l\";\n\t\t\t// console.log(this.list)\n\t\t\t// alert(this.list+\"/isR2L:\"+isR2L);\n\t\t\t// alert(\"list:\"+this.list+\"/isSingle:\"+isSingle);\n\t\t\tif (list) {\n\t\t\t\tconst pageNo = 1;\n\t\t\t\tthis.pageNo = pageNo;\n\t\t\t\tthis.showPreview(this.list, isSingle, this.pageNo, this.isR2L);\n\t\t\t} else if (this.previewNextAction.type === type) {\n\t\t\t\tif (pageSetCount > nowSetNum) {\n\t\t\t\t\tconst pageNo = nowSetNum * 1 + 1;\n\t\t\t\t\tthis.pageNo = pageNo;\n\t\t\t\t\tthis.showPreview(this.list, isSingle, this.pageNo, this.isR2L);\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else if (this.previewBackAction.type === type) {\n\t\t\t\tif (nowSetNum > 1) {\n\t\t\t\t\tconst pageNo = nowSetNum * 1 - 1;\n\t\t\t\t\tthis.pageNo = pageNo;\n\t\t\t\t\tthis.showPreview(this.list, isSingle, this.pageNo, this.isR2L);\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//console.log(\"Preview onViewShow\");\n\t\t}\n\t}\n\tshowPreview(list, isSingle, pageNo, isR2L) {\n\t\t// console.warn(\"showPreview isR2L:\" + isR2L);\n\t\tconst pageSet = list[pageNo - 1];\n\t\tlet mainView = null;\n\t\tconst leftText = isR2L ?\n\t\t\t\"Next\" :\n\t\t\t\"Back\";\n\t\tconst rightText = isR2L ?\n\t\t\t\"Back\" :\n\t\t\t\"Next\";\n\t\tconst left = div('', [\n\t\t\t'previewLeft', \"button\"\n\t\t], {\n\t\t\ton: {\n\t\t\t\tclick: this.goNextOrBack(false)\n\t\t\t}\n\t\t}, [\n\t\t\tspan('', [\n\t\t\t\t\"dummy\", \"button\", \"symbol\"\n\t\t\t], \"\"),\n\t\t\tspan('', [\n\t\t\t\tleftText, \"button\", \"symbol\"\n\t\t\t], \"<\"),\n\t\t\tspan('', [\n\t\t\t\tleftText, \"button\", \"text\"\n\t\t\t], leftText)\n\t\t]);\n\t\tconst right = div('', [\n\t\t\t'previewRight', \"button\"\n\t\t], {\n\t\t\ton: {\n\t\t\t\tclick: this.goNextOrBack(true)\n\t\t\t}\n\t\t}, [\n\t\t\tspan('', [\n\t\t\t\t\"close\", \"button\", \"symbol\"\n\t\t\t], { on: { click: this.beClose() } }, \"X\"),\n\t\t\tspan('', [\n\t\t\t\trightText, \"button\", \"symbol\"\n\t\t\t], \">\"),\n\t\t\tspan('', [\n\t\t\t\trightText, \"button\", \"text\"\n\t\t\t], rightText)\n\t\t]);\n\t\tif (isSingle) {\n\t\t\t// console.log(pageSet)\n\t\t\t// alert(pageSet+\"/pageNo:\"+pageNo);\n\t\t\tconst imgVnode = this.buildImageArea(pageSet, pageNo, null);\n\t\t\t//alert(\"isSingle:\"+isSingle+\"/pageNo:\"+pageNo+\"/dataUri:\"+dataUri);\n\t\t\tmainView = div('', ['preview_single'], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: \"100%\"\n\t\t\t\t},\n\t\t\t\ton: {\n\t\t\t\t\tclick: this.doNothing()\n\t\t\t\t}\n\t\t\t}, [imgVnode]);\n\t\t} else {\n\t\t\t// console.log(list);\n\t\t\t// alert(\"AAAlist:\"+list+\"/isSingle:\"+isSingle);\n\t\t\tconst lNo = (pageNo - 1) * 2 + (\n\t\t\t\tisR2L ?\n\t\t\t\t1 :\n\t\t\t\t0);\n\t\t\tconst rNo = (pageNo - 1) * 2 + (\n\t\t\t\tisR2L ?\n\t\t\t\t0 :\n\t\t\t\t1);\n\t\t\tconst one = pageSet[0];\n\t\t\tconst two = pageSet[1];\n\t\t\tconst imgVnodeL = this.buildImageArea(one, lNo, false);\n\t\t\tconst imgVnodeR = this.buildImageArea(two, rNo, true);\n\t\t\tmainView = div('', ['preview_dual'], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: \"100%\"\n\t\t\t\t},\n\t\t\t\ton: {\n\t\t\t\t\tclick: this.doNothing()\n\t\t\t\t}\n\t\t\t}, [imgVnodeL, imgVnodeR]);\n\t\t}\n\t\tthis.prePatch(\".previewFrame\", div(\"\", [\"previewFrame\", BaseView.ModalWindowClass()], {\n\t\t\tstyle: {}\n\t\t}, [left, mainView, right]));\n\t}\n\tbuildImageArea(pageData, pageNo, isRight) {\n\t\tconst pageEnitiy = pageData.parent;\n\t\t// alert(JSON.stringify(pageEnitiy));\n\t\tthis.parentPkRight = isRight ? pageData.parentPk : this.parentPkRight;\n\t\tthis.parentPkLeft = !isRight ? pageData.parentPk : this.parentPkLeft;\n\t\tconst binalyEnitiy = pageData.binary;\n\t\tconst isForceColor = pageEnitiy ? pageEnitiy.isForceColor : null;\n\t\tconst isNoCropping = pageEnitiy ? pageEnitiy.isNoCropping : null;\n\t\tconst isForceColorClass = isForceColor ?\n\t\t\t\"enable\" :\n\t\t\t\"disable\";\n\t\tconst isNoCroppingClass = isNoCropping ?\n\t\t\t\"enable\" :\n\t\t\t\"disable\";\n\t\tconst currentClass = isRight === null ?\n\t\t\t\"\" :\n\t\t\t(\n\t\t\t\tisRight ?\n\t\t\t\tthis.classNameRight :\n\t\t\t\tthis.classNameLeft);\n\t\tif (binalyEnitiy) {\n\t\t\tconst dataUri = bc.arrayBuffer2DataURI(binalyEnitiy._ab);\n\t\t\t// console.log(dataUri);\n\t\t\tconst imgVnode = img(binalyEnitiy.pk + \"_preview\", \"preview_\" + pageNo, \"\", dataUri, {});\n\t\t\tconst pageNoText = div('', [\"pageNo\"], {}, \"pageNo:\" + pageNo);\n\t\t\tconst checkForceColor = div('', [\n\t\t\t\t\"checkForceColor\", isForceColorClass\n\t\t\t], {\n\t\t\t\ton: {\n\t\t\t\t\tclick: this.onCheckUpdate(\"isForceColor\", isRight)\n\t\t\t\t}\n\t\t\t}, \"isForceColor\");\n\t\t\tconst checkNoCropping = div('', [\n\t\t\t\t\"checkNoCropping\", isNoCroppingClass\n\t\t\t], {\n\t\t\t\ton: {\n\t\t\t\t\tclick: this.onCheckUpdate(\"isNoCropping\", isRight)\n\t\t\t\t}\n\t\t\t}, \"isNoCropping:\");\n\t\t\tconst pageSide = isRight === null ? \"\" : isRight ? \"right\" : \"left\";\n\t\t\tconst info = div('', ['previewInfo'], {}, [pageNoText, div('', [\"options\"], [checkForceColor, checkNoCropping])]);\n\t\t\treturn div('', ['previewImageFrame'], {}, [info, div('', [\"img\", pageSide], [imgVnode])]);\n\t\t} else {\n\t\t\tconst isDummy = binalyEnitiy === undefined;\n\t\t\tconst noimageMsg = isDummy ?\n\t\t\t\t\"no Page\" :\n\t\t\t\t\"no image set\";\n\t\t\tconst dummyClass = isDummy ?\n\t\t\t\tthis.dummyClassName :\n\t\t\t\t\"\";\n\t\t\tconst pageNoString = isDummy ?\n\t\t\t\t\"----\" :\n\t\t\t\t\"pageNo:\" + pageNo;\n\t\t\tconst imgVnode = div('', ['previewInfo'], {}, noimageMsg);\n\t\t\tconst info = div('', ['previewInfo'], {}, pageNoString);\n\t\t\treturn div('', [\n\t\t\t\t'previewImageFrame', dummyClass\n\t\t\t], {}, [info, imgVnode]);\n\t\t}\n\t}\n\tonCheckUpdate(key, isRight) {\n\t\treturn (event) => {\n\t\t\tconst action = PreviewActionCreator.creatUpdateAction(this, {\n\t\t\t\tpk: isRight ? this.parentPkRight : this.parentPkLeft,\n\t\t\t\tkey: key\n\t\t\t});\n\t\t\t// alert(\"beClose\");\n\t\t\tthis.dispatch(action);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\tbeClose() {\n\t\treturn (event) => {\n\t\t\tconst action = PreviewActionCreator.creatCloseAction(this, {\n\t\t\t\tisSingle: this.isSingle\n\t\t\t});\n\t\t\t// alert(\"beClose\");\n\t\t\tthis.dispatch(action);\n\t\t\tconst actionReload = ImageActionCreator.creatLoadImagesAction(this, {});\n\t\t\tthis.dispatch(actionReload);\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\tdoNothing() {\n\t\treturn (event) => {\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n\tgoNextOrBack(isRight) {\n\t\treturn (event) => {\n\t\t\tconst action = ((isRight && this.isR2L) || (!isRight && !this.isR2L)) ?\n\t\t\t\tPreviewActionCreator.creatBackAction(this, {\n\t\t\t\t\tisSingle: this.isSingle,\n\t\t\t\t\tpageNo: this.pageNo\n\t\t\t\t}) :\n\t\t\t\tPreviewActionCreator.creatNextAction(this, {\n\t\t\t\t\tisSingle: this.isSingle,\n\t\t\t\t\tpageNo: this.pageNo\n\t\t\t\t});\n\t\t\tthis.dispatch(action);\n\t\t\t// alert(\"goNext\");\n\t\t\tevent.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\t}\n}","import vu from \"../../util/viewUtil\";\nimport {\n\tBaseView\n} from \"../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../util/reactive/base/vtags\";\nimport {\n\tImageActionCreator\n} from '../../reduxy/action/imageActionCreator'\nimport {\n\tPageActionCreator\n} from '../../reduxy/action/pageActionCreator'\nimport { Dialog } from \"./dialog/dialog\";\nexport class Thumbnail extends BaseView {\n\tconstructor(parent, draggableArea) {\n\t\tsuper(\"Thumnail\" + parent.id, \"Thumnail\");\n\t\tthis.parent = parent;\n\t\tthis.draggableArea = draggableArea;\n\t\tthis.ip = this.ms.ip;\n\t\tthis.draggableArea.nowSelectedElm = null;\n\t\tthis.thumbnail_block = \"thumbnail_block\";\n\t\tthis.displayNone = \"display_none\";\n\t\tthis.draggableArea.toDropTumnails = (elm) => { this.doDrop(elm) };\n\t}\n\tsetImageData(imageData) {\n\t\tthis.imageData = imageData;\n\t}\n\trender(store, actionData) {\n\t\treturn div('', \"\");\n\t}\n\tremove(pk) {\n\t\treturn async (event) => {\n\t\t\tconst result = await Dialog.opneConfirm(\"Clicked Image Delete Button!\", \"delete ok?\");\n\t\t\tif (result) {\n\t\t\t\tconst action = ImageActionCreator.creatRemoveAction(this, {\n\t\t\t\t\timagePKforDelete: pk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t}\n\t}\n\thandleDragStart(dragImageSrc) {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n\t\t\tthis.draggableArea.nowSelectedElm = elm;\n\t\t\tevent.dataTransfer.effectAllowed = 'move';\n\t\t\tevent.dataTransfer.setData('text/html', elm.innerHTML);\n\t\t\tlet dragIcon = document.createElement('img');\n\t\t\tdragIcon.src = dragImageSrc;\n\t\t\tdragIcon.width = 100;\n\t\t\tevent.dataTransfer.setDragImage(dragIcon, -10, -10);\n\t\t}\n\t}\n\thandleDragOver() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tevent.preventDefault(); // Necessary. Allows us to drop.\n\t\t\tevent.dataTransfer.dropEffect = 'move'; // See the section on the DataTransfer object.\n\t\t\treturn false;\n\t\t}\n\t}\n\thandleDragEnter() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.classList.add('over');\n\t\t}\n\t}\n\thandleDragLeave() {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.classList.remove('over'); // this / event.target is previous target element.\n\t\t}\n\t}\n\thandleDrop(event) {\n\t\treturn (event) => {\n\t\t\tevent.stopPropagation(); // Stops some browsers from redirecting.\n\t\t\tevent.preventDefault();\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.doDrop(elm);\n\t\t\treturn false;\n\t\t}\n\t}\n\tdoDrop(elm) {\n\t\tconst nowSelectedElm = this.draggableArea.nowSelectedElm;\n\t\tif (nowSelectedElm && nowSelectedElm.dataset.pk && nowSelectedElm !== elm) {\n\t\t\tconst selectedPk = nowSelectedElm.dataset.pk;\n\t\t\tif (nowSelectedElm.dataset.is_image) {\n\t\t\t\t//console.log('sort handleDrop imagePKmove:'+selectedPk+\"/elm.dataset.pk:\"+elm.dataset.pk)\n\t\t\t\tconst action = ImageActionCreator.creatSortImagesAction(this, {\n\t\t\t\t\timagePKmove: selectedPk,\n\t\t\t\t\timagePKdrop: elm.dataset.pk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t} else if (nowSelectedElm.dataset.is_page) {\n\t\t\t\t//console.log('sort handleDrop imagePKmove:'+selectedPk+\"/elm.dataset.pk:\"+elm.dataset.pk)\n\t\t\t\tconst action = PageActionCreator.creatRemovePageAction(this, {\n\t\t\t\t\tpagePk: selectedPk\n\t\t\t\t});\n\t\t\t\tthis.dispatch(action);\n\t\t\t}\n\t\t\tthis.draggableArea.nowSelectedElm = null;\n\t\t}\n\t\tvu.clearSideElmClass(elm, 'over');\n\t}\n\thandleDragEnd(event) {\n\t\treturn (event) => {\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\twindow.blockMenuHeaderScroll = true;\n\t\t\tconst nowSelectedElm = this.draggableArea.nowSelectedElm;\n\t\t\t// console.log('handleDragEnd imagePKmove:'+(nowSelectedElm?nowSelectedElm.dataset.pk:nowSelectedElm)+\"/elm.dataset.pk:\"+elm.dataset.pk)\n\t\t\tvu.clearSideElmClass(elm, 'over');\n\t\t}\n\t}\n\thandleTouchStart(dragImageSrc) {\n\t\treturn (event) => {\n\t\t\t//console.log(\"handleTouchStart\");\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\telm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n\t\t\tthis.draggableArea.nowSelectedElm = elm;\n\t\t\t// event.dataTransfer.effectAllowed = 'move';\n\t\t\t// event.dataTransfer.setData('text/html', elm.innerHTML);\n\t\t\t// let dragIcon = document.createElement('img');\n\t\t\t// dragIcon.src = dragImageSrc;\n\t\t\t// dragIcon.width = 100;\n\t\t\t// event.dataTransfer.setDragImage(dragIcon, -10, -10);\n\t\t}\n\t}\n\thandleTouchMove() {\n\t\treturn (event) => {\n\t\t\twindow.blockMenuHeaderScroll = false;\n\t\t\tevent.preventDefault(); // Necessary. Allows us to drop.\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst pointedElm = vu.getCurrentPointedElm(event);\n\t\t\tif (this.pointedElm && this.pointedElm !== pointedElm) {\n\t\t\t\tvu.clearSideElmClass(this.pointedElm, 'over');\n\t\t\t}\n\t\t\tthis.pointedElm = pointedElm;\n\t\t\tif (!pointedElm.getAttribute('draggable') || pointedElm === elm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpointedElm.classList.add('over');\n\t\t\t// event.dataTransfer.dropEffect = 'move'; // See the section on the DataTransfer object.\n\t\t\treturn false;\n\t\t}\n\t}\n\thandleTouchEnd() {\n\t\treturn (event) => {\n\t\t\t//console.log(\"handleTouchEnd\");\n\t\t\tconst elm = event.target;\n\t\t\tif (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst nowSelectedElm = this.draggableArea.nowSelectedElm;\n\t\t\tvu.clearSideElmClass(elm, 'over');\n\t\t\tconst pointedElm = this.pointedElm;\n\t\t\tif (!pointedElm || !pointedElm.getAttribute('draggable') || pointedElm === elm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.pointedElm = null;\n\t\t\tif (!pointedElm.classList || !pointedElm.classList.contains(pointedElm.thumbnail_block)) {\n\t\t\t\tthis.draggableArea.toDropPage(pointedElm);\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// console.log('handleDragEnd imagePKmove:'+(nowSelectedElm?nowSelectedElm.dataset.pk:nowSelectedElm)+\"/elm.dataset.pk:\"+elm.dataset.pk)\n\t\t\tvu.clearSideElmClass(pointedElm, 'over');\n\t\t\tthis.doDrop(elm);\n\t\t}\n\t}\n\tselectImage(event) {\n\t\treturn (event) => {\n\t\t\tevent.stopPropagation(); // Stops some browsers from redirecting.\n\t\t\tevent.preventDefault();\n\t\t\tconst elm = event.target;\n\t\t\t// console.log(' selecImage imagePKmove:/elm.dataset.pk:'+elm.dataset.pk)\n\t\t\tconst action = ImageActionCreator.creatDetailAction(this, {\n\t\t\t\timagePK: elm.dataset.pk\n\t\t\t});\n\t\t\tthis.dispatch(action);\n\t\t\treturn false;\n\t\t}\n\t}\n\tasync crateDataLine(imageData, pagesMap = {}) {\n\t\tconst imageEntity = imageData.imageEntity;\n\t\tconst binaryEntity = imageData.binaryEntity;\n\t\t//console.log(binaryEntity)\n\t\tconst data = {\n\t\t\tname: imageEntity.name,\n\t\t\tab: binaryEntity._ab,\n\t\t\ttype: imageEntity.type\n\t\t}\n\t\tconst imgElm = await this.ip.createImageNodeByData(data)\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.error(e);\n\t\t\t\tthrow e\n\t\t\t});\n\t\tconst pk = imageEntity.getPk();\n\t\t// const imgVnode = img(pk + \"_image\", imageEntity.name, imageEntity.name, imgElm.src, {});\n\t\tconst textVnode = span(pk + \"_text\", [\"thumbnail_text\"], imageData.imageText);\n\t\tconst delButton = span(pk + \"_delButton\", [\"delButton\"], {\n\t\t\ton: {\n\t\t\t\t\"click\": this.remove(pk)\n\t\t\t}\n\t\t}, \"x\");\n\t\tconst imageVnode = div(\"\", [\"image_block\"], {\n\t\t\ton: {\n\t\t\t\tdragstart: this.handleDragStart(imgElm.src),\n\t\t\t\tdragover: this.handleDragOver(),\n\t\t\t\tdragenter: this.handleDragEnter(),\n\t\t\t\tdragleave: this.handleDragLeave(),\n\t\t\t\tdrop: this.handleDrop(),\n\t\t\t\tdragend: this.handleDragEnd(),\n\t\t\t\tclick: this.selectImage(),\n\t\t\t\ttouchstart: this.handleTouchStart(imgElm.src),\n\t\t\t\ttouchmove: this.handleTouchMove(),\n\t\t\t\ttouchend: this.handleTouchEnd()\n\t\t\t},\n\t\t\tdataset: {\n\t\t\t\tpk: pk,\n\t\t\t\tis_image: true\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\t\"draggable\": \"true\"\n\t\t\t}\n\t\t});\n\t\tconst classObj = {};\n\t\tclassObj[this.displayNone] = pagesMap[pk];\n\t\tconst rowVnode = div(\"\", [this.thumbnail_block], {\n\t\t\ton: {\n\t\t\t\tdragstart: this.handleDragStart(imgElm.src),\n\t\t\t\tdragover: this.handleDragOver(),\n\t\t\t\tdragenter: this.handleDragEnter(),\n\t\t\t\tdragleave: this.handleDragLeave(),\n\t\t\t\tdrop: this.handleDrop(),\n\t\t\t\tdragend: this.handleDragEnd(),\n\t\t\t\tclick: this.selectImage(),\n\t\t\t\ttouchstart: this.handleTouchStart(imgElm.src),\n\t\t\t\ttouchmove: this.handleTouchMove(),\n\t\t\t\ttouchend: this.handleTouchEnd()\n\t\t\t},\n\t\t\tstyle: {\n\t\t\t\t\"background-image\": \"url(\" + imgElm.src + \")\"\n\t\t\t},\n\t\t\tclass: classObj,\n\t\t\tdataset: {\n\t\t\t\tpk: pk,\n\t\t\t\tis_image: true\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\t\"draggable\": \"true\"\n\t\t\t}\n\t\t}, [delButton, textVnode]);\n\t\treturn rowVnode;\n\t}\n}","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {Sorter} from \"../../util/sorter\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {ImageActionCreator} from '../../reduxy/action/imageActionCreator'\nimport {PageActionCreator} from '../../reduxy/action/pageActionCreator'\nimport {Thumbnail} from './thumbnail'\nexport class Thumbnails extends BaseView {\n  constructor(draggableArea) {\n    super(\"Thumnails\", \"Thumnails\");\n    this.imageAreaID = \"thumnailsImageArea\";\n    this.thumbnail = new Thumbnail(this, draggableArea);\n    this.ip = this.ms.ip;\n    this.storePagesKey = PageActionCreator.getStorePagesKey();\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n    this.pageMap = {}\n    this.thumbnails_block = 'thumbnails_block';\n    this.draggableArea = draggableArea;\n    this.draggableArea.cancelPageArea = null;\n  }\n  async onAfterAttach(store, data) {\n    const action = ImageActionCreator.creatLoadImagesAction(this, {});\n    await this.dispatch(action);\n  }\n  async onViewShow(store, actionData) {\n    const pagesData = store[this.storePagesKey];\n    const imagesData = store[this.storeImagesKey];\n    if (imagesData && pagesData) {\n      this.updatePageMap(pagesData);\n      await this.showImages(imagesData).catch((e) => {\n        console.error(e)\n      });;\n      // console.error(\"Thumnails onViewShow count:\"+pagesData.length+\"/\"+imagesData.length+\"/\"+JSON.stringify(this.pageMap));\n    }\n  }\n  render(store, actionData) {\n    return div(this.imageAreaID, \"Thumnails\");\n  }\n  updatePageMap(pagesData) {\n    for (let key in this.pageMap) {\n      delete this.pageMap[key];\n    }\n    for (let pageEntity of pagesData) {\n      if(!pageEntity){\n        continue;\n      }\n      const imagePk = pageEntity.baseImage;\n      if (imagePk) {\n        this.pageMap[imagePk] = true;\n      }\n    }\n  }\n  handleDragEnter() {\n    return(event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnails_block)) {\n        return\n      }\n      elm.classList.add('over');\n      this.draggableArea.cancelPageArea = elm;\n    }\n  }\n  handleDragLeave() {\n    return(event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnails_block)) {\n        return\n      }\n      elm.classList.remove('over'); // this / event.target is previous target element.\n      setTimeout(() => {\n        this.draggableArea.cancelPageArea = null;\n      }, 100)\n    }\n  }\n  handleDrop(event) {\n    return(event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n      return false;\n    }\n  }\n\n  reset() {\n    return(event) => {\n      const elm = event.target;\n      //alert(\"reset!\")\n    }\n  }\n  async showImages(imageDatas) {\n    const images = [];\n    for (let imageData of imageDatas) {\n      if (!imageData) {\n        continue;\n      }\n      const imageEntity = imageData.imageEntity;\n      const pk = imageEntity.getPk();\n      const vnode = await this.thumbnail.crateDataLine(imageData, this.pageMap).catch((e) => {\n        console.error(e)\n      });\n      images.push(vnode);\n    }\n    const newVnode = div(this.imageAreaID, [this.thumbnails_block], {\n      on: {\n        dragover: this.handleDragEnter(),\n        dragstart: this.handleDragEnter(),\n        dragenter: this.handleDragEnter(),\n        dragleave: this.handleDragLeave(),\n        drop: this.handleDrop(),\n        dragend: this.handleDrop(),\n        click: this.reset()\n      },\n      props: {\n        \"draggable\": \"true\"\n      }\n    }, images)\n    this.prePatch(\"#\" + this.imageAreaID, newVnode);\n  }\n}\n","import {PageActionCreator} from '../action/pageActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nimport {PageProcessor} from '../processor/pageProcessor'\nimport {ImageActionCreator} from '../action/imageActionCreator'\nlet pagesViewReducer = null;\nexport class PagesViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.im = this.ms.im;\n    this.pageAddAction = PageActionCreator.creatAddPageAction();\n    this.pageRemoveAction = PageActionCreator.creatRemovePageAction();\n    this.pagesResetAction = PageActionCreator.creatResetPagesAction();\n    this.pagesSortAction = PageActionCreator.creatSortPagesAction();\n    this.atatch(this.dropImageToPageAction);\n    this.atatch(this.pageAddAction);\n    this.atatch(this.pageRemoveAction);\n    this.atatch(this.pagesResetAction);\n    this.atatch(this.pagesSortAction);\n\n    this.pp = new PageProcessor();\n    this.storeKey = PageActionCreator.getStorePagesKey();\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n  }\n  static register() {\n    if (!pagesViewReducer) {\n      pagesViewReducer = new PagesViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.pageAddAction.type === action.type) {\n      store[this.storeKey] = await this.add(action.data.imagePk, action.data.pagePk);\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pageRemoveAction.type === action.type) {\n      store[this.storeKey] = await this.remove(action.data.pagePk);\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pagesResetAction.type === action.type) {\n      store[this.storeKey] = await this.reset();\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pagesSortAction.type === action.type) {\n      store[this.storeKey] = await this.move(action.data.formPk, action.data.toPk);\n      store[this.storeImagesKey] = await this.loadImages();\n    }\n    return store;\n  }\n  async loadImages() {\n    return await this.im.loadImages();\n  }\n  async add(imagePk, pagePk) {\n    //\n    await this.pp.add(imagePk, pagePk);\n    return await this.pp.loadPages();\n  }\n  async remove(pagePk) {\n    //\n    await this.pp.remove(pagePk);\n    return await this.pp.loadPages();\n  }\n  async reset() {\n    //\n    return await this.pp.resetPagesFull();\n  }\n  async move(formPk, toPk) {\n    //\n    await this.pp.move(formPk, toPk);\n    return await this.pp.loadPages();\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {ImageDetail} from \"../parts/imageDetail\";\nimport {PageImages} from \"../parts/pageImages\";\nimport {Preview} from '../parts/preview/preview'\nimport {Thumbnails} from \"../parts/thumbnails\";\nimport {ImageViewReducer} from '../../reduxy/reducer/imageViewReducer'\nimport {PagesViewReducer} from '../../reduxy/reducer/pagesViewReducer'\nexport class FilesArea extends BaseView {\n  constructor() {\n    super(\"FilesArea\", \"FilesArea\");\n    this.nowSelectedElm = null;\n    this.imageDetail = new ImageDetail();\n    this.pageImages = new PageImages(this);\n    this.thumbnails = new Thumbnails(this);\n    this.preview = new Preview();\n    ImageViewReducer.register();\n    PagesViewReducer.register();\n  }\n\n  async onAfterAttach(store, data) {\n    await this.imageDetail.attach(this);\n    await this.pageImages.attach(this);\n    await this.thumbnails.attach(this);\n    await this.preview.attach(this);\n  }\n  render() {\n    return div(\"\", [\n      div(this.pageImages.id),\n      div(this.thumbnails.id),\n      div(this.imageDetail.id),\n      div(this.preview.id)\n    ])\n  }\n}\n","import {ProgressActionCreator} from '../action/progressActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nlet progressViewReducer = null;\nexport class ProgressViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.progressBarAddAction = ProgressActionCreator.creatAddAction();\n    this.progressBarRemoveAction = ProgressActionCreator.creatRemoveAction();\n    this.progressBarUpdateAction = ProgressActionCreator.creatUpdateAction();\n    this.progressBarCompleatSortAction = ProgressActionCreator.creatCompleatAction();\n    this.atatch(this.progressBarAddAction);\n    this.atatch(this.progressBarRemoveAction);\n    this.atatch(this.progressBarUpdateAction);\n    this.atatch(this.progressBarCompleatSortAction);\n    this.storeKey = \"progress\";\n    this.addInitializeKey(this.storeKey);\n  }\n  static register() {\n    if (!progressViewReducer) {\n      progressViewReducer = new ProgressViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.progressBarAddAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, 0, false, action.data.msg, action.data.title);\n    } else if (this.progressBarRemoveAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(false, 0, false);\n    } else if (this.progressBarUpdateAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, action.data.progress, false, action.data.msg);\n    } else if (this.progressBarCompleatSortAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, 100, true, action.data.msg);\n    }\n    return store;\n  }\n  createProgress(isVisible, progress, isComple, msg, title) {\n    return {isVisible: isVisible, progress: progress, msg: msg, isComple: isComple, title: title}\n  }\n}\n","import vu from \"../../../util/viewUtil\";\nimport { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { ProgressViewReducer } from '../../../reduxy/reducer/progressViewReducer'\nexport class ProgressBar extends BaseView {\n\tconstructor() {\n\t\tsuper(\"ProgressBar\", [\"ProgressBar\", BaseView.ModalWindowClass()]);\n\t\tthis.storeKey = \"progress\";\n\t\tthis.initPoint = '0%';\n\t\tthis.title = \"ProgressBar\";\n\t}\n\n\tasync onAfterAttach(store, data) {\n\t\tProgressViewReducer.register();\n\t}\n\trender() {\n\t\treturn div(\"\" [\"ProgressBarView\"], {\n\t\t\tstyle: {\n\t\t\t\tdisplay: \"none\"\n\t\t\t}\n\t\t}, [\n\t\t\tdiv('', ['progeressTitle'], \"\"),\n\t\t\tdiv('', ['progeressFrame'], [div('', ['progeress'], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: this.initPoint\n\t\t\t\t}\n\t\t\t})]),\n\t\t\tdiv('', ['progeressInfo'], [\n\t\t\t\tdiv('', ['progeressPoints'], this.initPoint),\n\t\t\t\tdiv('', ['progeressMessage'], \"\")\n\t\t\t])\n\t\t]);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\t//alert(\"onViewShow\");\n\t\t\tthis.showProgress(store[this.storeKey]);\n\t\t\t//console.log(\"ProgressBar onViewShow\");\n\t\t}\n\t}\n\tshowProgress(data) {\n\t\tconst { isVisible, progress, isComple, msg, title } = data;\n\t\tif (title) {\n\t\t\tthis.title = title;\n\t\t}\n\t\tif (isVisible) {\n\t\t\tthis.currentVnode.elm.style.display = 'block';\n\t\t\tthis.prePatch(\".progeress\", div(\"\", [\"progeress\"], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: progress + \"%\"\n\t\t\t\t}\n\t\t\t}, ));\n\t\t\tthis.prePatch(\".progeressTitle\", div(\"\", [\"progeressTitle\"], {}, this.title));\n\t\t\tthis.prePatch(\".progeressPoints\", div(\"\", [\"progeressPoints\"], {}, progress + \"%\"));\n\t\t\tthis.prePatch(\".progeressMessage\", div(\"\", [\"progeressMessage\"], {}, msg));\n\t\t\tif (isComple) {\n\t\t\t\tthis.currentVnode.elm.style.display = 'none';\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentVnode.elm.style.display = 'none';\n\t\t\tthis.prePatch(\".progeress\", div(\"\", [\"progeress\"], {\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: \"0%\"\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis.prePatch(\".progeressPoints\", div(\"\", [\"progeressPoints\"], {}, this.initPoint));\n\t\t}\n\t}\n}","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class TitleActionCreator {\n  constructor() {}\n  static creatAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"creatTitle\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeTitle\", targetView, data, storeKey);\n  }\n  static creatLoadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadTitle\", targetView, data, storeKey);\n  }\n  static creatChangeAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"changeTitle\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateTitle\", targetView, data, storeKey);\n  }\n  static creatClearAllAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"clearAllTitle\", targetView, data, storeKey);\n  }\n  static getStoreCurrentKey(){\n    return \"titlesCurrentData\";\n  }\n  static getStoreKey(){\n    return \"titlesData\";\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class SplashActionCreator {\n  constructor() {}\n  static creatAddAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addSplashr\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeSplash\", targetView, data, storeKey);\n  }\n  static getStoreKey(){\n    return \"splash\";\n  }\n}\n","import { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { TitleActionCreator } from '../../../reduxy/action/titleActionCreator'\nimport { SplashActionCreator } from '../../../reduxy/action/splashActionCreator'\nimport { Dialog } from \"../dialog/dialog\";\nexport class StorageMeter extends BaseView {\n\tconstructor() {\n\t\tsuper(\"StorageMeter\", \"StorageMeter\");\n\t\tthis.storeKey = TitleActionCreator.getStoreKey();\n\t\tthis.storeCurrentKey = TitleActionCreator.getStoreCurrentKey();\n\t}\n\n\trender(store, actionData) {\n\t\tconst name = div(\"\", [\"StorageMeter\"], \"Storage now usage:\");\n\t\tconst counter = span('', [\"StorageMeterCounter\"], \"0\");\n\t\tconst unit = span('', [\"StorageMeterUnit\"], \" byte\");\n\t\tconst button = span('', [\"StorageMeterUnit\", \"button\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.onReculc()\n\t\t\t}\n\t\t}, \"reculc!\");\n\t\tconst dataFrame = div('', [\"StorageMeter\"], [counter, unit, button]);\n\t\treturn div(\"\", [this.id + \"Frame\"], [name, dataFrame]);\n\t}\n\tasync onAfterAttach(store, data) {}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\tconst { list, totalSize } = store[this.storeKey];\n\t\t\t// alert('totalSize:'+totalSize);\n\t\t\tconst counter = span('', [\"StorageMeterCounter\"], totalSize + \"\");\n\t\t\tthis.prePatch(\".StorageMeterCounter\", counter);\n\t\t\tconst action = SplashActionCreator.creatRemoveAction(this);\n\t\t\tthis.dispatch(action);\n\t\t} else if (store[this.storeCurrentKey]) {\n\t\t\talert('bbbbbb');\n\t\t}\n\t}\n\tonReculc() {\n\t\treturn (event) => {\n\t\t\tDialog.opneAlert(\"onReculc!\", \"Taking several time...\");\n\t\t\tconst action = TitleActionCreator.creatLoadAction(this);\n\t\t\tthis.dispatch(action);\n\t\t\tevent.preventDefault(); // Necessary. Allows us to drop.\n\t\t\treturn false;\n\t\t}\n\t}\n}","import {\n  BaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {TitleActionCreator} from '../../../reduxy/action/titleActionCreator';\nexport class TitleRow extends BaseView {\n  constructor() {\n    super(\"TitleRow\", \"TitleRow\");\n  }\n\n  render(store, actionData) {\n    const name = div(\"\", [\"TitleName\"], \"TitleName\");\n    return div(\"\", [this.id + \"Frame\"], [name, div(this.imageAreaID, [\"ImageDetailA\"], this.id + \"aaaaa\")]);\n  }\n  async onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {\n\n  }\n  buildRows(titles){\n    const retList = [];\n    for(let title of titles){\n      retList.push(this.creatRow(title));\n    }\n    return retList;\n  }\n  creatRow(title){\n      const titleId = div('', [\"TitleId\"], this.titleId);\n      const prefix = div('', [\"prefix\"], this.prefix);\n      const name = div(\"\", [\"TitleName\"], title.name);\n      const size = div(\"\", [\"TitleName\"], title.size+\" byte\");\n      const updateButton = div(\"\", [\"TitleUpdate\",\"button\"],{\n        on:{click:this.onUpdate()}\n      }, \"update\");\n      const deleteButton = div(\"\", [\"TitleDelete\",\"button\"], {\n        on:{click:this.onDelete()}\n      }, \"del\");\n      return div(\"\", [this.id + \"Row\"], [titleId,prefix,name,size,updateButton,deleteButton]);\n  }\n  onUpdate() {\n    return(event) => {\n      alert(\"onUpdate\");\n      const action = TitleActionCreator.creatLoadAction(this);\n      this.dispatch(action);\n      event.preventDefault(); // Necessary. Allows us to drop.\n      return false;\n    }\n  }\n  onDelete(){\n    return(event) => {\n      alert(\"onDelete\");\n      const action = TitleActionCreator.creatLoadAction(this);\n      this.dispatch(action);\n      event.preventDefault(); // Necessary. Allows us to drop.\n      return false;\n    }\n  }\n}\n","import {\n  BaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {TitleActionCreator} from '../../../reduxy/action/titleActionCreator'\nimport {TitleRow} from './titleRow'\nexport class TitleList extends BaseView {\n  constructor() {\n    super(\"TitleList\", \"TitleList\");\n      this.storeKey = TitleActionCreator.getStoreKey();\n      this.storeCurrentKey = TitleActionCreator.getStoreCurrentKey();\n      this.titleRow = new TitleRow();\n  }\n\n  render(store, actionData) {\n    const name = div(\"\", [\"TitleListName\"], \"Titles List\");\n    const listView = div('', [\"TitleListRows\"], this.id + \"-----------\");\n    return div(\"\", [this.id + \"Frame\"], [name,listView]);\n  }\n  async onAfterAttach(store, data) {\n\n  }\n\n  async onViewShow(store, actionData) {\n    if(store[this.storeKey]){\n      const {list,totalSize}=store[this.storeKey];\n      this.buildRows(list);\n    }else if(store[this.storeCurrentKey]){\n      alert('bbbbbb');\n    }\n  }\n\n  buildRows(list){\n    const listRows = this.titleRow.buildRows(list);\n    const vnode = div('', [\"TitleListRows\"],listRows);\n    this.prePatch(\".TitleListRows\", vnode);\n  }\n}\n","import {BaseView} from \"../../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../../util/reactive/base/vtags\";\nimport {TitleActionCreator} from '../../../reduxy/action/titleActionCreator';\nexport class TitleNewone extends BaseView {\n  constructor() {\n    super(\"TitleNewone\", \"TitleNewone\");\n    this.storeKey = TitleActionCreator.getStoreKey();\n    this.storeCurrentKey = TitleActionCreator.getStoreCurrentKey();\n    this.idOfName = this.id+\"name\";\n  }\n\n  render(store, actionData) {\n    //(titleId, titlePrefix, name)\n    const name = div(\"\", [\"TitleNewone\"], \"TitleNewone\");\n    const nameRow = this.createInputRow(\"name\", \"NameInput\");\n    const prefixRow = this.createInputRow(\"prefix\", \"NameInput\");\n    const titleIdRow = this.createInputRow(\"titleId\", \"titleIdInput\");\n    const button = div(\"\", [\"titleIdInput\",\"button\"], {\n      on: {\n        click: this.onClick()\n      }\n    }, \"create new title.\");\n    return div(\"\", [this.id + \"Frame\"], [name, titleIdRow, prefixRow, nameRow,button]);\n  }\n  async onAfterAttach(store, data) {}\n\n  async onViewShow(store, actionData) {\n    if (store[this.storeKey]) {\n      //\n      this.ids = {};\n      const {list, totalSize} = store[this.storeKey];\n      for (let title of list) {\n        this.ids[title.getPk()]=true;\n      }\n    } else if (store[this.storeCurrentKey]) {\n      //\n    }\n  }\n  onClick() {\n    return(event) => {\n      alert(\"onClick\");\n\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      event.preventDefault(); // Necessary. Allows us to drop.\n      return false;\n    }\n  }\n\n  getCurrentOptions() {\n    const result = {\n      isGrayscale: document.getElementById(this.checkboxIsGrascale).checked,\n      dpiName: document.getElementById(this.selectBoxDpiName).value,\n      isMaxSize10M: document.getElementById(this.checkboxIsMaxSize10M).checked,\n      isLanczose: document.getElementById(this.checkboxIsLanczose).checked\n    };\n    return result;\n\n  }\n  createInputRow(label, inputClass, pattern = \"\", defaultValue = \"\") {\n    const labelClass = this.id + \"Label\";\n    const nameLabel = span(\"\", [labelClass], label + ':');\n    const nameInput = input(this.id + inputClass, [this.id + inputClass], {\n      props: {\n        name: this.id + inputClass\n      },\n      attr:{\n        pattern:pattern\n      }\n    }, \"text\", defaultValue);\n    const row = div(\"\", [this.id + \"Row\"], [nameLabel, nameInput]);\n    return row;\n  }\n}\n","import { TitleActionCreator } from \"../action/titleActionCreator\"\nimport { ActionDispatcher } from \"../../util/reactive/actionDispatcher\";\nimport { ObjectUtil } from \"../../util/objectUtil\";\nexport class TitleProcessor {\n\tconstructor(em, tm) {\n\t\tthis.em = em;\n\t\tthis.tm = tm;\n\t\tthis.actionDispatcher = ActionDispatcher.createStandAlone();\n\t\tthis.totalSize = 0;\n\t}\n\tasync loadAll() {\n\t\tconsole.time(\"TitleProcessor.loadAll\");\n\t\tconst titles = await this.tm.loadTitleList();\n\t\tthis.totalSize = 0;\n\t\tconst keys = [];\n\t\tfor (let title of titles) {\n\t\t\tthis.titleSizeCache = {};\n\t\t\tconst size = await this.getSizes(title);\n\t\t\ttitle.size = size;\n\t\t\tthis.totalSize += size;\n\t\t}\n\t\tconsole.timeEnd(\"TitleProcessor.loadAll\");\n\n\t\treturn { list: titles, totalSize: this.totalSize };\n\t}\n\tgetTotalSum() {\n\t\treturn this.totalSize;\n\t}\n\tasync getSizes(target) {\n\t\tif (!target) {\n\t\t\treturn 1;\n\t\t}\n\t\tlet size = await ObjectUtil.calcSize(this.em, target);\n\t\tconst refCols = target.getRefCols();\n\t\tfor (let colName of refCols) {\n\t\t\tconst colValue = target[colName];\n\t\t\tif (!colValue) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Array.isArray(colValue)) {\n\t\t\t\tfor (let pk of colValue) {\n\t\t\t\t\tif (!pk) {\n\t\t\t\t\t\tsize += 2;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.titleSizeCache[pk] === undefined) {\n\t\t\t\t\t\tconst entity = await this.em.get(pk, true);\n\t\t\t\t\t\tconst currentSize = Number.isInteger(entity) ? entity : await this.getSizes(entity);\n\t\t\t\t\t\tthis.titleSizeCache[pk] = true;\n\t\t\t\t\t\tsize += currentSize;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof colValue === \"string\") {\n\t\t\t\tif (this.titleSizeCache[colValue] === undefined) {\n\t\t\t\t\tconst entity = await this.em.get(colValue, true);\n\t\t\t\t\tconst currentSize = Number.isInteger(entity) ? entity : await this.getSizes(entity);\n\t\t\t\t\tthis.titleSizeCache[colValue] = true;\n\t\t\t\t\tsize += currentSize;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn size;\n\t}\n\tasync clearAll() {\n\t\tconst titles = await this.tm.loadTitleList();\n\t\tfor (let title of titles) {\n\t\t\tawait this.removeDescendant(title);\n\t\t}\n\t\t//dual!\n\t\tfor (let title of titles) {\n\t\t\tawait this.removeDescendant(title);\n\t\t}\n\t\treturn await this.loadAll();\n\t}\n\tasync removeDescendant(target) {\n\t\tif (!target) {\n\t\t\treturn;\n\t\t}\n\t\tconst refCols = target.getRefCols();\n\t\tfor (let colName of refCols) {\n\t\t\tconst colValue = target[colName];\n\t\t\tif (!colValue) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Array.isArray(colValue)) {\n\t\t\t\tfor (let pk of colValue) {\n\t\t\t\t\tawait this.removeExecute(pk);\n\t\t\t\t}\n\t\t\t\tfor (let index in colValue) {\n\t\t\t\t\tdelete colValue[index];\n\t\t\t\t}\n\t\t\t} else if (typeof colValue === \"string\") {\n\t\t\t\tawait this.removeExecute(colValue);\n\t\t\t}\n\t\t}\n\t}\n\tasync removeExecute(pk) {\n\t\tif (!pk) {\n\t\t\treturn this.tm.loadCurrent();\n\t\t}\n\t\tconst entity = await this.em.get(pk);\n\t\tif (entity) {\n\t\t\tawait this.removeDescendant(entity);\n\t\t\tif (entity.pages) {\n\t\t\t\tfor (let index in entity.pages) {\n\t\t\t\t\tdelete entity.pages[index];\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait this.em.delete(pk);\n\t\t\tconst titles = await this.tm.loadTitleList();\n\t\t\treturn titles && titles.length > 0 ?\n\t\t\t\ttitles[0] :\n\t\t\t\tnull\n\t\t}\n\t\treturn this.tm.loadCurrent();\n\t}\n\tasync create(titleId, titlePrefix, name) {\n\t\tif (await this.tm.isExist(titleId)) {\n\t\t\treturn await this.tm.load(titleId);\n\t\t}\n\t\treturn await this.tm.createTitle(titleId, titlePrefix, name);\n\t}\n\tasync remove(titleId) {\n\t\tif (await this.tm.isExist(titleId)) {\n\t\t\treturn await this.removeExecute(titleId);\n\t\t} else {\n\t\t\treturn this.tm.loadCurrent();\n\t\t}\n\t}\n\tasync changeTtitle(titleId) {\n\t\treturn await this.tm.changeTitle(titleId);\n\t}\n\tasync update(titleId, name) {\n\t\tconst current = await this.tm.load(titleId);\n\t\tcurrent.name = name;\n\t\tawait this.tm.saveTitle(current);\n\t\treturn this.tm.loadCurrent();\n\t}\n}","import {TitleActionCreator} from '../action/titleActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {TitleProcessor} from '../processor/titleProcessor'\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nlet titleViewReducer = null;\nexport class TitleViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.tm = this.ms.tm;\n    this.em = this.ms.em;\n    this.tp = new TitleProcessor(this.em ,this.tm );\n    this.titleCreatAction = TitleActionCreator.creatAction();\n    this.titleRemoveAction = TitleActionCreator.creatRemoveAction();\n    this.titleLoadAction = TitleActionCreator.creatLoadAction();\n    this.titleChangection = TitleActionCreator.creatChangeAction();\n    this.titleUpdateAction = TitleActionCreator.creatUpdateAction();\n    this.titleClearAllAction = TitleActionCreator.creatClearAllAction();\n    this.atatch(this.titleCreatAction);\n    this.atatch(this.titleRemoveAction);\n    this.atatch(this.titleLoadAction);\n    this.atatch(this.titleChangection);\n    this.atatch(this.titleUpdateAction);\n    this.atatch(this.titleClearAllAction);\n    this.storeKey = TitleActionCreator.getStoreKey();\n    this.storeCurrentKey = TitleActionCreator.getStoreCurrentKey();\n    this.addInitializeKey(this.storeKey);\n    this.addInitializeKey(this.storeCurrentKey);\n  }\n  static register() {\n    if (!titleViewReducer) {\n      titleViewReducer = new TitleViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.titleCreatAction.type === action.type) {\n      store[this.storeCurrentKey] = await this.tp.create(action.data.titleId,action.data.titlePrefix,action.data.name);\n      store[this.storeKey] = await this.tp.loadAll();\n    } else if (this.titleRemoveAction.type === action.type) {\n      store[this.storeCurrentKey] = await this.tp.remove(action.data.titleId);\n      store[this.storeKey] = await this.tp.loadAll();\n    } else if (this.titleLoadAction.type === action.type) {\n      store[this.storeCurrentKey] = await this.tp.loadAll();\n      store[this.storeKey] = await this.tp.loadAll();\n    } else if (this.titleChangection.type === action.type) {\n      store[this.storeKey] = await this.tp.loadAll();\n      store[this.storeCurrentKey] = await this.tp.changeTtitle(action.data.titleId);\n    } else if (this.titleUpdateAction.type === action.type) {\n      store[this.storeKey] = await this.tp.loadAll();\n      store[this.storeCurrentKey] = await this.tp.update(action.data.titleId,action.data.name);\n    } else if (this.titleClearAllAction.type === action.type) {\n      store[this.storeKey] = await this.tp.clearAll();\n    }\n    return store;\n  }\n}\n","import {\n\tBaseView\n} from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { TitleViewReducer } from '../../../reduxy/reducer/titleViewReducer'\nimport { TitleActionCreator } from '../../../reduxy/action/titleActionCreator'\nimport { Dialog } from \"../dialog/dialog\";\nexport class StorageInitializer extends BaseView {\n\tconstructor() {\n\t\tsuper(\"StorageInitializer\", \"StorageInitializer\");\n\t\tthis.storeKey = TitleActionCreator.getStoreKey();\n\t\tthis.storeCurrentKey = TitleActionCreator.getStoreCurrentKey();\n\t}\n\n\trender(store, actionData) {\n\t\tconst name = div(\"\", [\"StorageInitializer\"], \"StorageInitializer\");\n\t\tconst button = div('', [\"StorageInitializerButton button\"], {\n\t\t\ton: {\n\t\t\t\tclick: this.onClearAll()\n\t\t\t}\n\t\t}, \"Init!\");\n\t\treturn div(\"\", [this.id + \"Frame\"], [name, button]);\n\t}\n\tasync onAfterAttach(store, data) {\n\t\tTitleViewReducer.register();\n\t\tconst action = TitleActionCreator.creatLoadAction(this);\n\t\tthis.dispatch(action);\n\t}\n\n\tasync onViewShow(store, actionData) {\n\t\tif (store[this.storeKey]) {\n\t\t\tconst { list, totalSize } = store[this.storeKey];\n\n\t\t} else if (store[this.storeCurrentKey]) {\n\t\t\talert('bbbbbb');\n\t\t}\n\t}\n\tonClearAll() {\n\t\treturn async (event) => {\n\t\t\tconst result = await Dialog.opneConfirm(\"onClearAll\", \"is Clear All Data? This Exection is Not recoverable. \");\n\t\t\tif (result) {\n\t\t\t\tconst actionReload = TitleActionCreator.creatClearAllAction(this, {});\n\t\t\t\tthis.dispatch(actionReload);\n\t\t\t\tevent.stopPropagation();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}","import vu from \"../../util/viewUtil\";\nimport {\n  BaseView\n} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\n\nimport {\n  StorageMeter\n} from '../parts/titleMng/storageMeter'\nimport {\n  TitleList\n} from '../parts/titleMng/titleList'\nimport {\n  TitleNewone\n} from '../parts/titleMng/titleNewone'\nimport {\n  StorageInitializer\n} from '../parts/titleMng/storageInitializer'\nexport class TitleMng extends BaseView {\n  constructor() {\n    super(\"TitleMng\", \"TitleMng\");\n    this.text = \"TitleMng\";\n    this.storageMeter = new StorageMeter(this);\n    this.titleList = new TitleList(this);\n    this.titleNewone = new TitleNewone(this);\n    this.storageInitializer = new StorageInitializer(this);\n  }\n  async onAfterAttach(store, data) {\n    await this.storageMeter.attach(this);\n    await this.titleList.attach(this);\n    await this.titleNewone.attach(this);\n    await this.storageInitializer.attach(this);\n  }\n  render() {\n    return div(this.id+\"Frame\", [\"TitleMng\"], [\n      div(\"\",['name'],'Title Manager'),\n      div(this.storageMeter.id),\n      div(this.titleList.id),\n      div(this.titleNewone.id),\n      div(this.storageInitializer.id)\n    ]);\n  }\n  // loadTitleList\n  // newTitle\n  // deleteTitle\n  // next Button\n}\n","import vu from \"../util/viewUtil\";\nimport { BaseView } from \"../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../util/reactive/base/vtags\";\nimport { FileUploadArea } from \"./content/fileUploadArea\";\nimport { TitleSettings } from \"./content/titleSettings\";\nimport { ExportArea } from \"./content/exportArea\";\nimport { FilesArea } from \"./content/filesArea\";\nimport { ProgressBar } from \"./parts/progress/progressBar\";\nimport { TitleMng } from \"./content/titleMng\";\nimport { Dialog } from \"./parts/dialog/dialog\";\nimport { MenuSelectActionCreator } from '../reduxy/action/menuSelectActionCreator'\nexport class Container extends BaseView {\n\tconstructor() {\n\t\tsuper(\"container\", \"main-container\");\n\t\tthis.fileUploadArea = new FileUploadArea();\n\t\tthis.titleSettings = new TitleSettings();\n\t\tthis.filesArea = new FilesArea();\n\t\tthis.exportArea = new ExportArea();\n\t\tthis.progressBar = new ProgressBar();\n\t\tthis.titleMng = new TitleMng();\n\t\tthis.dialog = new Dialog();\n\t\tthis.contentsScrollTops = [];\n\t\tthis.contentsScrollRanges = [];\n\t\tthis.contentsIdMap = {};\n\t}\n\n\tasync onAfterAttach(store, data) {\n\t\tawait this.progressBar.attach(this);\n\t\tawait this.dialog.attach(this);\n\t\tawait this.addScrollMap(this.titleSettings);\n\t\tawait this.addScrollMap(this.fileUploadArea);\n\t\tawait this.addScrollMap(this.filesArea);\n\t\tawait this.addScrollMap(this.exportArea);\n\t\tawait this.addScrollMap(this.titleMng);\n\t\tthis.buildFinish();\n\t\tthis.currentVnode.elm.childNodes[0].addEventListener('scroll', this.onScroll());\n\t\tthis.currentCheck();\n\t}\n\tasync addScrollMap(part) {\n\t\tawait part.attach(this);\n\t\tconst scrolltop = part.currentVnode.elm.getBoundingClientRect()\n\t\t\t.top;\n\t\tthis.contentsScrollTops.push(scrolltop);\n\t\tthis.contentsIdMap[scrolltop] = part.id;\n\t\tthis.timer = null;\n\t}\n\tbuildFinish() {\n\t\tconst len = this.contentsScrollTops.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst range = {\n\t\t\t\tcurrent: this.contentsScrollTops[i],\n\t\t\t\tnext: i === (len - 1) ?\n\t\t\t\t\t9999 : this.contentsScrollTops[i + 1]\n\t\t\t};\n\t\t\tthis.contentsScrollRanges.push(range);\n\t\t}\n\t}\n\trender() {\n\t\tconst newVnode = div('', ['scroll-container'], {\n\t\t\tstyle: {\n\t\t\t\tcolor: '#000'\n\t\t\t}\n\t\t}, [\n\t\t\tdiv(this.progressBar.id),\n\t\t\tdiv(this.dialog.id),\n\t\t\tdiv(this.titleSettings.id),\n\t\t\tdiv(this.fileUploadArea.id),\n\t\t\tdiv(this.filesArea.id),\n\t\t\tdiv(this.exportArea.id),\n\t\t\tdiv(this.titleMng.id)\n\t\t], \"container\");\n\t\t// console.log('container!render!!!!!!!!!!!')s\n\t\treturn newVnode;\n\t}\n\tonScroll() {\n\t\treturn (event) => {\n\t\t\tthis.currentCheck(event);\n\t\t}\n\t}\n\t// 現在地をチェックする\n\tcurrentCheck(event) {\n\t\tif (this.timer) {\n\t\t\tclearTimeout(this.timer);\n\t\t}\n\t\tif (!this.currentVnode) {\n\t\t\treturn;\n\t\t}\n\t\tthis.timer = setTimeout(() => {\n\t\t\t// 現在のスクロール位置を取得\n\t\t\tconst top = this.currentVnode.elm.getBoundingClientRect()\n\t\t\t\t.top + 120;\n\t\t\tconst scrolltop = this.currentVnode.elm.childNodes[0].scrollTop + top;\n\t\t\tconst len = this.contentsScrollRanges.length;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tconst range = this.contentsScrollRanges[i];\n\t\t\t\t// 現在のスクロール位置が、配列に格納した開始位置と終了位置の間にあるものを調べる\n\t\t\t\tif ((i === 0 || range.current < scrolltop) && (range.next + 0) > scrolltop) {\n\t\t\t\t\tconst id = this.contentsIdMap[range.current];\n\t\t\t\t\tconst action = MenuSelectActionCreator.creatSelectAction(this, { id: id });\n\t\t\t\t\tthis.dispatch(action);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t};\n\t\t}, 100)\n\t}\n}\n","import vu from \"../util/viewUtil\";\nimport { BaseView } from \"../util/reactive/baseView\";\nimport { a, div, li, ul, img, span, input, label } from \"../util/reactive/base/vtags\";\nexport class Footer extends BaseView {\n\tconstructor() {\n\t\tsuper(\"footer\", \"footer\");\n\t\tthis.copyright = \"copyright:ryunosinfx - Licenced MIT\";\n\t}\n\trender() {\n\t\tconst newVnode = div({\n\t\t\tstyle: {\n\t\t\t\tcolor: '#000'\n\t\t\t}\n\t\t}, [div(\"copyright\", [\"copyright\"], this.copyright)]);\n\t\treturn newVnode;\n\t}\n}","import {SplashActionCreator} from '../action/splashActionCreator'\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nlet splashViewReducer = null;\nexport class SplashViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.splashAddAction = SplashActionCreator.creatAddAction();\n    this.splashRemoveAction = SplashActionCreator.creatRemoveAction();\n    this.atatch(this.splashAddAction);\n    this.atatch(this.splashRemoveAction);\n    this.storeKey = SplashActionCreator.getStoreKey();\n    this.addInitializeKey(this.storeKey);\n  }\n  static register() {\n    if (!splashViewReducer) {\n      splashViewReducer = new SplashViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.splashAddAction.type === action.type) {\n      store[this.storeKey] = this.createSplash(true, 0, false, action.data.msg, action.data.title);\n    } else if (this.splashRemoveAction.type === action.type) {\n      store[this.storeKey] = this.createSplash(false, 0, false);\n    }\n    return store;\n  }\n  createSplash(isVisible, progress, isComple, msg, title) {\n    return {isVisible: isVisible, progress: progress, msg: msg, isComple: isComple, title: title}\n  }\n}\n","import vu from \"../../../util/viewUtil\";\nimport { BaseView } from \"../../../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../../../util/reactive/base/vtags\";\nimport { SplashActionCreator } from '../../../reduxy/action/splashActionCreator'\nimport { SplashViewReducer } from '../../../reduxy/reducer/splashViewReducer'\nexport class Splash extends BaseView {\n\tconstructor() {\n\t\tsuper(\"Splash\", [\"Splash\", BaseView.ModalWindowClass()], true);\n\t\tthis.splashAddAction = SplashActionCreator.creatAddAction();\n\t\tthis.splashRemoveAction = SplashActionCreator.creatRemoveAction();\n\t\tthis.storeKey = SplashActionCreator.getStoreKey();\n\t\tthis.titleText = this.ms.getAppTitle();\n\t\tthis.Version = this.ms.getAppVersion();\n\t\tthis.message = \"Now loading...\";\n\t}\n\tasync onAfterAttach(store, data) {\n\t\tSplashViewReducer.register();\n\t}\n\trender() {\n\t\tconst appTitle = div('', [\"appTitle\"], [div('', [\"text\"], this.titleText)]);\n\t\tconst appVerion = div('', [\"appVerion\"], [div('', [\"text\"], this.Version)]);\n\t\tconst loadingspans = [];\n\t\tconst chars = this.message.split(\"\");\n\t\tfor (let char of chars) {\n\t\t\tloadingspans.push(span('', [], char));\n\t\t}\n\t\tconst message = div('', [\"message\"], [div('', [this.id + \"MsgText\", \"loader\"], loadingspans)]);\n\n\t\tconst splashTitle = div('', [\"splashTitle\"], [appTitle, appVerion, message]);\n\t\treturn div(this.id, [\"Splash\", BaseView.ModalWindowClass()], [splashTitle]);\n\t}\n\tasync onViewShow(store, actionData) {\n\t\tconst data = store[this.storeKey];\n\t\tif (data) {\n\t\t\tif (data.isVisible === false) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t\t//alert(\"OK\");\n\t\t}\n\t}\n}","import vu from \"../util/viewUtil\";\nimport { Header } from \"./header\";\nimport { Menu } from \"./menu\";\nimport { Container } from \"./container\";\nimport { Footer } from \"./footer\";\nimport { BaseView } from \"../util/reactive/baseView\";\nimport {\n\ta,\n\tdiv,\n\tli,\n\tul,\n\timg,\n\tspan,\n\tinput,\n\tlabel\n} from \"../util/reactive/base/vtags\";\nimport { Splash } from \"./parts/splash/splash\";\nexport class MainFrame extends BaseView {\n\tconstructor(ms) {\n\t\tsuper(\"frame\", \"frame\");\n\t\tthis.ms = ms;\n\t\tBaseView.setMainService(ms);\n\t\tthis.initialize();\n\t}\n\tinitialize() {\n\t\tthis.header = new Header(this.ms);\n\t\tthis.footer = new Footer();\n\t\tthis.container = new Container();\n\t\tthis.menu = new Menu();\n\t\tthis.baseFrame = null;\n\t\tthis.view = '';\n\t\tthis.splash = new Splash();\n\t\tthis.initialPatch();\n\t}\n\tasync onViewShow(store, data) {\n\t\tthis.header.attach(this, '#header');\n\t\tthis.menu.attach(this, '#menu');\n\t\tthis.container.attach(this, '#container');\n\t\tthis.footer.attach(this, '#footer');\n\t\tthis.splash.attach(this);\n\t}\n\trender(titleText) {\n\t\tlet newVnode = div('frame', ['frame'], {}, [\n\t\t\tdiv('header', {\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: '#000'\n\t\t\t\t}\n\t\t\t}, 'hellow!!'),\n\t\t\tdiv('menu', {\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: '#000'\n\t\t\t\t}\n\t\t\t}, 'menu!!'),\n\t\t\tdiv('container', {\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: '#000'\n\t\t\t\t}\n\t\t\t}, [div('content', {\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: '#000'\n\t\t\t\t}\n\t\t\t}, 'content!!')], 'container!!'),\n\t\t\tdiv('footer', {\n\t\t\t\tstyle: {\n\t\t\t\t\tcolor: '#000'\n\t\t\t\t}\n\t\t\t}, 'footer!!?'),\n\t\t\tdiv(this.splash.id)\n\t\t]);\n\t\treturn newVnode;\n\t}\n}","import css from \"../index.css\";\nimport { MainFrame } from \"./view/mainFrame\"\nimport { MainService } from \"./service/mainService\"\nconst appTitle = \"CopiBon\";\nconst appVersion = \"v0.0.9alpha\";\nexport default class CopiBonService {\n\tconstructor() {\n\t\tthis.mainService = MainService.getInstance();\n\t}\n\tasync init() {\n\t\tawait this.mainService.init(appTitle, appVersion);\n\t\tthis.mf = new MainFrame(this.mainService);\n\t\t//this.mf.initialize(title);\n\t\t///\n\t\t// const sumModule = await import (\"./sum.wasm\");\n\t\t// console.log(sumModule.sum(22, 2200));\n\t}\n\tstatic main() {\n\t\tconst self = new CopiBonService();\n\t\tself.init();\n\t}\n}\nCopiBonService.main();","export function vnode(sel, data, children, text, elm) {\n    var key = data === undefined ? undefined : data.key;\n    return { sel: sel, data: data, children: children,\n        text: text, elm: elm, key: key };\n}\nexport default vnode;\n//# sourceMappingURL=vnode.js.map","export var array = Array.isArray;\nexport function primitive(s) {\n    return typeof s === 'string' || typeof s === 'number';\n}\n//# sourceMappingURL=is.js.map","function createElement(tagName) {\n    return document.createElement(tagName);\n}\nfunction createElementNS(namespaceURI, qualifiedName) {\n    return document.createElementNS(namespaceURI, qualifiedName);\n}\nfunction createTextNode(text) {\n    return document.createTextNode(text);\n}\nfunction createComment(text) {\n    return document.createComment(text);\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n    parentNode.insertBefore(newNode, referenceNode);\n}\nfunction removeChild(node, child) {\n    node.removeChild(child);\n}\nfunction appendChild(node, child) {\n    node.appendChild(child);\n}\nfunction parentNode(node) {\n    return node.parentNode;\n}\nfunction nextSibling(node) {\n    return node.nextSibling;\n}\nfunction tagName(elm) {\n    return elm.tagName;\n}\nfunction setTextContent(node, text) {\n    node.textContent = text;\n}\nfunction getTextContent(node) {\n    return node.textContent;\n}\nfunction isElement(node) {\n    return node.nodeType === 1;\n}\nfunction isText(node) {\n    return node.nodeType === 3;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nexport var htmlDomApi = {\n    createElement: createElement,\n    createElementNS: createElementNS,\n    createTextNode: createTextNode,\n    createComment: createComment,\n    insertBefore: insertBefore,\n    removeChild: removeChild,\n    appendChild: appendChild,\n    parentNode: parentNode,\n    nextSibling: nextSibling,\n    tagName: tagName,\n    setTextContent: setTextContent,\n    getTextContent: getTextContent,\n    isElement: isElement,\n    isText: isText,\n    isComment: isComment,\n};\nexport default htmlDomApi;\n//# sourceMappingURL=htmldomapi.js.map","import { vnode } from './vnode';\nimport * as is from './is';\nfunction addNS(data, children, sel) {\n    data.ns = 'http://www.w3.org/2000/svg';\n    if (sel !== 'foreignObject' && children !== undefined) {\n        for (var i = 0; i < children.length; ++i) {\n            var childData = children[i].data;\n            if (childData !== undefined) {\n                addNS(childData, children[i].children, children[i].sel);\n            }\n        }\n    }\n}\nexport function h(sel, b, c) {\n    var data = {}, children, text, i;\n    if (c !== undefined) {\n        data = b;\n        if (is.array(c)) {\n            children = c;\n        }\n        else if (is.primitive(c)) {\n            text = c;\n        }\n        else if (c && c.sel) {\n            children = [c];\n        }\n    }\n    else if (b !== undefined) {\n        if (is.array(b)) {\n            children = b;\n        }\n        else if (is.primitive(b)) {\n            text = b;\n        }\n        else if (b && b.sel) {\n            children = [b];\n        }\n        else {\n            data = b;\n        }\n    }\n    if (children !== undefined) {\n        for (i = 0; i < children.length; ++i) {\n            if (is.primitive(children[i]))\n                children[i] = vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&\n        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {\n        addNS(data, children, sel);\n    }\n    return vnode(sel, data, children, text, undefined);\n}\n;\nexport default h;\n//# sourceMappingURL=h.js.map","import { h } from './h';\nfunction copyToThunk(vnode, thunk) {\n    thunk.elm = vnode.elm;\n    vnode.data.fn = thunk.data.fn;\n    vnode.data.args = thunk.data.args;\n    thunk.data = vnode.data;\n    thunk.children = vnode.children;\n    thunk.text = vnode.text;\n    thunk.elm = vnode.elm;\n}\nfunction init(thunk) {\n    var cur = thunk.data;\n    var vnode = cur.fn.apply(undefined, cur.args);\n    copyToThunk(vnode, thunk);\n}\nfunction prepatch(oldVnode, thunk) {\n    var i, old = oldVnode.data, cur = thunk.data;\n    var oldArgs = old.args, args = cur.args;\n    if (old.fn !== cur.fn || oldArgs.length !== args.length) {\n        copyToThunk(cur.fn.apply(undefined, args), thunk);\n        return;\n    }\n    for (i = 0; i < args.length; ++i) {\n        if (oldArgs[i] !== args[i]) {\n            copyToThunk(cur.fn.apply(undefined, args), thunk);\n            return;\n        }\n    }\n    copyToThunk(oldVnode, thunk);\n}\nexport var thunk = function thunk(sel, key, fn, args) {\n    if (args === undefined) {\n        args = fn;\n        fn = key;\n        key = undefined;\n    }\n    return h(sel, {\n        key: key,\n        hook: { init: init, prepatch: prepatch },\n        fn: fn,\n        args: args\n    });\n};\nexport default thunk;\n//# sourceMappingURL=thunk.js.map","import vnode from './vnode';\nimport * as is from './is';\nimport htmlDomApi from './htmldomapi';\nfunction isUndef(s) { return s === undefined; }\nfunction isDef(s) { return s !== undefined; }\nvar emptyNode = vnode('', {}, [], undefined, undefined);\nfunction sameVnode(vnode1, vnode2) {\n    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\nfunction isVnode(vnode) {\n    return vnode.sel !== undefined;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    var i, map = {}, key, ch;\n    for (i = beginIdx; i <= endIdx; ++i) {\n        ch = children[i];\n        if (ch != null) {\n            key = ch.key;\n            if (key !== undefined)\n                map[key] = i;\n        }\n    }\n    return map;\n}\nvar hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];\nexport { h } from './h';\nexport { thunk } from './thunk';\nexport function init(modules, domApi) {\n    var i, j, cbs = {};\n    var api = domApi !== undefined ? domApi : htmlDomApi;\n    for (i = 0; i < hooks.length; ++i) {\n        cbs[hooks[i]] = [];\n        for (j = 0; j < modules.length; ++j) {\n            var hook = modules[j][hooks[i]];\n            if (hook !== undefined) {\n                cbs[hooks[i]].push(hook);\n            }\n        }\n    }\n    function emptyNodeAt(elm) {\n        var id = elm.id ? '#' + elm.id : '';\n        var c = elm.className ? '.' + elm.className.split(' ').join('.') : '';\n        return vnode(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);\n    }\n    function createRmCb(childElm, listeners) {\n        return function rmCb() {\n            if (--listeners === 0) {\n                var parent_1 = api.parentNode(childElm);\n                api.removeChild(parent_1, childElm);\n            }\n        };\n    }\n    function createElm(vnode, insertedVnodeQueue) {\n        var i, data = vnode.data;\n        if (data !== undefined) {\n            if (isDef(i = data.hook) && isDef(i = i.init)) {\n                i(vnode);\n                data = vnode.data;\n            }\n        }\n        var children = vnode.children, sel = vnode.sel;\n        if (sel === '!') {\n            if (isUndef(vnode.text)) {\n                vnode.text = '';\n            }\n            vnode.elm = api.createComment(vnode.text);\n        }\n        else if (sel !== undefined) {\n            // Parse selector\n            var hashIdx = sel.indexOf('#');\n            var dotIdx = sel.indexOf('.', hashIdx);\n            var hash = hashIdx > 0 ? hashIdx : sel.length;\n            var dot = dotIdx > 0 ? dotIdx : sel.length;\n            var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;\n            var elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)\n                : api.createElement(tag);\n            if (hash < dot)\n                elm.setAttribute('id', sel.slice(hash + 1, dot));\n            if (dotIdx > 0)\n                elm.setAttribute('class', sel.slice(dot + 1).replace(/\\./g, ' '));\n            for (i = 0; i < cbs.create.length; ++i)\n                cbs.create[i](emptyNode, vnode);\n            if (is.array(children)) {\n                for (i = 0; i < children.length; ++i) {\n                    var ch = children[i];\n                    if (ch != null) {\n                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));\n                    }\n                }\n            }\n            else if (is.primitive(vnode.text)) {\n                api.appendChild(elm, api.createTextNode(vnode.text));\n            }\n            i = vnode.data.hook; // Reuse variable\n            if (isDef(i)) {\n                if (i.create)\n                    i.create(emptyNode, vnode);\n                if (i.insert)\n                    insertedVnodeQueue.push(vnode);\n            }\n        }\n        else {\n            vnode.elm = api.createTextNode(vnode.text);\n        }\n        return vnode.elm;\n    }\n    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            var ch = vnodes[startIdx];\n            if (ch != null) {\n                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);\n            }\n        }\n    }\n    function invokeDestroyHook(vnode) {\n        var i, j, data = vnode.data;\n        if (data !== undefined) {\n            if (isDef(i = data.hook) && isDef(i = i.destroy))\n                i(vnode);\n            for (i = 0; i < cbs.destroy.length; ++i)\n                cbs.destroy[i](vnode);\n            if (vnode.children !== undefined) {\n                for (j = 0; j < vnode.children.length; ++j) {\n                    i = vnode.children[j];\n                    if (i != null && typeof i !== \"string\") {\n                        invokeDestroyHook(i);\n                    }\n                }\n            }\n        }\n    }\n    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            var i_1 = void 0, listeners = void 0, rm = void 0, ch = vnodes[startIdx];\n            if (ch != null) {\n                if (isDef(ch.sel)) {\n                    invokeDestroyHook(ch);\n                    listeners = cbs.remove.length + 1;\n                    rm = createRmCb(ch.elm, listeners);\n                    for (i_1 = 0; i_1 < cbs.remove.length; ++i_1)\n                        cbs.remove[i_1](ch, rm);\n                    if (isDef(i_1 = ch.data) && isDef(i_1 = i_1.hook) && isDef(i_1 = i_1.remove)) {\n                        i_1(ch, rm);\n                    }\n                    else {\n                        rm();\n                    }\n                }\n                else {\n                    api.removeChild(parentElm, ch.elm);\n                }\n            }\n        }\n    }\n    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n        var oldStartIdx = 0, newStartIdx = 0;\n        var oldEndIdx = oldCh.length - 1;\n        var oldStartVnode = oldCh[0];\n        var oldEndVnode = oldCh[oldEndIdx];\n        var newEndIdx = newCh.length - 1;\n        var newStartVnode = newCh[0];\n        var newEndVnode = newCh[newEndIdx];\n        var oldKeyToIdx;\n        var idxInOld;\n        var elmToMove;\n        var before;\n        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n            if (oldStartVnode == null) {\n                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n            }\n            else if (oldEndVnode == null) {\n                oldEndVnode = oldCh[--oldEndIdx];\n            }\n            else if (newStartVnode == null) {\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (newEndVnode == null) {\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newStartVnode)) {\n                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n                oldStartVnode = oldCh[++oldStartIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (sameVnode(oldEndVnode, newEndVnode)) {\n                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newEndVnode)) {\n                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n                oldStartVnode = oldCh[++oldStartIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldEndVnode, newStartVnode)) {\n                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                if (oldKeyToIdx === undefined) {\n                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n                }\n                idxInOld = oldKeyToIdx[newStartVnode.key];\n                if (isUndef(idxInOld)) {\n                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    newStartVnode = newCh[++newStartIdx];\n                }\n                else {\n                    elmToMove = oldCh[idxInOld];\n                    if (elmToMove.sel !== newStartVnode.sel) {\n                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    }\n                    else {\n                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n                        oldCh[idxInOld] = undefined;\n                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n                    }\n                    newStartVnode = newCh[++newStartIdx];\n                }\n            }\n        }\n        if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n            if (oldStartIdx > oldEndIdx) {\n                before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n                addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n            }\n            else {\n                removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n            }\n        }\n    }\n    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\n        var i, hook;\n        if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {\n            i(oldVnode, vnode);\n        }\n        var elm = vnode.elm = oldVnode.elm;\n        var oldCh = oldVnode.children;\n        var ch = vnode.children;\n        if (oldVnode === vnode)\n            return;\n        if (vnode.data !== undefined) {\n            for (i = 0; i < cbs.update.length; ++i)\n                cbs.update[i](oldVnode, vnode);\n            i = vnode.data.hook;\n            if (isDef(i) && isDef(i = i.update))\n                i(oldVnode, vnode);\n        }\n        if (isUndef(vnode.text)) {\n            if (isDef(oldCh) && isDef(ch)) {\n                if (oldCh !== ch)\n                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n            }\n            else if (isDef(ch)) {\n                if (isDef(oldVnode.text))\n                    api.setTextContent(elm, '');\n                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n            }\n            else if (isDef(oldCh)) {\n                removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n            }\n            else if (isDef(oldVnode.text)) {\n                api.setTextContent(elm, '');\n            }\n        }\n        else if (oldVnode.text !== vnode.text) {\n            api.setTextContent(elm, vnode.text);\n        }\n        if (isDef(hook) && isDef(i = hook.postpatch)) {\n            i(oldVnode, vnode);\n        }\n    }\n    return function patch(oldVnode, vnode) {\n        var i, elm, parent;\n        var insertedVnodeQueue = [];\n        for (i = 0; i < cbs.pre.length; ++i)\n            cbs.pre[i]();\n        if (!isVnode(oldVnode)) {\n            oldVnode = emptyNodeAt(oldVnode);\n        }\n        if (sameVnode(oldVnode, vnode)) {\n            patchVnode(oldVnode, vnode, insertedVnodeQueue);\n        }\n        else {\n            elm = oldVnode.elm;\n            parent = api.parentNode(elm);\n            createElm(vnode, insertedVnodeQueue);\n            if (parent !== null) {\n                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));\n                removeVnodes(parent, [oldVnode], 0, 0);\n            }\n        }\n        for (i = 0; i < insertedVnodeQueue.length; ++i) {\n            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);\n        }\n        for (i = 0; i < cbs.post.length; ++i)\n            cbs.post[i]();\n        return vnode;\n    };\n}\n//# sourceMappingURL=snabbdom.js.map"],"sourceRoot":""}