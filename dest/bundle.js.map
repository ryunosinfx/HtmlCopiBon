{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/thread/thread.js","webpack:///./node_modules/snabbdom/vnode.js","webpack:///./node_modules/snabbdom/tovnode.js","webpack:///./node_modules/snabbdom/h.js","webpack:///./node_modules/snabbdom/modules/eventlisteners.js","webpack:///./node_modules/snabbdom/modules/dataset.js","webpack:///./node_modules/snabbdom/modules/attributes.js","webpack:///./node_modules/snabbdom/modules/props.js","webpack:///./node_modules/snabbdom/modules/style.js","webpack:///./node_modules/snabbdom/modules/class.js","webpack:///./node_modules/snabbdom/es/vnode.js","webpack:///./node_modules/snabbdom/es/is.js","webpack:///./node_modules/snabbdom/es/htmldomapi.js","webpack:///./node_modules/snabbdom/es/h.js","webpack:///./node_modules/snabbdom/es/thunk.js","webpack:///./node_modules/snabbdom/es/snabbdom.js","webpack:///./src/util/viewUtil.js","webpack:///./src/util/reactive/base/preLoader.js","webpack:///./src/util/objectUtil.js","webpack:///./src/util/reactive/elementSelector.js","webpack:///./src/util/reactive/actionCreator.js","webpack:///./src/util/reactive/viewAttachQueue.js","webpack:///./src/util/reactive/store.js","webpack:///./src/util/reactive/actionDispatcherImple.js","webpack:///./src/util/reactive/actionDispatcher.js","webpack:///./src/util/reactive/base/vtags.js","webpack:///./src/util/reactive/viewBaseActions.js","webpack:///./src/util/reactive/baseReducer.js","webpack:///./src/util/reactive/viewBaseReducer.js","webpack:///./src/util/reactive/baseView.js","webpack:///./src/view/header.js","webpack:///./src/view/menu.js","webpack:///./src/reduxy/action/progressActionCreator.js","webpack:///./src/util/idb/constant.js","webpack:///./src/util/idb/idbUtil.js","webpack:///./src/util/idb/indexeddbHelper.js","webpack:///./src/util/idb/idbRapper.js","webpack:///./src/service/entity/storageService.js","webpack:///./src/service/entity/baseEntity.js","webpack:///./src/service/entity/binary.js","webpack:///./src/service/entity/primaryKey.js","webpack:///./src/util/binaryConverter.js","webpack:///./src/service/entity/primaryKeyAutoIncrementService.js","webpack:///./src/service/entity/entityManagerImpl.js","webpack:///./src/service/entity/entityManager.js","webpack:///./src/service/viewPartsLoader.js","webpack:///./src/entity/title.js","webpack:///./src/entity/images.js","webpack:///./src/entity/thumbnales.js","webpack:///./src/entity/series.js","webpack:///./src/util/sorter.js","webpack:///./src/service/fileUploadExecuter.js","webpack:///./src/service/manager/titleManager.js","webpack:///./src/service/manager/binaryManager.js","webpack:///./src/entity/pages.js","webpack:///./src/service/manager/pagesManager.js","webpack:///./src/entity/settings.js","webpack:///./src/service/manager/settingsManager.js","webpack:///./src/entity/outputProfiles.js","webpack:///./src/service/manager/outputProfilesManager.js","webpack:///./src/service/manager/imageManager.js","webpack:///./src/service/manager/thumbnailManager.js","webpack:///./src/entity/pdfs.js","webpack:///./src/util/imageProcessor.js","webpack:///./src/service/imageProcessService.js","webpack:///./src/service/mainService.js","webpack:///./src/service/mainServiceImpl.js","webpack:///./src/reduxy/reducer/progressViewReducer.js","webpack:///./src/view/parts/progressBar.js","webpack:///./src/eventHandler/baseEventHandler.js","webpack:///./src/reduxy/action/imageActionCreator.js","webpack:///./src/reduxy/action/pageActionCreator.js","webpack:///./src/reduxy/processor/pageProcessor.js","webpack:///./src/reduxy/reducer/imageViewReducer.js","webpack:///./src/eventHandler/fileUploader.js","webpack:///./src/view/content/fileUploadArea.js","webpack:///./src/util/timeUtil.js","webpack:///./src/reduxy/action/settingActionCreator.js","webpack:///./src/reduxy/reducer/settingViewReducer.js","webpack:///./src/settings/exportSettings.js","webpack:///./src/view/content/titleSettings.js","webpack:///./src/view/content/exportButton.js","webpack:///./src/view/parts/imageDetail.js","webpack:///./src/view/parts/pageImage.js","webpack:///./src/view/parts/pageImages.js","webpack:///./src/view/parts/thumbnail.js","webpack:///./src/view/parts/thumbnails.js","webpack:///./src/reduxy/reducer/pagesViewReducer.js","webpack:///./src/view/content/filesArea.js","webpack:///./src/view/container.js","webpack:///./src/view/footer.js","webpack:///./src/view/mainFrame.js","webpack:///./src/main.js","webpack:///./node_modules/snabbdom/htmldomapi.js","webpack:///./node_modules/snabbdom/is.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./index.css","webpack:///./index.css?bcd2"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","Thread","defaultWorker","[object Object]","workerJsPath","this","worker","Worker","dataMap","Promise","resolve","reject","transObject","tranceArray","buildPostObj","postMessage","onmessage","event","data","onerror","Array","isArray","count","dataList","buffer","push","byteLength","keys","length","terminate","vnode","sel","children","text","elm","undefined","default","vnode_1","htmldomapi_1","toVNode","node","domApi","api","isElement","name_1","id","cn","getAttribute","split","join","tagName","toLowerCase","attrs","elmAttrs","attributes","elmChildren","childNodes","nodeName","nodeValue","isText","getTextContent","isComment","is","h","b","array","primitive","addNS","childData","handleEvent","type","on","invokeHandler","handler","args","slice","apply","updateEventListeners","oldVnode","oldOn","oldListener","listener","oldElm","removeEventListener","addEventListener","eventListenersModule","update","destroy","CAPS_REGEX","updateDataset","oldDataset","dataset","removeAttribute","replace","setAttribute","datasetModule","xlinkNS","xmlNS","colonChar","xChar","updateAttrs","oldAttrs","cur","charCodeAt","setAttributeNS","attributesModule","updateProps","oldProps","props","propsModule","raf","window","requestAnimationFrame","setTimeout","nextFrame","fn","setNextFrame","obj","prop","val","updateStyle","oldStyle","style","oldHasDel","removeProperty","delayed","name2","setProperty","styleModule","remove","rm","amount","applied","getComputedStyle","indexOf","ev","target","updateClass","oldClass","class","klass","classList","classModule","vnode_vnode","es_vnode","htmldomapi","createElement","document","createElementNS","namespaceURI","qualifiedName","createTextNode","createComment","insertBefore","parentNode","newNode","referenceNode","removeChild","child","appendChild","nextSibling","setTextContent","textContent","nodeType","copyToThunk","thunk","init","prepatch","old","oldArgs","thunk_thunk","hook","isUndef","isDef","emptyNode","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","ch","map","hooks","snabbdom_init","j","cbs","createRmCb","childElm","listeners","parent_1","createElm","insertedVnodeQueue","hashIdx","dotIdx","hash","dot","tag","Math","min","insert","addVnodes","parentElm","before","vnodes","startIdx","invokeDestroyHook","removeVnodes","i_1","patchVnode","oldCh","newCh","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","updateChildren","postpatch","parent","pre","isVnode","className","emptyNodeAt","post","ViewUtil","clasｓName","ce","forId","eventType","eventHandler","hasChildNodes","getElementsByTagName","documet","getElementById","firstChild","styleObj","isBubbling","isCancelable","createEvent","initEvent","dispatchEvent","snabbdom","console","log","preLoader_h","h_default","a","patch","tovnode_default","class_default","style_default","props_default","attributes_default","dataset_default","eventlisteners_default","baseClasses","ObjectUtil","baseClassesList","baseClass","channel","MessageChannel","inPort","port1","outPort","port2","JSON","parse","stringify","newObj","output","baseType","simpleDeepClone","e","retObj","childTarget","deepVnodeClone","elementSelector_ElementSelector","selectorMap","Map","result","getElements","selector","isValidNode","cloneNode","prePatch","index","indexA","parentMap","nodes","isShouldPatch","newOne","isEnd","parentVnode","selectors","nextSelector","firstOne","shift","isMatch","set","substring","isNextEnd","concat","tokens","selectorId","classes","token","mapA","getSelectorMap","mapB","classesA","classesB","classB","isMatched","classA","actionCreator_baseActions","ActionCreator","storeKey","targetView","addData","parentView","newView","createGoOtherViewAction","view","avtiveViews","activeViewList","ViewAttachQueue","queue","lastTree","parentId","currentId","resultParent","findActivViews","primaryView","currentTree","loadAllActiveViews","currentView","nextView","nextViewTree","resultCurrent","nextId","activeViewsTree","callback","retView","next","viewId","current","resultList","currentLength","pop","mainHolder","mainKey","store_Store","service","newKey","store","has","clonedStore","viewAttachQueue","actionMap","actionDispatcherImple_ActionDispatcherImple","updateMap","updateQueue","action","reducer","reducers","includes","indexof","splice","getStore","preReduce","catch","reduce","postReduce","setStore","isOrverride","views","onViewHide","callUpdate","onViewHidden","actionData","activViews","getActiveViewList","activeView","promise","updateReactiveTheTargetView","then","alert","updateReactive","actionDispatcher_ActionDispatcher","setProps","inputs","newData","vtags","classNames","id2","childrenArray","currentText","currentData","toString","childNode","div","span","img","alt","src","vtags_file","input","vtags_option","createSelectVnode","optionsData","selectedValue","suffix","options","optionSelected","selected","optionNode","vtags_select","viewBaseActions_ViewBaseActions","createShowViewAction","baseReducer_BaseReducer","isBaseUse","baseActions","getBaseActions","atatch","add","delete","super","getGotoAnotherViewAction","getShowViewAction","isEquals","baseView_viewAttachQueue","nodeFrame","rootVnode","ms","baseView_BaseView","isNotRenderWrap","dispatcher","es","onViewLoad","currentVnode","onViewLoaded","updateReactiveCallCount","updateReactiveCallTimer","updateCount","newVnode","patchFromOtherVnode","innerHTML","render","currentRootNode","currentSelector","currentNewNode","Date","now","onPreViewBuild","renderWrap","onViewShow","onAfterAttachWrap","onViewShown","clearTimeout","async","taregetSelecotor","isAttached","activeViewTree","addActiveView","creatAttachAction","dispatch","elements","onAfterAttach","header_Header","titleText","color","menu_Menu","menuButtonClass","idOfStep0","idOfStep1","idOfStep2","idOfStep3","idOfStep4","createButtons","menuTabs","click","onClick","progressActionCreator_ProgressActionCreator","createBaseAction","constant","dbName","ua","navigator","userAgent","domain","location","IdbUtil","table","tabels","condetions","condition","isMutch","start","end","isNotEqualStart","isNotEqualEnd","IDBKeyRange","bound","upperBound","KeyRange","lowerBound","only","key1","key2","key3","key4","key5","MODE_R","MODE_RW","indexeddbHelper_IndexeddbHelper","indexedDB","keyPathMap","newVersion","request","open","onsuccess","onupgradeneeded","onabort","db","tableName","tables","transaction","oncomplete","close","objectStore","stack","message","Error","keyPathName","getOpenDB","throwNewError","getObjectStore","keyPathNameCurrent","keyPath","version","payload","range","_selectAll","direction","_selectAllExecute","isGetFirstOne","list","req","openCursor","cursor","continue","_selectByKey","_selectByKeyOnTran","_selectFirstOne","getKeyPathByMap","_insertUpdate","currentTables","_insertExecute","_updateExecute","objectStoreRequest","put","_deleteWithRange","_deleteWithRangeExecute","or","_delete","keyPathValue","_deleteOnTran","_truncate","_truncateExecute","clear","names","objectStoreNames","isExist","isAutoIncrement","_createStore","isExistsObjectStore","getCurrentVersion","createObjectStore","_dropStore","deleteObjectStore","idbRapper_IdbRapper","objectStoreName","keypathName","idbh","reslve","firstPromise","record","pk","saveData","dataObj","storeData","recordAsDefaultLoad","loadData","getObjectStoreNames","USER_ID","idbAccessors","storageService_StorageService","entityClass","targetObj","idbAccessor","entityName","getEntityName","userId","storeNameKey","getStoreNameKey","createStoreByName","createStore","toObj","saveDataDefault","loadAllData","retList","row","cloned","getEntity","load","deleteData","baseEntity_BaseEntity","entitiyName","refs","pkValue","deepClone","singleDeepCloneWithoutFuncs","exclude","binary_Binary","arrayBuffer","_ab","createDate","updateDate","ab","Uint8Array","DELIMITER","PrimaryKey","entity","number","isPrimaryKey","getPk","getPrimaryKey","BinaryConverter","binaryString","binaryString2Uint8Array","uint8Array2BinaryString","btoa","arrayBuffer2BinaryString","rawLength","ArrayBuffer","u8a","String","fromCharCode","base64","atob","binaryString2ArrayBuffer","dataURI","uintArray","Uint16Array","Uint32Array","Blob","blob","reader","FileReader","onload","eve","error","asArrayBuffer","readAsArrayBuffer","asBinaryString","readAsBinaryString","asDataURL","readAsDataURL","asText","readAsText","primaryKeyAutoIncrementService_USER_ID","primaryKeyAutoIncrementService_PK_INCREMENT_STORE","PK_ROW","primaryKeyAutoIncrementService_PrimaryKeyAutoIncrementService","userid","ss","rowKey","nextCountAB","countUpUint32","save","arrayBuffer2base64","currentCount","dataview","DataView","getUint32","setInt32","entityManagerImpl_USER_ID","BINALY_PK_ROW","entityManagerImpl_binaryEntity","entityManagerImpl_EntityManagerImpl","entityManager","pkais","em","saveExecute","isWithBinary","currentPK","assemblePK","acquirePKNo","saveArrayBufferCols","setPk","savedData","column","item","saveArrayBufferData","newPK","getBinaryPK","Binary","saveWithBinary","newNumber","loadAll","entityManager_USER_ID","entityManager_EntityManager","entities","initParEntity","addBaseCLassese","truePk","viewPartsLoader_ViewPartsLoader","pb","progressBar_ProgressBar","title_Title","titleId","titlePrefix","prefix","no","date","pageNo","setting","series","pageNum","images","pages","outputsPars","listing","images_Images","binary","thumbnail","modifyDate","width","height","thumbnales_Thumbnales","series_Series","Sorter","colName","func","execute","isDESC","sort","orders","objA","objB","order","thinninged","element","fileUploadExecuter_FileUploadExecuter","actionDispatcher","createStandAlone","mainService_MainService","getInstance","file","read","errorHandler","onprogress","updateProgress","onloadstart","onLoadStart","abort","creatRemoveAction","code","NOT_FOUND_ERR","NOT_READABLE_ERR","ABORT_ERR","percentLoaded","round","loaded","total","creatUpdateAction","progress","creatCompleatAction","creatAddAction","defaultTitle","defaultName","defaultTitlePrefix","titleManager_TitleManager","ip","im","tbm","sm","currentTitle","title","Title","createTitle","createDefault","newTitleId","loadTitle","thinningNullData","image","titelId","titelPrefix","files","loadCurrent","iamageEntitis","imagePk","imageEntity","saveImageFile","saveTitle","imageEntityPk","settingEntityLoad","loadByPk","loadThumbnails","newList","updateImagesListing","binaryManager_BinaryManager","binaryPk","binEntity","pages_Pages","previewThumbnail","outputImage","baseImage","pagesManager_PagesManager","tm","pagePk","pageEntity","thumbnailPk","thumbnailEntity","parentPk","Pages","pageEntitis","fromPk","toPk","targetFrom","targetTo","previewThumbnailFrom","previewThumbnailTo","outputImageFrom","outputImageTo","thumbnailFrom","thumbnailTo","baseImageFrom","baseImageTo","page","settings_Settings","startPage","pageDelection","outputProfile","settingsManager_SettingsManager","opm","titilePk","Settings","settings","getDefaultPk","pageDirection","outputProfiles_OutputProfiles","pageSize","defaultPk","outputProfilesManager_OutputProfilesManager","outputProfiles","OutputProfiles","outputProfilePK","savedOne","Setting","Thumbnales","loadedImageMap","imageManager_ImageManager","Images","createRetList","getEntitisAsList","imageEntitis","thumbnailBinaryPk","fue","imgElm","createImageNodeByData","createThumbnail","arrayBufferThumbnail","dataURI2ArrayBuffer","imgElmThumb","imageList","orderBy","loadFromImagePk","processParImage","binaryEntity","size","imageText","escape","isOnPage","entries","thumbnailManager_ThumbnaleManager","pdfs_Pdfs","imgRe","imageProcessor_ImageProcessor","canvas","createCanvas","ctx","getContext","body","Image","arrayBuffer2DataURI","widthScale","heightScale","scale","clearRect","drawImage","exportPng","toDataURL","quority","createImage","match","imageProcessService_ImageProcessService","retURI","mainServiceImpl","vpl","initAsNewUser","bm","pm","setTitleManager","thread_thread","progressViewReducer","progressViewReducer_ProgressViewReducer","getViewPartsLoader","progressBarAddAction","progressBarRemoveAction","progressBarUpdateAction","progressBarCompleatSortAction","createProgress","isVisible","isComple","initPoint","register","display","showProgress","BaseEventHandler","imageActionCreator_ImageActionCreator","pageActionCreator_PageActionCreator","pageProcessor_PageProcessor","loadSettings","resetPages","delPages","addPageAsNew","delTarget","keyIndex","addOne","move","addPage","removeImage","imageViewReducer","imageViewReducer_ImageViewReducer","imagAddAction","imageRemoveAction","imagesLoadAction","creatLoadImagesAction","imagesSortAction","creatSortImagesAction","imagesChangeTitleAction","creatChangeTitleImagesAction","imagesDetailAction","creatDetailAction","pp","storeImagesKey","getStoreImagesKey","storePagesKey","getStorePagesKey","saveFiles","loadPages","imagePKforDelete","loadImages","imagePKmove","imagePKdrop","loadAImage","imagePK","addImageFiles","unshift","movePk","dropPk","converterMap","convertedPk","imageEntityConverted","getFromLoaded","resetPagesFull","removeLoaded","getRetObjsAsList","fileUploader_FileUploader","fileProcessor","stopPropagation","preventDefault","handleFiles","dataTransfer","actin","areadParFile","fileUploadArea_text","fileUploadArea_FileUploadArea","fu","FileUploadFile","change","handleFileSelect","fileUploadArea","dragover","handleDrop","drop","re_yyyy","re_MM","re_dd","re_hh","re_mm","re_ss","unixTimeToDateFormat","unixtime","format","year","getFullYear","month","getMonth","day","getDate","hour","getHours","getMinutes","sec","getSeconds","settingActionCreator_SettingActionCreator","settingViewReducer","settingViewReducer_SettingViewReducer","creatAction","creatLoadAction","getStoreKey","storeKeyOpm","getStoreKeyOpm","reset","SettingData","pageStart","l2r","r2l","pageNums","titleSettings_TitleSettings","bodyId","showSettings","nameInput","pageNumInput","startPageInput","pageDirectionInput","outputProfileInput","labelClass","inputClass","nameLabel","nameRow","pageNumLabel","idpageNumInput","pageNumRow","startPageLabel","idStartPageInput","startPageRow","pageDirectionLabel","idPageDirectionInput","pageDirectionRow","outputProfileLabel","idOutputProfileInput","outputProfileRow","frameL","frameR","childlen","exportButton_ExportButton","imageDetail_ImageDetail","imageAreaID","isOnScroll","startX","startY","imagesDetailData","showImage","offsetX","offsetY","imageData","dataUri","imgVnode","textVnode","mousedown","onMouseOn","mousemove","onMouseMove","top","left","clientX","offsetX１","clientY","offsetY１","currentX","currentY","targetNode","pageImage_PageImage","draggableArea","thumbnail_block","button","pageData","confirm","dragImageSrc","dropElm","contains","opacity","nowSelectedElm","effectAllowed","setData","dragIcon","setDragImage","dropEffect","selectedPk","targetPk","is_image","creatAddPageAction","is_page","creatSortPagesAction","formPk","cancelPageArea","creatRemovePageAction","imageBg","background-image","rowVnode","dragstart","handleDragStart","handleDragOver","dragenter","handleDragEnter","dragleave","handleDragLeave","dragend","handleDragEnd","selectImage","draggable","pageImages_PageImages","childId","thumbnails","dummyClass","pageFrames","pagesData","imagesData","showPages","buildPageFrames","imagesPk","imageMap","setPageData","renderVnode","isRight","frameParts","sideClass","pageIndex","previewSingle","showPreviewSingle","previewDouble","showPreviewDual","frames","buildPreviewButtons","isPageDirectionR2L","isPageStartR","frameNum","ceil","isOdd","isMatchPageStartSide","totalPageFrame","isStartFull","leftStartDummyClass","rightStartDummyClass","leftEndDummyClass","rightEndDummyClass","lastIndex","pagNo","pageOffset","leftPageNo","rightPageNo","pagePair","leftPageNoFirst","rightPageNoFirst","creatPageFrame","thumbnail_Thumbnail","displayNone","pagesMap","delButton","imageVnode","classObj","thumbnails_Thumbnails","pageMap","thumbnails_block","updatePageMap","showImages","imageDatas","crateDataLine","pagesViewReducer","pagesViewReducer_PagesViewReducer","pageAddAction","pageRemoveAction","pagesResetAction","creatResetPagesAction","pagesSortAction","dropImageToPageAction","filesArea_FilesArea","imageDetail","pageImages","attach","container_Container","titleSettings","filesArea","exportButton","progressBar","footer_Footer","copyright","mainFrame_MainFrame","setMainService","initialize","header","footer","container","menu","baseFrame","initialPatch","main_title","main_CopiBonService","mainService","mf","main","htmlDomApi","css","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","stylesInDom","isOldIE","memo","arguments","memoize","all","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","parts","addStyle","listToStyles","newStyles","base","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","addAttrs","el","forEach","transform","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","oldSrc","href","styleSheet","cssText","DEBUG","mayRemove","replaceText","textStore","replacement","filter","Boolean","cssNode","useSourceMap","content","cssMapping","sourceMapping","toComment","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","hmr","locals"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dest/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","const defaultWorker = \"./dest/worker.js\";\nexport class Thread {\n  constructor(workerJsPath = defaultWorker) {\n    this.worker = new Worker(workerJsPath);\n  }\n  postMessage(key, dataMap) {\n    return new Promise((resolve, reject) => {\n      const {transObject, tranceArray} = Thread.buildPostObj(key, dataMap);\n      this.worker.postMessage(transObject, tranceArray);\n      this.worker.onmessage = (event)=> {\n        resolve(event.data);\n      }\n      this.worker.onerror = (event)=> {\n        reject(event);\n      }\n    });\n  }\n  static buildPostObj(key, dataMap){\n    const tranceArray = [];\n    const transObject = {\n      key: key\n    };\n    if (!dataMap) {\n      // nothig todo\n    } else if (Array.isArray(dataMap)) {\n      let count = 0;\n      for (let value of dataList) {\n        if (value.buffer) {\n          tranceArray.push(value.buffer);\n        } else if (value.byteLength) {\n          tranceArray.push(value);\n        }\n        transObject[count] = value;\n        count++;\n      }\n    } else if (typeof dataMap === 'object' && Object.keys(dataMap).length > 0) {\n      for (let key in Object.keys(dataMap)) {\n        const value = dataMap[dataMap];\n        transObject[key] = value;\n        if (value.buffer) {\n          tranceArray.push(value.buffer);\n        } else if (value.byteLength) {\n          tranceArray.push(value);\n        }\n      }\n    }\n    const retData = {transObject:transObject,tranceArray:tranceArray};\n    return retData;\n  }\n  close(){\n    this.worker.terminate();\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction vnode(sel, data, children, text, elm) {\n    var key = data === undefined ? undefined : data.key;\n    return { sel: sel, data: data, children: children,\n        text: text, elm: elm, key: key };\n}\nexports.vnode = vnode;\nexports.default = vnode;\n//# sourceMappingURL=vnode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vnode_1 = require(\"./vnode\");\nvar htmldomapi_1 = require(\"./htmldomapi\");\nfunction toVNode(node, domApi) {\n    var api = domApi !== undefined ? domApi : htmldomapi_1.default;\n    var text;\n    if (api.isElement(node)) {\n        var id = node.id ? '#' + node.id : '';\n        var cn = node.getAttribute('class');\n        var c = cn ? '.' + cn.split(' ').join('.') : '';\n        var sel = api.tagName(node).toLowerCase() + id + c;\n        var attrs = {};\n        var children = [];\n        var name_1;\n        var i = void 0, n = void 0;\n        var elmAttrs = node.attributes;\n        var elmChildren = node.childNodes;\n        for (i = 0, n = elmAttrs.length; i < n; i++) {\n            name_1 = elmAttrs[i].nodeName;\n            if (name_1 !== 'id' && name_1 !== 'class') {\n                attrs[name_1] = elmAttrs[i].nodeValue;\n            }\n        }\n        for (i = 0, n = elmChildren.length; i < n; i++) {\n            children.push(toVNode(elmChildren[i]));\n        }\n        return vnode_1.default(sel, { attrs: attrs }, children, undefined, node);\n    }\n    else if (api.isText(node)) {\n        text = api.getTextContent(node);\n        return vnode_1.default(undefined, undefined, undefined, text, node);\n    }\n    else if (api.isComment(node)) {\n        text = api.getTextContent(node);\n        return vnode_1.default('!', {}, [], text, node);\n    }\n    else {\n        return vnode_1.default('', {}, [], undefined, node);\n    }\n}\nexports.toVNode = toVNode;\nexports.default = toVNode;\n//# sourceMappingURL=tovnode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vnode_1 = require(\"./vnode\");\nvar is = require(\"./is\");\nfunction addNS(data, children, sel) {\n    data.ns = 'http://www.w3.org/2000/svg';\n    if (sel !== 'foreignObject' && children !== undefined) {\n        for (var i = 0; i < children.length; ++i) {\n            var childData = children[i].data;\n            if (childData !== undefined) {\n                addNS(childData, children[i].children, children[i].sel);\n            }\n        }\n    }\n}\nfunction h(sel, b, c) {\n    var data = {}, children, text, i;\n    if (c !== undefined) {\n        data = b;\n        if (is.array(c)) {\n            children = c;\n        }\n        else if (is.primitive(c)) {\n            text = c;\n        }\n        else if (c && c.sel) {\n            children = [c];\n        }\n    }\n    else if (b !== undefined) {\n        if (is.array(b)) {\n            children = b;\n        }\n        else if (is.primitive(b)) {\n            text = b;\n        }\n        else if (b && b.sel) {\n            children = [b];\n        }\n        else {\n            data = b;\n        }\n    }\n    if (is.array(children)) {\n        for (i = 0; i < children.length; ++i) {\n            if (is.primitive(children[i]))\n                children[i] = vnode_1.vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&\n        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {\n        addNS(data, children, sel);\n    }\n    return vnode_1.vnode(sel, data, children, text, undefined);\n}\nexports.h = h;\n;\nexports.default = h;\n//# sourceMappingURL=h.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction invokeHandler(handler, vnode, event) {\n    if (typeof handler === \"function\") {\n        // call function handler\n        handler.call(vnode, event, vnode);\n    }\n    else if (typeof handler === \"object\") {\n        // call handler with arguments\n        if (typeof handler[0] === \"function\") {\n            // special case for single argument for performance\n            if (handler.length === 2) {\n                handler[0].call(vnode, handler[1], event, vnode);\n            }\n            else {\n                var args = handler.slice(1);\n                args.push(event);\n                args.push(vnode);\n                handler[0].apply(vnode, args);\n            }\n        }\n        else {\n            // call multiple handlers\n            for (var i = 0; i < handler.length; i++) {\n                invokeHandler(handler[i]);\n            }\n        }\n    }\n}\nfunction handleEvent(event, vnode) {\n    var name = event.type, on = vnode.data.on;\n    // call event handler(s) if exists\n    if (on && on[name]) {\n        invokeHandler(on[name], vnode, event);\n    }\n}\nfunction createListener() {\n    return function handler(event) {\n        handleEvent(event, handler.vnode);\n    };\n}\nfunction updateEventListeners(oldVnode, vnode) {\n    var oldOn = oldVnode.data.on, oldListener = oldVnode.listener, oldElm = oldVnode.elm, on = vnode && vnode.data.on, elm = (vnode && vnode.elm), name;\n    // optimization for reused immutable handlers\n    if (oldOn === on) {\n        return;\n    }\n    // remove existing listeners which no longer used\n    if (oldOn && oldListener) {\n        // if element changed or deleted we remove all existing listeners unconditionally\n        if (!on) {\n            for (name in oldOn) {\n                // remove listener if element was changed or existing listeners removed\n                oldElm.removeEventListener(name, oldListener, false);\n            }\n        }\n        else {\n            for (name in oldOn) {\n                // remove listener if existing listener removed\n                if (!on[name]) {\n                    oldElm.removeEventListener(name, oldListener, false);\n                }\n            }\n        }\n    }\n    // add new listeners which has not already attached\n    if (on) {\n        // reuse existing listener or create new\n        var listener = vnode.listener = oldVnode.listener || createListener();\n        // update vnode for listener\n        listener.vnode = vnode;\n        // if element changed or added we add all needed listeners unconditionally\n        if (!oldOn) {\n            for (name in on) {\n                // add listener if element was changed or new listeners added\n                elm.addEventListener(name, listener, false);\n            }\n        }\n        else {\n            for (name in on) {\n                // add listener if new listener added\n                if (!oldOn[name]) {\n                    elm.addEventListener(name, listener, false);\n                }\n            }\n        }\n    }\n}\nexports.eventListenersModule = {\n    create: updateEventListeners,\n    update: updateEventListeners,\n    destroy: updateEventListeners\n};\nexports.default = exports.eventListenersModule;\n//# sourceMappingURL=eventlisteners.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CAPS_REGEX = /[A-Z]/g;\nfunction updateDataset(oldVnode, vnode) {\n    var elm = vnode.elm, oldDataset = oldVnode.data.dataset, dataset = vnode.data.dataset, key;\n    if (!oldDataset && !dataset)\n        return;\n    if (oldDataset === dataset)\n        return;\n    oldDataset = oldDataset || {};\n    dataset = dataset || {};\n    var d = elm.dataset;\n    for (key in oldDataset) {\n        if (!dataset[key]) {\n            if (d) {\n                if (key in d) {\n                    delete d[key];\n                }\n            }\n            else {\n                elm.removeAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase());\n            }\n        }\n    }\n    for (key in dataset) {\n        if (oldDataset[key] !== dataset[key]) {\n            if (d) {\n                d[key] = dataset[key];\n            }\n            else {\n                elm.setAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase(), dataset[key]);\n            }\n        }\n    }\n}\nexports.datasetModule = { create: updateDataset, update: updateDataset };\nexports.default = exports.datasetModule;\n//# sourceMappingURL=dataset.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xmlNS = 'http://www.w3.org/XML/1998/namespace';\nvar colonChar = 58;\nvar xChar = 120;\nfunction updateAttrs(oldVnode, vnode) {\n    var key, elm = vnode.elm, oldAttrs = oldVnode.data.attrs, attrs = vnode.data.attrs;\n    if (!oldAttrs && !attrs)\n        return;\n    if (oldAttrs === attrs)\n        return;\n    oldAttrs = oldAttrs || {};\n    attrs = attrs || {};\n    // update modified attributes, add new attributes\n    for (key in attrs) {\n        var cur = attrs[key];\n        var old = oldAttrs[key];\n        if (old !== cur) {\n            if (cur === true) {\n                elm.setAttribute(key, \"\");\n            }\n            else if (cur === false) {\n                elm.removeAttribute(key);\n            }\n            else {\n                if (key.charCodeAt(0) !== xChar) {\n                    elm.setAttribute(key, cur);\n                }\n                else if (key.charCodeAt(3) === colonChar) {\n                    // Assume xml namespace\n                    elm.setAttributeNS(xmlNS, key, cur);\n                }\n                else if (key.charCodeAt(5) === colonChar) {\n                    // Assume xlink namespace\n                    elm.setAttributeNS(xlinkNS, key, cur);\n                }\n                else {\n                    elm.setAttribute(key, cur);\n                }\n            }\n        }\n    }\n    // remove removed attributes\n    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)\n    // the other option is to remove all attributes with value == undefined\n    for (key in oldAttrs) {\n        if (!(key in attrs)) {\n            elm.removeAttribute(key);\n        }\n    }\n}\nexports.attributesModule = { create: updateAttrs, update: updateAttrs };\nexports.default = exports.attributesModule;\n//# sourceMappingURL=attributes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction updateProps(oldVnode, vnode) {\n    var key, cur, old, elm = vnode.elm, oldProps = oldVnode.data.props, props = vnode.data.props;\n    if (!oldProps && !props)\n        return;\n    if (oldProps === props)\n        return;\n    oldProps = oldProps || {};\n    props = props || {};\n    for (key in oldProps) {\n        if (!props[key]) {\n            delete elm[key];\n        }\n    }\n    for (key in props) {\n        cur = props[key];\n        old = oldProps[key];\n        if (old !== cur && (key !== 'value' || elm[key] !== cur)) {\n            elm[key] = cur;\n        }\n    }\n}\nexports.propsModule = { create: updateProps, update: updateProps };\nexports.default = exports.propsModule;\n//# sourceMappingURL=props.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar raf = (typeof window !== 'undefined' && window.requestAnimationFrame) || setTimeout;\nvar nextFrame = function (fn) { raf(function () { raf(fn); }); };\nfunction setNextFrame(obj, prop, val) {\n    nextFrame(function () { obj[prop] = val; });\n}\nfunction updateStyle(oldVnode, vnode) {\n    var cur, name, elm = vnode.elm, oldStyle = oldVnode.data.style, style = vnode.data.style;\n    if (!oldStyle && !style)\n        return;\n    if (oldStyle === style)\n        return;\n    oldStyle = oldStyle || {};\n    style = style || {};\n    var oldHasDel = 'delayed' in oldStyle;\n    for (name in oldStyle) {\n        if (!style[name]) {\n            if (name[0] === '-' && name[1] === '-') {\n                elm.style.removeProperty(name);\n            }\n            else {\n                elm.style[name] = '';\n            }\n        }\n    }\n    for (name in style) {\n        cur = style[name];\n        if (name === 'delayed' && style.delayed) {\n            for (var name2 in style.delayed) {\n                cur = style.delayed[name2];\n                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {\n                    setNextFrame(elm.style, name2, cur);\n                }\n            }\n        }\n        else if (name !== 'remove' && cur !== oldStyle[name]) {\n            if (name[0] === '-' && name[1] === '-') {\n                elm.style.setProperty(name, cur);\n            }\n            else {\n                elm.style[name] = cur;\n            }\n        }\n    }\n}\nfunction applyDestroyStyle(vnode) {\n    var style, name, elm = vnode.elm, s = vnode.data.style;\n    if (!s || !(style = s.destroy))\n        return;\n    for (name in style) {\n        elm.style[name] = style[name];\n    }\n}\nfunction applyRemoveStyle(vnode, rm) {\n    var s = vnode.data.style;\n    if (!s || !s.remove) {\n        rm();\n        return;\n    }\n    var name, elm = vnode.elm, i = 0, compStyle, style = s.remove, amount = 0, applied = [];\n    for (name in style) {\n        applied.push(name);\n        elm.style[name] = style[name];\n    }\n    compStyle = getComputedStyle(elm);\n    var props = compStyle['transition-property'].split(', ');\n    for (; i < props.length; ++i) {\n        if (applied.indexOf(props[i]) !== -1)\n            amount++;\n    }\n    elm.addEventListener('transitionend', function (ev) {\n        if (ev.target === elm)\n            --amount;\n        if (amount === 0)\n            rm();\n    });\n}\nexports.styleModule = {\n    create: updateStyle,\n    update: updateStyle,\n    destroy: applyDestroyStyle,\n    remove: applyRemoveStyle\n};\nexports.default = exports.styleModule;\n//# sourceMappingURL=style.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction updateClass(oldVnode, vnode) {\n    var cur, name, elm = vnode.elm, oldClass = oldVnode.data.class, klass = vnode.data.class;\n    if (!oldClass && !klass)\n        return;\n    if (oldClass === klass)\n        return;\n    oldClass = oldClass || {};\n    klass = klass || {};\n    for (name in oldClass) {\n        if (!klass[name]) {\n            elm.classList.remove(name);\n        }\n    }\n    for (name in klass) {\n        cur = klass[name];\n        if (cur !== oldClass[name]) {\n            elm.classList[cur ? 'add' : 'remove'](name);\n        }\n    }\n}\nexports.classModule = { create: updateClass, update: updateClass };\nexports.default = exports.classModule;\n//# sourceMappingURL=class.js.map","export function vnode(sel, data, children, text, elm) {\n    var key = data === undefined ? undefined : data.key;\n    return { sel: sel, data: data, children: children,\n        text: text, elm: elm, key: key };\n}\nexport default vnode;\n//# sourceMappingURL=vnode.js.map","export var array = Array.isArray;\nexport function primitive(s) {\n    return typeof s === 'string' || typeof s === 'number';\n}\n//# sourceMappingURL=is.js.map","function createElement(tagName) {\n    return document.createElement(tagName);\n}\nfunction createElementNS(namespaceURI, qualifiedName) {\n    return document.createElementNS(namespaceURI, qualifiedName);\n}\nfunction createTextNode(text) {\n    return document.createTextNode(text);\n}\nfunction createComment(text) {\n    return document.createComment(text);\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n    parentNode.insertBefore(newNode, referenceNode);\n}\nfunction removeChild(node, child) {\n    node.removeChild(child);\n}\nfunction appendChild(node, child) {\n    node.appendChild(child);\n}\nfunction parentNode(node) {\n    return node.parentNode;\n}\nfunction nextSibling(node) {\n    return node.nextSibling;\n}\nfunction tagName(elm) {\n    return elm.tagName;\n}\nfunction setTextContent(node, text) {\n    node.textContent = text;\n}\nfunction getTextContent(node) {\n    return node.textContent;\n}\nfunction isElement(node) {\n    return node.nodeType === 1;\n}\nfunction isText(node) {\n    return node.nodeType === 3;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nexport var htmlDomApi = {\n    createElement: createElement,\n    createElementNS: createElementNS,\n    createTextNode: createTextNode,\n    createComment: createComment,\n    insertBefore: insertBefore,\n    removeChild: removeChild,\n    appendChild: appendChild,\n    parentNode: parentNode,\n    nextSibling: nextSibling,\n    tagName: tagName,\n    setTextContent: setTextContent,\n    getTextContent: getTextContent,\n    isElement: isElement,\n    isText: isText,\n    isComment: isComment,\n};\nexport default htmlDomApi;\n//# sourceMappingURL=htmldomapi.js.map","import { vnode } from './vnode';\nimport * as is from './is';\nfunction addNS(data, children, sel) {\n    data.ns = 'http://www.w3.org/2000/svg';\n    if (sel !== 'foreignObject' && children !== undefined) {\n        for (var i = 0; i < children.length; ++i) {\n            var childData = children[i].data;\n            if (childData !== undefined) {\n                addNS(childData, children[i].children, children[i].sel);\n            }\n        }\n    }\n}\nexport function h(sel, b, c) {\n    var data = {}, children, text, i;\n    if (c !== undefined) {\n        data = b;\n        if (is.array(c)) {\n            children = c;\n        }\n        else if (is.primitive(c)) {\n            text = c;\n        }\n        else if (c && c.sel) {\n            children = [c];\n        }\n    }\n    else if (b !== undefined) {\n        if (is.array(b)) {\n            children = b;\n        }\n        else if (is.primitive(b)) {\n            text = b;\n        }\n        else if (b && b.sel) {\n            children = [b];\n        }\n        else {\n            data = b;\n        }\n    }\n    if (is.array(children)) {\n        for (i = 0; i < children.length; ++i) {\n            if (is.primitive(children[i]))\n                children[i] = vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&\n        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {\n        addNS(data, children, sel);\n    }\n    return vnode(sel, data, children, text, undefined);\n}\n;\nexport default h;\n//# sourceMappingURL=h.js.map","import { h } from './h';\nfunction copyToThunk(vnode, thunk) {\n    thunk.elm = vnode.elm;\n    vnode.data.fn = thunk.data.fn;\n    vnode.data.args = thunk.data.args;\n    thunk.data = vnode.data;\n    thunk.children = vnode.children;\n    thunk.text = vnode.text;\n    thunk.elm = vnode.elm;\n}\nfunction init(thunk) {\n    var cur = thunk.data;\n    var vnode = cur.fn.apply(undefined, cur.args);\n    copyToThunk(vnode, thunk);\n}\nfunction prepatch(oldVnode, thunk) {\n    var i, old = oldVnode.data, cur = thunk.data;\n    var oldArgs = old.args, args = cur.args;\n    if (old.fn !== cur.fn || oldArgs.length !== args.length) {\n        copyToThunk(cur.fn.apply(undefined, args), thunk);\n        return;\n    }\n    for (i = 0; i < args.length; ++i) {\n        if (oldArgs[i] !== args[i]) {\n            copyToThunk(cur.fn.apply(undefined, args), thunk);\n            return;\n        }\n    }\n    copyToThunk(oldVnode, thunk);\n}\nexport var thunk = function thunk(sel, key, fn, args) {\n    if (args === undefined) {\n        args = fn;\n        fn = key;\n        key = undefined;\n    }\n    return h(sel, {\n        key: key,\n        hook: { init: init, prepatch: prepatch },\n        fn: fn,\n        args: args\n    });\n};\nexport default thunk;\n//# sourceMappingURL=thunk.js.map","import vnode from './vnode';\nimport * as is from './is';\nimport htmlDomApi from './htmldomapi';\nfunction isUndef(s) { return s === undefined; }\nfunction isDef(s) { return s !== undefined; }\nvar emptyNode = vnode('', {}, [], undefined, undefined);\nfunction sameVnode(vnode1, vnode2) {\n    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\nfunction isVnode(vnode) {\n    return vnode.sel !== undefined;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    var i, map = {}, key, ch;\n    for (i = beginIdx; i <= endIdx; ++i) {\n        ch = children[i];\n        if (ch != null) {\n            key = ch.key;\n            if (key !== undefined)\n                map[key] = i;\n        }\n    }\n    return map;\n}\nvar hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];\nexport { h } from './h';\nexport { thunk } from './thunk';\nexport function init(modules, domApi) {\n    var i, j, cbs = {};\n    var api = domApi !== undefined ? domApi : htmlDomApi;\n    for (i = 0; i < hooks.length; ++i) {\n        cbs[hooks[i]] = [];\n        for (j = 0; j < modules.length; ++j) {\n            var hook = modules[j][hooks[i]];\n            if (hook !== undefined) {\n                cbs[hooks[i]].push(hook);\n            }\n        }\n    }\n    function emptyNodeAt(elm) {\n        var id = elm.id ? '#' + elm.id : '';\n        var c = elm.className ? '.' + elm.className.split(' ').join('.') : '';\n        return vnode(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);\n    }\n    function createRmCb(childElm, listeners) {\n        return function rmCb() {\n            if (--listeners === 0) {\n                var parent_1 = api.parentNode(childElm);\n                api.removeChild(parent_1, childElm);\n            }\n        };\n    }\n    function createElm(vnode, insertedVnodeQueue) {\n        var i, data = vnode.data;\n        if (data !== undefined) {\n            if (isDef(i = data.hook) && isDef(i = i.init)) {\n                i(vnode);\n                data = vnode.data;\n            }\n        }\n        var children = vnode.children, sel = vnode.sel;\n        if (sel === '!') {\n            if (isUndef(vnode.text)) {\n                vnode.text = '';\n            }\n            vnode.elm = api.createComment(vnode.text);\n        }\n        else if (sel !== undefined) {\n            // Parse selector\n            var hashIdx = sel.indexOf('#');\n            var dotIdx = sel.indexOf('.', hashIdx);\n            var hash = hashIdx > 0 ? hashIdx : sel.length;\n            var dot = dotIdx > 0 ? dotIdx : sel.length;\n            var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;\n            var elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)\n                : api.createElement(tag);\n            if (hash < dot)\n                elm.setAttribute('id', sel.slice(hash + 1, dot));\n            if (dotIdx > 0)\n                elm.setAttribute('class', sel.slice(dot + 1).replace(/\\./g, ' '));\n            for (i = 0; i < cbs.create.length; ++i)\n                cbs.create[i](emptyNode, vnode);\n            if (is.array(children)) {\n                for (i = 0; i < children.length; ++i) {\n                    var ch = children[i];\n                    if (ch != null) {\n                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));\n                    }\n                }\n            }\n            else if (is.primitive(vnode.text)) {\n                api.appendChild(elm, api.createTextNode(vnode.text));\n            }\n            i = vnode.data.hook; // Reuse variable\n            if (isDef(i)) {\n                if (i.create)\n                    i.create(emptyNode, vnode);\n                if (i.insert)\n                    insertedVnodeQueue.push(vnode);\n            }\n        }\n        else {\n            vnode.elm = api.createTextNode(vnode.text);\n        }\n        return vnode.elm;\n    }\n    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            var ch = vnodes[startIdx];\n            if (ch != null) {\n                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);\n            }\n        }\n    }\n    function invokeDestroyHook(vnode) {\n        var i, j, data = vnode.data;\n        if (data !== undefined) {\n            if (isDef(i = data.hook) && isDef(i = i.destroy))\n                i(vnode);\n            for (i = 0; i < cbs.destroy.length; ++i)\n                cbs.destroy[i](vnode);\n            if (vnode.children !== undefined) {\n                for (j = 0; j < vnode.children.length; ++j) {\n                    i = vnode.children[j];\n                    if (i != null && typeof i !== \"string\") {\n                        invokeDestroyHook(i);\n                    }\n                }\n            }\n        }\n    }\n    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            var i_1 = void 0, listeners = void 0, rm = void 0, ch = vnodes[startIdx];\n            if (ch != null) {\n                if (isDef(ch.sel)) {\n                    invokeDestroyHook(ch);\n                    listeners = cbs.remove.length + 1;\n                    rm = createRmCb(ch.elm, listeners);\n                    for (i_1 = 0; i_1 < cbs.remove.length; ++i_1)\n                        cbs.remove[i_1](ch, rm);\n                    if (isDef(i_1 = ch.data) && isDef(i_1 = i_1.hook) && isDef(i_1 = i_1.remove)) {\n                        i_1(ch, rm);\n                    }\n                    else {\n                        rm();\n                    }\n                }\n                else {\n                    api.removeChild(parentElm, ch.elm);\n                }\n            }\n        }\n    }\n    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n        var oldStartIdx = 0, newStartIdx = 0;\n        var oldEndIdx = oldCh.length - 1;\n        var oldStartVnode = oldCh[0];\n        var oldEndVnode = oldCh[oldEndIdx];\n        var newEndIdx = newCh.length - 1;\n        var newStartVnode = newCh[0];\n        var newEndVnode = newCh[newEndIdx];\n        var oldKeyToIdx;\n        var idxInOld;\n        var elmToMove;\n        var before;\n        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n            if (oldStartVnode == null) {\n                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n            }\n            else if (oldEndVnode == null) {\n                oldEndVnode = oldCh[--oldEndIdx];\n            }\n            else if (newStartVnode == null) {\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (newEndVnode == null) {\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newStartVnode)) {\n                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n                oldStartVnode = oldCh[++oldStartIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (sameVnode(oldEndVnode, newEndVnode)) {\n                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newEndVnode)) {\n                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n                oldStartVnode = oldCh[++oldStartIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldEndVnode, newStartVnode)) {\n                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                if (oldKeyToIdx === undefined) {\n                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n                }\n                idxInOld = oldKeyToIdx[newStartVnode.key];\n                if (isUndef(idxInOld)) {\n                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    newStartVnode = newCh[++newStartIdx];\n                }\n                else {\n                    elmToMove = oldCh[idxInOld];\n                    if (elmToMove.sel !== newStartVnode.sel) {\n                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    }\n                    else {\n                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n                        oldCh[idxInOld] = undefined;\n                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n                    }\n                    newStartVnode = newCh[++newStartIdx];\n                }\n            }\n        }\n        if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n            if (oldStartIdx > oldEndIdx) {\n                before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n                addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n            }\n            else {\n                removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n            }\n        }\n    }\n    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\n        var i, hook;\n        if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {\n            i(oldVnode, vnode);\n        }\n        var elm = vnode.elm = oldVnode.elm;\n        var oldCh = oldVnode.children;\n        var ch = vnode.children;\n        if (oldVnode === vnode)\n            return;\n        if (vnode.data !== undefined) {\n            for (i = 0; i < cbs.update.length; ++i)\n                cbs.update[i](oldVnode, vnode);\n            i = vnode.data.hook;\n            if (isDef(i) && isDef(i = i.update))\n                i(oldVnode, vnode);\n        }\n        if (isUndef(vnode.text)) {\n            if (isDef(oldCh) && isDef(ch)) {\n                if (oldCh !== ch)\n                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n            }\n            else if (isDef(ch)) {\n                if (isDef(oldVnode.text))\n                    api.setTextContent(elm, '');\n                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n            }\n            else if (isDef(oldCh)) {\n                removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n            }\n            else if (isDef(oldVnode.text)) {\n                api.setTextContent(elm, '');\n            }\n        }\n        else if (oldVnode.text !== vnode.text) {\n            api.setTextContent(elm, vnode.text);\n        }\n        if (isDef(hook) && isDef(i = hook.postpatch)) {\n            i(oldVnode, vnode);\n        }\n    }\n    return function patch(oldVnode, vnode) {\n        var i, elm, parent;\n        var insertedVnodeQueue = [];\n        for (i = 0; i < cbs.pre.length; ++i)\n            cbs.pre[i]();\n        if (!isVnode(oldVnode)) {\n            oldVnode = emptyNodeAt(oldVnode);\n        }\n        if (sameVnode(oldVnode, vnode)) {\n            patchVnode(oldVnode, vnode, insertedVnodeQueue);\n        }\n        else {\n            elm = oldVnode.elm;\n            parent = api.parentNode(elm);\n            createElm(vnode, insertedVnodeQueue);\n            if (parent !== null) {\n                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));\n                removeVnodes(parent, [oldVnode], 0, 0);\n            }\n        }\n        for (i = 0; i < insertedVnodeQueue.length; ++i) {\n            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);\n        }\n        for (i = 0; i < cbs.post.length; ++i)\n            cbs.post[i]();\n        return vnode;\n    };\n}\n//# sourceMappingURL=snabbdom.js.map","export default class ViewUtil {\n  constructor() {}\n  static create(id, clasｓName, text) {\n    return ViewUtil.ce(\"div\", id, clasｓName, text);\n  }\n  static createInput(id, clasｓName, text) {\n    return ViewUtil.ce(\"input\", id, clasｓName, text);\n  }\n  static createText(id, clasｓName, text) {\n    return ViewUtil.ce(\"text\", id, clasｓName, text);\n  }\n  static createFile(id, clasｓName, text) {\n    return ViewUtil.ce(\"input\", id, clasｓName, text, \"file\");\n  }\n  static createCanvas(id, clasｓName, text) {\n    return ViewUtil.ce(\"canvas\", id, clasｓName, text);\n  }\n  static createImage(id, clasｓName, text) {\n    return ViewUtil.ce(\"img\", id, clasｓName, text);\n  }\n  static createUl(id, clasｓName, text) {\n    return ViewUtil.ce(\"ul\", id, clasｓName, text);\n  }\n  static createLabel(id, clasｓName, text, forId) {\n    const elm = ViewUtil.ce(\"label\", id, clasｓName, text);\n    elm.setAttribute(\"for\", forId);\n    return elm;\n  }\n  static createLi(id, clasｓName, text) {\n    return ViewUtil.ce(\"li\", id, clasｓName, text);\n  }\n  static createSpan(id, clasｓName, text) {\n    return ViewUtil.ce(\"span\", id, clasｓName, text);\n  }\n  static createStrong(id, clasｓName, text) {\n    return ViewUtil.ce(\"strong\", id, clasｓName, text);\n  }\n  static createA(id, clasｓName, text) {\n    return ViewUtil.ce(\"a\", id, clasｓName, text);\n  }\n  static ce(tagName, id, clasｓName, text, type) {\n    const elm = document.createElement(tagName);\n    elm.className = clasｓName;\n    if (id) {\n      elm.id = id;\n    }\n    if (tagName === \"input\" && text) {\n      elm.setAttribute(\"value\", text);\n      if (type) {\n        elm.setAttribute(\"type\", type);\n      }\n    } else if (text) {\n      elm.textContent = text;\n    }\n    return elm;\n  }\n  static on(elm, eventType, eventHandler) {\n    elm.addEventListener(eventType, eventHandler, false);\n  }\n  static off(elm, eventType, eventHandler) {\n    elm.removeEventListener(eventType, eventHandler, false);\n  }\n\n  static append(parent, child) {\n    parent.appendChild(child);\n  }\n\n  static insertFirst(parent, child) {\n    if (parent.hasChildNodes()) {\n      parent.insertBefore(child, parent.childNodes[0]);\n    } else {\n      parent.appendChild(child);\n    }\n  }\n  static getBodyElm() {\n    return document.getElementsByTagName(\"body\")[0];\n  }\n  static attachBody(elm) {\n    document.getElementsByTagName(\"body\")[0].appendChild(elm);\n  }\n  static detacthBodyById(id) {\n    const child = documet.getElementById(id);\n    document.getElementsByTagName(\"body\")[0].removeChild(child);\n  }\n  static removeChild(child) {\n    child.parentNode.removeChild(child);\n  }\n  static remove(id) {\n    const child = documet.getElementById(id);\n    if (child.parentNode) {\n      child.parentNode.removeChild(child);\n    }\n  }\n  static removeChildren(id) {\n    const elm = documet.getElementById(id);\n    while (elm.firstChild) {\n      elm.removeChild(elm.firstChild);\n    }\n  }\n  static setStyles(elm, styleObj) {\n    for(let name in styleObj){\n      elm.style[name] = styleObj[name];\n    }\n  }\n  static text(elm, text) {\n    elm.textContent = text;\n  }\n  static emit(elm, eventType, isBubbling = true, isCancelable = true) {\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(eventType, isBubbling, isCancelable);\n    return elm.dispatchEvent(event);\n  }\n}\n","import snabbdomClass from 'snabbdom/modules/class'\nimport snabbdomStyle from 'snabbdom/modules/style'\nimport snabbdomProps from 'snabbdom/modules/props'\nimport snabbdomAttrs from 'snabbdom/modules/attributes'\nimport snabbdomDataset from 'snabbdom/modules/dataset'\nimport snabbdomEventlisteners from 'snabbdom/modules/eventlisteners'\nimport hz from 'snabbdom/h'\nimport toVNodez from 'snabbdom/tovnode'\nlet snabbdom = require('snabbdom');\nconsole.log(snabbdom);\nexport const h = hz;\nexport const toVNode = toVNodez;\nexport const patch = snabbdom.init([snabbdomClass, snabbdomStyle, snabbdomProps,snabbdomAttrs, snabbdomDataset,snabbdomEventlisteners])\n","const baseClasses = [];\nexport class ObjectUtil {\n  static addBaseCLassese(baseClassesList) {\n    if (baseClassesList) {\n      if (Array.isArray(baseClassesList)) {\n        for (let baseClass of baseClassesList) {\n          baseClasses.push(baseClass);\n        }\n      } else {\n        baseClasses.push(baseClassesList);\n      }\n    }\n  }\n  static deepClone(obj) {\n    const channel = new MessageChannel();\n    const inPort = channel.port1;\n    const outPort = channel.port2;\n\n    return new Promise(resolve => {\n      inPort.onmessage = data => {\n        resolve(data.data);\n      }\n      outPort.postMessage(obj);\n    });\n  }\n  static simpleDeepCloneSerialized(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n  static simpleDeepClone(obj, newObj) {\n    const output = newObj\n      ? newObj\n      : Array.isArray(obj)\n        ? []\n        : {};\n    for (let key in obj) {\n      const value = obj[key];\n      if (value && typeof value === \"object\" && !value.byteLength) {\n        let baseType = null;\n        for (let baseClass of baseClasses) {\n          if (value instanceof baseClass) {\n            baseType = new baseClass();\n            break;\n          }\n        }\n        output[key] = ObjectUtil.simpleDeepClone(value, baseType);\n      } else {\n        try {\n          output[key] = value;\n        } catch (e) {\n          console.log(e);\n          console.log(output);\n          throw e;\n        }\n      }\n    }\n    return output;\n  }\n  static singleDeepClone(obj) {\n    const retObj = {};\n    for (let key in obj) {\n      let value = obj[key];\n      retObj[key] = value;\n    }\n    return retObj;\n  }\n  static singleDeepCloneWithoutFuncs(obj) {\n    const retObj = {};\n    for (let key in obj) {\n      let value = obj[key];\n      if (typeof value === 'function') {\n        continue;\n      }\n      retObj[key] = value;\n    }\n    return retObj;\n  }\n  static deepVnodeClone(target) {\n    if (!target) {\n      return target;\n    }\n    const obj = {\n      sel: target.sel,\n      data: ObjectUtil.simpleDeepClone(target.data),\n      children: undefined,\n      text: target.text,\n      elm: target.elm,\n      key: target.key\n    };\n    for (let key in target.data) {\n      if (target.data[key]) {\n        obj.data[key] = target.data[key];\n      }\n    }\n    if (target.children && target.children.length > 0) {\n      obj.children = [];\n      for (let childTarget of target.children) {\n        obj.children.push(ObjectUtil.deepVnodeClone(childTarget));\n      }\n    }\n    return obj;\n  }\n}\n","import {patch, h} from './base/preLoader'\nimport {ObjectUtil} from '../objectUtil'\nexport class ElementSelector {\n  constructor() {\n    this.selectorMap = new Map()\n  }\n  getElementById(vnode, id) {\n    let result = this.getElements(vnode, \"#\" + id);\n    return result.length < 1\n      ? null\n      : result[0];\n  }\n  getElementsByClass(vnode, className) {\n    return this.getElements(vnode, \".\" + className);\n  }\n  patch(vnode, selector, newNode) {\n    // console.log('patch00 START of Patch newNode:' + newNode);\n\n    if (!newNode && typeof selector===\"string\") {\n      console.log('patch00a ★ERROR★ of Patch newNode:' + newNode+\"/selector:\"+selector);\n      return vnode;\n    }\n    if (!newNode ) {\n      // console.log('patch01a of Patch newNode:' + newNode);\n      this.isValidNode(vnode, \"vnode\");\n      const re = patch(vnode, selector);\n      return selector;\n    }\n    if (!selector ) {\n      // console.log('patch01b of Patch newNode:' + newNode);\n      this.isValidNode(vnode, \"vnode\");\n      const re = patch(vnode, newNode);\n      return newNode;\n    }\n    const cloneNode = this.prePatch(vnode, selector, newNode);\n    const re = patch(vnode, cloneNode);\n    const nodes = this.getElements(cloneNode, selector, false, new Map(), null);\n    // console.log('patch02 END of Patch ====' + \"/node:\" + newNode.elm + \"/parent:\" + (\n      // newNode.elm\n      // ? newNode.elm.parentNode\n      // : null) + \"/count:\" + nodes.length + \"/\" + (\n      // nodes.length > 0\n      // ? nodes[0].elm.parentNode\n      // : null));\n    this.isValidNode(cloneNode, \"cloneNode\");\n    return cloneNode;\n  }\n\n  isValidNode(vnode, name, parentNode, index) {\n    if (!vnode) {\n      console.log(\"★★null node!\" + name + \"/parentNode:\" + parentNode);\n      return;\n    }\n    if (vnode.elm && !vnode.elm.parentNode) {\n      // console.log(vnode.elm);\n      if (parentNode) {\n        const length = parentNode.childNodes.length;\n        if (length > index) {\n          vnode.elm = parentNode.childNodes[index];\n        } else {\n          parentNode.appendChild(vnode.elm);\n        }\n      }\n      // console.log(\"★★★invalid node!\" + name);\n    } else if (!vnode.elm) {\n      if (parentNode) {\n        const length = parentNode.childNodes.length;\n        if (length > index) {\n          vnode.elm = parentNode.childNodes[index];\n        } else {\n          console.log(\"★★★invalid parent index!\" + index + \"/length:\" + length + \"/vnode.sel:\" + vnode.sel);\n        }\n      }\n    }\n    if (vnode.children) {\n      for (let indexA in vnode.children) {\n        let child = vnode.children[indexA];\n        if (!child) {\n          continue;\n        }\n        this.isValidNode(child, name + \"_c_\", (\n          vnode.elm\n          ? vnode.elm.parentNode\n          : null), indexA)\n      }\n    }\n  }\n  // Not cloneNode\n  prePatch(vnode, selector, newNode) {\n    const cloneNode = ObjectUtil.deepVnodeClone(vnode);\n    const parentMap = new Map();\n    // console.log('prepatch01aa:' + JSON.stringify(vnode));\n    const nodes = this.getElements(cloneNode, selector, false, parentMap, null);\n    let isShouldPatch = false;\n    for (let node of nodes) {\n      // console.log('prepatch01a');\n      let newOne = ObjectUtil.deepVnodeClone(newNode);\n      // console.log('prepatch01b');\n\n      for (let [key, parentNode] of parentMap) {\n        if (key === node) {\n          let children = parentNode.children;\n          for (let index in children) {\n            let target = children[index];\n            if (target === node) {\n              children[index] = newOne;\n              //newOne.text = newOne.text+\"/\"+Date.now();\n              isShouldPatch = true;\n              // console.log('★patch01c AS REPLACE! children.length:' + children.length + \"/index:\" + index + \"/target.sel:\" + target.sel + \"/newOne.sel:\" + newOne.sel + \"/text:\" + newOne.text);\n              break;\n            } else {\n              // console.log('-patch01d ! children.length:' + children.length + \"/index:\" + index + \"/target.sel:\" + target.sel);\n            }\n          }\n          break;\n        }\n      }\n    }\n    // console.log('patch02 END of prePatch');\n    return isShouldPatch\n      ? cloneNode\n      : vnode;\n  }\n  getElements(vnode, selector, isEnd = false, parentMap = new Map(), parentVnode) {\n    let result = [];\n    if (!selector || typeof selector !== 'string') {\n      // console.log('getElements selector:'+selector);\n      return result;\n    }\n    let selectors = selector.split(/ |>/);\n    let nextSelector = selector;\n    if (selectors.length >= 1) {\n      let firstOne = selectors.shift();\n      if (!firstOne) {\n        return result;\n      }\n      if (this.isMatch(vnode.sel, firstOne)) {\n        if (selectors.length < 1) {\n          result.push(vnode);\n          if (parentVnode) {\n            parentMap.set(vnode, parentVnode);\n          }\n          return result;\n        }\n        nextSelector = selector.substring(firstOne.length + 1, selector.length);\n      } else if (isEnd) {\n        return result;\n      } else {\n        nextSelector = selector;\n      }\n\n      if (!vnode.children) {\n        return result;\n      }\n      let delimiter = selector.substring(firstOne.length, firstOne.length + 1);\n      let isNextEnd = delimiter === '>';\n\n      for (let child of vnode.children) {\n        result = result.concat(this.getElements(child, nextSelector, isNextEnd, parentMap, vnode));\n      }\n    }\n    return result;\n  }\n\n  getSelectorMap(selector) {\n    let map = this.selectorMap.get(selector);\n    if (map) {\n      return map;\n    }\n    map = new Map();\n    if (!selector) {\n      return map;\n    }\n    const tokens = selector.split(/\\.|#/g);\n    const selectorId = selector.indexOf(\"#\" )>=0 ? selector.split(/#/g)[1].split(/\\./g)[0]:\"\";\n    const classes = [];\n    let id = \"\";\n    let tag = \"\";\n    for (let token of tokens) {\n      if (selectorId===token) {\n        id = token;\n      } else if (selector.indexOf(\".\" + token) >= 0) {\n        classes.push(token);\n      } else {\n        tag = token;\n      }\n    }\n    map.set(\"id\", id);\n    map.set(\"class\", classes);\n    map.set(\"tag\", tag);\n    this.selectorMap.set(selector, map);\n    return map;\n  }\n  isMatch(sel, selector) {\n    // console.log(\"sel:\" + sel + \"/selector:\" + selector);\n    const mapA = this.getSelectorMap(sel);\n    const mapB = this.getSelectorMap(selector);\n    const tagName = mapB.get(\"tag\");\n    const id = mapB.get(\"id\");\n    if (tagName !== \"\" && mapA.get(\"tag\") !== tagName) {\n    // console.log(\"false:01 sel:\" + sel + \"/selector:\" + selector);\n      return false;\n    }\n    if (id !== \"\" && mapA.get(\"id\") !== id) {\n    // console.log(\"false:02 sel:\" + mapA.get(\"id\") + \"/selector:\" + id);\n      return false;\n    }\n\n    const classesA = mapA.get(\"class\");\n    const classesB = mapB.get(\"class\");\n    for (let classB of classesB) {\n      let isMatched = false;\n      for (let classA of classesA) {\n        if (classB === classA) {\n          isMatched = true;\n        }\n      }\n      if (isMatched === false) {\n      // console.log(\"false:03 sel:\" + sel + \"/selector:\" + selector);\n        return false;\n      }\n    }\n    if (selector === \"\") {\n    // console.log(\"false:04 sel:\" + sel + \"/selector:\" + selector);\n      return false;\n    }\n    // console.log(\"sel:\" + sel + \"/selector:\" + selector);\n    return true;\n  }\n}\n","const baseActions = [\"Attach\"];\nexport class ActionCreator {\n  constructor() {}\n  static getBaseActions() {\n    return baseActions;\n  }\n  static createAction(key, data, storeKey = null) {\n    return {type: key, data: data, storeKey: storeKey};\n  }\n  static createBaseAction(type, targetView,data, storeKey = null){\n    const addData = data && typeof data === \"object\"\n      ? data\n      : {};\n    addData.targetView = targetView;\n    addData.selector = targetView?targetView.id:null;\n    addData.storeKey = storeKey;\n    return {type:type , data: addData};\n  }\n  static creatAttachAction(parentView, newView, data, storeKey = null) {\n    // console.log(\"creatAttachAction\");\n    // console.log(newView);\n    const addData = data && typeof data === \"object\"\n      ? data\n      : {};\n    //alert(newView);\n    addData.parentView = parentView;\n    addData.selector = newView.id;\n    addData.storeKey = storeKey;\n    return {type: \"Attach\", data: addData};\n  }\n  static createShowViewAction(key, oldVnode, selector, data, storeKey = null) {\n    return ActionCreator.createGoOtherViewAction(key, null, oldVnode, selector, data, storeKey);\n  }\n  static createGoOtherViewAction(key, view, oldVnode, selector, data, storeKey = null) {\n    let addData = data;\n    if (!view && !oldVnode) {\n      console.log('createGoOtherViewAction is null!');\n      return {type: key, data: addData, storeKey: storeKey};\n    }\n    if (!data) {\n      addData = {};\n    }\n    addData.view = view;\n    addData.oldVnode = oldVnode;\n    addData.selector = selector;\n    return {type: key, data: addData, storeKey: storeKey};\n  }\n  static isEquals(a, b) {\n    if (a && b && a.type === b.type) {\n      return true;\n    }\n    return false;\n  }\n}\n","const avtiveViews = {};\nconst activeViewList = [];\nexport class ViewAttachQueue {\n  constructor() {\n    this.queue = [];\n  }\n  addActiveView(parentView, view, lastTree) {\n    const parentId = parentView.id;\n    const currentId = view.id;\n    // console.log(\"addActiveView currentId:\" + currentId);\n    const resultParent = this.findActivViews(avtiveViews, parentId);\n\n    // console.log(\"addActiveView resultParent:\" + resultParent);\n    if (resultParent && resultParent.primaryView) {\n      const currentTree = resultParent[currentId];\n      if (currentTree && currentTree.primaryView) {\n        currentTree.primaryView = view;\n        currentTree.parent = resultParent;\n      } else {\n        if (lastTree) {\n          lastTree.parent = resultParent;\n          resultParent[currentId] = lastTree;\n        } else {\n          resultParent[currentId] = {\n            primaryView: view,\n            parent: resultParent\n          };\n        }\n      }\n    } else {\n      avtiveViews[currentId] = lastTree\n        ? lastTree\n        : {\n          primaryView: view,\n          parent: avtiveViews\n        };\n    }\n    this.loadAllActiveViews();\n  }\n  changeActiveView(currentView, nextView, nextViewTree) {\n    const currentId = currentView.id;\n    // console.log(\"changeActiveView currentId:\" + currentId);\n    const resultCurrent = this.findActivViews(avtiveViews, currentId);\n    if (!resultCurrent) {\n      return;\n    }\n    const parent = resultCurrent.parent;\n    delete parent[currentId];\n    const nextId = nextView.id;\n    if (nextViewTree && nextViewTree.primaryView) {\n      parent[nextId] = nextViewTree;\n      nextViewTree.primaryView = nextView;\n      nextViewTree.parent = parent;\n    } else {\n      parent[nextId] = {\n        primaryView: nextView,\n        parent: parent\n      };\n    }\n    this.loadAllActiveViews();\n    return resultCurrent;\n  }\n  removeActiveView(view) {\n    const currentId = view.id;\n    // console.log(\"removeActiveView currentId:\" + currentId);\n    const resultCurrent = this.findActivViews(avtiveViews, currentId);\n    if (!resultCurrent) {\n      return;\n    }\n    const parent = resultCurrent.parent;\n    delete parent[currentId];\n\n    this.loadAllActiveViews();\n    return resultCurrent;\n  }\n\n  findActivViews(activeViewsTree, id, callback, count) {\n    let retView = null;\n    const next = count\n      ? count + 1\n      : 1;\n    if (next > 5) {\n      return null;\n    }\n    if (activeViewsTree) {\n      for (let viewId in activeViewsTree) {\n        if (viewId === undefined || viewId === 'undefined' || viewId === 'parent' || viewId === 'primaryView') {\n          continue;\n        }\n        const current = activeViewsTree[viewId];\n        if (!current.primaryView || !current.parent) {\n          continue;\n        }\n        if (callback) {\n          callback(current);\n        }\n        if (viewId === id) {\n          retView = current;\n        } else if (current && viewId !== 'view' && viewId !== '0') {\n          retView = this.findActivViews(current, id, callback, next);\n        }\n      }\n    }\n    return retView;\n  }\n  loadAllActiveViews() {\n    const resultList = [];\n    this.findActivViews(avtiveViews, 'all', (current) => {\n      resultList.push(current)\n    });\n    const currentLength = activeViewList.length;\n    for (let i = 0; i < currentLength; i++) {\n      activeViewList.pop();\n    }\n    for (let result of resultList) {\n      if (!result.primaryView || !result.parent) {\n        continue;\n      }\n      activeViewList.push(result.primaryView);\n    }\n    return activeViewList;\n  }\n  getActiveViewList() {\n    return activeViewList;\n  }\n}\n","import {ObjectUtil} from '../objectUtil';\n\nconst mainHolder = new Map();\nconst mainKey = 'aaa';\nexport class Store {\n  constructor(service) {\n  }\n  static getStore(key) {\n    const newKey = key ? key : mainKey;\n    const store = mainHolder.has(newKey) ? mainHolder.get(newKey) : null;\n    const clonedStore = store ? ObjectUtil.simpleDeepClone(store) : {};\n    clonedStore['oldVnode'] = store ?store['oldVnode']: null;\n    return clonedStore;\n  }\n  static setStore(store, key) {\n    const newKey = key ? key : mainKey;\n    const clonedStore = store ? ObjectUtil.simpleDeepClone(store) : {};\n    clonedStore['oldVnode'] = store ?store['oldVnode']:null;\n    mainHolder.set(newKey, clonedStore);\n  }\n}\n","import {Store} from './store';\nimport {ViewAttachQueue} from './viewAttachQueue';\nimport {ActionDispatcher} from './actionDispatcher'\nconst viewAttachQueue = new ViewAttachQueue();\nconst actionMap = new Map();\nexport class ActionDispatcherImple {\n  constructor(view) {\n    this.view = view;\n    this.updateMap = new Map();\n    this.updateQueue = [];\n  }\n  static add(action, reducer) {\n    // console.log('ActionDispatcherImple add00:' + action);\n    if (!action) {\n      return false;\n    }\n    // console.log('ActionDispatcherImple add01:' + action.type);\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      if (!reducers.includes(reducer)) {\n        reducers.push(reducer);\n      } else {\n        return false;\n      }\n    } else {\n      actionMap.set(type, [reducer]);\n    }\n    return true;\n  }\n  static remove(action) {\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      if (!reducers.includes(reducer)) {\n        const index = reducers.indexof(reducer);\n        reducers.splice(index, 1)\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n  async dispatch(action) {\n    const type = action.type;\n    if (!type) {\n      return false;\n    }\n    const data = action.data;\n    const storeKey = action.storeKey;\n    let store = Store.getStore(storeKey);\n    let targetView = this.view;\n    if (actionMap.has(type)) {\n      const reducers = actionMap.get(type);\n      for (let reducer of reducers) {\n        //console.log(\"A01 dispatch type:\"+type+\"/reducer.reduce:\"+reducer.reduce)\n        await reducer.preReduce(store, action).catch((e)=>{console.log(e)});\n        await reducer.reduce(store, action).catch((e)=>{console.log(e)});\n        await reducer.postReduce(store, action).catch((e)=>{console.log(e)});\n      }\n      //console.log(\"A01 dispatch type:\"+type+\"/\"+reducers[0])\n      //console.log(reducers[0])\n      Store.setStore(store);\n    }\n\n    let storeB = Store.getStore(storeKey);\n    //console.log(\"A01 dispatch \")\n    //console.log(storeB)\n    // console.log('dispatch02');\n    if (store.isOrverride && action.data.view) {\n      targetView = action.data.views;\n      if (this.view.onViewHide(targetView, data) === false) {\n        return;\n      }\n      this.callUpdate(targetView, data, storeKey);\n      this.view.onViewHidden(targetView, data);\n    } else {\n      this.callUpdate(targetView, data, storeKey);\n    }\n    //store = Store.getStore(storeKey);\n    return true;\n  }\n  callUpdate(targetView, actionData, storeKey) {\n    const activViews = viewAttachQueue.getActiveViewList();\n    for (let activeView of activViews) {\n      const store = Store.getStore(storeKey);\n      if (targetView === activeView) {\n        //console.log('A0 callUpdate update id:' + activeView.id);\n        const promise = targetView.updateReactiveTheTargetView(store, actionData);\n        if(promise){\n          if(!promise.then){\n            alert(\"your view has override method name 'updateReactiveTheTargetView'! activeView.id):\"+activeView.id);\n            return ;\n          }\n          promise.then(()=>{},(e)=>{console.log(e)});\n        }else{\n          console.log(activeView);\n        }\n      } else {\n         //console.log('A0 callUpdate updateReactive id:' + activeView.id);\n        const promise = activeView.updateReactive(store, actionData);\n        if(promise){\n          if(!promise.then){\n            alert(\"your view has override method name 'updateReactive'! activeView.id):\"+activeView.id);\n            return ;\n          }\n          promise.then(()=>{},(e)=>{console.log(e)});\n        }else{\n          //console.log(activeView);\n        }\n      }\n    }\n    // console.log('callUpdate END----------------');\n  }\n}\n","import {ActionDispatcherImple} from './actionDispatcherImple'\nexport class ActionDispatcher {\n  constructor() {\n  }\n  static create(view){\n    return new ActionDispatcherImple(view);\n  }\n  static createStandAlone(){\n    return new ActionDispatcherImple(false);\n  }\n}\n","import {patch, h} from './preLoader'\nexport class V {\n  static div() {}\n}\nconst setProps = (data, inputs) => {\n  let newData = {};\n  if (data && typeof data === \"object\") {\n    if (!data.props) {\n      data.props = {};\n    }\n    newData = data;\n  } else {\n    newData = {\n      props: {}\n    };\n  }\n  for (let key in inputs) {\n    newData.props[key] = inputs[key];\n  }\n  return newData;\n}\nconst vtags = (tagName, id, classNames, data = {}, children, text) => {\n  const id1 = tagName + (\n    id && typeof id === \"string\"\n    ? \"#\"+id\n    : \"\");\n  const id2 = id1 + (\n    classNames\n    ? (Array.isArray(classNames) && classNames.length > 0 && typeof classNames[0] === \"string\")\n      ? \".\" + classNames.join(\".\")\n      : (\n        (Array.isArray(id) && id.length > 0 && typeof id[0] === \"string\")\n        ? \".\" + id.join(\".\")\n        : '')\n    : \"\");\n  const childrenArray = children && Array.isArray(children)\n    ? children\n    : (\n      data && Array.isArray(data)\n      ? data\n      : (\n        Array.isArray(classNames) && classNames.length > 0 && typeof classNames[0] === \"object\"\n        ? classNames\n        : []));\n  const currentText = text\n    ? text\n    : (\n      children && typeof children === \"string\"\n      ? children\n      : data && typeof data === \"string\"\n        ? data\n\n        : classNames && typeof classNames === \"string\"\n          ? classNames\n        : \"\");\n  let currentData = typeof data === \"string\" || Array.isArray(data)\n    ? {}\n    : data;\n  if (children !== undefined && text === undefined && classNames && !Array.isArray(classNames) && typeof classNames === \"object\") {\n    currentData = classNames;\n  } else if (children === undefined && text === undefined && id && !Array.isArray(id) && typeof id === \"object\") {\n    currentData = id;\n  }\n  const toString = Object.prototype.toString\n  //console.log(\"●id2:\" + id2 + \"/\" + typeof currentData + \"/currentData:\" + currentData + \"/toString:\" + toString.call(currentData)+\"/children:\"+childrenArray+\"/\"+Array.isArray(childrenArray)+\"/text:\"+currentText);\n  const childNode = childrenArray.length > 0\n    ? childrenArray\n    : currentText;\n  const newVnode = h(id2, currentData, childNode);\n  //console.log(newVnode);\n  return newVnode;\n}\n//a div span img ul li input label\nexport const a = (id, classNames, href, data, children) => {\n  return vtags(\"a\", id, classNames, setProps(data, {href: href}), children, null);\n}\nexport const div = (id, classNames, data, children, text) => {\n  return vtags(\"div\", id, classNames, data, children, text);\n}\n\nexport const span = (id, classNames, data, children, text) => {\n  return vtags(\"span\", id, classNames, data, children, text);\n}\n\nexport const img = (id, classNames, alt, src, data) => {\n  return vtags(\"img\", id, classNames, setProps(data, {\n    alt: alt,\n    src: src\n  }), null, null);\n}\n\nexport const ul = (id, classNames, data, children, text) => {\n  return vtags(\"ul\", id, classNames, data, children, text);\n}\n\nexport const li = (id, classNames, data, children, text) => {\n  return vtags(\"li\", id, classNames, data, children, text);\n}\n\nexport const file = (id, classNames, data, value, text) => {\n  return vtags(\"input\", id, classNames, setProps(data, {type: \"file\"}), null, text);\n}\nexport const input = (id, classNames, data, type, text) => {\n  return vtags(\"input\", id, classNames, setProps(data, {\n    type: type,\n    value: text\n  }), null, text);\n}\nexport const label = (id, classNames, data, children, text) => {\n  return vtags(\"label\", id, classNames, data, children, text);\n}\nexport const select = (id, classNames, data, children, text) => {\n  return vtags(\"select\", id, classNames, data, children, text);\n}\nexport const option = (id, classNames, data, children, text) => {\n  return vtags(\"option\", id, classNames, data, children, text);\n}\n\nexport const createSelectVnode = (id, classes, name, optionsData, selectedValue, suffix = \"\") => {\n  const options = [];\n  const isArray = Array.isArray(optionsData);\n  for (let key in optionsData) {\n    const text = optionsData[key];\n    // alert(\"selectedValue:\" + selectedValue + \"/key:\" + key + \"/\" + (        selectedValue === key))\n    if ((!isArray && key === selectedValue) || (isArray && text+\"\" === selectedValue+\"\")) {\n      //console.log(\"★　matched　selectedValue:\"+selectedValue+\"/text:\"+text)\n      const optionSelected = option(\"\", [\"\"], {\n        attrs: {\n          value: isArray\n            ? text\n            : key,\n          selected: \"true\"\n        }\n      }, text + suffix);\n      options.push(optionSelected);\n    } else {\n      const optionNode = option(\"\", [\"\"], {\n        attrs: {\n          value: isArray\n            ? text\n            : key\n        }\n      }, text + suffix);\n      options.push(optionNode);\n    }\n  }\n  return select(id, classes, {\n    props: {\n      name: name\n    }\n  }, options);\n}\n","import {ActionCreator} from './actionCreator'\nexport class ViewBaseActions {\n  constructor() {\n  }\n  static getGotoAnotherViewAction(view, selector, data){\n    if(!view){\n      console.log('getGotoAnotherViewAction view:'+view);\n    }\n    return ActionCreator.createGoOtherViewAction('GotoAnotherView',view,null, selector, data);\n  }\n  static getShowViewAction(oldVnode, selector, data){\n    if(!oldVnode){\n      console.log('getShowViewAction oldVnode:'+oldVnode);\n    }\n    return ActionCreator.createShowViewAction('ShowView',oldVnode, selector, data);\n  }\n}\n","import {ActionCreator} from './actionCreator'\nimport {ActionDispatcherImple} from './actionDispatcherImple'\nexport class BaseReducer {\n  constructor(isBaseUse) {\n    this.isBaseUse = isBaseUse;\n    // console.log('BaseReducer constructor:' + isBaseUse);\n    if (isBaseUse) {\n      const baseActions = ActionCreator.getBaseActions();\n      for (let index in baseActions) {\n        const type = baseActions[index];\n        this.atatch({type: type});\n      }\n    }\n  }\n  atatch(action) {\n    // console.log('A0 BaseReducer atatch action:' + action);\n    // console.log(this);\n    ActionDispatcherImple.add(action, this);\n  }\n  detach(action) {\n    ActionDispatcherImple.delete(action, this);\n  }\n  async preReduce(store, action) {\n    // console.log('A0 BaseReducer preReduce:' + action);\n    store.isOrverride = false;\n    return store;\n  }\n  async reduce(store, action) {\n    // console.log('A0 BaseReducer reduce:' + action);\n    store.isOrverride = true;\n\n    store.oldVnode = action.data.oldVnode;\n    store.selector = \"#\" + action.data.selector;\n    //alert(store);\n    return store;\n  }\n  async postReduce(store, action) {\n    // console.log('A0 BaseReducer postReduce:' + action);\n    return store;\n  }\n}\nnew BaseReducer(true);\n","import {ViewBaseActions} from './viewBaseActions'\nimport {ActionCreator} from './actionCreator'\nimport {BaseReducer} from './baseReducer'\nexport class ViewBaseReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.atatch(ViewBaseActions.getGotoAnotherViewAction());\n    this.atatch(ViewBaseActions.getShowViewAction());\n  }\n  async reduce(store,action) {\n    //console.log('reduce! action:'+action);\n    //console.log('reduce! oldVnode:'+action.data.oldVnode);\n    if(ActionCreator.isEquals(ViewBaseActions.getGotoAnotherViewAction(),action)){\n      // todo update menue\n      //console.log('getGotoAnotherViewAction!');\n    }else if(ActionCreator.isEquals(ViewBaseActions.getShowViewAction(),action)){\n      store.isOrverride=true;\n\n      store.oldVnode=action.data.oldVnode;\n      store.selector=\"#\"+action.data.selector;\n    }\n    //console.log('reduced...');\n    return store;\n  }\n}\nconst viewBaseReducer = new ViewBaseReducer();\n","import vu from \"../viewUtil\";\nimport {patch} from './base/preLoader'\nimport {ElementSelector} from './elementSelector'\nimport {ActionCreator} from './actionCreator'\nimport {ViewAttachQueue} from './viewAttachQueue'\nimport {ActionDispatcher} from './actionDispatcher'\nimport {Store} from './store'\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"./base/vtags\";\nimport {ViewBaseReducer} from './viewBaseReducer'\nconst viewAttachQueue = new ViewAttachQueue();\nconst nodeFrame = {\n  rootVnode: null,\n  ms: null\n};\nexport class BaseView {\n  constructor(id, className,isNotRenderWrap=false) {\n    this.dispatcher = ActionDispatcher.create(this);\n    this.id = id;\n    this.className = className;\n    this.isNotRenderWrap = isNotRenderWrap;\n    this.ms = nodeFrame.ms;\n    this.es = new ElementSelector();\n    const store = Store.getStore();\n    this.onViewLoad(store)\n    //this.preRender(id, className);\n    this.currentVnode = null;\n    this.onViewLoaded(store)\n    this.updateReactiveCallCount = 0;\n    this.updateReactiveCallTimer = null;\n    this.updateCount = 0;\n  }\n  static setRootVnode(rootVnode) {\n    nodeFrame.rootVnode = rootVnode;\n  }\n  static setMainService(ms) {\n    if (ms) {\n      nodeFrame.ms = ms;\n    }\n  }\n  patch(selector, newVnode) {\n    return this.patchFromOtherVnode(nodeFrame.rootVnode, selector, newVnode);\n  }\n  initialPatch() {\n    let elements = document.getElementsByTagName(\"body\");\n    elements[0].innerHTML = '<div id=\"rootNodeA\"><p>ｘ</p></div>';\n    let currentVnode = document.getElementById('rootNodeA');\n    this.patchFromOtherVnode(currentVnode, null, this.render());\n    this.updateReactiveTheTargetView({oldVnode: this.currentVnode, selector: null, isOrverride: true}).catch((e)=>{console.log(e)});\n  }\n  patchFromOtherVnode(currentVnode, selector, newVnode) {\n    let currentRootNode = selector !== null\n      ? //for firstTime\n      nodeFrame.rootVnode\n      : currentVnode;\n    let currentSelector = selector;\n    let currentNewNode = newVnode;\n    const result = this.es.patch(currentRootNode, currentSelector, currentNewNode);\n    result.data['name'] = this.name + Date.now();\n    nodeFrame.rootVnode = result;\n    this.currentVnode = this.es.getElements(result, '#' + this.id)[0];\n\n    // console.log(selector+'/#' + this.id);\n    // console.log(result);\n    // console.log('C01 this.id:' + this.id);\n    // console.log('C01 --baseView.patchFromOtherVnode currentVnode;' + currentVnode + '/selector:' + selector + '/currentSelector:' + currentSelector + '/this:' + this.currentVnode + '/' + this.es.getElements(result, selector));\n    return result;\n  }\n  prePatch(selector, newVnode) {\n    if (!this.currentVnode) {\n      this.currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n    }\n    if (!this.currentVnode) {\n      console.log('!!!!prePatch nodeFrame.rootVnode: ' + JSON.stringify(nodeFrame.rootVnode));\n    }\n    //console.log('!!A!!prePatch ' +  JSON.stringify(this.currentVnode) + '/this.id:' + this.id+\"/selector:\"+selector+\"/\"+this.es.getElements(this.currentVnode , selector)[0]);\n    this.currentVnode.data['name'] = this.name + Date.now();\n    // console.log('!!B!!prePatch ' + this.currentVnode + '/this.id:' + this.id);\n    this.currentVnode = this.es.prePatch(this.currentVnode, selector, newVnode);\n    return this.currentVnode;\n  }\n  async updateReactiveTheTargetView(store, actionData) {\n    const oldVnode = store.oldVnode;\n    const selector = store.selector;\n    const isOrverride = store.isOrverride;\n    console.log('A00 update --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/this.currentVnode:' + this.currentVnode + \"/\" + typeof this.currentVnode);\n    if (isOrverride) {\n      this.onPreViewBuild(oldVnode, store);\n      this.currentVnode = !this.currentVnode\n        ? this.renderWrap(store)\n        : this.currentVnode;\n    } else if (!this.currentVnode) {\n      this.currentVnode = this.es.getElements(result, '#' + this.id)[0];\n    }\n    await this.onViewShow(store, actionData).catch((e)=>{console.log(e)});\n    if (isOrverride) {\n      if (oldVnode) {\n        this.patchFromOtherVnode(oldVnode, selector, this.currentVnode);\n      } else {\n        this.patchFromOtherVnode(null , '#' + this.id, this.currentVnode);\n      }\n    } else {\n      this.patch('#'+this.id, this.currentVnode);\n    }\n    this.updateCount++;\n    console.log(\"this.id:\"+this.id);\n    if (this.updateCount <= 2) {\n      this.onAfterAttachWrap(store, actionData);\n    }else{\n      setTimeout(() => {\n        this.updateCount = 0\n      });\n    }\n    await this.onViewShown(store, actionData).catch((e)=>{console.log(e)});\n  }\n  async updateReactive(store, actionData) {\n    // this.updateReactiveCallCount++;\n    if (this.updateReactiveCallTimer) {\n      clearTimeout(this.updateReactiveCallTimer);\n    }\n    this.updateReactiveCallTimer = setTimeout(async() => {\n      const oldVnode = store.oldVnode;\n      const selector = store.selector;\n      const isOrverride = store.isOrverride;\n      this.currentVnode = this.currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];;\n      // console.log('A0101 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n      await this.onViewShow(store, actionData).catch((e)=>{console.log(e)});\n      // console.log('A102 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n      this.patch(\"#\" + this.id, this.currentVnode);\n      // console.log('A103 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n      //this.onAfterAttach(store);\n      // console.log('A104 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n      await this.onViewShown(store, actionData).catch((e)=>{console.log(e)});\n      // console.log('A105 --oldVnode:' + oldVnode + '/isOrverride=' + isOrverride + '/selector=' + selector + '/currentVnode:' + this.currentVnode);\n    });\n}\ninit() {}\n// attache to\nattach(parentView = this.parentView, selector, data) {\n  this.parentView = parentView;\n  let taregetSelecotor = selector;\n  if (!selector) {\n    console.log(\"★attach selector is null :\" + selector+\"/this.id:\"+this.id);\n    taregetSelecotor = this.id;\n  }\n  if (this.isAttached()) {\n    alert('attached!!!');\n    return;\n  }\n  //\n  const store = Store.getStore();\n  this.onPreViewBuild(store)\n  this.activeViewTree = viewAttachQueue.addActiveView(parentView, this, this.activeViewTree);\n  // console.log('A08---show selector:' + taregetSelecotor + '/parentView:' + parentView.id + \"/this.id:\" + this.id);\n  const action = ActionCreator.creatAttachAction(parentView, this, data);\n  this.dispatch(action);\n}\nisAttached() {\n  const currentVnode = this.es.getElements(nodeFrame.rootVnode, '#' + this.id)[0];\n  if (currentVnode === this.currentVnode) {\n    return true;\n  }\n  return false;\n}\ndispatch(action) {\n  this.dispatcher.dispatch(action);\n  console.log(\"dispatchered /this.id:\"+this.id);\n}\ngetElementById(id) {\n  const elements = this.es.getElements(this.currentVnode, '#' + id);\n  return elements && elements.length > 0\n    ? elements[0]\n    : null;\n}\nonAfterAttachWrap(store, actionData) {\n  this.updateCount++;\n  if (this.updateCount > 2) {\n    return;\n  }\n  this.onAfterAttach(store, actionData);\n}\nonAfterAttach(store, actionData) {\n  const currentVnode = this.currentVnode;\n  // while (viewAttachQueue.hasItem()) {\n  //   let item = viewAttachQueue.poll();\n  //   item.view.currentVnode = this.es.getElements(currentVnode, item.selector);\n  // }\n}\nchangeAnotherView(parentView, selector, nextView) {\n  this.onViewHide(nextView, store, actionData);\n  const action = ActionCreator.creatAttachAction(parentView, this, data);\n  this.dispatch(action);\n  this.onViewHidden(nextView, store, actionData);\n}\n// Event listener\nonViewLoad(store, actionData) {\n  console.log('m001 baseView.onViewLoad name:' + name + '/actionData:' + actionData);\n}\nonViewLoaded(store, actionData) {\n  console.log('m002 baseView.onViewLoaded name:' + name + '/actionData:' + actionData);\n}\nonPreViewBuild(store, actionData) {\n  console.log('m003a baseView.onPreViewBuild store:' + store + '/actionData:' + actionData);\n}\nasync onViewShow(store, actionData) {\n  console.log('m003 baseView.onViewShow newNode:' + '/store:' + store);\n}\nasync onViewShown(store, actionData) {\n  console.log('m004 baseView.onViewShown newNode:' + '/store:' + store);\n  //console.log(JSON.stringify(this.currentVnode));\n}\nasync onViewHide(nextView, store, actionData) {\n  console.log('m005 baseView.onViewHide nextView:' + nextView + '/actionData:' + actionData);\n  //console.log(JSON.stringify(this.currentVnode));\n  return true;\n}\nasync onViewHidden(nextView, store, actionData) {\n  console.log('m006 baseView.onViewHidden nextView:' + nextView + '/actionData:' + actionData);\n}\nrender() {\n  const elm = vu.create(\"BaseView\", \"BaseView\");\n  return elm;\n}\nrenderWrap(store, data) {\n  // console.log('renderWrap');\n\n  const newVnode = this.isNotRenderWrap? this.render(store, data): div(this.id, [this.className], {}, [this.render(store, data)]);\n  // console.log(newVnode)\n  return newVnode;\n}\ngetAnker() {\n  return this.elm;\n}\n}\n","import vu from \"../util/viewUtil\";\nimport {\n  BaseView\n} from \"../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../util/reactive/base/vtags\";\nexport class Header extends BaseView {\n  constructor(titleText) {\n    super(\"header\", \"header\");\n    this.titleText = titleText;\n  }\n  render() {\n    const newVnode = div(\"aaa\",{\n      style: {\n        color: '#000'\n      }\n    }, [div(\"title\", [\"title\"], this.titleText)]);\n    return newVnode;\n  }\n}\n","import vu from \"../util/viewUtil\";\nimport {BaseView} from \"../util/reactive/baseView\";\nimport {a,div,li,ul,img,span,input,label} from \"../util/reactive/base/vtags\";\nexport class Menu  extends BaseView {\n  constructor() {\n    super(\"menu\", \"Menu\");\n    this.text=\"Menu\";\n    this.menuButtonClass=\"MenuButton\";\n    this.selected =\"\";\n    this.idOfStep0 ='step0'\n    this.idOfStep1 ='step1'\n    this.idOfStep2 ='step2'\n    this.idOfStep3 ='step3'\n    this.idOfStep4 ='step4'\n  }\n  render() {\n    return div(this.id+'Frame', [\"MenuFrame\"], this.createButtons());\n  }\n\n  onClick(id){\n    return (event)=>{\n      alert(\"onClick id:\"+id);\n    }\n  }\n  createButtons(){\n    const menuTabs = [];\n    menuTabs.push(div('',[this.menuButtonClass],{on:{click:this.onClick(this.idOfStep0)}},'Step0 Select or New'))\n    menuTabs.push(div('',[this.menuButtonClass],{on:{click:this.onClick(this.idOfStep1)}},'Step1 Work Setting'))\n    menuTabs.push(div('',[this.menuButtonClass],{on:{click:this.onClick(this.idOfStep2)}},'Step2 Select Files'))\n    menuTabs.push(div('',[this.menuButtonClass],{on:{click:this.onClick(this.idOfStep3)}},'Step3 Export'))\n    menuTabs.push(div('',[this.menuButtonClass],{on:{click:this.onClick(this.idOfStep4)}},'Step4 Pref'))\n    return menuTabs;\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class ProgressActionCreator {\n  constructor() {}\n  static creatAddAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addProgressBar\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeProgressBar\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateProgressBar\", targetView, data, storeKey);\n  }\n  static creatCompleatAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"compleatProgressBar\", targetView, data, storeKey);\n  }\n}\n","const ua = navigator.userAgent.replace(/[\\.0-9]+/g,\"x\");\nconst domain = window.location;\nexport default {\n  dbName:\"CopiBon\",\n  ua:ua,\n  domain:domain\n}\n","export default class IdbUtil {\n  static currentTables(table,tabels){\n    return tabels?tabels:[table];\n  }\n  // static async getTransaction(db,tables,mode,reject,reject){\n  //   let transaction = db.transaction(tables, mode);\n  //   transaction.oncomplete = (event) => {\n  //     db.close();\n  //     resolve();\n  //   };\n  //   transaction.onerror = (event) => {\n  //     db.close();\n  //     reject();\n  //   };\n  // }\n\n  //private\n  static isMutch(value, condetions) {\n    if (condetions === undefined || condetions === null) {\n      return false;\n    }\n    if (Array.isArray(condetions)) {\n      for (let condition of condetions) {\n        if (IdbUtil.isMutch(value, condition)) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      for (let key in condetions) {\n        let condition = condetions[key];\n        if (typeof condition === 'object') {\n          if (IdbUtil.isMutch(value, condition)) {\n            return true;\n          }\n        } else {\n          let target = value[key];\n          if (target !== condition) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  };\n  static makeKeyRange(start, end, isNotEqualStart, isNotEqualEnd) {\n    return (isNotEqualStart === undefined && isNotEqualEnd === undefined)\n      ? IDBKeyRange.bound(start, end, false, false)\n      : IDBKeyRange.bound(start, end, isNotEqualStart, isNotEqualEnd);\n  }\n  static makeKeyRangeUpper(start, isNotEqualStart) {\n    return (isNotEqualStart !== true)\n      ? IDBKeyRange.upperBound(start)\n      : IDBKeyRange.upperBound(start, isNotEqualStart);\n  }\n  static makeKeyRangeLower(end, isNotEqualEnd) {\n    return (isNotEqualStart !== true)\n      ? KeyRange.lowerBound(end)\n      : IDBKeyRange.lowerBound(end, isNotEqualEnd);\n  }\n  static makeKeyRangeOnly(only) {\n    return (isNotEqualStart !== true)\n      ? IDBKeyRange.only(only)\n      : IDBKeyRange.lowerBound(end, isNotEqualEnd);\n  }\n  //IDを生成\n  static buildKeyPath(key1, key2, key3, key4, key5) {\n    let array = [];\n    if (key1 !== undefined) {\n      array.push((key1 + \"\").split(\"&\").join(\"&amp;\").split(\".\").join(\"&#046;\"));\n    }\n    if (key2 !== undefined) {\n      array.push((key2 + \"\").split(\"&\").join(\"&amp;\").split(\".\").join(\"&#046;\"));\n    }\n    if (key3 !== undefined) {\n      array.push((key3 + \"\").split(\"&\").join(\"&amp;\").split(\".\").join(\"&#046;\"));\n    }\n    if (key4 !== undefined) {\n      array.push((key4 + \"\").split(\"&\").join(\"&amp;\").split(\".\").join(\"&#046;\"));\n    }\n    if (key5 !== undefined) {\n      array.push((key5 + \"\").split(\"&\").join(\"&amp;\").split(\".\").join(\"&#046;\"));\n    }\n    return array.join(\"\");\n  };\n}\n","import IdbUtil from './idbUtil'\nconst MODE_R = \"readonly\";\nconst MODE_RW = \"readwrite\";\nexport default class IndexeddbHelper {\n  constructor(dbName) {\n    this.IDBKeyRange = window.IDBKeyRange;\n    this.indexedDB = window.indexedDB;\n    this.dbName = dbName;\n    this.keyPathMap = {};\n  }\n\n  getOpenDB(newVersion) {\n    return new Promise((resolve, reject) => {\n      let request = this.indexedDB.open(this.dbName, newVersion);\n      request.onsuccess = (event) => {\n        resolve(event.target.result);\n      };\n      request.onupgradeneeded = (event) => {\n        resolve(event.target.result);\n      };\n      request.onabort = (e) => {\n        resolve(e);\n      };\n      request.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n\n  getObjectStore(db, tableName, tables, mode) {\n    let transaction = db.transaction(tables, mode);\n    transaction.oncomplete = (event) => {\n      db.close();\n    };\n    transaction.onerror = (event) => {\n      db.close();\n    };\n    return transaction.objectStore(tableName);\n  }\n  throwNewError() {\n    return(e) => {\n      if (e.stack) {\n        console.log(e.stack);\n      } else {\n        console.log(e.message, e);\n      }\n      throw new Error(e);\n    }\n  }\n  getKeyPathByMap(tableName) {\n    return this.keyPathMap[tableName];\n  }\n  async getKeyPath(tableName) {\n    let keyPathName = this.keyPathMap[tableName];\n    if (keyPathName !== undefined && keyPathName !== null) {\n      return keyPathName;\n    }\n    const db = await this.getOpenDB().catch(this.throwNewError());\n    let objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n    db.close();\n    let keyPathNameCurrent = objectStore.keyPath;\n    this.keyPathMap[tableName] = keyPathNameCurrent;\n    return keyPathNameCurrent;\n  }\n  //private\n  async getCurrentVersion() {\n    let db = await this.getOpenDB().catch(this.throwNewError());\n    const version = db.version;\n    db.close();\n    return version;\n  };\n  //public\n  async selectAll(payload) {\n    let {tableName, range, condetions} = payload;\n    return await this._selectAll(tableName, range, condetions);\n  }\n  //Select In-line-Keyで返す。\n  async _selectAll(tableName, range, direction) {\n    const db = await this.getOpenDB().catch(this.throwNewError());\n    let objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n    return await this._selectAllExecute(objectStore, range);\n  };\n  _selectAllExecute(objectStore, range, isGetFirstOne) {\n    return new Promise((resolve, reject) => {\n      const list = [];\n      let req = range === undefined\n        ? objectStore.openCursor()\n        : objectStore.openCursor(range);\n      req.onsuccess = (event) => {\n        let cursor = event.target.result;\n        if (cursor) {\n          list.push(cursor.value);\n          if (isGetFirstOne) {\n            resolve(list[0]);\n            return;\n          }\n          cursor.continue();\n        } else {\n          resolve(list);\n        }\n      };\n      req.onerror = (e) => {\n        reject(e);\n      };\n    });\n\n  }\n  //public\n  async selectByKey(payload) {\n    let {tableName, key} = payload;\n    return await this._selectByKey(tableName, key);\n  }\n  //Select In-line-return promise;Keyで返す。\n  async _selectByKey(tableName, key) {\n    const db = await this.getOpenDB().catch(this.throwNewError());\n    console.log(\"_selectByKey tableName:\"+tableName+\"/pk:\"+key);\n    console.log(key);\n    return await this._selectByKeyOnTran(db, tableName, key).catch(this.throwNewError());\n  }\n  _selectByKeyOnTran(db, tableName, key, tables) {\n    return new Promise((resolve, reject) => {\n      let objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n      let request = objectStore.get(key); //keyはsonomama\n      request.onsuccess = (event) => {\n        resolve(request.result);\n      };\n      request.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n  //public\n  async selectFirstOne(payload) {\n    let {tableName, range, direction} = payload;\n    return await this._selectFirstOne(tableName, range, direction);\n  }\n  //Select FirstOnek\n  async _selectFirstOne(tableName, range, direction) {\n    const db = await this.getOpenDB().catch(this.throwNewError());\n    let objectStore = this.getObjectStore(db, tableName, [tableName], MODE_R);\n    return await this._selectAllExecute(objectStore, range, true);\n  };\n\n  //InsertUpdate\n  async insertUpdate(payload) {\n    let {tableName, data, callback} = payload;\n    const keyPathName = this.getKeyPathByMap();\n    return await this._insertUpdate(tableName, keyPathName, data, callback).catch(this.throwNewError());\n  }\n  //private\n  async _insertUpdate(tableName, keyPathName, data, callback) {\n    const key = data[keyPathName];\n    const db = await this.getOpenDB().catch(this.throwNewError());\n    const tables = IdbUtil.currentTables(tableName);\n    const value = await this._selectByKeyOnTran(db, tableName, key, tables).catch(this.throwNewError());\n    if (callback) {\n      callback(value, data);\n    }\n    if (value === undefined) {\n      return await this._insertExecute(db, tableName, key, data, tables).catch(this.throwNewError());\n    } else {\n      return await this._updateExecute(db, tableName, key, data, tables).catch(this.throwNewError());\n\n    }\n  }\n  _insertExecute(db, tableName, key, data, tables) {\n    let objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n    return new Promise((resolve, reject) => {\n      let objectStoreRequest = objectStore.add(data); //,keyPath\n      objectStoreRequest.onsuccess = (event) => {\n        resolve({data, key});\n      };\n      objectStoreRequest.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n  _updateExecute(db, tableName, key, data, tables) {\n    return new Promise((resolve, reject) => {\n      let objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n      let request = objectStore.put(data); //,keyPathValue\n      request.onsuccess = (event) => {\n        resolve({data, key});\n      };\n      request.onerror = (e) => {\n        resolve(e);\n      };\n    });\n  };\n  //public\n  async deleteWithRange(payload) {\n    let {tableName, range, condetions} = payload;\n    return await this._deleteWithRange(tableName, range, condetions);\n  }\n  //Delete\n  async _deleteWithRange(tableName, range, condetions) {\n    const db = await this.getOpenDB().catch(this.throwNewError());\n    const tables = IdbUtil.currentTables(tableName);\n    return await this._deleteWithRangeExecute(db, tableName, range, condetions, tables);\n  };\n  _deleteWithRangeExecute(db, tableName, range, condetions, tables) {\n    return new Promise((resolve, reject) => {\n      let objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n      let request = objectStore.openCursor(range);\n      request.onsuccess = (event) => {\n        let cursor = event.target.result;\n        let list = [];\n        if (cursor) {\n          let value = cursor.value;\n          if (IdbUtil.isMutch(value, condetions)) {\n            let or = objectStore.delete(cursor.key);\n            or.onsuccess = (event) => {\n              list.push(value);\n            }\n            or.onerror = (e) => {\n              //momiee\n            };\n          }\n          cursor.continue();\n        } else {\n          resolve(list);\n        }\n      };\n      request.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n  //public\n  async delete(payload) {\n    let {tableName, key} = payload;\n    return await this._delete(tableName, key);\n  }\n  //Delete\n  async _delete(tableName, keyPathValue) {\n    const db = await this.getOpenDB().catch(this.throwNewError());\n    const tables = IdbUtil.currentTables(tableName);\n    return await this._deleteOnTran(db, tableName, keyPathValue, tables);\n  };\n  _deleteOnTran(db, tableName, key, tables) {\n    return new Promise((resolve, reject) => {\n      let objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n      let request = objectStore.delete(key + \"\");\n      request.onsuccess = (event) => {\n        resolve({tableName, key});\n      }\n      request.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n  //public\n  async truncate(payload) {\n    let {tableName} = payload;\n    return await this._truncate(tableName);\n  }\n  //truncate\n  async _truncate(tableName) {\n    const db = await this.getOpenDB().catch(this.throwNewError());\n    const tables = IdbUtil.currentTables(tableName);\n    return await this._truncateExecute(db, tableName, tables);\n  };\n  //truncate\n  _truncateExecute(db, tableName, tables) {\n    return new Promise((resolve, reject) => {\n      let objectStore = this.getObjectStore(db, tableName, tables, MODE_RW);\n      let request = objectStore.clear();\n      request.onsuccess = (event) => {\n        resolve();\n      };\n      request.onerror = (e) => {\n        reject(e);\n      };\n    });\n  };\n  async getObjectStoreNames() {\n    const db = await this.getOpenDB().catch(this.throwNewError());\n    const names = db.objectStoreNames;\n    db.close();\n    return names;\n  }\n  async isExistsObjectStore(tableName) {\n    const db = await this.getOpenDB().catch(this.throwNewError());\n    let isExist = false;\n    for (let name of db.objectStoreNames) {\n      if (name === tableName) {\n        isExist = true;\n        break;\n      }\n    }\n    db.close();\n    return isExist;\n  }\n  //public\n  async createStore(payload) {\n    let {tableName, keyPathName, isAutoIncrement} = payload;\n    return await this._createStore(tableName, keyPathName, isAutoIncrement);\n  }\n  //createStore\n  async _createStore(tableName, keyPathName, isAutoIncrement) {\n    const isExistsObjectStore = await this.isExistsObjectStore();\n    if (isExistsObjectStore === false) {\n      const newVersion = (await this.getCurrentVersion()) + 1;\n      const db = await this.getOpenDB(newVersion).catch(this.throwNewError());\n      let isExist = false;\n      for (let name of db.objectStoreNames) {\n        if (name === tableName) {\n          isExist = true;\n          break;\n        }\n      }\n      if (isExist === false) {\n        let objectStore = db.createObjectStore(tableName, {keyPath: keyPathName});\n      }\n      db.close();\n    };\n  };\n  //public\n  async dropStore(payload) {\n    let {tableName} = payload;\n    return await this._dropStore(tableName);\n  }\n  //DropStore\n  async _dropStore(tableName) {\n    const newVersion = (await this.getCurrentVersion()) + 1;\n    const db = await this.getOpenDB(newVersion).catch(this.throwNewError());\n    db.deleteObjectStore(tableName);\n    db.close();\n    return;\n  };\n}\n","import constant from './constant'\nimport idbh from './indexeddbHelper'\nconst initQueue = [];\nexport default class IdbRapper {\n\n  constructor(objectStoreName, keypathName = \"pk\") {\n    if (constant.idbh === undefined) {\n      constant.idbh = new idbh(constant.dbName);\n    }\n    this.idbh = constant.idbh;\n    this.keyPathName = keypathName;\n    this.objectStoreName = objectStoreName;\n    //tableName, keyPathName\n  }\n  init() {\n    return new Promise((reslve, reject) => {\n      this.idbh._createStore(this.objectStoreName, this.keyPathName).then(() => {\n        reslve(true)\n      }, (e) => {\n        reject(e);\n        throw e;\n      });\n    });\n  }\n  isFished() {\n    return new Promise((reslve, reject) => {\n      this.firstPromise.then(() => {\n        reslve(true);\n      }, (e) => {\n        throw e;\n      })\n    });\n  }\n  async saveDataDefault(key, data, callback) {\n    let record = {\n      pk: key,\n      data: data\n    };\n    //console.log(\"saveDataDefault 001:\" + key + \"/\" + data);\n    await this.saveData(record, undefined, callback);\n    //console.log(\"saveDataDefault 002:\" + key + \"/\" + data);\n  }\n  async saveData(dataObj, key, callback) {\n    //console.log(\"saveData 001:\" + key + \"/\" + JSON.stringify(dataObj)+\"/dataObj.data:\"+dataObj.data);\n    let storeData = dataObj;\n    //console.log(\"saveData 002:\" + key + \"/\" + dataObj[this.keyPathName]);\n    if (dataObj[this.keyPathName] === undefined) {\n      storeData = {\n        data: dataObj\n      };\n      storeData[this.keyPathName] = key;\n    } else if (key !== undefined) {}\n    //console.log(\"saveData 003:\" + key + \"/\" + dataObj +\"/this.objectStoreName:\"+this.objectStoreName);\n    let value = await this.idbh._insertUpdate(this.objectStoreName, this.keyPathName, storeData, callback);\n    //console.log(\"saveData 004:\" + key + \"/\" + dataObj+\"/\"+JSON.stringify(value)+\"/\"+value.data.data);\n  }\n  async loadData(key) {\n    if (key !== undefined) {\n      let recordAsLoadedData = await this.idbh._selectByKey(this.objectStoreName, key);\n      //alert(recordAsLoadedData.data);\n      return recordAsLoadedData;\n    }\n    return null;\n  }\n  async loadDataDefault(key) {\n    let recordAsDefaultLoad = await this.loadData(key);\n    return recordAsDefaultLoad === undefined || recordAsDefaultLoad === null\n      ? null\n      : recordAsDefaultLoad.data;\n  }\n  async loadAllData() {\n    return await this.idbh._selectAll(this.objectStoreName);\n  }\n  async deleteData(key) {\n    if (key !== undefined) {\n      return await this.idbh._delete(this.objectStoreName, key);\n    }\n    return null;\n  }\n  async getOsNames() {\n    return await this.idbh.getObjectStoreNames();\n  }\n}\n","import idb from \"../../util/idb/idbRapper\";\nconst USER_ID = \"default\";\nconst PK_INCREMENT_STORE = \"pk_increment\";\nconst idbAccessors = new Map();\nexport class StorageService {\n  constructor(entityClass) {\n    this.entityClass = entityClass;\n    this.targetObj = typeof entityClass === \"string\" ? entityClass: new entityClass();\n    this.idbAccessor = null;\n    this.entityName = this.targetObj.getEntityName\n      ? this.targetObj.getEntityName()\n      : entityClass;\n  }\n  getStoreNameKey(userId = USER_ID) {\n    return userId + \"_\" + this.targetObj.getEntityName();\n  }\n  async createStore(userId = USER_ID) {\n    const storeNameKey = this.getStoreNameKey(userId);\n    return await this.createStoreByName(storeNameKey, userId);\n  }\n  async createStoreByName(storeNameKey, userId = USER_ID) {\n    const idbAccessor = idbAccessors.has(storeNameKey)\n      ? idbAccessors.get(storeNameKey)\n      : new idb(storeNameKey);\n    await idbAccessor.init().catch((e) => {\n      console.log(e)\n    });\n    idbAccessors.set(storeNameKey, idbAccessor);\n    this.idbAccessor = idbAccessor;\n    return idbAccessor;\n  }\n  async setStore(userId = USER_ID) {\n    this.idbAccessor = await this.createStore(userId);\n    return;\n  }\n  async save(pk, data) {\n    let saveData = data;\n    if (data.toObj) {\n      saveData = data.toObj();\n    }\n    console.log(saveData);\n    await this.idbAccessor.saveDataDefault(pk, saveData);\n    return data; //\n  }\n  async loadAll() {\n    const list = await this.idbAccessor.loadAllData();\n    const retList = [];\n    for (let row of list) {\n      const cloned = this.getEntity(row);\n      retList.push(cloned);\n    }\n    return retList;\n  }\n  async get(key) {\n    const pk = key && key.pk\n      ? key.pk\n      : key;\n    const record = await this.idbAccessor.loadData(pk);\n    return this.getEntity(record);\n  }\n  getEntity(record) {\n    if (!record || !record.data) {\n      return record;\n    }\n    if (record.data && !this.targetObj.getEntityName) {\n      return record.data;\n    }\n    const targetObj = new this.entityClass();\n    targetObj.load(record.data);\n    return targetObj;\n  }\n  async delete(key) {\n    return await this.idbAccessor.deleteData(key);\n  }\n}\n","import {ObjectUtil} from \"../../util/objectUtil\";\nexport class BaseEntity {\n  constructor(entitiyName = \"BaseEntity\", pk = \"oid\") {\n    this.pk = pk;\n    this.entitiyName = entitiyName;\n    this.refs = [];\n  }\n  isEntitiy() {\n    return true;\n  }\n  getEntityName() {\n    return this.entitiyName; // this.constructor.name;\n  }\n  create() {}\n  update() {}\n  setPk(pkValue) {\n    return this[this.pk] = pkValue;\n  }\n  getPk() {\n    return this[this.pk];\n  }\n  include(obj) {\n    console.log(\"!=======BaseEntity.include====================!!\");\n    console.log(obj);\n  }\n  exclude(obj) {\n    console.log(\"!=======BaseEntity.exclude====================!!\");\n    console.log(obj);\n  }\n  async deepClone() {\n    return await ObjectUtil.deepClone(this);\n  }\n  load(obj) {\n    for (let key in obj) {\n      this[key] = obj[key];\n    }\n  }\n  toObj() {\n    let cloned = ObjectUtil.singleDeepCloneWithoutFuncs(this);\n    delete cloned.pk;\n    delete cloned.refs;\n    this.exclude(cloned);\n    return cloned;\n  }\n}\n","import {BaseEntity} from \"./baseEntity\";\nexport class Binary extends BaseEntity {\n  constructor(arrayBuffer) {\n    super(\"Binary\");\n    this._ab = arrayBuffer;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n  }\n  set ab(_ab){\n    if(buffer && !buffer.byteLength){\n      alert(\"not arrayBuffer!\");\n    }\n    this._ab=_ab;\n  }\n  get ab(){\n    return this._ab;\n  }\n\n  load(obj) {\n    super.load(obj)\n    this._ab =new Uint8Array(this._ab).buffer\n  }\n  create() {\n    return new Binary();\n  }\n}\n","import {BaseEntity} from \"./baseEntity\";\nconst DELIMITER = \"-\";\nexport class PrimaryKey {\n  constructor(pk) {\n    this.pk = pk;\n  }\n\n  static getDelimiter() {\n    return \"-\";\n  }\n\n  static assemblePK(entity, number) {\n    return entity.getEntityName() + DELIMITER + number;\n  }\n  static isPrimaryKey(value){\n    return value && typeof value ===\"string\" && value.split(DELIMITER).length === 2;\n  }\n\n  static getPrimaryKey(value){\n    if(value){\n      if(PrimaryKey.isPrimaryKey(value)){\n        return value;\n      }else if(value.getEntityName && value.getPk){\n        return value.getPk();\n      }else if(value.pk){\n        return value.pk;\n      }\n      return null;\n    }else{\n      return value;\n    }\n  }\n  static getEntityName(pk){\n    return PrimaryKey.getPrimaryKey(pk).split(DELIMITER)[0];\n  }\n}\n","export default class BinaryConverter {\n  static binaryString2ArrayBuffer(binaryString) {\n    return BinaryConverter.binaryString2Uint8Array(binaryString).buffer;\n  }\n  static arrayBuffer2BinaryString(buffer) {\n    return BinaryConverter.uint8Array2BinaryString(new Uint8Array(buffer));\n  }\n  static arrayBuffer2base64(buffer) {\n    return btoa(BinaryConverter.uint8Array2BinaryString(new Uint8Array(buffer)));\n  }\n  static arrayBuffer2DataURI(buffer, type = \"application/octet-stream\") {\n    const base64 = btoa(BinaryConverter.arrayBuffer2BinaryString(buffer));\n    return \"data:\" + type + \";base64,\" + base64;\n  }\n\n  static binaryString2Uint8Array(binaryString) {\n    const list = binaryString.split(\"\");\n    const rawLength = binaryString.length;\n    const array = new Uint8Array(new ArrayBuffer(rawLength));\n    for (let i = 0; i < rawLength; i++) {\n      array[i] = binaryString.charCodeAt(i);\n    }\n    return array;\n  }\n\n  static uint8Array2BinaryString(u8a) {\n    let retList = [];\n    for (let e of u8a) {\n      retList.push(String.fromCharCode(e));\n    }\n    return retList.join(\"\");\n  }\n\n  static binaryString2DataURI(binaryString, type = \"application/octet-stream\") {\n    return \"data:\" + type + \";base64,\" + btoa(binaryString);\n  }\n  static base642DataURI(base64, type = \"application/octet-stream\") {\n    return \"data:\" + type + \";base64,\" + base64;\n  }\n  static base642binaryString(base64) {\n    return atob(base64);\n  }\n  static base642ArrayBuffer(base64) {\n    return BinaryConverter.binaryString2ArrayBuffer(atob(base64));\n  }\n\n  static dataURI2BinaryString(dataURI) {\n    return atob(dataURI.split(\",\")[1]);\n  }\n  static dataURI2ArrayBuffer(dataURI) {\n    return BinaryConverter.binaryString2Uint8Array(atob(dataURI.split(\",\")[1])).buffer;\n  }\n\n  static uintArray2ArrayBuffer(uintArray) {\n    return uintArray.buffer;\n  }\n\n  static arrayBuffer2Uint8Array(arrayBuffer) {\n    return new Uint8Array(arrayBuffer);\n  }\n\n  static arrayBuffer2Uint16Array(arrayBuffer) {\n    return new Uint16Array(arrayBuffer);\n  }\n  static arrayBuffer2Uint32Array(arrayBuffer) {\n    return new Uint32Array(arrayBuffer)\n  }\n\n  static ArrayBuffer2Blob(val, type = \"application/octet-stream\") {\n    return new Blob([val], {type: type});\n  }\n  static readBlob(blob) {\n    const reader = new FileReader();\n    const promise = new Promise((resolve, reject) => {\n      reader.onload = eve => {\n        resolve(reader.result);\n      }\n      reader.onerror = eve => {\n        reject(reader.error);\n      }\n    })\n\n    return {\n      asArrayBuffer() {\n        reader.readAsArrayBuffer(blob);\n        return promise;\n      },\n      asBinaryString() {\n        reader.readAsBinaryString(blob);\n        return promise;\n      },\n      asDataURL() {\n        reader.readAsDataURL(blob);\n        return promise;\n      },\n      asText() {\n        reader.readAsText(blob);\n        return promise;\n      }\n    }\n  }\n}\n","import bc from \"../../util/binaryConverter\"\nimport {StorageService} from \"./storageService\"\nconst USER_ID = \"default\";\nconst PK_INCREMENT_STORE = \"pk_increment\";\nconst PK_ROW = \"pk_row\";\nexport class PrimaryKeyAutoIncrementService {\n  constructor(userid) {\n    this.ss = new StorageService(userid + \"_\" + PK_INCREMENT_STORE);\n  }\n  async acquirePKNo(userid = USER_ID, targetObj, rowKey = PK_ROW) {\n    const entityName = targetObj.getEntityName();\n    let currentObjectStore = await this.ss.createStoreByName(userid + \"_\" + PK_INCREMENT_STORE, userid);\n    let record = await this.ss.get(rowKey);\n    let nextCountAB = this.countUpUint32(\n      record\n      ? record.data\n      : 0);\n    if (!record) {\n      record = {\n        data: nextCountAB\n      };\n    }\n    let {data, keyPath} = await this.ss.save(rowKey, record, (result, record) => {\n      let nextCountAB = this.countUpUint32(record.data);\n      result.data = nextCountAB;\n    });\n    return bc.arrayBuffer2base64(data);\n  }\n  countUpUint32(arrayBuffer) {\n    let currentCount = arrayBuffer;\n    if (!currentCount) {\n      currentCount = new ArrayBuffer(4);\n    }\n    if (currentCount.data) {\n      currentCount = currentCount.data;\n    } else {}\n    //alert(JSON.stringify(currentCount));\n    let dataview = new DataView(currentCount);\n    let count = dataview.getUint32(0) | 0; // 0\n    count++;\n    dataview.setInt32(0, count >>> 0);\n    return dataview.buffer;\n  }\n}\n","import {StorageService} from \"./storageService\"\nimport {Binary} from \"./binary\";\nimport {PrimaryKey} from \"./primaryKey\";\nimport {PrimaryKeyAutoIncrementService} from \"./primaryKeyAutoIncrementService\";\nconst title = \"CopiBon\";\nconst USER_ID = \"default\";\nconst titlePrefix = \"title_\";\nconst BINALY_PK_ROW = \"BINALY_PK_ROW\";\nconst entityManagerImpls = {};\nconst binaryEntity = new Binary();\nexport class EntityManagerImpl {\n  constructor(entityManager, entityClass, userId = USER_ID) {\n    this.userId = userId;\n    this.entityClass = entityClass;\n    this.entity = new entityClass();\n    this.entityName = this.entity.getEntityName();\n    this.ss = new StorageService(entityClass);\n    this.pkais = new PrimaryKeyAutoIncrementService(userId);\n    this.em = entityManager;\n  }\n\n  async init() {\n    //console.log(\"init! \"+this.entityName);\n    return await this.ss.setStore(this.userId);\n  }\n  async save(data) {\n    return await this.saveExecute(data,false);\n  }\n  async saveWithBinary(data) {\n    return await this.saveExecute(data,true);\n  }\n  async saveExecute(data,isWithBinary) {\n    //console.log(\"EntityManagerImpl save!!A!! data:\" + data+\"/isWithBinary:\"+isWithBinary);\n    if (!data || !data.getEntityName || !data.getPk || data.getEntityName() !== this.entityName) {\n      console.log(\"EntityManagerImpl save!!Z!! data:\" + data.getEntityName() + \"/this.entityName:\" + this.entityName + \"/data.getPk:\" + data.getPk);\n      return;\n    }\n    let currentPK = data.getPk();\n    if (!currentPK) {\n      currentPK = PrimaryKey.assemblePK(this.entity, await this.pkais.acquirePKNo(this.userId, this.entity));\n    }\n    if(!isWithBinary){\n      await this.saveArrayBufferCols(data);\n    }else{\n      console.log(\"EntityManagerImpl saveBinary!!A!! data:\" + data+\"/isWithBinary:\"+isWithBinary);\n      console.log(data);\n      console.log(\"EntityManagerImpl saveBinary!!B!! data:\" + data+\"/isWithBinary:\"+isWithBinary);\n    }\n    data.setPk(currentPK);\n    console.log(data);\n    const savedData = await this.ss.save(currentPK, data);\n    console.log(\"EntityManagerImpl save!!B!! savedData:\" + savedData);\n    return savedData;\n  }\n  async saveArrayBufferCols(data) {\n    if (binaryEntity.getEntityName() === data.getEntityName()) {\n      return;\n    }\n    console.log(\"saveArrayBufferCols save!!A!! data:\" + data);\n    console.log(data);\n    console.log(\"saveArrayBufferCols save!!B!! data:\" + data);\n    for (let key in data) {\n      const column = data[key];\n      if (!column) {\n        continue;\n      }\n      if (Array.isArray(column)) {\n        for (let index of column) {\n          const item = column[index];\n          if (!item || item.byteLength) {\n            continue;\n          }\n          const pk = await this.saveArrayBufferData(item);\n          column[index] = new PrimaryKey(pk);\n        }\n      } else if (column.byteLength) {\n        const pk = await this.saveArrayBufferData(column);\n        data[key] = new PrimaryKey(pk);\n      }\n    }\n  }\n  async saveArrayBufferData(item) {\n    console.log(\"saveArrayBufferData save!!A!! item:\" + item);\n    console.log(item);\n    console.log(\"saveArrayBufferData save!!B!! item:\" + item);\n    if (!item.getEntityName && item.byteLength) {\n      const data = new Binary(item);\n      const newPK = await this.getBinaryPK();\n      data.setPk(newPK);\n        console.log(\"saveArrayBufferData save!!C!! data:\" + data);\n        console.log(data);\n      await this.em.Binary.saveWithBinary(data);\n      return newPK;\n    } else if (item.getEntityName && item.getEntityName() === \"PrimaryKey\") {\n      return item;\n    } else if (item.getEntityName && item.getEntityName() === \"Binary\") {\n      const currentPK = item.getPk();\n      if (currentPK) {\n        item.setPk(currentPK);\n          console.log(\"saveArrayBufferData save!!D!! item:\" + item);\n        await this.em.Binary.saveWithBinary(item);\n        return currentPK;\n      } else {\n        console.log(\"saveArrayBufferData save!!E!! item:\" + item);\n        const newPK = await this.getBinaryPK();\n        item.setPk(newPK);\n        await this.em.Binary.saveWithBinary(item);\n        return newPK;\n      }\n    }\n  }\n  async getBinaryPK() {\n    const newNumber = await this.pkais.acquirePKNo(this.userId, binaryEntity, BINALY_PK_ROW);\n    return PrimaryKey.assemblePK(binaryEntity, newNumber);\n  }\n  async loadAll() {\n    return await this.ss.loadAll(this.entity);\n  }\n  async get(pk) {\n    // console.log(\"get this.entityName:\" + this.entityName + \"/pk:\" + pk);\n    return await this.ss.get(pk, this.entity);\n  }\n  async delete(pk) {\n    return await this.ss.delete(pk);\n  }\n\n}\n","import {StorageService} from \"./storageService\"\nimport {EntityManagerImpl} from \"./entityManagerImpl\"\nimport {Binary} from \"./binary\";\nimport {ObjectUtil} from '../../util/objectUtil';\nimport {PrimaryKey} from \"./primaryKey\";\nconst USER_ID = \"default\";\nexport class EntityManager {\n  constructor() {}\n  async initAsNewUser(entities, userId = USER_ID) {\n    const promises = [];\n    for (let entityClass of entities) {\n      await this.initParEntity(entityClass, userId);\n    }\n    await this.initParEntity(Binary, userId);\n  }\n  async initParEntity(entityClass, userId) {\n    ObjectUtil.addBaseCLassese(entityClass);\n    const entity = new entityClass();\n    const entityName = entity.getEntityName();\n    this[entityName] = new EntityManagerImpl(this, entityClass, userId);\n    await this[entityName].init();\n  }\n  isPrimaryKey(item) {\n    if (item && item.getEntityName() === 'PrimaryKey') {\n      return true;\n    }\n    return false;\n  }\n  async get(pk) {\n    if(!pk){\n      alert(\"pk:\"+pk);\n      return null;\n    }\n    const truePk = PrimaryKey.getPrimaryKey(pk);\n    if(!PrimaryKey.isPrimaryKey(truePk)){\n        console.log(truePk);\n        return null;\n    }\n    const entityName = PrimaryKey.getEntityName(truePk);\n    // console.log(\"★get entityName:\"+entityName+truePk);\n    return await this[entityName].get(truePk);\n  }\n  async delete(pk) {\n    if(!pk){\n      alert(pk);\n      return null;\n    }\n    const entityName = PrimaryKey.getEntityName(pk);\n    // console.log(\"★remove entityName:\"+entityName);\n    return await this[entityName].delete(pk);\n  }\n}\n","import {ProgressBar} from \"../view/parts/progressBar\"\nexport class ViewPartsLoader {\n    constructor(){\n    }\n    getIndigator(parent){\n      if(!!this.pb===false){\n        this.pb = new ProgressBar(parent);\n      }\n      return this.pb;\n    }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Title extends BaseEntity {\n  constructor(titleId, titlePrefix, name) {\n    super(\"Title\");\n    //console.log(\"!=!titleId:\"+titleId+\"!=!titleId:\"+titleId+\"!=!name:\"+name+\"!=!\"+Date.now());\n    this.id = titleId;\n    this.prefix = titlePrefix;\n    this.name = name;\n    this.target = \"\";\n    this.no = \"\";\n    this.date = \"\";\n    this.pageNo = 0;\n    this.setting = null;\n    this.series = null;\n    this.pageNum = -1;\n    this.images = [];\n    this.pages = [];\n    this.outputsPars = [];\n    this.direction = \"r2l\";\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n    //console.log(this);\n  }\n\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Images extends BaseEntity {\n  constructor() {\n    super(\"Images\");\n    this.name = null;\n    this.binary = null;\n    this.type = null;\n    this.thumbnail = null;\n    this.modifyDate=null;\n    this.width = null;\n    this.height = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Thumbnales extends BaseEntity{\n  constructor() {\n    super(\"Thumbnales\");\n    this.name = null;\n    this.binary = null;\n    this.type = null;\n    this.width = null;\n    this.height = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Series extends BaseEntity{\n  constructor(name) {\n    super(\"Series\");\n    this.name=name;\n    this.target=null;\n    this.no=\"\";\n    this.date=\"\";\n    this.pageNo=0;\n  }\n}\n","const order = {\n  'number': 1,\n  'string': 2,\n  'boolean': 3,\n  'object': 4,\n  'function': 5,\n  'symbol': 6,\n  'undefined': 7\n};\n\nexport class Sorter {\n  constructor() {}\n  static asc(list, colName) {\n    const func = Sorter.execute([\n      {\n        colName: colName,\n        isDESC: false\n      }\n    ]);\n    list.sort(func);\n  }\n  static desc(list, colName) {\n    const func = Sorter.execute([\n      {\n        colName: colName,\n        isDESC: true\n      }\n    ]);\n    list.sort(func);\n  }\n  static orderBy(list, orders) {\n    const func = Sorter.execute(orders);\n    list.sort(func);\n  }\n  static execute(orders) {\n    return(objA, objB) => {\n      for (let order of orders) {\n        const {colName, isDESC} = order;\n        if(objA === objB){\n          return 0;\n        }\n        if(!objA){\n          return isDESC\n            ? 1\n            : -1;\n        }\n        if(!objB){\n          return isDESC\n            ? -1\n            : 1;\n        }\n        let a = objA[colName];\n        let b = objB[colName];\n        console.log(\"a:\"+a+\"/b:\"+b);\n        if (a < b) {\n          return isDESC\n            ? 1\n            : -1;\n        } else if (a > b) {\n          return isDESC\n            ? -1\n            : 1;\n        }\n      }\n      return 0;\n    };\n  }\n  static thinningNullData(array) {\n    const thinninged = [];\n    for (let index in array) {\n      const element = array[index];\n      if (element === null || element === undefined) {\n        continue;\n      }\n      thinninged.push(element);\n    }\n    const length = array.length;\n    for (let i = 0; i < length; i++) {\n      array.pop();\n    }\n    for (let index in thinninged) {\n      const element = thinninged[index];\n      array.push(element);\n    }\n  }\n  static typeof() {}\n}\n","import {MainService} from \"./mainService\";\nimport {ProgressActionCreator} from \"../reduxy/action/progressActionCreator\";\nimport {ActionDispatcher} from \"../util/reactive/actionDispatcher\";\nexport class FileUploadExecuter {\n  constructor() {\n    this.actionDispatcher = ActionDispatcher.createStandAlone();\n    this.name = \"FileUploader\";\n    this.ms = MainService.getInstance();\n  }\n  async readAsArrayBuffer(file) {\n    return await this.read(file, \"ArrayBuffer\");\n  }\n  async readAsBinaryString(file) {\n    return await this.read(file, \"BinaryString\");\n  }\n  async readAsDataURL(file) {\n    return await this.read(file, \"DataURL\");\n  }\n  async readAsText(file) {\n    return await this.read(file, \"text\");\n  }\n  read(file, type = \"binaryString\") {\n    return new Promise((resolve, reject) => {\n      this.reader = new FileReader();\n      //this.progress.init();\n      this.reader.onerror = (event) => {\n        reject(this.errorHandler(event));\n      };\n      this.reader.onprogress = (event) => {\n        this.updateProgress(event);\n      };\n      this.reader.onabort = (e) => {\n        alert('File read cancelled');\n      };\n\n      this.reader.onloadstart = (event) => {\n        this.onLoadStart(event)\n      };\n      this.reader.onload = (event) => {\n        resolve(this.onload(event));\n      };\n      if (type === \"ArrayBuffer\") {\n        this.reader.readAsArrayBuffer(file);\n      } else if (type === \"BinaryString\") {\n        this.reader.readAsBinaryString(file);\n      } else if (type === \"DataURL\") {\n        this.reader.readAsDataURL(file);\n      } else {\n        this.reader.readAsText(file);\n      }\n    })\n  }\n  abortRead() {\n    if (this.reader) {\n      this.reader.abort();\n    }\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatRemoveAction());\n  }\n  errorHandler(event) {\n    switch (event.target.error.code) {\n      case event.target.error.NOT_FOUND_ERR:\n        alert('File Not Found!');\n        break;\n      case event.target.error.NOT_READABLE_ERR:\n        alert('File is not readable');\n        break;\n      case event.target.error.ABORT_ERR:\n        break; // noop\n      default:\n        alert('An error occurred reading this file.');\n    };\n  }\n\n  updateProgress(event) {\n    const percentLoaded = Math.round((event.loaded / event.total) * 100);\n    if (percentLoaded < 100) {\n      //this.progress.progress(percentLoaded);\n      this.actionDispatcher.dispatch(ProgressActionCreator.creatUpdateAction(null,{progress:percentLoaded}));\n\n    }\n  }\n  onload(event) {\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatCompleatAction());\n    return this.reader.result;\n  }\n  onLoadStart() {\n    this.actionDispatcher.dispatch(ProgressActionCreator.creatAddAction());\n    //this.progress.start();\n  }\n}\n","import {Title} from \"../../entity/title\";\nimport {Images} from \"../../entity/images\";\nimport {Thumbnales} from \"../../entity/thumbnales\";\nimport {Series} from \"../../entity/series\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nimport {Sorter} from \"../../util/sorter\";\nimport {MainService} from \"../../service/mainService\";\nimport {FileUploadExecuter} from \"../../service/fileUploadExecuter\";\n\nconst TITLE_STORE_NAME = \"CopiBonTitles\";\nconst defaultTitle = \"CopiBon\";\nconst defaultName = \"DefaultName\";\nconst defaultTitlePrefix = \"title_\";\nexport class TitleManager {\n  constructor(entityManager, titleId) {\n    this.em = entityManager;\n    this.ms = MainService.getInstance();\n    this.ip = this.ms.ip;\n    this.im = this.ms.im;\n    this.tbm = this.ms.tbm;\n    this.sm = this.ms.sm;\n    console.log(\"title is new!!\" + this.tbm);\n    //this.load(titleId).then((title)=>{this.currentTitle=title;console.log(\"title is new!\")});\n  }\n  async loadCurrent() {\n    return this.currentTitle;\n  }\n  async load(titleId = defaultTitle) {\n    if (this.currentTitle && this.currentTitle.getPk() === titleId) {\n      return this.currentTitle;\n    }\n    let title = await this.em.Title.get(titleId);\n    if (!title) {\n      title = await this.createTitle(titleId);\n    }\n    this.currentTitle = title;\n    return title;\n  }\n\n  async createTitle(titleId = defaultTitle, titlePrefix = defaultTitlePrefix, name = defaultName) {\n    const title = new Title(titleId, titlePrefix, name);\n    title.setPk(titleId);\n    title.setting = titleId;\n    await this.sm.createDefault(titleId);\n    await this.em.Title.save(title);\n    return title;\n  }\n\n  async changeTitle(newTitleId) {\n    this.currentTitle = await this.loadTitle(newTitleId);\n    if (!this.currentTitle) {\n      this.currentTitle = await this.createTitle(defaultTitle, defaultTitlePrefix, defaultName);\n    }\n  }\n  async loadTitleList() {\n    return await this.em.Title.loadAllData();;\n  }\n  async saveTitle(title) {\n    if (title) {\n      title.updateDate = Date.now();\n      const images = title.images;\n      Sorter.thinningNullData(images);\n      for (let index in images) {\n        const image = images[index];\n        if (!PrimaryKey.isPrimaryKey(image)) {\n          images[index] = PrimaryKey.getPrimaryKey(image);\n        }\n      }\n      this.currentTitle = await this.em.Title.save(title);\n    }\n  }\n  async deleteTitleCascade() {\n    const titelId = this.titelId;\n    const titelPrefix = this.titelPrefix;\n  }\n  async addImageFiles(files) {\n    const title = await this.loadCurrent();\n    const images = title.images;\n    Sorter.thinningNullData(images);\n    const iamageEntitis = [];\n    let count = images.length;\n    for (let file of files) {\n      let {imagePk, imageEntity} = await this.im.saveImageFile(file, count);\n      count++;\n      images.push(imagePk);\n      iamageEntitis.push(imageEntity);\n    }\n    console.log(images);\n    await this.saveTitle(title);\n    return iamageEntitis;\n  }\n  async addImage(name, dataURI) {}\n  async removeImage(pk) {\n    const title = await this.load();\n    const images = title.images;\n    for (let index in images) {\n      const imageEntityPk = images[index];\n      if (PrimaryKey.getPrimaryKey(imageEntityPk) === pk) {\n        await this.im.remove(pk);\n        delete images[index];\n      };\n    }\n    console.log(images);\n    await this.saveTitle(title);\n  }\n\n  async loadSettings() {\n    const title = await this.loadCurrent();\n    const pk = title.getPk();\n    const settingEntityLoad = await this.sm.loadByPk(pk);\n    if(!settingEntityLoad){\n      const settingEntity =  await this.sm.createDefault(pk);\n      return settingEntity;\n    }\n    return settingEntityLoad;\n  }\n  async loadThumbnails() {\n    const title = await this.loadCurrent();\n    return await this.im.loadThumbnails(title.images);\n  }\n  async updateImagesListing(newList) {\n    const title = await this.loadCurrent();\n    return await this.im.updateImagesListing(title.images,newList);\n  }\n  async exportPDF() {}\n  async exportZip() {}\n}\n","import {Binary} from \"../entity/binary\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class BinaryManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Binary.get(binaryPk);\n  }\n  async remove(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Binary.delete(binaryPk);\n  }\n  async save(pk, name, binary) {\n    console.log(\"BinaryManager save!!A!! pk:\" + pk);\n    console.log(binary);\n    console.log(\"BinaryManager save!!B!! name:\" + name);\n    let binEntity = null;\n    if (pk) {\n      binEntity = await this.em.Binary.get(pk);\n    }\n    console.log(binary);\n    //alert(binary);\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!binEntity) {\n      binEntity = new Binary();\n    } else {\n      binEntity.updateDate = Date.now();\n    }\n    binEntity.binary = binaryPk\n      ? binaryPk\n      : binary;\n    return await this.em.Binary.save(binEntity);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Pages extends BaseEntity{\n  constructor() {\n    super(\"Pages\");\n    this.previewThumbnail = null;\n    this.outputImage = null;\n    this.thumbnail = null;\n    this.baseImage = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n}\n","import {Pages} from \"../../entity/pages\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class PagesManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  setTitleManager(tm){\n    this.tm = tm;\n  }\n  async loadFromImagePk(pk) {\n    const pagePk = PrimaryKey.getPrimaryKey(pk);\n    const pageEntity = await this.em.get(pagePk);\n    if (!pageEntity || !pageEntity.thumbnail) {\n      return null;\n    }\n    const thumbnailPk = PrimaryKey.getPrimaryKey(pageEntity.thumbnail);\n    const thumbnailEntity = await this.em.get(thumbnailPk);\n    thumbnailEntity.parentPk = pagePk;\n    return thumbnailEntity\n  }\n  async remove(pk) {\n    const target = await this.em.Pages.get(pk);\n    if (target) {\n      if (target.previewThumbnail) {\n        await this.em.Binary.delete(target.previewThumbnail);\n      }\n      if (target.outputImage) {\n        await this.em.Binary.delete(target.outputImage);\n      }\n      await this.em.Pages.delete(pk);\n    }\n  }\n  async removeImage(pk) {\n    const target = await this.em.Pages.get(pk);\n    if (target) {\n      if (target.previewThumbnail) {\n        await this.em.Binary.delete(target.previewThumbnail);\n      }\n      if (target.outputImage) {\n        await this.em.Binary.delete(target.outputImage);\n      }\n      target.baseImage = null;\n      target.thumbnail = null;\n      await this.em.Pages.save(target);\n    }\n  }\n\n  async addPage(imagePk,pagePk) {\n    const title = await this.tm.load();\n    const pages = title.pages;\n    const pageEntitis = [];\n    for (let index in pages) {\n      const pk = pages[index];\n      if (!pk) {\n        continue;\n      }\n      const pageEntity = await this.em.get(pk);\n      if(pk === pagePk){\n        const imageEntity = await this.em.get(imagePk);\n        const thumbnailEntity = await this.em.get(imageEntity.thumbnail);\n        const binaryEntity = await this.em.get(thumbnailEntity.binary);\n        pageEntity.thumbnail = imageEntity.thumbnail;\n        pageEntity.baseImage = imagePk;\n        await this.em.Pages.save(pageEntity);\n        //alert(\"pagePk:\"+pagePk+\"/imagePｋ:\"+imagePk+JSON.stringify(pageEntity));\n      }\n      pageEntitis.push(pageEntity);\n    }\n    return pageEntitis;\n  }\n  async move(fromPk, toPk) {\n    const targetFrom = await this.em.Pages.get(fromPk);\n    const targetTo = await this.em.Pages.get(toPk);\n    const previewThumbnailFrom = targetFrom.previewThumbnail;\n    const previewThumbnailTo = targetTo.previewThumbnail;\n    const outputImageFrom = targetFrom.outputImage;\n    const outputImageTo = targetTo.outputImage;\n    const thumbnailFrom = targetFrom.thumbnail;\n    const thumbnailTo = targetTo.thumbnail;\n    const baseImageFrom = targetFrom.baseImage;\n    const baseImageTo = targetTo.baseImage;\n    targetFrom.previewThumbnail= previewThumbnailTo;\n    targetTo.previewThumbnail= previewThumbnailFrom;\n    targetFrom.outputImage= outputImageTo;\n    targetTo.outputImage= outputImageFrom;\n    targetFrom.thumbnail= thumbnailTo;\n    targetTo.thumbnail= thumbnailFrom;\n    targetFrom.baseImage= baseImageTo;\n    targetTo.baseImage= baseImageFrom;\n    await this.em.Pages.save(targetFrom);\n    await this.em.Pages.save(targetTo);\n  }\n  async loadAll() {\n    const retList = [];\n    const pages = this.em.Pages.loadAll();\n    for (let page of pages) {\n      retList.push(page);\n    }\n    return retList;\n  }\n  async load(pk) {\n    return await this.em.Pages.get(pk);\n  }\n  /*\n  */\n  async save(pk, previewThumbnail=null, outputImage=null,thumbnail=null,baseImage=null, listing = 0,binary = null) {\n    let page = null;\n    if (pk) {\n      page = await this.em.Pages.get(pk);\n    }\n    let binaryPk = binary?PrimaryKey.getPrimaryKey(binary):null;\n    if (!page) {\n      page = new Pages();\n    } else {\n      page.updateDate = Date.now();\n    }\n    page.previewThumbnail = previewThumbnail || previewThumbnail === null\n      ? previewThumbnail\n      : page.previewThumbnail;\n    page.outputImage = binaryPk\n      ? binaryPk\n      : binary;\n    page.outputImage = outputImage || outputImage === null\n      ? outputImage\n      : page.outputImage;\n    page.thumbnail = thumbnail || thumbnail === null\n      ? thumbnail\n      : page.thumbnail;\n    page.baseImage = baseImage || baseImage === null\n      ? baseImage\n      : page.baseImage;\n    page.listing = listing || listing === null\n      ? listing\n      : page.listing;\n    return await this.em.Pages.save(page);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Settings extends BaseEntity{\n  constructor() {\n    super(\"Settings\");\n    this.name = \"\";\n    this.pageNum = 0;\n    this.startPage = \"l\";\n    this.pageDelection = 0;\n    this.outputProfile = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n}\n","import {Settings} from \"../../entity/settings\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class SettingsManager {\n  constructor(entityManager, opm) {\n    this.em = entityManager;\n    this.opm = opm;\n  }\n  async loadByPk(titilePk) {\n    const settingEntity = await this.em.Settings.get(titilePk);\n    return settingEntity;\n  }\n\n  async loadAll() {\n    const retList = [];\n    const settings = this.em.Pages.loadAll();\n    for (let setting of settings) {\n      retList.push(setting);\n    }\n    return retList;\n  }\n  async createDefault(titilePk) {\n    const setting = new Settings();\n    setting.setPk(titilePk);\n    setting.pageNum = 8;\n    setting.startPage = \"l\";\n    setting.pageDelection = \"r2l\";\n    setting.outputProfile = this.opm.getDefaultPk();\n    setting.listing = 0;\n    const saved = await this.em.Settings.save(setting);\n    return saved;\n  }\n  async save(pk, name, pageNum, startPage, pageDirection,outputProfile, listing = 0) {\n    let settings = null;\n    if (pk) {\n      settings = await this.em.Settings.get(pk);\n    }\n    if (!settings) {\n      settings = new Settings();\n    } else {\n      settings.updateDate = Date.now();\n    }\n    settings.name = name || name === null\n      ? name\n      : settings.name;\n    settings.pageNum = pageNum\n      ? pageNum\n      : 8;\n    settings.startPage = startPage || startPage === null\n      ? startPage\n      : settings.startPage;\n    settings.pageDirection = pageDirection || pageDirection === null\n      ? pageDirection\n      : settings.pageDirection;\n    settings.outputProfile = outputProfile || outputProfile === null\n      ? outputProfile\n      : settings.outputProfile;\n    settings.listing = listing || listing === null\n      ? listing\n      : settings.listing;\n    return await this.em.Settings.save(settings);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class OutputProfiles extends BaseEntity {\n  constructor(id, prefix, name) {\n    super(\"OutputProfiles\");\n    //console.log(\"!=!titleId:\"+titleId+\"!=!titleId:\"+titleId+\"!=!name:\"+name+\"!=!\"+Date.now());\n    this.id = id;\n    this.prefix = prefix;\n    this.pageSize = \"A5\";\n    this.direction = \"r2l\";\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n    //console.log(this);\n  }\n\n}\n","import {OutputProfiles} from \"../../entity/outputProfiles\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nconst defaultPk = 'copibondefa'\nexport class OutputProfilesManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n    this.createDefault();\n  }\n  getDefaultPk() {\n    return defaultPk;\n  }\n  async loadAll() {\n    const retList = [];\n    const outputProfiles = await this.em.OutputProfiles.loadAll();\n    for (let outputProfile of outputProfiles) {\n      retList.push(outputProfile);\n    }\n    if (retList.length < 1) {\n      retList.push(await this.createDefault());\n    }\n    return retList;\n  }\n  async loadByPk(pk) {\n    const outputProfilePK = PrimaryKey.getPrimaryKey(pk);\n    if (!outputProfilePK) {\n      const outputProfileEntity = await this.em.OutputProfiles.get(pk);\n      return outputProfileEntity;\n    } else {\n      const outputProfileEntity = await this.em.OutputProfiles.get(outputProfilePK);\n      return outputProfileEntity;\n    }\n  }\n  async createDefault() {\n    const savedOne = await this.loadByPk(defaultPk);\n    if (savedOne) {\n      return savedOne;\n    }\n    const outputProfiles = new OutputProfiles();\n    outputProfiles.setPk(defaultPk);\n    const saved = await this.em.OutputProfiles.save(outputProfiles);\n    return saved;\n  }\n  async save(pk, name, binary, type, width, height, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.OutputProfiles.get(pk);\n    }\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Setting();\n    } else {\n      image.updateDate = Date.now();\n    }\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    return await this.em.Thumbnales.save(image);\n  }\n}\n","import {Images} from \"../../entity/images\";\nimport {MainService} from \"../../service/mainService\";\nimport bc from \"../../util/binaryConverter\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nimport {Sorter} from \"../../util/sorter\";\nimport {FileUploadExecuter} from \"../fileUploadExecuter\";\n\nconst loadedImageMap = new Map();\nexport class ImageManager {\n  constructor(entityManager) {\n    this.ms = MainService.getInstance();\n    this.em = entityManager;\n    this.ip = this.ms.ip;\n    this.tbm = this.ms.tbm;\n  }\n  setTitleManager(tm){\n    this.tm = tm;\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Images.get(binaryPk);\n  }\n  async reloadLoadedImages() {\n    return await this.createRetList(this.getEntitisAsList());\n  }\n  async loadImages() {\n    const title = await this.tm.load();\n    const images = title.images;\n    const imageEntitis = [];\n    for (let index in images) {\n      const pk = images[index];\n      if (!pk) {\n        continue;\n      }\n      const imageEntity = await this.em.get(pk);\n      imageEntitis.push(imageEntity);\n    }\n    return await this.createRetList(imageEntitis);\n  }\n  async remove(pk) {\n    const imageEntity = await this.em.get(pk);\n    console.log(\"removeImage imageEntity.thumbnail:\" + imageEntity.thumbnail);\n    const binaryPk = PrimaryKey.getPrimaryKey(imageEntity.binary);\n    console.log(\"removeImage binaryPk:\" + binaryPk);\n    const thumbnailPk = PrimaryKey.getPrimaryKey(imageEntity.thumbnail);\n    console.log(\"removeImage thumbnailPk:\" + thumbnailPk);\n    if (thumbnailPk) {\n      const thumbnailEntity = await this.em.get(thumbnailPk);\n      console.log(\"removeImage thumbnailEntity:\" + thumbnailEntity);\n      const thumbnailBinaryPk = PrimaryKey.getPrimaryKey(thumbnailEntity.binary);\n      console.log(\"removeImage thumbnailBinaryPk:\" + thumbnailBinaryPk);\n      await this.em.delete(thumbnailBinaryPk);\n      await this.em.delete(thumbnailPk);\n    }\n    await this.em.delete(binaryPk);\n    await this.em.delete(pk);\n  }\n  async saveImageFile(file, count = 0) {\n    const fue = new FileUploadExecuter();\n    const arrayBuffer = await fue.readAsArrayBuffer(file);\n    const data = {\n      name: file.name,\n      ab: arrayBuffer,\n      type: file.type\n    };\n    const imgElm = await this.ip.createImageNodeByData(data);\n    const dataURI = await this.ip.createThumbnail(arrayBuffer, 100, 100, file.type);\n    const arrayBufferThumbnail = bc.dataURI2ArrayBuffer(dataURI);\n    const imgElmThumb = await this.ip.createImageNodeByData({name: file.name, ab: arrayBufferThumbnail, type: file.type});\n    const thumbnailEntity = await this.tbm.save(null, file.name, arrayBufferThumbnail, file.type, imgElmThumb.width, imgElmThumb.height, 0);\n    console.log(\"addImageFiles thumbnailEntity:\" + thumbnailEntity);\n    const thumbnailPk = PrimaryKey.getPrimaryKey(thumbnailEntity);\n    console.log(\"addImageFiles thumbnailPk:\" + thumbnailPk);\n    const imageEntity = await this.save(null, file.name, arrayBuffer, file.type, imgElm.width, imgElm.height, thumbnailPk, count);\n    console.log(\"addImageFiles imageEntity:\" + imageEntity);\n    const imagePk = imageEntity.getPk();\n    return {imagePk: imagePk, imageEntity: imageEntity};\n  }\n  async save(pk, name, binary, type, width, height, thumbnail, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.Images.get(pk);\n    }\n        console.log(\"ImageManager save!!9!! binary:\" + binary);\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Images();\n    } else {\n      image.updateDate = Date.now();\n    }\n\n    console.log(\"ImageManager save!!A!! image:\" + image);\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.thumbnail = thumbnail || thumbnail === null\n      ? thumbnail\n      : PrimaryKey.getPrimaryKey(image.thumbnail);\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    const savedData = await this.em.Images.save(image);\n    console.log(\"ImageManager save!!B!! image:\" + savedData);\n    return savedData;\n  }\n\n  async loadThumbnails(images) {\n    const retList = [];\n    const imageList = [];\n    for (let image of images) {\n      const imagePk = PrimaryKey.getPrimaryKey(image);\n      const imageEntity = await this.load(imagePk);\n      imageList.push(imageEntity);\n    }\n    Sorter.orderBy( imageList,[{colName:\"listing\", isDESC:false}]);\n    for (let imageEntity of imageList) {\n      const imagePk = PrimaryKey.getPrimaryKey(imageEntity);\n      const thumbnailEntity = await this.tbm.loadFromImagePk(imagePk);\n      retList.push(thumbnailEntity);\n    }\n    return retList;\n  }\n  async createRetList(imageEntitis) {\n    Sorter.orderBy(imageEntitis, [\n      {\n        colName: \"listing\",\n        isDESC: false\n      }, {\n        colName: \"updateDate\",\n        isDESC: true\n      }\n    ]);\n    //console.log(\"=★=showFilesInit imageEntitis:\" + imageEntitis.length);\n    const retList = [];\n    for (let imageEntity of imageEntitis) {\n      const pk = imageEntity.getPk();\n      if (loadedImageMap.has(pk)) {\n        const retObj = loadedImageMap.get(pk);\n        retList.push(retObj);\n      } else {\n        const retObj = await this.processParImage(imageEntity);\n        loadedImageMap.set(pk, retObj);\n        retList.push(retObj);\n      }\n    }\n    return retList;\n  }\n  async processParImage(imageEntity) {\n    const imagePk = imageEntity.getPk();\n    const thumbnailEntity = await this.em.get(imageEntity.thumbnail);\n    const binaryEntity = await this.em.get(thumbnailEntity.binary);\n    const imgElm = await this.ip.createImageNodeByData({name: imageEntity.name, ab: binaryEntity.ab, type: imageEntity.type});\n    const size = (\n      binaryEntity.ab\n      ? (new Uint8Array(binaryEntity.ab)).length\n      : 0);\n    const imageText = escape(imageEntity.name) + ' (' + (\n    imageEntity.type || 'n/a') + ') - ' + size + 'bytes, last modified: ' + imageEntity.modifyDate + ' size:' + imageEntity.width + 'x' + imageEntity.height\n\n    const retObj = {\n      imageEntity: imageEntity,\n      binaryEntity: binaryEntity,\n      size: size,\n      imageText: imageText,\n      isOnPage:false\n    };\n    return retObj;\n  }\n  removeLoaded(pk){\n    loadedImageMap.delete(pk);\n  }\n  getRetObjsAsList() {\n    const retList = [];\n    for (let [key, retObj] of loadedImageMap.entries()) {\n      retList.push(retObj);\n    }\n    return retList;\n  }\n  getEntitisAsList() {\n    const retList = [];\n    for (let [key, retObj] of loadedImageMap.entries()) {\n      retList.push(retObj.imageEntity);\n    }\n    return retList;\n  }\n  getFromLoaded(pk){\n    return loadedImageMap.get(pk);\n  }\n}\n","import {Thumbnales} from \"../../entity/thumbnales\";\nimport {PrimaryKey} from \"../entity/primaryKey\";\nexport class ThumbnaleManager {\n  constructor(entityManager) {\n    this.em = entityManager;\n  }\n  async loadFromImagePk(pk) {\n    const imagePk = PrimaryKey.getPrimaryKey(pk);\n    const imageEntity = await this.em.get(imagePk);\n    if(!imageEntity || !imageEntity.thumbnail){\n      return null;\n    }\n    const thumbnailPk  = PrimaryKey.getPrimaryKey(imageEntity.thumbnail);\n    const thumbnailEntity = await this.em.get(thumbnailPk);\n    thumbnailEntity.parentPk = imagePk;\n    return thumbnailEntity\n  }\n  async load(pk) {\n    let binaryPk = pk;\n    if (!pk) {\n      binaryPk = PrimaryKey.getPrimaryKey(pk);\n    }\n    return await this.em.Thumbnales.get(binaryPk);\n  }\n  async save(pk, name, binary, type, width, height, listing = 0) {\n    let image = null;\n    if (pk) {\n      image = await this.em.Thumbnales.get(pk);\n    }\n    let binaryPk = PrimaryKey.getPrimaryKey(binary);\n    if (!image) {\n      image = new Thumbnales();\n    } else {\n      image.updateDate = Date.now();\n    }\n    image.name = name || name === null\n      ? name\n      : image.name;\n    image.binary = binaryPk\n      ? binaryPk\n      : binary;\n    image.type = type || type === null\n      ? type\n      : image.type;\n    image.width = width || width === null\n      ? width\n      : image.width;\n    image.height = height || height === null\n      ? height\n      : image.height;\n    image.listing = listing || listing === null\n      ? listing\n      : image.listing;\n    return await this.em.Thumbnales.save(image);\n  }\n}\n","import {BaseEntity} from \"../service/entity/baseEntity\";\nexport class Pdfs extends BaseEntity{\n  constructor() {\n    super(\"Pdfs\");\n    this.name = null;\n    this.binary = null;\n    this.type = null;\n    this.modifyDate = null;\n    this.width = null;\n    this.height = null;\n    this.createDate = Date.now();\n    this.updateDate = Date.now();\n    this.listing = 0;\n  }\n}\n","import vu from \"./viewUtil\";\nimport bc from \"./binaryConverter\";\nconst imgRe = /^image\\/.+|application\\/octet-stream/;\nexport class ImageProcessor {\n  constructor() {\n    this.canvas = vu.createCanvas(null, \"hidden\");\n    this.ctx = this.canvas.getContext('2d');\n    const self = this;\n    window.onload = () => {\n      document.body.appendChild(this.canvas);\n    };\n  }\n  setDataURI(dataURI) {\n    this.dataURI = dataURI;\n  }\n  create(arrayBuffer, width, height, type) {\n    return new Promise((resolve, reject) => {\n      const imgElm = new Image();\n      imgElm.src = bc.arrayBuffer2DataURI(arrayBuffer, type);\n      imgElm.onload = () => {\n        const widthScale = width / imgElm.width;\n        const heightScale = height / imgElm.height;\n        const scale = widthScale <= heightScale\n          ? widthScale\n          : heightScale;\n        this.canvas.height = imgElm.height * scale;\n        this.canvas.width = imgElm.width * scale;\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.scale(scale, scale);\n        this.ctx.drawImage(imgElm, 0, 0);\n        resolve(this.exportPng());\n      };\n      imgElm.onerror = (e) => {\n        console.log('失敗');\n        console.log(e);\n        reject(null);\n      };\n    });\n  }\n  exportPng() {\n    return this.canvas.toDataURL();\n  }\n  exportJpeg(quority = 1.0) {\n    return this.canvas.toDataURL('image/jpeg', quority);\n  }\n\n  createImageNodeByData(data) {\n    return new Promise((resolve, reject) => {\n      let {name, ab, type} = data;\n      let imgElm = vu.createImage();\n      imgElm.alt = escape(name);\n\n      if(!type){\n        type=\"application/octet-stream\";\n      }\n      if (type && type.match(imgRe)) {\n        imgElm.src = bc.arrayBuffer2DataURI(ab, type);\n        imgElm.onload = () => {\n          data.height = imgElm.height;\n          data.width = imgElm.width;\n          resolve(imgElm);\n        }\n        imgElm.onerror = (e) => {\n          console.log('失敗');\n          console.log(e);\n          reject(e);\n        };\n        return\n      } else {\n        resolve(imgElm);\n      }\n\n    });\n  }\n}\n","import {ImageProcessor} from \"../util/imageProcessor\";\nexport class ImageProcessService {\n  constructor() {\n    this.ip = new ImageProcessor();\n  }\n  async createThumbnail(arrayBuffer,type){\n    const retURI = await this.ip.create(arrayBuffer,100,100,type);\n    console.log(retURI);\n    return retURI;\n  }\n\n  async createImageNodeByData(data) {\n    return await this.ip.createImageNodeByData(data);\n  }\n}\n","import {MainServiceImpl} from \"./mainServiceImpl\"\nimport {Thread} from \"../util/thread/thread\"\nconst mainServiceImpl = new MainServiceImpl();\nconst currentSiries = \"\";\nconst currentTitle = \"\";\nexport class MainService {\n  static getInstance(){\n    const thread = new Thread();\n    thread.postMessage(\"WASMcaller\",\"\");\n    return mainServiceImpl;\n  }\n  async init(){\n    await mainServiceImpl.init();\n  }\n}\n","import {EntityManager} from \"./entity/entityManager\";\nimport {ViewPartsLoader} from \"./viewPartsLoader\";\nimport {TitleManager} from \"./manager/titleManager\";\nimport {BinaryManager} from \"./manager/binaryManager\";\nimport {PagesManager} from \"./manager/pagesManager\";\nimport {SettingsManager} from \"./manager/settingsManager\";\nimport {OutputProfilesManager} from \"./manager/outputProfilesManager\";\nimport {ImageManager} from \"./manager/imageManager\";\nimport {ThumbnaleManager} from \"./manager/thumbnailManager\";\nimport {Images} from \"../entity/images\";\nimport {Pdfs} from \"../entity/pdfs\";\nimport {Series} from \"../entity/series\";\nimport {Thumbnales} from \"../entity/thumbnales\";\nimport {Title} from \"../entity/title\";\nimport {Pages} from \"../entity/pages\";\nimport {Settings} from \"../entity/settings\";\nimport {OutputProfiles} from \"../entity/outputProfiles\";\nimport {ImageProcessService} from \"./imageProcessService\"\n\nconst title = \"CopiBon\";\nconst titlePrefix = \"title_\";\nexport class MainServiceImpl {\n  constructor() {\n    this.vpl = new ViewPartsLoader();\n    this.em = new EntityManager();\n    this.ip = new ImageProcessService();\n  }\n  async init() {\n    await this.em.initAsNewUser([Images, Pdfs, Series, Thumbnales, Title, Pages, Settings, OutputProfiles]);\n    this.ip = new ImageProcessService();\n    this.bm = new BinaryManager(this.em);\n    this.tbm = new ThumbnaleManager(this.em);\n    this.pb = new ThumbnaleManager(this.em);\n    this.tbm = new ThumbnaleManager(this.em);\n    this.im = new ImageManager(this.em);\n    this.pm = new PagesManager(this.em);\n    this.opm = new OutputProfilesManager(this.em);\n    this.sm = new SettingsManager(this.em,this.opm );\n    this.tm = new TitleManager(this.em);\n    this.im.setTitleManager(this.tm);\n    this.pm.setTitleManager(this.tm);\n    await this.tm.load();\n  }\n\n  getViewPartsLoader() {\n    return this.vpl;\n  }\n}\n","import {\n  ProgressActionCreator\n} from '../action/progressActionCreator'\nimport {\n  MainService\n} from \"../../service/mainService\"\nimport {\n  BaseReducer\n} from '../../util/reactive/baseReducer'\nlet progressViewReducer = null;\nexport class ProgressViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.vpl = this.ms.getViewPartsLoader();\n    this.em = this.ms.em;\n    this.tm = this.ms.tm;\n    this.progressBarAddAction = ProgressActionCreator.creatAddAction();\n    this.progressBarRemoveAction = ProgressActionCreator.creatRemoveAction();\n    this.progressBarUpdateAction = ProgressActionCreator.creatUpdateAction();\n    this.progressBarCompleatSortAction = ProgressActionCreator.creatCompleatAction();\n    this.atatch(this.progressBarAddAction);\n    this.atatch(this.progressBarRemoveAction);\n    this.atatch(this.progressBarUpdateAction);\n    this.atatch(this.progressBarCompleatSortAction);\n    this.storeKey = \"progress\";\n  }\n  static register() {\n    if (!progressViewReducer) {\n      progressViewReducer = new ProgressViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.progressBarAddAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, 0, false);\n    } else if (this.progressBarRemoveAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(false, 0, false);\n    } else if (this.progressBarUpdateAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, action.data.progress, false);\n    } else if (this.progressBarCompleatSortAction.type === action.type) {\n      store[this.storeKey] = this.createProgress(true, 100, true);\n    }\n    return store;\n  }\n  createProgress(isVisible, progress, isComple) {\n    return {\n      isVisible: isVisible,\n      progress: progress,\n      isComple: isComple\n    }\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {\n  ProgressViewReducer\n} from '../../reduxy/reducer/progressViewReducer'\nexport class ProgressBar extends BaseView {\n  constructor() {\n    super(\"ProgressBar\", \"ProgressBar\");\n    this.storeKey = \"progress\";\n    this.initPoint = '0%';\n  }\n\n  onAfterAttach(store, data) {\n    ProgressViewReducer.register();\n  }\n  render() {\n    return div(\"\" [\"ProgressBarView\"], {\n      style: {\n        display: \"none\"\n      }\n    }, [\n      div('', ['progeressFrame'], [div('', ['progeress'], {\n          style: {\n            width: this.initPoint\n          }\n        })]),\n      div('', ['progeressPoints'], this.initPoint)\n    ]);\n  }\n  async onViewShow(store, actionData) {\n    if (store.progress) {\n      await this.showProgress(store.progress);\n      //console.log(\"ProgressBar onViewShow\");\n    }\n  }\n  showProgress(data) {\n    const {isVisible, progress, isComple} = data;\n    if (isVisible) {\n      this.currentVnode.elm.style.display = 'block';\n      this.prePatch(\".progeress\", div(\"\", [\"progeress\"], {\n        style: {\n          width: progress + \"%\"\n        }\n      },));\n      this.prePatch(\".progeressPoints\", div(\"\", [\"progeressPoints\"], {}, progress + \"%\"));\n      if (isComple) {\n        setTimeout(() => {\n          this.currentVnode.elm.style.display = 'none';\n        }, 1000)\n      }\n    } else {\n      this.currentVnode.elm.style.display = 'none';\n      this.prePatch(\".progeress\", div(\"\", [\"progeress\"], {\n        style: {\n          width: \"0%\"\n        }\n      }));\n      this.prePatch(\".progeressPoints\", div(\"\", [\"progeressPoints\"], {}, this.initPoint));\n    }\n  }\n}\n","\nexport class BaseEventHandler {\n  constructor() {\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nconst baseActions = [\"addImage\", \"removeImage\", \"sortImages\", 'loadImages'];\nexport class ImageActionCreator {\n  constructor() {}\n  static creatAddAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addImage\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeImage\", targetView, data, storeKey);\n  }\n  static creatLoadImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadImages\", targetView, data, storeKey);\n  }\n  static creatSortImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"sortImages\", targetView, data, storeKey);\n  }\n  static creatChangeTitleImagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"changeTitle\", targetView, data, storeKey);\n  }\n  static creatDetailAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"detail\", targetView, data, storeKey);\n  }\n  static getStoreImagesKey(){\n    return \"imagesData\";\n  }\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nconst baseActions = [\"addImage\", \"removeImage\", \"sortImages\", 'loadImages'];\nexport class PageActionCreator {\n  constructor() {}\n  static creatAddPageAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"addPage\", targetView, data, storeKey);\n  }\n  static creatRemovePageAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removePage\", targetView, data, storeKey);\n  }\n  static creatResetPagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"resetPages\", targetView, data, storeKey);\n  }\n  static creatSortPagesAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"sortPages\", targetView, data, storeKey);\n  }\n  static getStorePagesKey(){\n    return \"pagesData\";\n  }\n}\n","import {Sorter} from \"../../util/sorter\";\nimport {MainService} from \"../../service/mainService\"\nexport class PageProcessor {\n  constructor() {\n    this.ms = MainService.getInstance();\n    this.em = this.ms.em;\n    this.pm = this.ms.pm;\n    this.tm = this.ms.tm;\n  }\n\n  async resetPagesFull() {\n    const setting = await this.tm.loadSettings();\n    const pageNum = setting.pageNum;\n    return await this.resetPages(pageNum);\n  }\n  async resetPages(pageNum) {\n    const title = await this.tm.load();\n    const pages = title.pages;\n    const pageEntitis = [];\n    const delPages = [];\n    const addPageAsNew = {};\n    if (pages.length > pageNum) {\n      for (let index in pages) {\n        const pk = pages[index];\n        if (!pk || typeof pk !== \"string\") {\n          addPageAsNew[index] = true;\n          continue;\n        }\n        const pageEntity = await this.em.get(pk);\n        if (!pageEntity) {\n          addPageAsNew[index] = true;\n          continue;\n        }\n        pageEntitis.push(pageEntity);\n        if (index >= pageNum) {\n          delPages.push(pk);\n        }\n      }\n      for (let index in delPages) {\n        const delTarget = delPages[index];\n        for (let i in pages) {\n          const current = pages[i];\n          if (delTarget === current) {\n            delete pages[i];\n            this.pm.remove(delTarget);\n            break;\n          }\n        }\n      }\n      for(let keyIndex in addPageAsNew){\n        const index = keyIndex*1;\n        if (index < pageNum) {\n          const addOne = await this.pm.save(null, null, null,null,null, index);\n          pages[index] = addOne.getPk();\n        }\n      }\n    } else {\n      const addCount = pageNum - pages.length;\n      for (let index = pages.length; index < pageNum; index++) {\n        const addOne = await this.pm.save(null, null, null,null,null, index);\n        pages.push(addOne.getPk());\n      }\n    }\n    await this.tm.saveTitle(title);\n  }\n  async loadPages() {\n    const title = await this.tm.load();\n    const pages = title.pages;\n    const pageEntitis = [];\n    for (let index in pages) {\n      const pk = pages[index];\n      if (!pk) {\n        continue;\n      }\n      const pageEntity = await this.em.get(pk);\n      pageEntitis.push(pageEntity);\n    }\n    return pageEntitis;\n  }\n  async move(fromPk,toPk){\n    await this.pm.move(fromPk,toPk)\n  }\n  async add(imagePk,pagePk){\n    await this.pm.addPage(imagePk,pagePk);\n  }\n  async remove(pagePk) {\n    await this.pm.removeImage(pagePk);\n  }\n}\n","import {ImageActionCreator} from '../action/imageActionCreator'\nimport {PageActionCreator} from '../action/pageActionCreator'\nimport {Sorter} from \"../../util/sorter\";\nimport {MainService} from \"../../service/mainService\"\nimport {BaseReducer} from '../../util/reactive/baseReducer'\nimport {PageProcessor} from '../processor/pageProcessor'\nlet imageViewReducer = null;\nexport class ImageViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.vpl = this.ms.getViewPartsLoader();\n    this.ip = this.ms.ip;\n    this.em = this.ms.em;\n    this.pm = this.ms.pm;\n    this.im = this.ms.im;\n    this.tm = this.ms.tm;\n    this.imagAddAction = ImageActionCreator.creatAddAction();\n    this.imageRemoveAction = ImageActionCreator.creatRemoveAction();\n    this.imagesLoadAction = ImageActionCreator.creatLoadImagesAction();\n    this.imagesSortAction = ImageActionCreator.creatSortImagesAction();\n    this.imagesChangeTitleAction = ImageActionCreator.creatChangeTitleImagesAction();\n    this.imagesDetailAction = ImageActionCreator.creatDetailAction();\n    this.atatch(this.imagAddAction);\n    this.atatch(this.imageRemoveAction);\n    this.atatch(this.imagesLoadAction);\n    this.atatch(this.imagesSortAction);\n    this.atatch(this.imagesChangeTitleAction);\n    this.atatch(this.imagesDetailAction);\n    this.pp = new PageProcessor();\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n    this.storePagesKey = PageActionCreator.getStorePagesKey();\n  }\n  static register() {\n    if (!imageViewReducer) {\n      imageViewReducer = new ImageViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    let isCalled = false;\n    if (this.imagAddAction.type === action.type) {\n      store[this.storeImagesKey] = await this.saveFiles(action.data.files);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imageRemoveAction.type === action.type) {\n      store[this.storeImagesKey] = await this.remove(action.data.imagePKforDelete);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesLoadAction.type === action.type) {\n      store[this.storeImagesKey] = await this.loadImages();\n      store[this.storePagesKey] = await this.loadPages();\n      //alert(store[this.storePagesKey]);\n    } else if (this.imagesSortAction.type === action.type) {\n      store[this.storeImagesKey] = await this.sort(action.data.imagePKmove, action.data.imagePKdrop);\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesChangeTitleAction.type === action.type) {\n      store[this.storePagesKey] = await this.loadPages();\n    } else if (this.imagesDetailAction.type === action.type) {\n      store[\"imagesDetailData\"] = await this.loadAImage(action.data.imagePK);\n    }\n    return store;\n  }\n  async loadPages(){\n    return await this.pp.loadPages();\n  }\n  async saveFiles(files) {\n    const imageEntitis = await this.tm.addImageFiles(files);\n    const retList = this.im.getEntitisAsList();\n    for (let imageEntity of imageEntitis) {\n      retList.unshift(imageEntity);\n    }\n    return await this.im.createRetList(retList);\n  }\n\n  async sort(movePk, dropPk) {\n    //console.log('sort movePk:' + movePk + '/dropPk:' + dropPk+\"/this.em.save:\"+this.em)\n      // console.log(this.em)\n    const imageEntitis = this.im.getEntitisAsList();\n\n    for (let index in imageEntitis) {\n      const imageEntity = imageEntitis[index];\n      const pk = imageEntity.getPk();\n      imageEntity.listing = index;\n      //console.log('sort pk:' + pk + '/index:' + index + '/imageEntity.listing:' + imageEntity.listing)\n    }\n    Sorter.orderBy(imageEntitis, [\n      {\n        colName: \"listing\",\n        isDESC: false\n      }, {\n        colName: \"updateDate\",\n        isDESC: true\n      }\n    ]);\n    const converterMap = {};\n    converterMap[movePk] = dropPk;\n    converterMap[dropPk] = movePk;\n    for (let index in imageEntitis) {\n      const imageEntity = imageEntitis[index];\n      const pk = imageEntity.getPk();\n      console.log('sort pk:' + pk + '/index:' + index + '/imageEntity.listing:' + imageEntity.listing)\n      const convertedPk = converterMap[pk]\n        ? converterMap[pk]\n        : pk;\n      if (convertedPk !== pk) {\n        const imageEntityConverted = this.im.getFromLoaded(convertedPk).imageEntity;\n        imageEntityConverted.listing = index;\n        imageEntityConverted.updateDate = Date.now();\n        await this.em.Images.save(imageEntityConverted);\n      } else {\n        imageEntity.listing = index;\n      }\n    }\n    return await this.im.createRetList(imageEntitis);\n  }\n\n  async loadAImage(pk) {\n    if(!pk){\n      return\n    }\n    const imageEntity = await this.em.get(pk);\n    const binaryEntity = await this.em.get(imageEntity.binary);\n    const size = binaryEntity._ab.byteLength;\n    const imageText = escape(imageEntity.name) + ' (' + (\n    imageEntity.type || 'n/a') + ') - ' + size + 'bytes, last modified: ' + imageEntity.modifyDate + ' size:' + imageEntity.width + 'x' + imageEntity.height\n\n    return {imageEntity:imageEntity,binaryEntity:binaryEntity,imageText:imageText}\n  }\n  async loadImages() {\n    const a = await this.pp.resetPagesFull();\n    return await this.im.loadImages();\n  }\n\n  async remove(pk) {\n    await this.tm.removeImage(pk);\n    this.im.removeLoaded(pk);\n    return this.im.getRetObjsAsList();\n  }\n}\n// setTimeout(ImageViewReducer.register,1);\n","import {ProgressBar} from \"../view/parts/progressBar\";\nimport {BaseEventHandler} from \"./baseEventHandler\";\nimport {ImageActionCreator} from '../reduxy/action/imageActionCreator'\nimport {ImageViewReducer} from '../reduxy/reducer/imageViewReducer'\nexport class FileUploader extends BaseEventHandler {\n  constructor(fileProcessor) {\n    super();\n    // this.fileProcessor = fileProcessor;\n    this.name = \"FileUploader\";\n    ImageViewReducer.register();\n  }\n  handleFileSelect(view) {\n    return (event)=>{\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const files = event.target.files; // FileList object\n      this.handleFiles(view,files);\n    }\n  }\n\n  handleDrop(view){\n    return (event)=>{\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const files = event.dataTransfer.files;\n      this.handleFiles(view,files);\n    }\n  }\n  handleFiles(view,files){\n    const actin = ImageActionCreator.creatAddAction(view,{files:files});\n    view.dispatch(actin);\n    //this.fileProcessor.processFiles(files);\n  }\n  async areadParFile(file){\n    return await areadParFile(file);\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  file\n} from \"../../util/reactive/base/vtags\";\nimport {FileUploader} from \"../../eventHandler/fileUploader\";\nconst text = \"ここにファイルをアップロードしてください。\";\nexport class FileUploadArea extends BaseView {\n  constructor() {\n    super(\"fuaPArent\", \"FileUploadArea\",true);\n    this.fu = new FileUploader();\n  }\n  render() {\n    this.FileUploadFile = file(\"FileUploadFile\", [\"FileUploadFile\"],{on:{\n      'change':this.fu.handleFileSelect(this)\n    }});\n    this.fileUploadArea = div(\"FileUploadArea\", [\"FileUploadAreaA\"],text);\n\n    return div(this.id, [\"FileUploadArea\"], {\n      on: {\n        'dragover': this.fu.handleDrop(this),\n        'drop': this.fu.handleDrop(this),\n        'click': (e) => {\n          const fileInput = this.getElementById(\"FileUploadFile\");\n          fileInput.elm.click();\n        }\n      }\n    }, [this.fileUploadArea, this.FileUploadFile]);\n  }\n  onAfterAttach(store, data) {\n\n    //alert('FileUploadArea onAfterAttach')\n    //this.addEventListeners();\n\n  }\n}\n","const re_yyyy = /yyyy/;\nconst re_MM = /MM/;\nconst re_dd = /dd/;\nconst re_hh = /hh/;\nconst re_mm = /mm/;\nconst re_ss = /ss/;\n\nexport const unixTimeToDateFormat = (unixtime, format = \"yyyy-MM-dd hh:mm:ss\") => {\n  const d = new Date(unixtime);\n  const year = d.getFullYear();\n  const month = d.getMonth() + 1;\n  const day = d.getDate();\n  const hour = ('0' + d.getHours()).slice(-2);\n  const min = ('0' + d.getMinutes()).slice(-2);\n  const sec = ('0' + d.getSeconds()).slice(-2);\n  return format.replace(re_yyyy, year).replace(re_MM,month).replace(re_dd,day).replace(re_hh,hour).replace(re_mm,min).replace(re_ss,sec);\n}\nexport const getNowUnixtime = () => {\n  new Date().getTime();\n}\n","import {ActionCreator} from '../../util/reactive/actionCreator'\nexport class SettingActionCreator {\n  constructor() {}\n  static creatAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"creatSetting\", targetView, data, storeKey);\n  }\n  static creatRemoveAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"removeSetting\", targetView, data, storeKey);\n  }\n  static creatLoadAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"loadSetting\", targetView, data, storeKey);\n  }\n  static creatUpdateAction(targetView, data, storeKey = null) {\n    return ActionCreator.createBaseAction(\"updateSetting\", targetView, data, storeKey);\n  }\n  static getStoreKey(){\n    return \"settings\";\n  }\n  static getStoreKeyOpm(){\n    return \"settingsOpm\";\n  }\n}\n","import {\n  SettingActionCreator\n} from '../action/settingActionCreator'\n\nimport {\n  Sorter\n} from \"../../util/sorter\";\nimport {\n  MainService\n} from \"../../service/mainService\"\nimport {\n  BaseReducer\n} from '../../util/reactive/baseReducer'\nlet settingViewReducer = null;\nexport class SettingViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.vpl = this.ms.getViewPartsLoader();\n    this.em = this.ms.em;\n    this.tm = this.ms.tm;\n    this.sm = this.ms.sm;\n    this.opm = this.ms.opm;\n    this.creatAction = SettingActionCreator.creatAction();\n    this.creatRemoveAction = SettingActionCreator.creatRemoveAction();\n    this.creatLoadAction = SettingActionCreator.creatLoadAction();\n    this.creatUpdateAction = SettingActionCreator.creatUpdateAction();\n    this.atatch(this.creatAction);\n    this.atatch(this.creatRemoveAction);\n    this.atatch(this.creatLoadAction);\n    this.atatch(this.creatUpdateAction);\n    this.storeKey = SettingActionCreator.getStoreKey();\n    this.storeKeyOpm = SettingActionCreator.getStoreKeyOpm();\n  }\n  static register() {\n    if (!settingViewReducer) {\n      settingViewReducer = new SettingViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.creatAction.type === action.type) {\n      store[this.storeKey] = await this.load().catch((e)=>{console.log(e)}) ;\n      store[this.storeKeyOpm] = await this.opm.loadAll() ;\n    } else if (this.creatRemoveAction.type === action.type) {\n      store[this.storeKey] = await this.reset(action.data).catch((e)=>{console.log(e)});\n      store[this.storeKeyOpm] = await this.opm.loadAll() ;\n    } else if (this.creatLoadAction.type === action.type) {\n      store[this.storeKey] = await this.load().catch((e)=>{console.log(e)}) ;\n      store[this.storeKeyOpm] = await this.opm.loadAll() ;\n    } else if (this.creatUpdateAction.type === action.type) {\n      store[this.storeKey] = await this.update(action.data).catch((e)=>{console.log(e)});\n      store[this.storeKeyOpm] = await this.opm.loadAll() ;\n    }\n  }\n  async update(data) {\n    const title = await this.tm.load();\n    const pk = title.getPk();\n    this.sm.save(pk, data.name, data.pageNum, data.startPage, data.pageDirection, data.outputProfile, data.listing);\n    const settingEntityLoad = await this.sm.loadByPk(pk);\n    if(!settingEntityLoad){\n      const settingEntity =  await this.sm.createDefault(pk);\n      return settingEntity;\n    }\n    return settingEntityLoad;\n  }\n  async reset() {\n    const title = await this.tm.load();\n    const pk = title.getPk();\n    const settingEntity =  await this.sm.createDefault(pk);\n    return settingEntity;\n  }\n  async load() {\n    return this.tm.loadSettings();\n  }\n}\n","const ua = navigator.userAgent.replace(/[\\.0-9]+/g,\"x\");\nconst domain = window.location;\nconst A5 = {};\nexport default {\n  A5:A5\n}\nexport const SettingData = {\n  pageStart:{l:\"fromLeft\",r:\"fromRight\"},\n  pageDirection:{l2r:\"LeftToRight\",r2l:\"RightToLeft\"},\n  pageNums:[1,2,4,6,8,10,12,16]\n}\nexport const PrefareceData = {\n  previewSizeSingle:{w400:400,w500:500,w800:800,w1000:1000},\n    e:{w400:400,w500:500,w800:800,w1000:1000}\n}\n","import vu from \"../../util/viewUtil\";\nimport {unixTimeToDateFormat} from \"../../util/timeUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label,\n  select,\n  option,\n  createSelectVnode\n} from \"../../util/reactive/base/vtags\";\nimport {SettingViewReducer} from '../../reduxy/reducer/settingViewReducer'\nimport {SettingData} from '../../settings/exportSettings'\nimport {SettingActionCreator} from '../../reduxy/action/settingActionCreator'\nexport class TitleSettings extends BaseView {\n  constructor() {\n    super(\"TitleSettings\", \"TitleSettings\");\n    this.text = \"TitleSettingsAAA\";\n    this.bodyId = this.id + \"Child\";\n    this.storeKey = SettingActionCreator.getStoreKey();\n    this.getStoreKeyOpm = SettingActionCreator.getStoreKeyOpm();\n  }\n  render() {\n    return div(this.bodyId, [\"TitleSettings\"], this.text);\n  }\n  onAfterAttach(store, data) {\n    SettingViewReducer.register();\n    const action = SettingActionCreator.creatLoadAction(this, {});\n    this.dispatch(action);\n  }\n  async onViewShow(store, actionData) {\n    console.log(\"TitleSettings onViewShow 01 this.storeKey:\" + this.storeKey + '/' + store[this.storeKey]);\n    if (store[this.storeKey]) {\n      await this.showSettings(store[this.storeKey], store[this.getStoreKeyOpm]);\n    }\n  }\n  update() {\n    return(event) => {\n      const nameInput = document.getElementById(this.id + \"NameInput\").value;\n      const pageNumInput = document.getElementById(this.id + \"PageNumInput\").value;\n      const startPageInput = document.getElementById(this.id + \"StartPageInput\").value;\n      const pageDirectionInput = document.getElementById(this.id + \"PageDirectionInput\").value;\n      const outputProfileInput = document.getElementById(this.id + \"OutputProfileInput\").value;\n      //alert(\"update NameInput:\" + nameInput + \"/\" + pageNumInput + \"/\" + startPageInput + \"/\" + pageDirectionInput + \"/\" + outputProfileInput)\n      //data.name, data.pageNum, data.startPage,, data.startPage, data.outputProfile, data.listing);\n      const action = SettingActionCreator.creatUpdateAction(this, {\n        name: nameInput,\n        pageNum: pageNumInput,\n        startPage: startPageInput,\n        pageDirection: pageDirectionInput,\n        outputProfile: outputProfileInput,\n        listing: 0\n      });\n\n      this.dispatch(action);\n    }\n  }\n  async showSettings(setting, outputProfiles) {\n    console.log(setting);\n    console.log(outputProfiles);\n    const labelClass = this.id + \"Label\";\n    const inputClass = this.id + \"Input\";\n    const title = div(\"\", [this.id + \"Title\"], \"Setting for Output\");\n    const nameLabel = span(\"\", [labelClass], 'name:');\n    const nameInput = input(this.id + \"NameInput\", [this.id + \"NameInput\"], {\n      props: {\n        name: this.id + \"NameInput\"\n      }\n    }, \"text\", setting.name);\n    const nameRow = div(\"\", [this.id + \"Row\"], [nameLabel, nameInput]);\n    const pageNumLabel = span(\"\", [labelClass], 'pageNum:');\n    const idpageNumInput = this.id + \"PageNumInput\";\n    const pageNumInput = createSelectVnode(idpageNumInput, [\n      inputClass, idpageNumInput\n    ], idpageNumInput, SettingData.pageNums, setting.pageNum);\n    const pageNumRow = div(\"\", [this.id + \"Row\"], [pageNumLabel, pageNumInput]);\n\n    const startPageLabel = span(\"\", [labelClass], 'startPage:');\n    const idStartPageInput = this.id + \"StartPageInput\";\n    const startPageInput = createSelectVnode(idStartPageInput, [\n      inputClass, idStartPageInput\n    ], idStartPageInput, SettingData.pageStart, setting.startPage);\n    const startPageRow = div(\"\", [this.id + \"Row\"], [startPageLabel, startPageInput]);\n\n    const pageDirectionLabel = span(\"\", [labelClass], 'pageDirection:');\n    const idPageDirectionInput = this.id + \"PageDirectionInput\";\n    const pageDirectionInput = createSelectVnode(idPageDirectionInput, [\n      inputClass, idPageDirectionInput\n    ], idPageDirectionInput, SettingData.pageDirection, setting.pageDirection);\n    const pageDirectionRow = div(\"\", [this.id + \"Row\"], [pageDirectionLabel, pageDirectionInput]);\n\n    const outputProfileLabel = span(\"\", [labelClass], 'outputProfile:');\n    const idOutputProfileInput = this.id + \"OutputProfileInput\";\n    const outputProfileInput = input(idOutputProfileInput, [\n      inputClass, idOutputProfileInput\n    ], {\n      props: {\n        name: idOutputProfileInput\n      }\n    }, \"text\", setting.outputProfile);\n    const outputProfileRow = div(\"\", [this.id + \"Row\"], [outputProfileLabel, outputProfileInput]);\n    const frameL = div(\"\", [this.id + \"FrameL\"], [nameRow, pageNumRow]);\n    const frameR = div(\"\", [this.id + \"FrameR\"], [startPageRow, pageDirectionRow, outputProfileRow]);\n    const frame = div(\"\", [this.id + \"Frame\"], [frameL, frameR]);\n    const button = div(\"\", [this.id + \"Update\"], {\n      on: {\n        click: this.update()\n      }\n    }, \"Save! LastUpdae:\" + unixTimeToDateFormat(setting.updateDate));\n    const childlen = [title, frame, button];\n    this.prePatch(\"#\" + this.bodyId, div(this.bodyId, [\"TitleSettings\"], childlen));\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {a,div,li,ul,img,span,input,label} from \"../../util/reactive/base/vtags\";\nexport class ExportButton  extends BaseView {\n  constructor() {\n    super(\"ExportButton\", \"ExportButton\");\n    this.text=\"ExportButton\";\n  }\n  render() {\n    const button = div(this.id, \"ExportButton\", this.text);\n    return button;\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport bc from \"../../util/binaryConverter\";\n\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nexport class ImageDetail extends BaseView {\n  constructor() {\n    super(\"ImageDetail\", \"ImageDetail\");\n    this.imageAreaID = this.id + \"child\";\n    this.isOnScroll = false;\n    this.startX = 0;\n    this.startY = 0;\n  }\n  render(store, actionData) {\n    return div(\"\",[\"\"],[div(\"\", [\"ImageDetailTitle\"],\"ImageDetailTitle\"),div(this.imageAreaID, [\"ImageDetailA\"], this.id + \"aaaaa\")]);\n  }\n  async onViewShow(store, actionData) {\n    if (store.imagesDetailData) {\n      await this.showImage(store.imagesDetailData);\n      this.startX = 0;\n      this.startY = 0;\n      this.offsetX = 0;\n      this.offsetY = 0;\n      this.isOnScroll = false;\n    }\n  }\n\n  async showImage(imageData) {\n    const {imageEntity, binaryEntity, imageText} = imageData;\n    const pk = imageEntity.getPk();\n    const dataUri = bc.arrayBuffer2DataURI(binaryEntity._ab);\n    const imgVnode = img(pk + \"_image\", imageEntity.name, imageEntity.name, dataUri, {});\n    const textVnode = span(pk + \"_text\", [\"thumbnail_text\"], imageData.imageText);\n    const image = [\n      div(\"\", [\"\"], [imgVnode]),\n      div(\"\", [textVnode])\n    ]\n    this.prePatch(\"#\" + this.imageAreaID, div(this.imageAreaID, [\"image_detail_block\"], {\n      on: {\n        mousedown: this.onMouseOn(),\n        mousemove: this.onMouseMove()\n      },\n      style:{top:0,left:0}\n    }, image));\n  }\n  click() {\n    return(event) => {\n      alert(\"click\");\n    }\n  }\n  onMouseOn() {\n    return(event) => {\n      // alert(\"onMouseOn\");\n      this.startX = this.offsetX\n        ? event.clientX+this.offsetX*0-this.offsetX１\n        : event.clientX;\n      this.startY = this.offsetY\n        ? event.clientY+this.offsetY*0-this.offsetY１\n        : event.clientY;\n      const elm = event.target;\n      this.isOnScroll = this.isOnScroll?false:true;\n    }\n  }\n  onMouseOff() {\n    return(event) => {\n      // alert(\"onMouseOff\");\n      const elm = event.target;\n      this.isOnScroll = false;\n    }\n  }\n  onMouseMove() {\n    return(event) => {\n      const elm = event.target;\n      if (this.isOnScroll) {\n        const currentX = event.clientX;\n        const currentY = event.clientY;\n        const offsetX = currentX - this.startX;\n        const offsetY = currentY - this.startY;\n        const targetNode = elm.parentNode.parentNode;\n        // console.log(\"elm.tagName:\" + elm.tagName + \"/(offsetX:\" + offsetX + \"/offsetY:\" + offsetY\n        // + \")/(currentX:\" + currentX + \"/currentY:\" + currentY\n        // + \")/(this.startX:\" + this.startX + \"/this.startY:\" + this.startY);\n        targetNode.style.top = offsetY + \"px\";\n        targetNode.style.left = offsetX + \"px\";\n        this.offsetX = this.startX;\n        this.offsetY = this.startY;\n        this.offsetX１ = offsetX;\n        this.offsetY１ = offsetY;\n      }\n    }\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport bc from \"../../util/binaryConverter\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {PageActionCreator} from '../../reduxy/action/pageActionCreator'\nimport {ImageActionCreator} from '../../reduxy/action/imageActionCreator'\nexport class PageImage extends BaseView {\n  constructor(parent, listing,draggableArea) {\n    super(\"PageImage\" + listing, \"PageImage\");\n    this.ip = this.ms.ip;\n    this.parent = parent;\n    this.draggableArea = draggableArea;\n    this.listing = listing;\n    this.thumbnail = null;\n    this.thumbnail_block = \"thumbnail_block\";\n  }\n  render() {\n    this.button = div(this.id + \"child\", \"PageImageA\", this.id);\n    return div([this.button]);\n  }\n  async setPageData(pageData, imageData) {\n    this.pageData = pageData;\n    this.imageData = imageData;\n    if (!pageData) {\n      return;\n    }\n    this.pk = pageData.getPk();\n    const binaryEntity = this.imageData\n      ? this.imageData.binaryEntity\n      : null;\n    if (binaryEntity) {\n      const data = {\n        name: \"page_\" + this.listing,\n        ab: binaryEntity._ab,\n        type: binaryEntity.type\n      }\n      this.thumbnail = await this.ip.createImageNodeByData(data).catch((e) => {\n        console.log(e);\n        throw e\n      });\n      // console.log(this.thumbnail)\n    }else{\n      this.thumbnail = null;\n    }\n  }\n  render(store, actionData) {\n    return div('', \"\");\n  }\n  remove(pk) {\n    return(event) => {\n      if (window.confirm(\"delete ok?\")) {\n        const action = PageActionCreator.creatRemoveAction(this, {imagePKforDelete: pk});\n        this.dispatch(action);\n      }\n    }\n  }\n  handleDragStart(dragImageSrc) {\n    return(event) => {\n      const elm = event.target;\n      this.parent.dropElm = null;\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      elm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n      this.draggableArea.nowSelectedElm = elm;\n      event.dataTransfer.effectAllowed = 'move';\n      event.dataTransfer.setData('text/html', elm.innerHTML);\n      let dragIcon = document.createElement('img');\n      dragIcon.src = dragImageSrc;\n      dragIcon.width = 100;\n      event.dataTransfer.setDragImage(dragIcon, -10, -10);\n    }\n  }\n  handleDragOver() {\n    return(event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      event.preventDefault(); // Necessary. Allows us to drop.\n      event.dataTransfer.dropEffect = 'move'; // See the section on the DataTransfer object.\n      return false;\n    }\n  }\n  handleDragEnter() {\n    return(event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      elm.classList.add('over');\n    }\n  }\n  handleDragLeave() {\n    return(event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      elm.classList.remove('over'); // this / event.target is previous target element.\n    }\n  }\n  handleDrop(event) {\n    return(event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      this.parent.dropElm = elm;\n      const nowSelectedElm = this.draggableArea.nowSelectedElm;\n      if (nowSelectedElm && nowSelectedElm.dataset.pk && nowSelectedElm !== elm) {\n        const selectedPk = nowSelectedElm.dataset.pk;\n        const targetPk = elm.dataset.pk;\n        if(selectedPk && nowSelectedElm.dataset.is_image){\n          //console.log('sort handleDrop imagePKmove:' + nowSelectedElm+ \"/elm.dataset.pk:\" + elm.dataset.pk+\"/targetPk:\"+targetPk)\n          const action = PageActionCreator.creatAddPageAction(this, {\n            imagePk: selectedPk,\n            pagePk: targetPk\n          });\n          this.dispatch(action);\n        }else if(selectedPk && nowSelectedElm.dataset.is_page){\n          //console.log('sort handleDrop imagePKmove:' + nowSelectedElm + \"/elm.dataset.pk:\" + elm.dataset.pk+\"/targetPk:\"+targetPk)\n          const action = PageActionCreator.creatSortPagesAction(this, {\n            formPk: selectedPk,\n            toPk: targetPk\n          });\n          //alert(\"creatSortPagesAction :\"+nowSelectedElm.dataset.is_image+\"/pk:\"+nowSelectedElm.dataset.pk+\"/\"+elm.dataset.pk+\"/\"+elm.dataset.is_page);\n          this.dispatch(action);\n        }\n      }\n      const childNodes = elm.parentNode.childNodes;\n      for (let i = 0; i < childNodes.length; i++) {\n        const col = childNodes[i];\n        col.classList.remove('over');\n      }\n      return false;\n    }\n  }\n  handleDragEnd(event) {\n    return(event) => {\n      const elm = event.target;\n      const targetPk = elm.dataset.pk;\n      console.log('sort handleDrop imagePKmove:' + this.draggableArea.nowSelectedElm + \"/elm.dataset.pk:\" + elm.dataset.pk+\"/targetPk:\"+targetPk)\n      if (!elm.classList || !elm.classList.contains(this.thumbnail_block)) {\n        return\n      }\n      this.draggableArea.nowSelectedElm = null;\n      elm.style.opacity = '1';\n      const childNodes = elm.parentNode.childNodes;\n      for (let i = 0; i < childNodes.length; i++) {\n        const col = childNodes[i];\n        col.classList.remove('over');\n      }\n      if (this.draggableArea.cancelPageArea!==null) {\n        const action = PageActionCreator.creatRemovePageAction(this, {\n          pagePk: targetPk\n        });\n        this.dispatch(action);\n      }\n    }\n  }\n  selectImage(event) {\n    return(event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n      console.log('sort selecImage imagePKmove:/elm.dataset.pk:' + elm.dataset.pk+\"/\"+this.pageData)\n      if (this.pageData && this.pageData.baseImage) {\n        const action = ImageActionCreator.creatDetailAction(this, {imagePK: this.pageData.baseImage});\n        this.dispatch(action);\n      }\n      return false;\n    }\n  }\n  renderVnode(parent) {\n    const pageEntity = this.pageData;\n    if (!pageEntity) {\n      return div(this.id, [\"aaaaaaa\" + this.listing], \"null\" + this.listing);\n    }\n    const src = this.thumbnail\n      ? this.thumbnail.src\n      : \"aaaaaaaaaaaaaaaaaaa\";\n    const imageBg = !src?{}:{\n      \"background-image\":\"url(\"+src+\")\"\n    };\n    //console.log(\"★A binaryEntity 01\"+this.id+\"/src:\"+src)\n    //const imgVnode = img(this.pk + \"_page\", [\"\"], \"\", src, {});\n    const rowVnode = div(this.id, [\"thumbnail_block\"], {\n      on: {\n        dragstart: this.handleDragStart(src),\n        dragover: this.handleDragOver(),\n        dragenter: this.handleDragEnter(),\n        dragleave: this.handleDragLeave(),\n        drop: this.handleDrop(),\n        dragend: this.handleDragEnd(),\n        click: this.selectImage()\n      },\n      dataset: {\n        pk: this.pk,\n        is_page:true\n      },\n      style:imageBg,\n      props: {\n        \"draggable\": \"true\"\n      }\n    }, [div(\"\", [\"page_block\"], [])]);\n    parent.prePatch(\"#\" + this.id, rowVnode);\n    return rowVnode;\n  }\n  createVnode() {}\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {SettingData} from '../../settings/exportSettings'\nimport {SettingActionCreator} from '../../reduxy/action/settingActionCreator'\nimport {PageImage} from './pageImage'\nimport {PageProcessor} from '../../reduxy/processor/pageProcessor'\nimport {ImageActionCreator} from '../../reduxy/action/imageActionCreator'\nimport {PageActionCreator} from '../../reduxy/action/pageActionCreator'\nexport class PageImages extends BaseView {\n  constructor(draggableArea) {\n    super(\"PageImages\", \"PageImages\");\n    this.storeKey = SettingActionCreator.getStoreKey();\n    this.childId = this.id + \"child\";\n    this.thumbnails = {};\n    this.dummyClass = \"Dummy\";\n    this.pages = [];\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n    this.storePagesKey = PageActionCreator.getStorePagesKey();\n    for(let index = 0; index < 32; index++){\n      this.pages.push(new PageImage(this,index,draggableArea))\n    }\n    this.dropElm = null;\n  }\n  render() {\n    this.setting = div(this.id + \"child\", [\"PageImagesA\"], this.id);\n    return div(this.id, \"PageImages\", [this.setting]);\n  }\n  async onViewShow(store, actionData) {\n    let pageFrames = [];\n    const pagesData = store[this.storePagesKey];\n    const imagesData = store[this.storeImagesKey];\n    if(imagesData && pagesData){\n      //alert(\"onViewShow\"+imagesData.length+\"/\"+pagesData.length+\"/\");\n      await this.showPages(pagesData,imagesData);\n      //console.log(\"Pages onViewShow\");\n    }else if (store[this.storeKey]) {\n      pageFrames = this.buildPageFrames(store[this.storeKey]);\n      this.prePatch(\"#\" + this.childId, div(this.childId, pageFrames));\n    } else {\n      return;\n    }\n  }\n  addPage(imagesPk,pagePk){\n      const action = PageActionCreator.creatAddPageAction(this, {imagePk: imagesPk,pagePk:pagePk});\n      this.dispatch(action);\n  }\n  async showPages(pagesData,imagesData) {\n    const imageMap = {};\n    for(let imageData of imagesData){\n      const imageEntity = imageData.imageEntity;\n      const imagePk = imageEntity.getPk();\n      imageMap[imagePk] = imageData;\n    }\n    let index =0;\n    for (let pageEntity of pagesData) {\n      const page = this.pages[index];\n      index++;\n      if(!pageEntity){\n        continue;\n      }\n      const pk = pageEntity.getPk();\n      const imagePk = pageEntity.baseImage;\n      const imageData = imageMap[imagePk];\n      //alert(\"id:\"+imageData+\"/imagePk:\"+imagePk)\n      await page.setPageData(pageEntity,imageData);\n      page.renderVnode(this);\n    }\n  }\n  creatPageFrame(pageNo,dummyClass,isRight){\n    const frameParts = [];\n    if(dummyClass === this.dummyClass){\n      return frameParts;\n    }\n    const sideClass=\"pageFrameHeader\"+(isRight?\"Right\":\"Left\");\n    frameParts.push(div(\"\",[\"pageFrameHeader\",sideClass],pageNo+\"\"))\n    const pageIndex = pageNo-1;\n    const page = this.pages[pageIndex].renderVnode(this);\n    frameParts.push(page)\n    return frameParts;\n  }\n  showPreviewSingle(){\n    return (event)=>{\n      alert(\"showPreviewSingle\");\n    }\n  }\n  showPreviewDual(){\n    return (event)=>{\n      alert(\"showPreviewDual\");\n    }\n  }\n  buildPreviewButtons(){\n    const previewSingle = div(\"\",[\"previewCallButton\"],{on:{click:this.showPreviewSingle()}},\"Preview Single\");\n    const previewDouble = div(\"\",[\"previewCallButton\"],{on:{click:this.showPreviewDual()}},\"Preview Dual\");\n    return div(\"\",[\"previewFrame\"],[previewSingle,previewDouble]);\n  }\n  buildPageFrames(setting) {\n    const frames = [];\n    frames.push(this.buildPreviewButtons());\n    const startPage = setting.startPage;\n    const pageNum = setting.pageNum*1;//SettingData.pageNums[setting.pageNum-1]*1;\n    this.pageNum = pageNum;\n    const pageDirection = setting.pageDirection;\n    const isPageDirectionR2L = pageDirection === \"r2l\";\n    const isPageStartR = startPage === \"r\";\n    const frameNum = Math.ceil(pageNum / 2);\n    const isOdd = (pageNum % 2 === 1);\n    const isMatchPageStartSide = (pageDirection.indexOf(startPage) === 0);\n    const addPageNum = isOdd\n      ? 1\n      : isMatchPageStartSide\n        ? 0\n        : 1;\n    const totalPageFrame = frameNum*1 + addPageNum*1;\n    const dummyClass = this.dummyClass;\n    const pageClass = \"Page\";\n    const isStartFull = (isPageDirectionR2L && isPageStartR) || (!isPageDirectionR2L && !isPageStartR)\n    const leftStartDummyClass = !isPageStartR || isStartFull\n      ? \"\"\n      : dummyClass;\n    const rightStartDummyClass = isPageStartR || isStartFull\n      ? \"\"\n      : dummyClass;\n    const leftEndDummyClass = (isOdd && (!isStartFull || (isStartFull && !isPageDirectionR2L)))\n    || (!isOdd && (!isPageDirectionR2L||isStartFull))\n      ? \"\"\n      : dummyClass;\n    const rightEndDummyClass = (isOdd && (!isStartFull || (isStartFull && isPageDirectionR2L)))\n    || (!isOdd && (isPageDirectionR2L||isStartFull))\n      ? \"\"\n      : dummyClass;\n    const lastIndex = totalPageFrame - 1;\n    let pagNo = 0;\n    let pageOffset = 0;\n    //console.log(\"★lastIndex:\"+lastIndex+\"/pageNum:\"+pageNum+\"/setting.pageNum:\"+setting.pageNum);\n    for (let index = 0; index < totalPageFrame; index++) {\n      const leftPageNo = (\n        isPageDirectionR2L\n        ? 1\n        : 0) + pageOffset + pagNo;\n      const rightPageNo = (\n        isPageDirectionR2L\n        ? 0\n        : 1) + pageOffset + pagNo;\n      const pagePair = [];\n      //////////////////////////////////\n      if (index === 0) { //LR\n        const leftPageNoFirst = isPageDirectionR2L && isStartFull\n          ? 2\n          : isPageDirectionR2L\n            ? 1\n            : isStartFull\n              ? 1\n              : 0\n        const rightPageNoFirst = isPageDirectionR2L && isStartFull\n          ? 1\n          : isPageDirectionR2L\n            ? 0\n            : isStartFull\n              ? 2\n              : 1\n        pagePair.push(div(\"\", [\n          pageClass, leftStartDummyClass\n        ], this.creatPageFrame(leftPageNoFirst,leftStartDummyClass,false),totalPageFrame+\"L\" + leftPageNoFirst+\" \"+isMatchPageStartSide));\n        pagePair.push(div(\"\", [\n          pageClass, rightStartDummyClass\n        ], this.creatPageFrame(rightPageNoFirst,rightStartDummyClass,true),frameNum+\"R\" + rightPageNoFirst+\" \"+isOdd));\n        pageOffset = 1;\n        pagNo += isStartFull\n          ? 2\n          : 1;\n      } else if (index === lastIndex) {\n        pagePair.push(div(\"\", [\n          pageClass, leftEndDummyClass\n        ], this.creatPageFrame(leftPageNo,leftEndDummyClass,false),\"L\" + leftPageNo));\n        pagePair.push(div(\"\", [\n          pageClass, rightEndDummyClass\n        ], this.creatPageFrame(rightPageNo,rightEndDummyClass,true),\"R\" + rightPageNo));\n      } else {\n        pagePair.push(div(\"\", [pageClass], this.creatPageFrame(leftPageNo,\"\",false),\"L\" + leftPageNo));\n        pagePair.push(div(\"\", [pageClass], this.creatPageFrame(rightPageNo,\"\",true),\"R\" + rightPageNo));\n        pagNo += 2;\n      }\n      frames.push(div(\"\", [\"PageFrame\"], pagePair, \"pageFrame index:\" + index))\n    }\n    return frames;\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {\n  BaseView\n} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {\n  ImageActionCreator\n} from '../../reduxy/action/imageActionCreator'\nimport {PageActionCreator} from '../../reduxy/action/pageActionCreator'\nexport class Thumbnail extends BaseView {\n  constructor(parent,draggableArea) {\n    super(\"Thumnail\" + parent.id, \"Thumnail\");\n    this.parent = parent;\n    this.draggableArea = draggableArea;\n    this.ip = this.ms.ip;\n    this.draggableArea.nowSelectedElm = null;\n    this.thumbnail_block = \"thumbnail_block\";\n    this.displayNone = \"display_none\";\n  }\n  setImageData(imageData) {\n    this.imageData = imageData;\n  }\n  render(store, actionData) {\n    return div('', \"\");\n  }\n  remove(pk) {\n    return (event) => {\n      if (window.confirm(\"delete ok?\")) {\n        const action = ImageActionCreator.creatRemoveAction(this, {\n          imagePKforDelete: pk\n        });\n        this.dispatch(action);\n      }\n    }\n  }\n  handleDragStart(dragImageSrc) {\n    return (event) => {\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      elm.style.opacity = '0.4'; // this / event.target is the source nodevent.\n      this.draggableArea.nowSelectedElm = elm;\n      event.dataTransfer.effectAllowed = 'move';\n      event.dataTransfer.setData('text/html', elm.innerHTML);\n      let dragIcon = document.createElement('img');\n      dragIcon.src = dragImageSrc;\n      dragIcon.width = 100;\n      event.dataTransfer.setDragImage(dragIcon, -10, -10);\n    }\n  }\n  handleDragOver() {\n    return (event) => {\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      event.preventDefault(); // Necessary. Allows us to drop.\n      event.dataTransfer.dropEffect = 'move'; // See the section on the DataTransfer object.\n      return false;\n    }\n  }\n  handleDragEnter() {\n    return (event) => {\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      elm.classList.add('over');\n    }\n  }\n  handleDragLeave() {\n    return (event) => {\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      elm.classList.remove('over'); // this / event.target is previous target element.\n    }\n  }\n  handleDrop(event) {\n    return (event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      const nowSelectedElm = this.draggableArea.nowSelectedElm;\n      if(nowSelectedElm && nowSelectedElm.dataset.pk  && nowSelectedElm !== elm){\n        const selectedPk = nowSelectedElm.dataset.pk;\n        if (nowSelectedElm.dataset.is_image) {\n          //console.log('sort handleDrop imagePKmove:'+selectedPk+\"/elm.dataset.pk:\"+elm.dataset.pk)\n          const action = ImageActionCreator.creatSortImagesAction(this, {\n            imagePKmove: selectedPk,\n            imagePKdrop:elm.dataset.pk\n          });\n          this.dispatch(action);\n        }else if (nowSelectedElm.dataset.is_page) {\n          //console.log('sort handleDrop imagePKmove:'+selectedPk+\"/elm.dataset.pk:\"+elm.dataset.pk)\n          const action = PageActionCreator.creatRemovePageAction(this, {\n            pagePk: selectedPk\n          });\n          this.dispatch(action);\n        }\n        this.draggableArea.nowSelectedElm = null;\n      }\n      const childNodes = elm.parentNode.childNodes;\n      for (let i = 0; i < childNodes.length; i++) {\n        const col = childNodes[i];\n        col.classList.remove('over');\n      }\n      return false;\n    }\n  }\n  handleDragEnd(event) {\n    return (event) => {\n      const elm = event.target;\n      if(!elm.classList || !elm.classList.contains(this.thumbnail_block)){\n        return\n      }\n      const nowSelectedElm = this.draggableArea.nowSelectedElm;\n      console.log('handleDragEnd imagePKmove:'+(nowSelectedElm?nowSelectedElm.dataset.pk:nowSelectedElm)+\"/elm.dataset.pk:\"+elm.dataset.pk)\n      elm.style.opacity = '1';\n      const childNodes = elm.parentNode.childNodes;\n      for(let i = 0; i< childNodes.length ; i++) {\n        const col = childNodes[i];\n        col.classList.remove('over');\n      }\n    }\n  }\n  selectImage(event) {\n    return (event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n        console.log(' selecImage imagePKmove:/elm.dataset.pk:'+elm.dataset.pk)\n        const action = ImageActionCreator.creatDetailAction(this, {\n          imagePK: elm.dataset.pk\n        });\n        this.dispatch(action);\n      return false;\n    }\n  }\n  async crateDataLine(imageData,pagesMap ={}) {\n    const imageEntity = imageData.imageEntity;\n    const binaryEntity = imageData.binaryEntity;\n    //console.log(binaryEntity)\n    const data = {\n      name: imageEntity.name,\n      ab: binaryEntity._ab,\n      type: imageEntity.type\n    }\n    const imgElm = await this.ip.createImageNodeByData(data).catch((e) => {\n      console.log(e);\n      throw e\n    });\n    const pk = imageEntity.getPk();\n    // const imgVnode = img(pk + \"_image\", imageEntity.name, imageEntity.name, imgElm.src, {});\n    const textVnode = span(pk + \"_text\", [\"thumbnail_text\"], imageData.imageText);\n    const delButton = span(pk + \"_delButton\", [\"delButton\"], {\n      on: {\n        \"click\": this.remove(pk)\n      }\n    }, \"x\");\n    const imageVnode = div(\"\", [\"image_block\"], {\n      on: {\n        dragstart: this.handleDragStart(imgElm.src),\n        dragover: this.handleDragOver(),\n        dragenter: this.handleDragEnter(),\n        dragleave: this.handleDragLeave(),\n        drop: this.handleDrop(),\n        dragend:this.handleDragEnd(),\n        click:this.selectImage()\n      },\n      style:{\n        \"background-image\":\"url(\"+imgElm.src+\")\"\n      },\n      dataset:{pk:pk,is_image:true},\n      props:{ \"draggable\":\"true\"}\n    });\n    const classObj = {};\n    classObj[this.displayNone] = pagesMap[pk];\n    const rowVnode = div(\"\", [this.thumbnail_block],{\n      on: {\n        dragstart: this.handleDragStart(imgElm.src),\n        dragover: this.handleDragOver(),\n        dragenter: this.handleDragEnter(),\n        dragleave: this.handleDragLeave(),\n        drop: this.handleDrop(),\n        dragend:this.handleDragEnd(),\n        click:this.selectImage()\n      },\n      class:classObj,\n      dataset:{pk:pk,is_image:true},\n      props:{ \"draggable\":\"true\"}\n    }, [delButton,imageVnode , textVnode]);\n    return rowVnode;\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {\n  BaseView\n} from \"../../util/reactive/baseView\";\nimport {\n  Sorter\n} from \"../../util/sorter\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {\n  ImageActionCreator\n} from '../../reduxy/action/imageActionCreator'\nimport {\n  PageActionCreator\n} from '../../reduxy/action/pageActionCreator'\nimport {\n  Thumbnail\n} from './thumbnail'\nexport class Thumbnails extends BaseView {\n  constructor(draggableArea) {\n    super(\"Thumnails\", \"Thumnails\");\n    this.imageAreaID = \"thumnailsImageArea\";\n    this.thumbnail = new Thumbnail(this, draggableArea);\n    this.ip = this.ms.ip;\n    this.storePagesKey = PageActionCreator.getStorePagesKey();\n    this.pageMap = {}\n    this.thumbnails_block = 'thumbnails_block';\n    this.draggableArea = draggableArea;\n    this.draggableArea.cancelPageArea = null;\n  }\n  onAfterAttach(store, data) {\n    const action = ImageActionCreator.creatLoadImagesAction(this, {});\n    this.dispatch(action);\n  }\n  async onViewShow(store, actionData) {\n    const pagesData = store[this.storePagesKey];\n    if (store.imagesData && pagesData) {\n      this.updatePageMap(pagesData);\n      await this.showImages(store.imagesData);\n      // console.log(\"Thumnails onViewShow\");\n    }\n  }\n  render(store, actionData) {\n    return div(this.imageAreaID, \"Thumnails\");\n  }\n  updatePageMap(pagesData) {\n    for (let key in this.pageMap) {\n      delete this.pageMap[key];\n    }\n    for (let pageEntity of pagesData) {\n      const imagePk = pageEntity.baseImage;\n      if (imagePk) {\n        this.pageMap[imagePk] = true;\n      }\n    }\n  }\n  handleDragEnter() {\n    return (event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnails_block)) {\n        return\n      }\n      elm.classList.add('over');\n      this.draggableArea.cancelPageArea = elm;\n    }\n  }\n  handleDragLeave() {\n    return (event) => {\n      const elm = event.target;\n      if (!elm.classList || !elm.classList.contains(this.thumbnails_block)) {\n        return\n      }\n      elm.classList.remove('over'); // this / event.target is previous target element.\n      setTimeout(()=>{\n        this.draggableArea.cancelPageArea = null;\n      },100)\n    }\n  }\n  handleDrop(event) {\n    return (event) => {\n      event.stopPropagation(); // Stops some browsers from redirecting.\n      event.preventDefault();\n      const elm = event.target;\n      return false;\n    }\n  }\n\n  reset() {\n    return (event) => {\n      const elm = event.target;\n      //alert(\"reset!\")\n      }\n  }\n  async showImages(imageDatas) {\n    const images = [];\n    for (let imageData of imageDatas) {\n      if (!imageData) {\n        continue;\n      }\n      const imageEntity = imageData.imageEntity;\n      const pk = imageEntity.getPk();\n      const vnode = await this.thumbnail.crateDataLine(imageData, this.pageMap).catch((e) => {\n        console.log(e)\n      });\n      images.push(vnode);\n    }\n    const newVnode = div(this.imageAreaID,[this.thumbnails_block], {\n        on: {\n          dragover: this.handleDragEnter(),\n          dragstart: this.handleDragEnter(),\n          dragenter: this.handleDragEnter(),\n          dragleave: this.handleDragLeave(),\n          drop: this.handleDrop(),\n          dragend:this.handleDrop(),\n          click:this.reset()\n        },\n        props:{ \"draggable\":\"true\"}\n      },\n      images)\n    this.prePatch(\"#\" + this.imageAreaID, newVnode);\n  }\n}\n","import {\n  PageActionCreator\n} from '../action/pageActionCreator'\nimport {\n  MainService\n} from \"../../service/mainService\"\nimport {\n  BaseReducer\n} from '../../util/reactive/baseReducer'\nimport {PageProcessor} from '../processor/pageProcessor'\nimport {ImageActionCreator} from '../action/imageActionCreator'\nlet pagesViewReducer = null;\nexport class PagesViewReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.ms = MainService.getInstance();\n    this.vpl = this.ms.getViewPartsLoader();\n    this.em = this.ms.em;\n    this.im = this.ms.im;\n    this.tm = this.ms.tm;\n    this.pageAddAction = PageActionCreator.creatAddPageAction();\n    this.pageRemoveAction = PageActionCreator.creatRemovePageAction();\n    this.pagesResetAction = PageActionCreator.creatResetPagesAction();\n    this.pagesSortAction = PageActionCreator.creatSortPagesAction();\n    this.atatch(this.dropImageToPageAction);\n    this.atatch(this.pageAddAction);\n    this.atatch(this.pageRemoveAction);\n    this.atatch(this.pagesResetAction);\n    this.atatch(this.pagesSortAction);\n\n    this.pp = new PageProcessor();\n    this.storeKey = PageActionCreator.getStorePagesKey();\n    this.storeImagesKey = ImageActionCreator.getStoreImagesKey();\n  }\n  static register() {\n    if (!pagesViewReducer) {\n      pagesViewReducer = new PagesViewReducer();\n    }\n  }\n  async reduce(store, action) {\n    if (this.pageAddAction.type === action.type) {\n      store[this.storeKey] = await this.add(action.data.imagePk,action.data.pagePk);\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pageRemoveAction.type === action.type) {\n      store[this.storeKey] = await this.remove(action.data.pagePk);\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pagesResetAction.type === action.type) {\n      store[this.storeKey] = await this.reset();\n      store[this.storeImagesKey] = await this.loadImages();\n    } else if (this.pagesSortAction.type === action.type) {\n      store[this.storeKey] = await this.move(action.data.formPk,action.data.toPk);\n      store[this.storeImagesKey] = await this.loadImages();\n    }\n    return store;\n  }\n  async loadImages(){\n    return await this.im.loadImages();\n  }\n  async add(imagePk,pagePk){\n    //\n    await this.pp.add(imagePk,pagePk);\n    return await this.pp.loadPages();\n  }\n  async remove(pagePk){\n    //\n    await this.pp.remove(pagePk);\n    return await this.pp.loadPages();\n  }\n  async reset(){\n    //\n    return await this.pp.resetPagesFull();\n  }\n  async move(formPk,toPk){\n    //\n    await this.pp.move(formPk,toPk);\n    return await this.pp.loadPages();\n  }\n}\n","import vu from \"../../util/viewUtil\";\nimport {BaseView} from \"../../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../../util/reactive/base/vtags\";\nimport {ImageDetail} from \"../parts/imageDetail\";\nimport {PageImages} from \"../parts/pageImages\";\nimport {Thumbnails} from \"../parts/thumbnails\";\nimport {ImageViewReducer} from '../../reduxy/reducer/imageViewReducer'\nimport {PagesViewReducer} from '../../reduxy/reducer/pagesViewReducer'\nexport class FilesArea extends BaseView {\n  constructor() {\n    super(\"FilesArea\", \"FilesArea\");\n    this.nowSelectedElm = null;\n    this.imageDetail = new ImageDetail();\n    this.pageImages = new PageImages(this);\n    this.thumbnails = new Thumbnails(this);\n    ImageViewReducer.register();\n    PagesViewReducer.register();\n  }\n\n  onAfterAttach(store, data) {\n    this.imageDetail.attach(this);\n    this.pageImages.attach(this);\n    this.thumbnails.attach(this);\n  }\n  render() {\n    return div(\"\", [\n      div(this.pageImages.id),\n      div(this.thumbnails.id),\n      div(this.imageDetail.id)\n    ])\n\n  }\n}\n","import vu from \"../util/viewUtil\";\nimport {BaseView} from \"../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../util/reactive/base/vtags\";\nimport {FileUploadArea} from \"./content/fileUploadArea\";\nimport {TitleSettings} from \"./content/titleSettings\";\nimport {ExportButton} from \"./content/exportButton\";\nimport {FilesArea} from \"./content/filesArea\";\nimport {ProgressBar} from \"./parts/progressBar\";\nexport class Container extends BaseView {\n  constructor() {\n    super(\"container\", \"container\");\n    this.fileUploadArea = new FileUploadArea();\n    this.titleSettings = new TitleSettings();\n    this.filesArea = new FilesArea();\n    this.exportButton = new ExportButton();\n    this.progressBar = new ProgressBar();\n  }\n\n  onAfterAttach(store, data) {\n    this.fileUploadArea.attach(this);\n    this.titleSettings.attach(this);\n    this.filesArea.attach(this);\n    this.exportButton.attach(this);\n    this.progressBar.attach(this);\n  }\n  render() {\n    const newVnode = div({\n      style: {\n        color: '#000'\n      }\n    }, [\n      div(this.fileUploadArea.id),\n      div(this.progressBar.id),\n      div(this.titleSettings.id),\n      div(this.filesArea.id),\n      div(this.exportButton.id)\n    ], \"container\");\n    // console.log('container!render!!!!!!!!!!!')s\n    return newVnode;\n  }\n}\n","import vu from \"../util/viewUtil\";\nimport {BaseView} from \"../util/reactive/baseView\";\nimport {a,div,li,ul,img,span,input,label} from \"../util/reactive/base/vtags\";\nexport class Footer extends BaseView {\n  constructor() {\n    super(\"footer\", \"footer\");\n    this.copyright = \"ryunosinfx\";\n  }\n  render() {\n    const newVnode = div({\n      style: {\n        color: '#000'\n      }\n    }, [div(\"copyright\", [\"copyright\"], this.copyright)]);\n    return newVnode;\n  }\n}\n","import vu from \"../util/viewUtil\";\nimport {Header} from \"./header\";\nimport {Menu} from \"./menu\";\nimport {Container} from \"./container\";\nimport {Footer} from \"./footer\";\nimport {BaseView} from \"../util/reactive/baseView\";\nimport {\n  a,\n  div,\n  li,\n  ul,\n  img,\n  span,\n  input,\n  label\n} from \"../util/reactive/base/vtags\";\nexport class MainFrame extends BaseView {\n  constructor(ms,title) {\n    super(\"frame\", \"frame\");\n    this.ms = ms;\n    BaseView.setMainService(ms);\n    this.initialize(title);\n  }\n  initialize(title) {\n    this.header = new Header(title);\n    this.footer = new Footer();\n    this.container = new Container();\n    this.menu = new Menu();\n    this.baseFrame = null;\n    this.view = '';\n    this.initialPatch();\n  }\n  async onViewShow(store, data){\n    this.header.attach(this,'#header');\n    this.menu.attach(this,'#menu');\n    this.container.attach(this,'#container');\n    this.footer.attach(this,'#footer');\n  }\n  render(titleText) {\n    let newVnode = div('frame', ['frame'], {}, [\n      div('header', {\n        style: {\n          color: '#000'\n        }\n      }, 'hellow!!'),\n      div('menu', {\n        style: {\n          color: '#000'\n        }\n      }, 'menu!!'),\n      div('container', {\n        style: {\n          color: '#000'\n        }\n      }, [div('content', {\n          style: {\n            color: '#000'\n          }\n        },'content!!')], 'container!!'),\n      div('footer', {\n        style: {\n          color: '#000'\n        }\n      }, 'footer!!?')\n    ]);\n    return newVnode;\n  }\n}\n","import css from \"../index.css\";\nimport {MainFrame} from \"./view/mainFrame\"\nimport {MainService} from \"./service/mainService\"\nconst title = \"CopiBon\";\nexport default class CopiBonService {\n  constructor() {\n    this.mainService = MainService.getInstance();\n  }\n  async init() {\n    await this.mainService.init();\n    this.mf = new MainFrame(this.mainService,title);\n    //this.mf.initialize(title);\n    ///\n    // const sumModule = await import (\"./sum.wasm\");\n    // console.log(sumModule.sum(22, 2200));\n  }\n  static main() {\n    const self = new CopiBonService();\n    self.init();\n  }\n}\nCopiBonService.main();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createElement(tagName) {\n    return document.createElement(tagName);\n}\nfunction createElementNS(namespaceURI, qualifiedName) {\n    return document.createElementNS(namespaceURI, qualifiedName);\n}\nfunction createTextNode(text) {\n    return document.createTextNode(text);\n}\nfunction createComment(text) {\n    return document.createComment(text);\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n    parentNode.insertBefore(newNode, referenceNode);\n}\nfunction removeChild(node, child) {\n    node.removeChild(child);\n}\nfunction appendChild(node, child) {\n    node.appendChild(child);\n}\nfunction parentNode(node) {\n    return node.parentNode;\n}\nfunction nextSibling(node) {\n    return node.nextSibling;\n}\nfunction tagName(elm) {\n    return elm.tagName;\n}\nfunction setTextContent(node, text) {\n    node.textContent = text;\n}\nfunction getTextContent(node) {\n    return node.textContent;\n}\nfunction isElement(node) {\n    return node.nodeType === 1;\n}\nfunction isText(node) {\n    return node.nodeType === 3;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nexports.htmlDomApi = {\n    createElement: createElement,\n    createElementNS: createElementNS,\n    createTextNode: createTextNode,\n    createComment: createComment,\n    insertBefore: insertBefore,\n    removeChild: removeChild,\n    appendChild: appendChild,\n    parentNode: parentNode,\n    nextSibling: nextSibling,\n    tagName: tagName,\n    setTextContent: setTextContent,\n    getTextContent: getTextContent,\n    isElement: isElement,\n    isText: isText,\n    isComment: isComment,\n};\nexports.default = exports.htmlDomApi;\n//# sourceMappingURL=htmldomapi.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.array = Array.isArray;\nfunction primitive(s) {\n    return typeof s === 'string' || typeof s === 'number';\n}\nexports.primitive = primitive;\n//# sourceMappingURL=is.js.map","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body {\\n  min-height: 100%;\\n  width: 100%;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\ndiv {\\n  box-sizing: border-box;\\n}\\n\\ndiv.frame {\\n  min-height: 99%;\\n  width: 100%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin: 0;\\n  border: solid 1px blue;\\n}\\n\\ndiv.footer {\\n  min-height: 100%;\\n  width: 100%;\\n  border: solid 1px red;\\n  padding: 0.5em;\\n}\\n\\ndiv.copyright {\\n  width: 100%;\\n  padding: 0.5em;\\n  text-align: center;\\n}\\n\\ndiv.header {\\n  min-height: 100%;\\n  width: 100%;\\n  border: solid 1px green;\\n  padding: 0.2em;\\n}\\n\\ndiv.title {\\n  font-size: 2em;\\n  font-weight: bold;\\n  background-color: #c23cc1;\\n  padding: 0.5em;\\n}\\n\\ndiv.FileUploadArea input {\\n  position: absolute;\\n  left: -100;\\n}\\n\\ndiv.FileUploadArea {\\n  display: block;\\n  min-height: 100%;\\n  width: 100%;\\n  border: dotted 1px black;\\n  background-color: #a8bae0;\\n  padding-top: 5em;\\n  padding-bottom: 5em;\\n  text-align: center;\\n  font-size: 2em;\\n}\\n\\ninput.FileUploadFile {\\n  position: absolute;\\n  top: -10em;\\n  left: 10em;\\n  visibility: hidden;\\n}\\n\\ndiv.FilesArea {\\n  min-height: 100%;\\n  width: 100%;\\n  border: dotted 1px black;\\n  background-color: rgb(124, 110, 241);\\n  padding-top: 1em;\\n  padding-bottom: 1em;\\n  text-align: center;\\n  font-size: 2em;\\n}\\n\\nspan.imageDataLine {\\n  display: inline-block;\\n  font-size: 50%;\\n  padding: 0.2em;\\n}\\n\\ndiv.delButton {\\n  display: inline-block;\\n  font-size: 50%;\\n  width: 3em;\\n  padding: 0.2em;\\n  line-height: 1em;\\n  text-align: center;\\n  cursor: pointer;\\n  background-color: #675275;\\n}\\n\\ndiv.delButton:active {\\n  color: red;\\n}\\n\\ndiv.delButton:hover {\\n  color: #d48a60;\\n  background-color: #7b4f99;\\n}\\n\\ncanvas.hidden {\\n  position: absolute;\\n  top: -10000px;\\n}\\n\\n[draggable] {\\n  user-select: none;\\n}\\n\\n.column {\\n  height: 150px;\\n  width: 150px;\\n  float: left;\\n  border: 2px solid #666666;\\n  background-color: #ccc;\\n  margin-right: 5px;\\n  border-radius: 10px;\\n  box-shadow: inset 0 0 3px #000;\\n  text-align: center;\\n  cursor: move;\\n}\\n\\n.column.over {\\n  border: 2px dashed #000;\\n}\\n\\n.column header {\\n  color: #fff;\\n  text-shadow: #000 0 1px;\\n  box-shadow: 5px;\\n  border-bottom: 1px solid #ddd;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n}\\n\\n.FilesArea>div {\\n  width: 100%;\\n  min-width: 630px;\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-direction: row;\\n}\\n\\n.FilesArea>div>div {\\n  display: flex;\\n  min-width: 160px;\\n  overflow: hidden;\\n}\\n\\n.FilesArea>div>div.PageImages {\\n  min-width: 320px;\\n  max-width: 50%;\\n}\\n\\n.FilesArea>div>div.ImageDetail {\\n  min-width: 160px;\\n  max-width: 25%;\\n}\\n\\n.ImageDetail .ImageDetailTitle {\\n  position: relative;\\n  z-index: 1000;\\n  font-size: 12px;\\n  background-color: rgb(227, 169, 159);\\n  text-align: left;\\n  padding: 10px;\\n}\\n\\n.Thumnails {\\n  flex-direction: column;\\n  background-color: rgba(200, 200, 200, 1);\\n}\\n.Thumnails .thumbnails_block {\\n  background-color: rgba(220, 220, 220, 1);\\n  border: 0px dotted #dfd;\\n  height:100%;\\n}\\n.Thumnails .thumbnails_block.over {\\n  background-color: rgba(190, 190, 190, 0.8);\\n  border: 2px dotted #dfd;\\n}\\n\\n.thumbnail_block {\\n  display: flex;\\n  flex-direction: column;\\n  background-color: green;\\n  border: 1px solid #fdd;\\n  width: 150px;\\n  cursor: pointer;\\n  background-repeat:no-repeat;\\n  background-size:contain;\\n  background-position:center;\\n}\\n\\n.thumbnail_block.over {\\n  background-color: rgba(24, 129, 12, 0.8);\\n  width: 148px;\\n  border: 2px dotted #dfd;\\n}\\n\\n.thumbnail_block div {\\n  display: flex;\\n  height: auto;\\n  margin: auto;\\n}\\n\\n.thumbnail_text {\\n  display: block;\\n  background-color: blue;\\n  border: 1px solid #fdd;\\n  font-size: 0.5em\\n}\\n\\n.image_detail_block {\\n  position: relative;\\n  top: -10px;\\n  left: -30px;\\n}\\n\\n.ProgressBar {\\n  top: 0;\\n  left: 0;\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(118, 118, 118, 0.80);\\n  z-index: 1001;\\n  display: none;\\n}\\n\\n.ProgressBar>div {\\n  position: fixed;\\n  top: 50%;\\n  left: 5%;\\n  margin: 0 auto;\\n  width: 90%;\\n  height: 5em;\\n  background-color: rgba(238, 118, 238, 1);\\n  z-index: 1000;\\n  padding: 10px\\n}\\n\\n.ProgressBar>div .progeressFrame {\\n  margin: 0 auto;\\n  width: 95%;\\n  height: 3em;\\n  background-color: rgb(193, 165, 200);\\n  z-index: 1000;\\n  padding: 0px\\n}\\n\\n.progeress {\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  height: 3em;\\n  background-color: rgb(120, 231, 194);\\n}\\n\\n.TitleSettings {\\n  background-color: rgb(159, 117, 242);\\n  padding: 0.1em;\\n  margin: 0.1em 0;\\n}\\n\\n.TitleSettingsTitle {\\n  padding: 0.3em;\\n  margin-bottom: 0.3em;\\n  font-weight: bold;\\n  font-size: 110%;\\n  width: 100%;\\n  text-align: center;\\n  background-color: rgb(139, 87, 242);\\n}\\n\\n.TitleSettingsFrame {\\n  display: flex;\\n}\\n\\n.TitleSettingsFrame>div {\\n  width: 50%;\\n}\\n\\n.TitleSettingsRow>span, .TitleSettingsRow>input {\\n  display: inline-flex;\\n  width: 40%;\\n}\\n\\n.TitleSettingsUpdate {\\n  width: 70%;\\n  background-color: rgb(3, 21, 186);\\n  color: white;\\n  font-weight: bold;\\n  text-align: center;\\n  margin: 0.5em auto;\\n  padding: 0.5em;\\n  border-radius: 1em;\\n  cursor: pointer;\\n}\\n\\n.previewFrame {\\n  display: flex;\\n}\\n\\n.previewCallButton {\\n  width: 150px;\\n  background-color: rgb(156, 111, 146);\\n  font-size: 50%;\\n  padding: 10px;\\n  margin: 1px;\\n  cursor: pointer;\\n  border-radius: 5px;\\n}\\n\\n.pageFrameHeader {\\n  font-size: 60%;\\n  background-color: rgb(59, 2, 62);\\n  color: white;\\n  padding: 5px;\\n}\\n\\n.pageFrameHeaderLeft {\\n  text-align: left;\\n}\\n\\n.pageFrameHeaderRight {\\n  text-align: right;\\n}\\n\\n.PageFrame {\\n  display: inline-block;\\n  display: flex;\\n  background-color: rgb(166, 121, 191);\\n  width: 300px;\\n  height: 150px;\\n  font-size: 1em;\\n  margin: 0.1em auto;\\n  padding: 0.25em 1em;\\n}\\n\\n.PageFrame .Page {\\n  width: 110px;\\n  border: 2px solid rgb(126, 100, 113);\\n  background-color: rgb(172, 148, 185);\\n  height: 140px;\\n  margin: 0.0em auto;\\n}\\n\\n.PageFrame .Dummy {\\n  background-color: rgb(106, 91, 115);\\n}\\n\\n.PageFrame .Page .thumbnail_block {\\n  height: 104px;\\n  width: 106px;\\n  margin: 0.0em auto;\\n  background-color: rgb(227, 209, 238);\\n}\\n.thumbnail_block .image_block{\\n  height: 104px;\\n  width: 106px;\\n  margin: 0.0em auto;\\n  background-color: rgb(227, 209, 238);\\n  cursor: pointer;\\n  background-repeat:no-repeat;\\n  background-size:contain;\\n  background-position:center;\\n}\\n.MenuFrame {\\n  display: flex;\\n}\\n\\n.MenuFrame div {\\n  width: 20%;\\n  cursor: pointer;\\n  padding: 5px 10px;\\n  margin: 2px 1px 0 1px;\\n  border: 1px solid rgb(83, 122, 134);\\n  border-bottom-width: 0;\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n  background-color: rgb(170, 185, 210);\\n  color: rgb(222, 240, 222)\\n}\\n.display_none{\\n  display:none;\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\", function() {\n\t\tvar newContent = require(\"!!./node_modules/css-loader/index.js?importLoaders=1&camelCase!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}